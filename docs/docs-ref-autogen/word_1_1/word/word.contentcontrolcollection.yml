### YamlMime:UniversalReference
items:
  - uid: 'word!Word.ContentControlCollection:class'
    summary: |-
      <span data-ttu-id="99d94-101">包含[ContentControl](xref:word!Word.ContentControl:class)对象的集合。</span><span class="sxs-lookup"><span data-stu-id="99d94-101">Contains a collection of [Word.ContentControl](xref:word!Word.ContentControl:class) objects.</span></span> <span data-ttu-id="99d94-102">内容控件是文档中绑定的、有可能添加标签的区域，它们充当特定类型的内容的容器。</span><span class="sxs-lookup"><span data-stu-id="99d94-102">Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content.</span></span> <span data-ttu-id="99d94-103">单个内容控件可能包含诸如图片、表或格式化文本段落等内容。</span><span class="sxs-lookup"><span data-stu-id="99d94-103">Individual content controls may contain contents such as images, tables, or paragraphs of formatted text.</span></span> <span data-ttu-id="99d94-104">当前仅支持富文本内容控件。</span><span class="sxs-lookup"><span data-stu-id="99d94-104">Currently, only rich text content controls are supported.</span></span>

      <span data-ttu-id="99d94-105">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="99d94-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.ContentControlCollection
    fullName: Word.ContentControlCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.ContentControlCollection#context:member'
      - 'word!Word.ContentControlCollection#getById:member(1)'
      - 'word!Word.ContentControlCollection#getByTag:member(1)'
      - 'word!Word.ContentControlCollection#getByTitle:member(1)'
      - 'word!Word.ContentControlCollection#getItem:member(1)'
      - 'word!Word.ContentControlCollection#items:member'
      - 'word!Word.ContentControlCollection#load:member(1)'
      - 'word!Word.ContentControlCollection#load:member(2)'
      - 'word!Word.ContentControlCollection#load:member(3)'
      - 'word!Word.ContentControlCollection#toJSON:member(1)'
      - 'word!Word.ContentControlCollection#track:member(1)'
      - 'word!Word.ContentControlCollection#untrack:member(1)'
  - uid: 'word!Word.ContentControlCollection#context:member'
    summary: <span data-ttu-id="99d94-106">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="99d94-106">The request context associated with the object.</span></span> <span data-ttu-id="99d94-107">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="99d94-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.ContentControlCollection#getById:member(1)'
    summary: |-
      <span data-ttu-id="99d94-108">按其标识符获取内容控件。</span><span class="sxs-lookup"><span data-stu-id="99d94-108">Gets a content control by its identifier.</span></span> <span data-ttu-id="99d94-109">如果此集合中没有带有标识符的内容控件，则会引发错误。</span><span class="sxs-lookup"><span data-stu-id="99d94-109">Throws an error if there isn't a content control with the identifier in this collection.</span></span>

      <span data-ttu-id="99d94-110">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="99d94-110">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getById(id)
    fullName: getById(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getById(id: number): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="99d94-111">示例</span><span class="sxs-lookup"><span data-stu-id="99d94-111">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content control that contains a specific id.
              var contentControl = context.document.contentControls.getById(30086310);

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The content control with that Id has been found in this document.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content control that contains a specific id.
              var contentControl = context.document.contentControls.getByIdOrNullObject(30086310);

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControl.isNullObject) {
                      console.log('There is no content control with that ID.')
                  } else {
                      console.log('The content control with that ID has been found in this document.');
                  }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="99d94-112">必需。</span><span class="sxs-lookup"><span data-stu-id="99d94-112">Required.</span></span> <span data-ttu-id="99d94-113">内容控件的标识符。</span><span class="sxs-lookup"><span data-stu-id="99d94-113">A content control identifier.</span></span>
          type:
            - number
  - uid: 'word!Word.ContentControlCollection#getByTag:member(1)'
    summary: |-
      <span data-ttu-id="99d94-114">获取具有指定标记的内容控件。</span><span class="sxs-lookup"><span data-stu-id="99d94-114">Gets the content controls that have the specified tag.</span></span>

      <span data-ttu-id="99d94-115">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="99d94-115">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByTag(tag)
    fullName: getByTag(tag)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTag(tag: string): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="99d94-116">示例</span><span class="sxs-lookup"><span data-stu-id="99d94-116">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content controls collection that contains a specific tag.
              var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');

              // Queue a command to load the text property for all of content controls with a specific tag.
              context.load(contentControlsWithTag, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControlsWithTag.items.length === 0) {
                      console.log("There isn't a content control with a tag of Customer-Address in this document.");
                  } else {
                      console.log(
                          'The first content control with the tag of Customer-Address has this text: ' + 
                          contentControlsWithTag.items[0].text);
                  }

              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample has another example of using the getByTag method.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
              let contentControls = context.document.contentControls.getByTag("customer");
              contentControls.load("text");

              await context.sync();

              for (let i = 0; i < contentControls.items.length; i++) {
                contentControls.items[i].insertText("Fabrikam", "Replace");
              }

              await context.sync();
          });
          ```
      parameters:
        - id: tag
          description: <span data-ttu-id="99d94-117">必需。</span><span class="sxs-lookup"><span data-stu-id="99d94-117">Required.</span></span> <span data-ttu-id="99d94-118">在内容控件上设置的标记。</span><span class="sxs-lookup"><span data-stu-id="99d94-118">A tag set on a content control.</span></span>
          type:
            - string
  - uid: 'word!Word.ContentControlCollection#getByTitle:member(1)'
    summary: |-
      <span data-ttu-id="99d94-119">获取具有指定标题的内容控件。</span><span class="sxs-lookup"><span data-stu-id="99d94-119">Gets the content controls that have the specified title.</span></span>

      <span data-ttu-id="99d94-120">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="99d94-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByTitle(title)
    fullName: getByTitle(title)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTitle(title: string): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="99d94-121">示例</span><span class="sxs-lookup"><span data-stu-id="99d94-121">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content controls collection that contains a specific title.
              var contentControlsWithTitle = context.document.contentControls.getByTitle('Enter Customer Address Here');

              // Queue a command to load the text property for all of content controls with a specific title.
              context.load(contentControlsWithTitle, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControlsWithTitle.items.length === 0) {
                      console.log(
                          "There isn't a content control with a title of 'Enter Customer Address Here' in this document.");
                  } else {
                      console.log(
                          "The first content control with the title of 'Enter Customer Address Here' has this text: " + 
                          contentControlsWithTitle.items[0].text);
                  }

              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample has another example of using the getByTitle method.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
      parameters:
        - id: title
          description: <span data-ttu-id="99d94-122">必需。</span><span class="sxs-lookup"><span data-stu-id="99d94-122">Required.</span></span> <span data-ttu-id="99d94-123">内容控件的标题。</span><span class="sxs-lookup"><span data-stu-id="99d94-123">The title of a content control.</span></span>
          type:
            - string
  - uid: 'word!Word.ContentControlCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="99d94-124">按其在集合中的索引获取内容控件。</span><span class="sxs-lookup"><span data-stu-id="99d94-124">Gets a content control by its index in the collection.</span></span>

      <span data-ttu-id="99d94-125">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="99d94-125">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="99d94-126">索引。</span><span class="sxs-lookup"><span data-stu-id="99d94-126">The index.</span></span>
          type:
            - number
  - uid: 'word!Word.ContentControlCollection#items:member'
    summary: <span data-ttu-id="99d94-127">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="99d94-127">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.ContentControl[];'
      return:
        type:
          - 'word!Word.ContentControlCollection#items~0:complex'
  - uid: 'word!Word.ContentControlCollection#load:member(1)'
    summary: <span data-ttu-id="99d94-128">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="99d94-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="99d94-129">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="99d94-129">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="99d94-130">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="99d94-130">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="99d94-131">`load(option?: string | string[]): Word.ContentControlCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="99d94-131">`load(option?: string | string[]): Word.ContentControlCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="99d94-132">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="99d94-132">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="99d94-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="99d94-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection` - Only available on collection types.</span></span> <span data-ttu-id="99d94-134">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="99d94-134">It is similar to the preceding signature.</span></span> <span data-ttu-id="99d94-135">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="99d94-135">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="99d94-136">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="99d94-136">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="99d94-137">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="99d94-137">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="99d94-138">示例</span><span class="sxs-lookup"><span data-stu-id="99d94-138">Examples</span></span>

      ```javascript
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a proxy object for the content controls collection.
          var contentControls = context.document.contentControls;

          // Queue a command to load the id property for all of the content controls.
          context.load(contentControls, 'id');

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              if (contentControls.items.length === 0) {
                  console.log('No content control found.');
              }
              else {
                  // Queue a command to load the properties on the first content control.
                  contentControls.items[0].load(  'appearance,' +
                                                  'cannotDelete,' +
                                                  'cannotEdit,' +
                                                  'id,' +
                                                  'placeHolderText,' +
                                                  'removeWhenEdited,' +
                                                  'title,' +
                                                  'text,' +
                                                  'type,' +
                                                  'style,' +
                                                  'tag,' +
                                                  'font/size,' +
                                                  'font/name,' +
                                                  'font/color');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync()
                      .then(function () {
                          console.log('Property values of the first content control:' +
                              '   ----- appearance: ' + contentControls.items[0].appearance +
                              '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +
                              '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +
                              '   ----- color: ' + contentControls.items[0].color +
                              '   ----- id: ' + contentControls.items[0].id +
                              '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +
                              '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +
                              '   ----- title: ' + contentControls.items[0].title +
                              '   ----- text: ' + contentControls.items[0].text +
                              '   ----- type: ' + contentControls.items[0].type +
                              '   ----- style: ' + contentControls.items[0].style +
                              '   ----- tag: ' + contentControls.items[0].tag +
                              '   ----- font size: ' + contentControls.items[0].font.size +
                              '   ----- font name: ' + contentControls.items[0].font.name +
                              '   ----- font color: ' + contentControls.items[0].font.color);
                  });
              }
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });

      // The Silly stories add-in sample shows how the load method is used
      // to load the content control collection with the tag and title properties.
      // https://aka.ms/sillystorywordaddin
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.ContentControlCollection#load~0:complex'
  - uid: 'word!Word.ContentControlCollection#load:member(2)'
    summary: <span data-ttu-id="99d94-139">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="99d94-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="99d94-140">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="99d94-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="99d94-141">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="99d94-141">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.ContentControlCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!OfficeExtension.LoadOption:interface'
  - uid: 'word!Word.ContentControlCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="99d94-142">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="99d94-142">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="99d94-143">.</span><span class="sxs-lookup"><span data-stu-id="99d94-143"></span></span> <span data-ttu-id="99d94-144">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="99d94-144"></span></span><!-- --><span data-ttu-id="99d94-145">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始`Word.ContentControlCollection`对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Word.Interfaces.ContentControlCollectionData`</span><span class="sxs-lookup"><span data-stu-id="99d94-145">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Word.ContentControlCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ContentControlCollectionData`</span></span><!-- --><span data-ttu-id="99d94-146">），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="99d94-146">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ContentControlCollectionData;'
      return:
        type:
          - 'word!Word.Interfaces.ContentControlCollectionData:interface'
        description: ''
  - uid: 'word!Word.ContentControlCollection#track:member(1)'
    summary: '<span data-ttu-id="99d94-147">根据文档中的相应更改来跟踪对象，以便进行自动调整。</span><span class="sxs-lookup"><span data-stu-id="99d94-147">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="99d94-148">此调用是 context.trackedObjects.add(thisObject) 的缩写。</span><span class="sxs-lookup"><span data-stu-id="99d94-148">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="99d94-149">如果你在“.sync”调用之间和按顺序执行“.run”批处理之外使用此对象，并且在对象上设置属性或调用方法时出现“InvalidObjectPath”错误，则需要在首次创建对象时为跟踪的对象集合添加对象。</span><span class="sxs-lookup"><span data-stu-id="99d94-149">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
  - uid: 'word!Word.ContentControlCollection#untrack:member(1)'
    summary: '<span data-ttu-id="99d94-150">释放与此对象关联的内存（如果先前已跟踪过）。</span><span class="sxs-lookup"><span data-stu-id="99d94-150">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="99d94-151">此调用是 context.trackedObjects.add(thisObject) 的缩写。</span><span class="sxs-lookup"><span data-stu-id="99d94-151">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="99d94-152">拥有许多跟踪对象会降低主机应用程序的速度，因此请在使用完毕后释放所添加的任何对象。</span><span class="sxs-lookup"><span data-stu-id="99d94-152">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="99d94-153">在内存释放生效之前，你需要调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="99d94-153">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.ContentControlCollection#items~0:complex'
    name: 'Word.ContentControl[]'
    fullName: 'Word.ContentControl[]'
    spec.typeScript:
      - uid: 'word!Word.ContentControl:class'
        name: Word.ContentControl
        fullName: Word.ContentControl
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.ContentControlCollection#load~0:complex'
    name: Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    fullName: Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'word!Word.Interfaces.ContentControlCollectionLoadOptions:interface'
        name: Word.Interfaces.ContentControlCollectionLoadOptions
        fullName: Word.Interfaces.ContentControlCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'word!Word.Interfaces.CollectionLoadOptions:interface'
        name: Word.Interfaces.CollectionLoadOptions
        fullName: Word.Interfaces.CollectionLoadOptions
  - uid: 'word!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'word!Word.Interfaces.ContentControlCollectionData:interface'
    name: Word.Interfaces.ContentControlCollectionData