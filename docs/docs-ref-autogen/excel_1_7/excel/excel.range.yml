### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Range
    summary: |-
      <span data-ttu-id="7c1ac-101">区域表示一个或多个相邻的单元格，例如单元格、行、列、单元格块等。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-101">Range represents a set of one or more contiguous cells such as a cell, a row, a column, block of cells, etc.</span></span>

      <span data-ttu-id="7c1ac-102">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Range
    fullName: Excel.Range
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Range.address
      - excel.Excel.Range.addressLocal
      - excel.Excel.Range.calculate
      - excel.Excel.Range.cellCount
      - excel.Excel.Range.clear
      - excel.Excel.Range.clear_1
      - excel.Excel.Range.columnCount
      - excel.Excel.Range.columnHidden
      - excel.Excel.Range.columnIndex
      - excel.Excel.Range.conditionalFormats
      - excel.Excel.Range.context
      - excel.Excel.Range.delete
      - excel.Excel.Range.delete_1
      - excel.Excel.Range.format
      - excel.Excel.Range.formulas
      - excel.Excel.Range.formulasLocal
      - excel.Excel.Range.formulasR1C1
      - excel.Excel.Range.getAbsoluteResizedRange
      - excel.Excel.Range.getBoundingRect
      - excel.Excel.Range.getCell
      - excel.Excel.Range.getColumn
      - excel.Excel.Range.getColumnsAfter
      - excel.Excel.Range.getColumnsBefore
      - excel.Excel.Range.getEntireColumn
      - excel.Excel.Range.getEntireRow
      - excel.Excel.Range.getImage
      - excel.Excel.Range.getIntersection
      - excel.Excel.Range.getIntersectionOrNullObject
      - excel.Excel.Range.getLastCell
      - excel.Excel.Range.getLastColumn
      - excel.Excel.Range.getLastRow
      - excel.Excel.Range.getOffsetRange
      - excel.Excel.Range.getResizedRange
      - excel.Excel.Range.getRow
      - excel.Excel.Range.getRowsAbove
      - excel.Excel.Range.getRowsBelow
      - excel.Excel.Range.getSurroundingRegion
      - excel.Excel.Range.getUsedRange
      - excel.Excel.Range.getUsedRangeOrNullObject
      - excel.Excel.Range.getVisibleView
      - excel.Excel.Range.hidden
      - excel.Excel.Range.hyperlink
      - excel.Excel.Range.insert
      - excel.Excel.Range.insert_1
      - excel.Excel.Range.isEntireColumn
      - excel.Excel.Range.isEntireRow
      - excel.Excel.Range.load
      - excel.Excel.Range.load_1
      - excel.Excel.Range.load_2
      - excel.Excel.Range.merge
      - excel.Excel.Range.numberFormat
      - excel.Excel.Range.numberFormatLocal
      - excel.Excel.Range.rowCount
      - excel.Excel.Range.rowHidden
      - excel.Excel.Range.rowIndex
      - excel.Excel.Range.select
      - excel.Excel.Range.set
      - excel.Excel.Range.set_1
      - excel.Excel.Range.showCard
      - excel.Excel.Range.sort
      - excel.Excel.Range.style
      - excel.Excel.Range.text
      - excel.Excel.Range.toJSON
      - excel.Excel.Range.track
      - excel.Excel.Range.unmerge
      - excel.Excel.Range.untrack
      - excel.Excel.Range.values
      - excel.Excel.Range.valueTypes
      - excel.Excel.Range.worksheet
  - uid: excel.Excel.Range.address
    summary: |-
      <span data-ttu-id="7c1ac-103">表示 A1 样式的区域引用。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-103">Represents the range reference in A1-style.</span></span> <span data-ttu-id="7c1ac-104">Address 值将包含工作表引用 (例如, "Sheet1!A1: B4 ")。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-104">Address value will contain the Sheet reference (e.g. "Sheet1!A1:B4").</span></span> <span data-ttu-id="7c1ac-105">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-105">Read-only.</span></span>

      <span data-ttu-id="7c1ac-106">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly address: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Range.addressLocal
    summary: |-
      <span data-ttu-id="7c1ac-107">以用户语言表示对指定区域的区域引用。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-107">Represents range reference for the specified range in the language of the user.</span></span> <span data-ttu-id="7c1ac-108">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-108">Read-only.</span></span>

      <span data-ttu-id="7c1ac-109">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: addressLocal
    fullName: addressLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly addressLocal: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Range.calculate
    summary: |-
      <span data-ttu-id="7c1ac-110">计算工作表上的单元格区域。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-110">Calculates a range of cells on a worksheet.</span></span>

      <span data-ttu-id="7c1ac-111">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculate()
    fullName: calculate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Range.cellCount
    summary: |-
      <span data-ttu-id="7c1ac-112">范围中的单元格数。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-112">Number of cells in the range.</span></span> <span data-ttu-id="7c1ac-113">如果单元格数超过 2^31-1 (2,147,483,647)，此 API 返回 -1。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-113">This API will return -1 if the cell count exceeds 2^31-1 (2,147,483,647).</span></span> <span data-ttu-id="7c1ac-114">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-114">Read-only.</span></span>

      <span data-ttu-id="7c1ac-115">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: cellCount
    fullName: cellCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellCount: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Range.clear
    summary: |-
      <span data-ttu-id="7c1ac-116">清除区域值、格式、填充、边框等。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-116">Clear range values, format, fill, border, etc.</span></span>

      <span data-ttu-id="7c1ac-117">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear(applyTo)
    fullName: clear(applyTo)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(applyTo?: Excel.ClearApplyTo): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-118">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-118">Examples</span></span>

          ```javascript
          // Below example clears format and contents of the range. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "D:F";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.clear();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: applyTo
          description: '<span data-ttu-id="7c1ac-119">可选。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-119">Optional.</span></span> <span data-ttu-id="7c1ac-120">确定清除操作的类型。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-120">Determines the type of clear action.</span></span> <span data-ttu-id="7c1ac-121">有关详细信息, 请参阅 ClearApplyTo。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-121">See Excel.ClearApplyTo for details.</span></span>'
          type:
            - excel.Excel.ClearApplyTo
  - uid: excel.Excel.Range.clear_1
    summary: |-
      <span data-ttu-id="7c1ac-122">清除区域值、格式、填充、边框等。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-122">Clear range values, format, fill, border, etc.</span></span>

      <span data-ttu-id="7c1ac-123">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear(applyToString)
    fullName: clear(applyToString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(applyToString?: "All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: applyToString
          description: '<span data-ttu-id="7c1ac-124">可选。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-124">Optional.</span></span> <span data-ttu-id="7c1ac-125">确定清除操作的类型。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-125">Determines the type of clear action.</span></span> <span data-ttu-id="7c1ac-126">有关详细信息, 请参阅 ClearApplyTo。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-126">See Excel.ClearApplyTo for details.</span></span>'
          type:
            - '"All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"'
  - uid: excel.Excel.Range.columnCount
    summary: |-
      <span data-ttu-id="7c1ac-127">表示区域中的列总数。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-127">Represents the total number of columns in the range.</span></span> <span data-ttu-id="7c1ac-128">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-128">Read-only.</span></span>

      <span data-ttu-id="7c1ac-129">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Range.columnHidden
    summary: |-
      <span data-ttu-id="7c1ac-130">表示当前 range 的所有列均已隐藏。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-130">Represents if all columns of the current range are hidden.</span></span>

      <span data-ttu-id="7c1ac-131">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-131">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnHidden
    fullName: columnHidden
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnHidden: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Range.columnIndex
    summary: |-
      <span data-ttu-id="7c1ac-132">表示区域中第一个单元格的列编号。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-132">Represents the column number of the first cell in the range.</span></span> <span data-ttu-id="7c1ac-133">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-133">Zero-indexed.</span></span> <span data-ttu-id="7c1ac-134">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-134">Read-only.</span></span>

      <span data-ttu-id="7c1ac-135">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-135">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnIndex
    fullName: columnIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnIndex: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Range.conditionalFormats
    summary: |-
      <span data-ttu-id="7c1ac-136">与该范围相交的 ConditionalFormats 的集合。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-136">Collection of ConditionalFormats that intersect the range.</span></span> <span data-ttu-id="7c1ac-137">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-137">Read-only.</span></span>

      <span data-ttu-id="7c1ac-138">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-138">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: conditionalFormats
    fullName: conditionalFormats
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly conditionalFormats: Excel.ConditionalFormatCollection;'
      return:
        type:
          - excel.Excel.ConditionalFormatCollection
  - uid: excel.Excel.Range.context
    summary: <span data-ttu-id="7c1ac-139">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-139">The request context associated with the object.</span></span> <span data-ttu-id="7c1ac-140">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-140">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Range.delete
    summary: |-
      <span data-ttu-id="7c1ac-141">删除与区域相关的单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-141">Deletes the cells associated with the range.</span></span>

      <span data-ttu-id="7c1ac-142">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-142">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete(shift)
    fullName: delete(shift)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(shift: Excel.DeleteShiftDirection): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: shift
          description: '<span data-ttu-id="7c1ac-143">指定移动单元格的方式。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-143">Specifies which way to shift the cells.</span></span> <span data-ttu-id="7c1ac-144">有关详细信息, 请参阅 DeleteShiftDirection。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-144">See Excel.DeleteShiftDirection for details.</span></span>'
          type:
            - excel.Excel.DeleteShiftDirection
  - uid: excel.Excel.Range.delete_1
    summary: |-
      <span data-ttu-id="7c1ac-145">删除与区域相关的单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-145">Deletes the cells associated with the range.</span></span>

      <span data-ttu-id="7c1ac-146">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-146">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete(shiftString)
    fullName: delete(shiftString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(shiftString: "Up" | "Left"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-147">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-147">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "D:F";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.delete("Left");
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: shiftString
          description: '<span data-ttu-id="7c1ac-148">指定移动单元格的方式。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-148">Specifies which way to shift the cells.</span></span> <span data-ttu-id="7c1ac-149">有关详细信息, 请参阅 DeleteShiftDirection。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-149">See Excel.DeleteShiftDirection for details.</span></span>'
          type:
            - '"Up" | "Left"'
  - uid: excel.Excel.Range.format
    summary: |-
      <span data-ttu-id="7c1ac-150">返回一个格式对象，其中封装了区域的字体、填充、边框、对齐方式和其他属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-150">Returns a format object, encapsulating the range's font, fill, borders, alignment, and other properties.</span></span> <span data-ttu-id="7c1ac-151">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-151">Read-only.</span></span>

      <span data-ttu-id="7c1ac-152">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-152">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
  - uid: excel.Excel.Range.formulas
    summary: |-
      <span data-ttu-id="7c1ac-153">表示采用 A1 表示法的公式。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-153">Represents the formula in A1-style notation.</span></span> <span data-ttu-id="7c1ac-154">将公式设置为区域时, value 参数可以是单个值 (字符串), 也可以是二维数组。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-154">When setting formulas to a range, the value argument can be either a single value (a string) or a two-dimensional array.</span></span> <span data-ttu-id="7c1ac-155">如果参数是单个值, 它将应用于区域中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-155">If the argument is a single value, it will be applied to all cells in the range.</span></span>

      <span data-ttu-id="7c1ac-156">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-156">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formulas
    fullName: formulas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulas: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel.Excel.Range.formulasLocal
    summary: |-
      <span data-ttu-id="7c1ac-157">表示采用 A1 样式表示法的公式，使用用户的语言和数字格式区域设置。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-157">Represents the formula in A1-style notation, in the user's language and number-formatting locale.</span></span> <span data-ttu-id="7c1ac-158">例如，英语中的公式 "=SUM(A1, 1.5)" 在德语中将变为 "=SUMME(A1; 1,5)"。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-158">For example, the English "=SUM(A1, 1.5)" formula would become "=SUMME(A1; 1,5)" in German.</span></span> <span data-ttu-id="7c1ac-159">将公式设置为区域时, value 参数可以是单个值 (字符串), 也可以是二维数组。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-159">When setting formulas to a range, the value argument can be either a single value (a string) or a two-dimensional array.</span></span> <span data-ttu-id="7c1ac-160">如果参数是单个值, 它将应用于区域中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-160">If the argument is a single value, it will be applied to all cells in the range.</span></span>

      <span data-ttu-id="7c1ac-161">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-161">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formulasLocal
    fullName: formulasLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulasLocal: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel.Excel.Range.formulasR1C1
    summary: |-
      <span data-ttu-id="7c1ac-162">表示采用 R1C1 表示法的公式。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-162">Represents the formula in R1C1-style notation.</span></span> <span data-ttu-id="7c1ac-163">将公式设置为区域时, value 参数可以是单个值 (字符串), 也可以是二维数组。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-163">When setting formulas to a range, the value argument can be either a single value (a string) or a two-dimensional array.</span></span> <span data-ttu-id="7c1ac-164">如果参数是单个值, 它将应用于区域中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-164">If the argument is a single value, it will be applied to all cells in the range.</span></span>

      <span data-ttu-id="7c1ac-165">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-165">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formulasR1C1
    fullName: formulasR1C1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulasR1C1: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel.Excel.Range.getAbsoluteResizedRange
    summary: |-
      <span data-ttu-id="7c1ac-166">获取一个 Range 对象，该对象的左上单元格与当前 Range 对象相同，但具有指定的行数和列数。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-166">Gets a Range object with the same top-left cell as the current Range object, but with the specified numbers of rows and columns.</span></span>

      <span data-ttu-id="7c1ac-167">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-167">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getAbsoluteResizedRange(numRows, numColumns)'
    fullName: 'getAbsoluteResizedRange(numRows, numColumns)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAbsoluteResizedRange(numRows: number, numColumns: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: numRows
          description: <span data-ttu-id="7c1ac-168">新范围大小的行数。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-168">The number of rows of the new range size.</span></span>
          type:
            - number
        - id: numColumns
          description: <span data-ttu-id="7c1ac-169">新范围大小的列数。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-169">The number of columns of the new range size.</span></span>
          type:
            - number
  - uid: excel.Excel.Range.getBoundingRect
    summary: |-
      <span data-ttu-id="7c1ac-170">获取包含指定区域的最小 range 对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-170">Gets the smallest range object that encompasses the given ranges.</span></span> <span data-ttu-id="7c1ac-171">例如，“B2:C5”和“D10:E15”的 GetBoundingRect 为“B2:E15”。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-171">For example, the GetBoundingRect of "B2:C5" and "D10:E15" is "B2:E15".</span></span>

      <span data-ttu-id="7c1ac-172">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-172">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getBoundingRect(anotherRange)
    fullName: getBoundingRect(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getBoundingRect(anotherRange: Range | string): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-173">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-173">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "D4:G6";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              var range = range.getBoundingRect("G4:H8");
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address); // Prints Sheet1!D4:H8
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: anotherRange
          description: <span data-ttu-id="7c1ac-174">range 对象或地址或区域名称。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-174">The range object or address or range name.</span></span>
          type:
            - Range | string
  - uid: excel.Excel.Range.getCell
    summary: |-
      <span data-ttu-id="7c1ac-175">根据行和列编号获取包含单个单元格的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-175">Gets the range object containing the single cell based on row and column numbers.</span></span> <span data-ttu-id="7c1ac-176">单元格可以位于其父区域的边界之外, 但前提是它停留在工作表网格中。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-176">The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span> <span data-ttu-id="7c1ac-177">返回的单元格位于相对于区域左上角的单元格的位置。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-177">The returned cell is located relative to the top left cell of the range.</span></span>

      <span data-ttu-id="7c1ac-178">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-178">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getCell(row, column)'
    fullName: 'getCell(row, column)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(row: number, column: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-179">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-179">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var cell = range.cell(0,0);
              cell.load('address');
              return ctx.sync().then(function() {
                  console.log(cell.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: row
          description: <span data-ttu-id="7c1ac-180">要检索的单元格的行号。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-180">Row number of the cell to be retrieved.</span></span> <span data-ttu-id="7c1ac-181">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-181">Zero-indexed.</span></span>
          type:
            - number
        - id: column
          description: <span data-ttu-id="7c1ac-182">要检索的单元格的列号。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-182">Column number of the cell to be retrieved.</span></span> <span data-ttu-id="7c1ac-183">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-183">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.Range.getColumn
    summary: |-
      <span data-ttu-id="7c1ac-184">获取范围中包含的列。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-184">Gets a column contained in the range.</span></span>

      <span data-ttu-id="7c1ac-185">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-185">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumn(column)
    fullName: getColumn(column)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumn(column: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-186">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-186">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet19";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getColumn(1);
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address); // prints Sheet1!B1:B8
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: column
          description: <span data-ttu-id="7c1ac-187">要检索的区域的列号。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-187">Column number of the range to be retrieved.</span></span> <span data-ttu-id="7c1ac-188">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-188">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.Range.getColumnsAfter
    summary: |-
      <span data-ttu-id="7c1ac-189">获取当前范围对象右侧的一定数量的列。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-189">Gets a certain number of columns to the right of the current Range object.</span></span>

      <span data-ttu-id="7c1ac-190">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-190">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumnsAfter(count)
    fullName: getColumnsAfter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnsAfter(count?: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: count
          description: '<span data-ttu-id="7c1ac-p121">可选。生成的范围中要包含的列数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p121">Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>'
          type:
            - number
  - uid: excel.Excel.Range.getColumnsBefore
    summary: |-
      <span data-ttu-id="7c1ac-196">获取当前范围对象左侧的一定数量的列。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-196">Gets a certain number of columns to the left of the current Range object.</span></span>

      <span data-ttu-id="7c1ac-197">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-197">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumnsBefore(count)
    fullName: getColumnsBefore(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnsBefore(count?: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: count
          description: '<span data-ttu-id="7c1ac-p122">可选。生成的范围中要包含的列数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p122">Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>'
          type:
            - number
  - uid: excel.Excel.Range.getEntireColumn
    summary: |-
      <span data-ttu-id="7c1ac-203">获取一个对象, 该对象代表区域的整列 (例如, 如果当前区域表示单元格 "B4: E11", 则它`getEntireColumn`是表示列 "B:E" 的区域)。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-203">Gets an object that represents the entire column of the range (for example, if the current range represents cells "B4:E11", its `getEntireColumn` is a range that represents columns "B:E").</span></span>

      <span data-ttu-id="7c1ac-204">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-204">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getEntireColumn()
    fullName: getEntireColumn()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireColumn(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-205">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-205">Examples</span></span>

          ```javascript
          // Note: the grid properties of the Range (values, numberFormat, formulas) 
          // contains null since the Range in question is unbounded.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "D:F";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              var rangeEC = range.getEntireColumn();
              rangeEC.load('address');
              return ctx.sync().then(function() {
                  console.log(rangeEC.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Range.getEntireRow
    summary: |-
      <span data-ttu-id="7c1ac-206">获取一个对象, 该对象表示区域的整行 (例如, 如果当前区域表示单元格 "B4: E11", 则它`GetEntireRow`是表示行 "4:11" 的区域)。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-206">Gets an object that represents the entire row of the range (for example, if the current range represents cells "B4:E11", its `GetEntireRow` is a range that represents rows "4:11").</span></span>

      <span data-ttu-id="7c1ac-207">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-207">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getEntireRow()
    fullName: getEntireRow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireRow(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-208">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-208">Examples</span></span>

          ```javascript
          // Gets an object that represents the entire row of the range 
          // (for example, if the current range represents cells "B4:E11", 
          // its GetEntireRow is a range that represents rows "4:11").
          Excel.run(function (ctx) {
              var sheetName = "Sheet1";
              var rangeAddress = "D:F"; 
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              var rangeER = range.getEntireRow();
              rangeER.load('address');
              return ctx.sync().then(function() {
                  console.log(rangeER.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Range.getImage
    summary: |-
      <span data-ttu-id="7c1ac-209">将区域呈现为 base64 编码的 png 图像。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-209">Renders the range as a base64-encoded png image.</span></span>

      <span data-ttu-id="7c1ac-210">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-210">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getImage()
    fullName: getImage()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getImage(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
  - uid: excel.Excel.Range.getIntersection
    summary: |-
      <span data-ttu-id="7c1ac-211">获取表示指定区域的矩形交集的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-211">Gets the range object that represents the rectangular intersection of the given ranges.</span></span>

      <span data-ttu-id="7c1ac-212">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-212">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getIntersection(anotherRange)
    fullName: getIntersection(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIntersection(anotherRange: Range | string): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-213">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-213">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = 
                  ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getIntersection("D4:G6");
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address); // prints Sheet1!D4:F6
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: anotherRange
          description: <span data-ttu-id="7c1ac-214">将用于确定区域交集的 range 对象或区域地址。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-214">The range object or range address that will be used to determine the intersection of ranges.</span></span>
          type:
            - Range | string
  - uid: excel.Excel.Range.getIntersectionOrNullObject
    summary: |-
      <span data-ttu-id="7c1ac-215">获取表示指定区域的矩形交集的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-215">Gets the range object that represents the rectangular intersection of the given ranges.</span></span> <span data-ttu-id="7c1ac-216">如果找不到任何交集，则此方法返回空对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-216">If no intersection is found, will return a null object.</span></span>

      <span data-ttu-id="7c1ac-217">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-217">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getIntersectionOrNullObject(anotherRange)
    fullName: getIntersectionOrNullObject(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIntersectionOrNullObject(anotherRange: Range | string): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-218">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-218">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const salesTable = sheet.tables.getItem("SalesTable");
              const dataRange = salesTable.getDataBodyRange();

              // We want the most recent quarter that has data, so
              // exclude quarters without data and get the last of
              // the remaining columns.
              const usedDataRange = dataRange.getUsedRange(true /* valuesOnly */);
              const currentQuarterRange = usedDataRange.getLastColumn();

              // Asian and European teams have separate contests.
              const asianSalesRange = sheet.getRange("A2:E4");
              const europeanSalesRange = sheet.getRange("A5:E7");

              // The data for each chart is the intersection of the
              // current quarter column and the rows for the continent.
              const asianContestRange = asianSalesRange.getIntersectionOrNullObject(currentQuarterRange);
              const europeanContestRange = europeanSalesRange.getIntersectionOrNullObject(currentQuarterRange);

              // Must sync before you can test the output of *OrNullObject
              // method/property.
              await context.sync();

              if (asianContestRange.isNullObject) {
                  // See the declaration of this method for how to
                  // test this code path.
                  reportMissingData("Asian");
              } else {
                  createContinentChart(
                      sheet,
                      "Asian",
                      asianContestRange,
                      "A9",
                      "F24"
                  );
              }

              if (europeanContestRange.isNullObject) {
                  // See the declaration of this method for how to
                  // test this code path.
                  reportMissingData("European");
              } else {
                  createContinentChart(
                      sheet,
                      "European",
                      europeanContestRange,
                      "A25",
                      "F40"
                  );
              }

              await context.sync();
          });
          ```
      parameters:
        - id: anotherRange
          description: <span data-ttu-id="7c1ac-219">将用于确定区域交集的 range 对象或区域地址。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-219">The range object or range address that will be used to determine the intersection of ranges.</span></span>
          type:
            - Range | string
  - uid: excel.Excel.Range.getLastCell
    summary: |-
      <span data-ttu-id="7c1ac-220">获取区域内的最后一个单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-220">Gets the last cell within the range.</span></span> <span data-ttu-id="7c1ac-221">例如，“B2:D5”的最后一个单元格是“D5”。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-221">For example, the last cell of "B2:D5" is "D5".</span></span>

      <span data-ttu-id="7c1ac-222">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-222">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getLastCell()
    fullName: getLastCell()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLastCell(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-223">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-223">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getLastCell();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address); // prints Sheet1!F8
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Range.getLastColumn
    summary: |-
      <span data-ttu-id="7c1ac-224">获取区域内的最后一列。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-224">Gets the last column within the range.</span></span> <span data-ttu-id="7c1ac-225">例如，“B2:D5”的最后一列是“D2:D5”。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-225">For example, the last column of "B2:D5" is "D2:D5".</span></span>

      <span data-ttu-id="7c1ac-226">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-226">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getLastColumn()
    fullName: getLastColumn()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLastColumn(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-227">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-227">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getLastColumn();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address); // prints Sheet1!F1:F8
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Range.getLastRow
    summary: |-
      <span data-ttu-id="7c1ac-228">获取区域内的最后一行。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-228">Gets the last row within the range.</span></span> <span data-ttu-id="7c1ac-229">例如，“B2:D5”的最后一行是“B5:D5”。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-229">For example, the last row of "B2:D5" is "B5:D5".</span></span>

      <span data-ttu-id="7c1ac-230">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-230">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getLastRow()
    fullName: getLastRow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLastRow(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-231">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-231">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getLastRow();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address); // prints Sheet1!A8:F8
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Range.getOffsetRange
    summary: |-
      <span data-ttu-id="7c1ac-p127">获取表示与指定区域偏移的区域的对象。返回的区域的尺寸将与此区域一致。如果强制在工作表网格的边界之外生成区域，将引发错误。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p127">Gets an object which represents a range that's offset from the specified range. The dimension of the returned range will match this range. If the resulting range is forced outside the bounds of the worksheet grid, an error will be thrown.</span></span>

      <span data-ttu-id="7c1ac-235">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-235">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getOffsetRange(rowOffset, columnOffset)'
    fullName: 'getOffsetRange(rowOffset, columnOffset)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOffsetRange(rowOffset: number, columnOffset: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-236">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-236">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "D4:F6";
              var range = 
                  ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getOffsetRange(-1,4);
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address); // prints Sheet1!H3:K5
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowOffset
          description: '<span data-ttu-id="7c1ac-p128">区域偏移的行数（正数、负数或 0）。正数表示向下偏移，负数表示向上偏移。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p128">The number of rows (positive, negative, or 0) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward.</span></span>'
          type:
            - number
        - id: columnOffset
          description: '<span data-ttu-id="7c1ac-p129">区域偏移的列数（正数、负数或 0）。正数表示向右偏移，负数表示向左偏移。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p129">The number of columns (positive, negative, or 0) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left.</span></span>'
          type:
            - number
  - uid: excel.Excel.Range.getResizedRange
    summary: |-
      <span data-ttu-id="7c1ac-241">获取与当前范围对象类似的范围对象，但其右下角可通过一定数量的行和列进行展开（或合拢）。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-241">Gets a Range object similar to the current Range object, but with its bottom-right corner expanded (or contracted) by some number of rows and columns.</span></span>

      <span data-ttu-id="7c1ac-242">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-242">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getResizedRange(deltaRows, deltaColumns)'
    fullName: 'getResizedRange(deltaRows, deltaColumns)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getResizedRange(deltaRows: number, deltaColumns: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: deltaRows
          description: '<span data-ttu-id="7c1ac-p130">相对于当前范围，展开右下角的行数。使用正数可展开范围，使用负数可合拢范围。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p130">The number of rows by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.</span></span>'
          type:
            - number
        - id: deltaColumns
          description: '<span data-ttu-id="7c1ac-245">相对于当前范围, 从右下角扩展的列数。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-245">The number of columns by which to expand the bottom-right corner, relative to the current range.</span></span> <span data-ttu-id="7c1ac-246">使用正数可展开范围，使用负数可合拢范围。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-246">Use a positive number to expand the range, or a negative number to decrease it.</span></span>'
          type:
            - number
  - uid: excel.Excel.Range.getRow
    summary: |-
      <span data-ttu-id="7c1ac-247">获取范围中包含的行。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-247">Gets a row contained in the range.</span></span>

      <span data-ttu-id="7c1ac-248">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-248">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRow(row)
    fullName: getRow(row)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRow(row: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-249">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-249">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getRow(1);
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address); // prints Sheet1!A2:F2
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: row
          description: <span data-ttu-id="7c1ac-250">要检索的区域的行号。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-250">Row number of the range to be retrieved.</span></span> <span data-ttu-id="7c1ac-251">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-251">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.Range.getRowsAbove
    summary: |-
      <span data-ttu-id="7c1ac-252">获取当前范围对象上方的一定数量的行。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-252">Gets a certain number of rows above the current Range object.</span></span>

      <span data-ttu-id="7c1ac-253">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-253">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRowsAbove(count)
    fullName: getRowsAbove(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowsAbove(count?: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: count
          description: '<span data-ttu-id="7c1ac-p133">可选。生成的范围中要包含的行数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p133">Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>'
          type:
            - number
  - uid: excel.Excel.Range.getRowsBelow
    summary: |-
      <span data-ttu-id="7c1ac-259">获取当前范围对象下方的一定数量的行。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-259">Gets a certain number of rows below the current Range object.</span></span>

      <span data-ttu-id="7c1ac-260">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-260">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRowsBelow(count)
    fullName: getRowsBelow(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowsBelow(count?: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: count
          description: '<span data-ttu-id="7c1ac-p134">可选。生成的范围中要包含的行数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p134">Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>'
          type:
            - number
  - uid: excel.Excel.Range.getSurroundingRegion
    summary: |-
      <span data-ttu-id="7c1ac-266">返回一个 Range 对象，该对象表示此区域左上单元格的周围区域。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-266">Returns a Range object that represents the surrounding region for the top-left cell in this range.</span></span> <span data-ttu-id="7c1ac-267">周围区域是由相对于该区域的空白行和空白列的任何组合所限定的区域。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-267">A surrounding region is a range bounded by any combination of blank rows and blank columns relative to this range.</span></span>

      <span data-ttu-id="7c1ac-268">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-268">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getSurroundingRegion()
    fullName: getSurroundingRegion()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSurroundingRegion(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.Range.getUsedRange
    summary: |-
      <span data-ttu-id="7c1ac-p136">返回指定 Range 对象的所用区域。如果区域内没有使用单元格，此函数将引发 ItemNotFound 错误。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p136">Returns the used range of the given range object. If there are no used cells within the range, this function will throw an ItemNotFound error.</span></span>

      <span data-ttu-id="7c1ac-271">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-271">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRange(valuesOnly)
    fullName: getUsedRange(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRange(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-272">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-272">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "D:F";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              var rangeUR = range.getUsedRange();
              rangeUR.load('address');
              return ctx.sync().then(function() {
                  console.log(rangeUR.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const salesTable = sheet.tables.getItem("SalesTable");
              const dataRange = salesTable.getDataBodyRange();

              // We want the most recent quarter that has data, so
              // exclude quarters without data and get the last of
              // the remaining columns.
              const usedDataRange = dataRange.getUsedRange(true /* valuesOnly */);
              const currentQuarterRange = usedDataRange.getLastColumn();

              // Asian and European teams have separate contests.
              const asianSalesRange = sheet.getRange("A2:E4");
              const europeanSalesRange = sheet.getRange("A5:E7");

              // The data for each chart is the intersection of the
              // current quarter column and the rows for the continent.
              const asianContestRange = asianSalesRange.getIntersectionOrNullObject(currentQuarterRange);
              const europeanContestRange = europeanSalesRange.getIntersectionOrNullObject(currentQuarterRange);

              // Must sync before you can test the output of *OrNullObject
              // method/property.
              await context.sync();

              if (asianContestRange.isNullObject) {
                  // See the declaration of this method for how to
                  // test this code path.
                  reportMissingData("Asian");
              } else {
                  createContinentChart(
                      sheet,
                      "Asian",
                      asianContestRange,
                      "A9",
                      "F24"
                  );
              }

              if (europeanContestRange.isNullObject) {
                  // See the declaration of this method for how to
                  // test this code path.
                  reportMissingData("European");
              } else {
                  createContinentChart(
                      sheet,
                      "European",
                      europeanContestRange,
                      "A25",
                      "F40"
                  );
              }

              await context.sync();
          });
          ```
      parameters:
        - id: valuesOnly
          description: '<span data-ttu-id="7c1ac-273">仅将有值的单元格视为已使用的单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-273">Considers only cells with values as used cells.</span></span> <span data-ttu-id="7c1ac-274">\[Api 集: ExcelApi 1。2\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-274">\[Api set: ExcelApi 1.2\]</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Range.getUsedRangeOrNullObject
    summary: |-
      <span data-ttu-id="7c1ac-p138">返回指定 Range 对象的所用区域。如果区域内没有使用单元格，此函数将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p138">Returns the used range of the given range object. If there are no used cells within the range, this function will return a null object.</span></span>

      <span data-ttu-id="7c1ac-277">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-277">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRangeOrNullObject(valuesOnly)
    fullName: getUsedRangeOrNullObject(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-278">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-278">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const salesTable = sheet.tables.getItem("SalesTable");
              const dataRange = salesTable.getDataBodyRange();

              // Pass true so only cells with values count as used
              const usedDataRange = dataRange.getUsedRangeOrNullObject(
                  true /* valuesOnly */
              );

              //Must sync before reading value returned from *OrNullObject method/property.
              await context.sync();

              if (usedDataRange.isNullObject) {
                  console.log("Need Data to Make Chart");
                  console.log("To create a meaningful chart, press 'Fill the table' (or add names to the Product column and numbers to some of the other cells). Then press 'Try to create chart' again.");
              } else {
                  const chart = sheet.charts.add(
                      Excel.ChartType.columnClustered,
                      dataRange,
                      "Columns"
                  );
                  chart.setPosition("A15", "F30");
                  chart.title.text = "Quarterly sales chart";
                  chart.legend.position = "Right";
                  chart.legend.format.fill.setSolidColor("white");
                  chart.dataLabels.format.font.size = 15;
                  chart.dataLabels.format.font.color = "black";
              }

              await context.sync();
          });
          ```
      parameters:
        - id: valuesOnly
          description: <span data-ttu-id="7c1ac-279">仅将有值的单元格视为已使用的单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-279">Considers only cells with values as used cells.</span></span>
          type:
            - boolean
  - uid: excel.Excel.Range.getVisibleView
    summary: |-
      <span data-ttu-id="7c1ac-280">表示当前 range 对象的可见行。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-280">Represents the visible rows of the current range.</span></span>

      <span data-ttu-id="7c1ac-281">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-281">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getVisibleView()
    fullName: getVisibleView()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getVisibleView(): Excel.RangeView;'
      return:
        type:
          - excel.Excel.RangeView
        description: ''
  - uid: excel.Excel.Range.hidden
    summary: |-
      <span data-ttu-id="7c1ac-282">表示当前区域中的所有单元格是否隐藏。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-282">Represents if all cells of the current range are hidden.</span></span> <span data-ttu-id="7c1ac-283">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-283">Read-only.</span></span>

      <span data-ttu-id="7c1ac-284">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-284">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hidden
    fullName: hidden
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hidden: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Range.hyperlink
    summary: |-
      <span data-ttu-id="7c1ac-285">表示当前区域的超链接。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-285">Represents the hyperlink for the current range.</span></span>

      <span data-ttu-id="7c1ac-286">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-286">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hyperlink
    fullName: hyperlink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyperlink: Excel.RangeHyperlink;'
      return:
        type:
          - excel.Excel.RangeHyperlink
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-287">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-287">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Orders");

              let productsRange = sheet.getRange("A3:A5");
              productsRange.load("values");

              await context.sync();

              // Create a hyperlink to a URL 
              // for each product name in the first table.
              for (let i = 0; i < productsRange.values.length; i++) {
                  let cellRange = productsRange.getCell(i, 0);
                  let cellText = productsRange.values[i][0];

                  let hyperlink = {
                      textToDisplay: cellText,
                      screenTip: "Search Bing for '" + cellText + "'",
                      address: "https://www.bing.com?q=" + cellText
                  }
                  cellRange.hyperlink = hyperlink;
              }

              await context.sync();
          });
          ```
  - uid: excel.Excel.Range.insert
    summary: |-
      <span data-ttu-id="7c1ac-p140">将单个单元格或一系列单元格插入到工作表中取代此区域，并移动其他单元格以留出空间。在现在空白的空间返回新的 Range 对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p140">Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new Range object at the now blank space.</span></span>

      <span data-ttu-id="7c1ac-290">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-290">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: insert(shift)
    fullName: insert(shift)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insert(shift: Excel.InsertShiftDirection): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-291">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-291">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F5:F10";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.insert();
              return ctx.sync(); 
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: shift
          description: '<span data-ttu-id="7c1ac-292">指定移动单元格的方式。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-292">Specifies which way to shift the cells.</span></span> <span data-ttu-id="7c1ac-293">有关详细信息, 请参阅 InsertShiftDirection。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-293">See Excel.InsertShiftDirection for details.</span></span>'
          type:
            - excel.Excel.InsertShiftDirection
  - uid: excel.Excel.Range.insert_1
    summary: |-
      <span data-ttu-id="7c1ac-p142">将单个单元格或一系列单元格插入到工作表中取代此区域，并移动其他单元格以留出空间。在现在空白的空间返回新的 Range 对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-p142">Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new Range object at the now blank space.</span></span>

      <span data-ttu-id="7c1ac-296">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-296">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: insert(shiftString)
    fullName: insert(shiftString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insert(shiftString: "Down" | "Right"): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: shiftString
          description: '<span data-ttu-id="7c1ac-297">指定移动单元格的方式。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-297">Specifies which way to shift the cells.</span></span> <span data-ttu-id="7c1ac-298">有关详细信息, 请参阅 InsertShiftDirection。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-298">See Excel.InsertShiftDirection for details.</span></span>'
          type:
            - '"Down" | "Right"'
  - uid: excel.Excel.Range.isEntireColumn
    summary: |-
      <span data-ttu-id="7c1ac-299">表示当前区域是否为整列。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-299">Represents if the current range is an entire column.</span></span> <span data-ttu-id="7c1ac-300">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-300">Read-only.</span></span>

      <span data-ttu-id="7c1ac-301">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-301">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: isEntireColumn
    fullName: isEntireColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireColumn: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Range.isEntireRow
    summary: |-
      <span data-ttu-id="7c1ac-302">表示当前区域是否为整行。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-302">Represents if the current range is an entire row.</span></span> <span data-ttu-id="7c1ac-303">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-303">Read-only.</span></span>

      <span data-ttu-id="7c1ac-304">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-304">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: isEntireRow
    fullName: isEntireRow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireRow: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Range.load
    summary: <span data-ttu-id="7c1ac-305">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-305">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7c1ac-306">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-306">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="7c1ac-307">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="7c1ac-307">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="7c1ac-308">`load(option?: string | string[]): Excel.Range`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-308">`load(option?: string | string[]): Excel.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="7c1ac-309">`load(option?: { select?: string; expand?: string; }): Excel.Range`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-309">`load(option?: { select?: string; expand?: string; }): Excel.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="7c1ac-310">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Range`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-310">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Range` - Only available on collection types.</span></span> <span data-ttu-id="7c1ac-311">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-311">It is similar to the preceding signature.</span></span> <span data-ttu-id="7c1ac-312">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-312">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7c1ac-313">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-313">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7c1ac-314">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-314">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeLoadOptions): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeLoadOptions
  - uid: excel.Excel.Range.load_1
    summary: '<span data-ttu-id="7c1ac-315">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-315">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7c1ac-316">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-316">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-317">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-317">Examples</span></span>

          ```javascript
          // Below example uses range address to get the range object.
          Excel.run(function (ctx) {
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8"; 
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Below example uses a named-range to get the range object.
          Excel.run(function (ctx) { 
              var rangeName = 'MyRange';
              var range = ctx.workbook.names.getItem(rangeName).range;
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below sets number-format, values and formulas on a grid that contains 2x3 grid.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F5:G7";
              var numberFormat = [[null, "d-mmm"], [null, "d-mmm"], [null, null]]
              var values = [["Today", 42147], ["Tomorrow", "5/24"], ["Difference in days", null]];
              var formulas = [[null,null], [null,null], [null,"=G6-G5"]];
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.numberFormat = numberFormat;
              range.values = values;
              range.formulas= formulas;
              range.load('text');
              return ctx.sync().then(function() {
                  console.log(range.text);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="7c1ac-318">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-318">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Range.load_2
    summary: '<span data-ttu-id="7c1ac-319">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-319">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7c1ac-320">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-320">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="7c1ac-321">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-321">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Range.merge
    summary: |-
      <span data-ttu-id="7c1ac-322">在工作表中，将 range 单元格合并到一个区域中。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-322">Merge the range cells into one region in the worksheet.</span></span>

      <span data-ttu-id="7c1ac-323">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-323">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: merge(across)
    fullName: merge(across)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'merge(across?: boolean): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-324">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-324">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:C3";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.merge(true);
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:C3";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.unmerge();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: across
          description: <span data-ttu-id="7c1ac-325">可选。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-325">Optional.</span></span> <span data-ttu-id="7c1ac-326">如果为 True，则将指定区域中每一行的单元格合并为一个单独的合并单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-326">Set true to merge cells in each row of the specified range as separate merged cells.</span></span> <span data-ttu-id="7c1ac-327">默认值是 false。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-327">The default value is false.</span></span>
          type:
            - boolean
  - uid: excel.Excel.Range.numberFormat
    summary: |-
      <span data-ttu-id="7c1ac-328">表示给定范围的 Excel 数字格式代码。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-328">Represents Excel's number format code for the given range.</span></span> <span data-ttu-id="7c1ac-329">将数字格式设置为一个区域时, value 参数可以是单个值 (string), 也可以是二维数组。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-329">When setting number format to a range, the value argument can be either a single value (string) or a two-dimensional array.</span></span> <span data-ttu-id="7c1ac-330">如果参数是单个值, 它将应用于区域中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-330">If the argument is a single value, it will be applied to all cells in the range.</span></span>

      <span data-ttu-id="7c1ac-331">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-331">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel.Excel.Range.numberFormatLocal
    summary: |-
      <span data-ttu-id="7c1ac-332">表示 Excel 中的给定区域的数字格式代码，以用户语言的字符串表示。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-332">Represents Excel's number format code for the given range as a string in the language of the user.</span></span> <span data-ttu-id="7c1ac-333">将数字格式设置为局部区域时, value 参数可以是单个值 (字符串), 也可以是二维数组。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-333">When setting number format local to a range, the value argument can be either a single value (string) or a two-dimensional array.</span></span> <span data-ttu-id="7c1ac-334">如果参数是单个值, 它将应用于区域中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-334">If the argument is a single value, it will be applied to all cells in the range.</span></span>

      <span data-ttu-id="7c1ac-335">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-335">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: numberFormatLocal
    fullName: numberFormatLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormatLocal: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel.Excel.Range.rowCount
    summary: |-
      <span data-ttu-id="7c1ac-336">返回区域中的总行数。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-336">Returns the total number of rows in the range.</span></span> <span data-ttu-id="7c1ac-337">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-337">Read-only.</span></span>

      <span data-ttu-id="7c1ac-338">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-338">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Range.rowHidden
    summary: |-
      <span data-ttu-id="7c1ac-339">表示当前 range 的所有行均已隐藏。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-339">Represents if all rows of the current range are hidden.</span></span>

      <span data-ttu-id="7c1ac-340">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-340">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowHidden
    fullName: rowHidden
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rowHidden: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Range.rowIndex
    summary: |-
      <span data-ttu-id="7c1ac-341">返回区域中第一个单元格的行编号。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-341">Returns the row number of the first cell in the range.</span></span> <span data-ttu-id="7c1ac-342">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-342">Zero-indexed.</span></span> <span data-ttu-id="7c1ac-343">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-343">Read-only.</span></span>

      <span data-ttu-id="7c1ac-344">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-344">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowIndex
    fullName: rowIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowIndex: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Range.select
    summary: |-
      <span data-ttu-id="7c1ac-345">在 Excel UI 中选择指定的区域。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-345">Selects the specified range in the Excel UI.</span></span>

      <span data-ttu-id="7c1ac-346">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-346">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: select()
    fullName: select()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-347">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-347">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {
              var sheetName = "Sheet1";
              var rangeAddress = "F5:F10"; 
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.select();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Range.set
    summary: '<span data-ttu-id="7c1ac-348">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-348">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="7c1ac-349">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-349">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="7c1ac-350">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="7c1ac-350">This method has the following additional signature:</span></span>

      `set(properties: Excel.Range): void`

      #### <a name="examples"></a><span data-ttu-id="7c1ac-351">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-351">Examples</span></span>

      ```typescript
      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");

          const range = sheet.getRange("B2:E2");
          range.set({
              format: {
                  fill: {
                      color: "#4472C4"
                  },
                  font: {
                      name: "Verdana",
                      color: "white"
                  }
              }
          })
          range.format.autofitColumns();
          await context.sync();
      });
      ```
      ```typescript
      await Excel.run(async (context) => {
          const sheet = context.workbook.worksheets.getItem("Sample");

          const sourceRange = sheet.getRange("B2:E2");
          sourceRange.load("format/fill/color, format/font/name, format/font/color");
          await context.sync();

          // Set properties based on the loaded and synced 
          // source range.
          const targetRange = sheet.getRange("B7:E7");
          targetRange.set(sourceRange); 
          targetRange.format.autofitColumns();
          await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="7c1ac-352">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-352">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.RangeUpdateData
        - id: options
          description: '<span data-ttu-id="7c1ac-353">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-353">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Range.set_1
    summary: '<span data-ttu-id="7c1ac-354">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-354">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Range
  - uid: excel.Excel.Range.showCard
    summary: |-
      <span data-ttu-id="7c1ac-355">显示活动单元格的卡片（如果该单元格具有富值内容）。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-355">Displays the card for an active cell if it has rich value content.</span></span>

      <span data-ttu-id="7c1ac-356">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-356">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showCard()
    fullName: showCard()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showCard(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Range.sort
    summary: |-
      <span data-ttu-id="7c1ac-357">表示当前 range 的区域排序。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-357">Represents the range sort of the current range.</span></span> <span data-ttu-id="7c1ac-358">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-358">Read-only.</span></span>

      <span data-ttu-id="7c1ac-359">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-359">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sort
    fullName: sort
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sort: Excel.RangeSort;'
      return:
        type:
          - excel.Excel.RangeSort
  - uid: excel.Excel.Range.style
    summary: |-
      <span data-ttu-id="7c1ac-360">表示当前区域的样式。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-360">Represents the style of the current range.</span></span> <span data-ttu-id="7c1ac-361">如果单元格的样式不一致, 则将返回 null。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-361">If the styles of the cells are inconsistent, null will be returned.</span></span> <span data-ttu-id="7c1ac-362">对于自定义样式, 将返回样式名称。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-362">For custom styles, the style name will be returned.</span></span> <span data-ttu-id="7c1ac-363">对于内置样式, 将返回一个表示 BuiltInStyle 枚举中的值的字符串。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-363">For built-in styles, a string representing a value in the BuiltInStyle enum will be returned.</span></span>

      <span data-ttu-id="7c1ac-364">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-364">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-365">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-365">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let worksheet = context.workbook.worksheets.getItem("Sample");
              let range = worksheet.getRange("A1:E1");

              // Apply built-in style. 
              // Styles are in the Home tab ribbon.
              range.style = Excel.BuiltInStyle.neutral;
              range.format.horizontalAlignment = "Right";

              await context.sync();
          });
          ```
  - uid: excel.Excel.Range.text
    summary: |-
      <span data-ttu-id="7c1ac-366">指定区域的文本值。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-366">Text values of the specified range.</span></span> <span data-ttu-id="7c1ac-367">文本值与单元格宽度无关。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-367">The Text value will not depend on the cell width.</span></span> <span data-ttu-id="7c1ac-368">Excel \# UI 中发生的符号替换不会影响 API 返回的文本值。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-368">The \# sign substitution that happens in Excel UI will not affect the text value returned by the API.</span></span> <span data-ttu-id="7c1ac-369">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-369">Read-only.</span></span>

      <span data-ttu-id="7c1ac-370">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-370">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string[][];'
      return:
        type:
          - 'string[][]'
  - uid: excel.Excel.Range.toJSON
    summary: '<span data-ttu-id="7c1ac-371">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7c1ac-371">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7c1ac-372">.</span><span class="sxs-lookup"><span data-stu-id="7c1ac-372"></span></span> <span data-ttu-id="7c1ac-373">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7c1ac-373"></span></span><!-- --><span data-ttu-id="7c1ac-374">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel Range 对象是 API 对象, 但`toJSON`方法返回一个简单的 JavaScript 对象 (类型为`Excel.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="7c1ac-374">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="7c1ac-375">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-375">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeData
        description: ''
  - uid: excel.Excel.Range.track
    summary: '<span data-ttu-id="7c1ac-376">根据文档中的相应更改来跟踪对象，以便进行自动调整。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-376">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="7c1ac-377">此调用是 context.trackedObjects.add(thisObject) 的缩写。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-377">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="7c1ac-378">如果你在“.sync”调用之间和按顺序执行“.run”批处理之外使用此对象，并且在对象上设置属性或调用方法时出现“InvalidObjectPath”错误，则需要在首次创建对象时为跟踪的对象集合添加对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-378">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.Range.unmerge
    summary: |-
      <span data-ttu-id="7c1ac-379">将范围单元格取消合并为各个单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-379">Unmerge the range cells into separate cells.</span></span>

      <span data-ttu-id="7c1ac-380">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-380">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: unmerge()
    fullName: unmerge()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unmerge(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-381">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-381">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:C3";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.unmerge();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Range.untrack
    summary: '<span data-ttu-id="7c1ac-382">释放与此对象关联的内存（如果先前已跟踪过）。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-382">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="7c1ac-383">此调用是 context.trackedObjects.add(thisObject) 的缩写。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-383">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="7c1ac-384">拥有许多跟踪对象会降低主机应用程序的速度，因此请在使用完毕后释放所添加的任何对象。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-384">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="7c1ac-385">在内存释放生效之前，你需要调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-385">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7c1ac-386">示例</span><span class="sxs-lookup"><span data-stu-id="7c1ac-386">Examples</span></span>

          ```typescript
          Excel.run(async (context) => {
              const largeRange = context.workbook.getSelectedRange();
              largeRange.load(["rowCount", "columnCount"]);
              await context.sync();

              for (let i = 0; i < largeRange.rowCount; i++) {
                  for (let j = 0; j < largeRange.columnCount; j++) {
                      let cell = largeRange.getCell(i, j);
                      cell.values = [[i *j]];

                      // call untrack() to release the range from memory
                      cell.untrack();
                  }
              }

              await context.sync();
          });
          ```
  - uid: excel.Excel.Range.values
    summary: |-
      <span data-ttu-id="7c1ac-387">表示指定区域的原始值。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-387">Represents the raw values of the specified range.</span></span> <span data-ttu-id="7c1ac-388">返回的数据可能是字符串、数字，也可能是布尔值。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-388">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="7c1ac-389">包含错误的单元格将返回错误字符串。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-389">Cells that contain an error will return the error string.</span></span> <span data-ttu-id="7c1ac-390">将值设置为一个范围时, value 参数可以是单个值 (string、number 或 boolean), 也可以是一个二维数组。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-390">When setting values to a range, the value argument can be either a single value (string, number or boolean) or a two-dimensional array.</span></span> <span data-ttu-id="7c1ac-391">如果参数是单个值, 它将应用于区域中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-391">If the argument is a single value, it will be applied to all cells in the range.</span></span>

      <span data-ttu-id="7c1ac-392">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-392">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'
  - uid: excel.Excel.Range.valueTypes
    summary: |-
      <span data-ttu-id="7c1ac-393">表示每个单元格的数据类型。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-393">Represents the type of data of each cell.</span></span> <span data-ttu-id="7c1ac-394">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-394">Read-only.</span></span>

      <span data-ttu-id="7c1ac-395">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-395">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: valueTypes
    fullName: valueTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly valueTypes: Excel.RangeValueType[][];'
      return:
        type:
          - 'Excel.RangeValueType[][]'
  - uid: excel.Excel.Range.worksheet
    summary: |-
      <span data-ttu-id="7c1ac-396">包含当前区域的工作表。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-396">The worksheet containing the current range.</span></span> <span data-ttu-id="7c1ac-397">只读。</span><span class="sxs-lookup"><span data-stu-id="7c1ac-397">Read-only.</span></span>

      <span data-ttu-id="7c1ac-398">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7c1ac-398">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet