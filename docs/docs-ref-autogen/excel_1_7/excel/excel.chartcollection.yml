### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartCollection:class'
    summary: |-
      <span data-ttu-id="c31b7-101">工作表中的所有 chart 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c31b7-101">A collection of all the chart objects on a worksheet.</span></span>

      <span data-ttu-id="c31b7-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c31b7-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartCollection
    fullName: Excel.ChartCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartCollection#add:member(1)'
      - 'excel!Excel.ChartCollection#add:member(2)'
      - 'excel!Excel.ChartCollection#context:member'
      - 'excel!Excel.ChartCollection#count:member'
      - 'excel!Excel.ChartCollection#getCount:member(1)'
      - 'excel!Excel.ChartCollection#getItem:member(1)'
      - 'excel!Excel.ChartCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.ChartCollection#items:member'
      - 'excel!Excel.ChartCollection#load:member(1)'
      - 'excel!Excel.ChartCollection#load:member(2)'
      - 'excel!Excel.ChartCollection#load:member(3)'
      - 'excel!Excel.ChartCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="c31b7-103">创建新图表。</span><span class="sxs-lookup"><span data-stu-id="c31b7-103">Creates a new chart.</span></span>

      <span data-ttu-id="c31b7-104">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c31b7-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(type, sourceData, seriesBy)'
    fullName: 'add(type, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c31b7-105">示例</span><span class="sxs-lookup"><span data-stu-id="c31b7-105">Examples</span></span>

          ```javascript
          // Add a chart of chartType "ColumnClustered" on worksheet "Charts" 
          // with sourceData from Range "A1:B4" and seriresBy is set to be "auto".
          Excel.run(function (ctx) { 
              var rangeSelection = "A1:B4";
              var range = ctx.workbook.worksheets.getItem(sheetName)
                  .getRange(rangeSelection);
              var chart = ctx.workbook.worksheets.getItem(sheetName)
                  .charts.add("ColumnClustered", range, "auto");    return ctx.sync().then(function() {
                      console.log("New Chart Added");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: type
          description: <span data-ttu-id="c31b7-106">表示图表的类型。</span><span class="sxs-lookup"><span data-stu-id="c31b7-106">Represents the type of a chart.</span></span> <span data-ttu-id="c31b7-107">有关详细信息，请参阅 ChartType。</span><span class="sxs-lookup"><span data-stu-id="c31b7-107">See Excel.ChartType for details.</span></span>
          type:
            - 'excel!Excel.ChartType:enum'
        - id: sourceData
          description: <span data-ttu-id="c31b7-108">对应于源数据的 Range 对象。</span><span class="sxs-lookup"><span data-stu-id="c31b7-108">The Range object corresponding to the source data.</span></span>
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: <span data-ttu-id="c31b7-109">可选。</span><span class="sxs-lookup"><span data-stu-id="c31b7-109">Optional.</span></span> <span data-ttu-id="c31b7-110">指定列或行在图表上用作数据系列的方式。</span><span class="sxs-lookup"><span data-stu-id="c31b7-110">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="c31b7-111">有关详细信息，请参阅 ChartSeriesBy。</span><span class="sxs-lookup"><span data-stu-id="c31b7-111">See Excel.ChartSeriesBy for details.</span></span>
          type:
            - 'excel!Excel.ChartSeriesBy:enum'
  - uid: 'excel!Excel.ChartCollection#add:member(2)'
    summary: |-
      <span data-ttu-id="c31b7-112">创建新图表。</span><span class="sxs-lookup"><span data-stu-id="c31b7-112">Creates a new chart.</span></span>

      <span data-ttu-id="c31b7-113">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c31b7-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(typeString, sourceData, seriesBy)'
    fullName: 'add(typeString, sourceData, seriesBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(typeString: "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel", sourceData: Range, seriesBy?: "Auto" | "Columns" | "Rows"): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: typeString
          description: <span data-ttu-id="c31b7-114">表示图表的类型。</span><span class="sxs-lookup"><span data-stu-id="c31b7-114">Represents the type of a chart.</span></span> <span data-ttu-id="c31b7-115">有关详细信息，请参阅 ChartType。</span><span class="sxs-lookup"><span data-stu-id="c31b7-115">See Excel.ChartType for details.</span></span>
          type:
            - '"Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"'
        - id: sourceData
          description: <span data-ttu-id="c31b7-116">对应于源数据的 Range 对象。</span><span class="sxs-lookup"><span data-stu-id="c31b7-116">The Range object corresponding to the source data.</span></span>
          type:
            - 'excel!Excel.Range:class'
        - id: seriesBy
          description: <span data-ttu-id="c31b7-117">可选。</span><span class="sxs-lookup"><span data-stu-id="c31b7-117">Optional.</span></span> <span data-ttu-id="c31b7-118">指定列或行在图表上用作数据系列的方式。</span><span class="sxs-lookup"><span data-stu-id="c31b7-118">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="c31b7-119">有关详细信息，请参阅 ChartSeriesBy。</span><span class="sxs-lookup"><span data-stu-id="c31b7-119">See Excel.ChartSeriesBy for details.</span></span>
          type:
            - '"Auto" | "Columns" | "Rows"'
  - uid: 'excel!Excel.ChartCollection#context:member'
    summary: <span data-ttu-id="c31b7-120">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="c31b7-120">The request context associated with the object.</span></span> <span data-ttu-id="c31b7-121">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="c31b7-121">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartCollection#count:member'
    summary: |-
      <span data-ttu-id="c31b7-122">返回工作表中的图表数。</span><span class="sxs-lookup"><span data-stu-id="c31b7-122">Returns the number of charts in the worksheet.</span></span> <span data-ttu-id="c31b7-123">只读。</span><span class="sxs-lookup"><span data-stu-id="c31b7-123">Read-only.</span></span>

      <span data-ttu-id="c31b7-124">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c31b7-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="c31b7-125">返回工作表中的图表数。</span><span class="sxs-lookup"><span data-stu-id="c31b7-125">Returns the number of charts in the worksheet.</span></span>

      <span data-ttu-id="c31b7-126">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c31b7-126">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.ChartCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.ChartCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="c31b7-127">使用图表名称获取图表。</span><span class="sxs-lookup"><span data-stu-id="c31b7-127">Gets a chart using its name.</span></span> <span data-ttu-id="c31b7-128">如果存在多个名称相同的图表，将返回第一个图表。</span><span class="sxs-lookup"><span data-stu-id="c31b7-128">If there are multiple charts with the same name, the first one will be returned.</span></span>

      <span data-ttu-id="c31b7-129">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c31b7-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c31b7-130">示例</span><span class="sxs-lookup"><span data-stu-id="c31b7-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var chartname = 'Chart1';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartname);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var chartId = 'SampleChartId';
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem(chartId);
              return ctx.sync().then(function() {
                      console.log(chart.height);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="c31b7-131">要检索的图表的名称。</span><span class="sxs-lookup"><span data-stu-id="c31b7-131">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="c31b7-132">根据其在集合中的位置获取图表。</span><span class="sxs-lookup"><span data-stu-id="c31b7-132">Gets a chart based on its position in the collection.</span></span>

      <span data-ttu-id="c31b7-133">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c31b7-133">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c31b7-134">示例</span><span class="sxs-lookup"><span data-stu-id="c31b7-134">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.worksheets.getItem("Sheet1").charts.count - 1;
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItemAt(lastPosition);
              return ctx.sync().then(function() {
                      console.log(chart.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="c31b7-135">要检索的对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="c31b7-135">Index value of the object to be retrieved.</span></span> <span data-ttu-id="c31b7-136">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="c31b7-136">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartCollection#getItemOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="c31b7-137">使用图表名称获取图表。</span><span class="sxs-lookup"><span data-stu-id="c31b7-137">Gets a chart using its name.</span></span> <span data-ttu-id="c31b7-138">如果存在多个名称相同的图表，将返回第一个图表。</span><span class="sxs-lookup"><span data-stu-id="c31b7-138">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id="c31b7-139">如果图表不存在，将返回一个 null 对象。</span><span class="sxs-lookup"><span data-stu-id="c31b7-139">If the chart does not exist, will return a null object.</span></span>

      <span data-ttu-id="c31b7-140">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c31b7-140">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.Chart;'
      return:
        type:
          - 'excel!Excel.Chart:class'
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="c31b7-141">要检索的图表的名称。</span><span class="sxs-lookup"><span data-stu-id="c31b7-141">Name of the chart to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.ChartCollection#items:member'
    summary: <span data-ttu-id="c31b7-142">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="c31b7-142">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Chart[];'
      return:
        type:
          - 'excel!Excel.ChartCollection#items~0:complex'
  - uid: 'excel!Excel.ChartCollection#load:member(1)'
    summary: <span data-ttu-id="c31b7-143">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c31b7-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c31b7-144">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="c31b7-144">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c31b7-145">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="c31b7-145">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c31b7-146">`load(option?: string | string[]): Excel.ChartCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="c31b7-146">`load(option?: string | string[]): Excel.ChartCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c31b7-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="c31b7-147">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c31b7-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="c31b7-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only available on collection types.</span></span> <span data-ttu-id="c31b7-149">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="c31b7-149">It is similar to the preceding signature.</span></span> <span data-ttu-id="c31b7-150">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c31b7-150">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c31b7-151">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="c31b7-151">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c31b7-152">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="c31b7-152">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.ChartCollection#load~0:complex'
  - uid: 'excel!Excel.ChartCollection#load:member(2)'
    summary: <span data-ttu-id="c31b7-153">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c31b7-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c31b7-154">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="c31b7-154">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c31b7-155">示例</span><span class="sxs-lookup"><span data-stu-id="c31b7-155">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < charts.items.length; i++)
                  {
                      console.log(charts.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of charts
          Excel.run(function (ctx) { 
              var charts = ctx.workbook.worksheets.getItem("Sheet1").charts;
              charts.load('count');
              return ctx.sync().then(function() {
                  console.log("charts: Count= " + charts.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="c31b7-156">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="c31b7-156">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartCollection;'
      return:
        type:
          - 'excel!Excel.ChartCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ChartCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="c31b7-157">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c31b7-157">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c31b7-158">.</span><span class="sxs-lookup"><span data-stu-id="c31b7-158"></span></span> <span data-ttu-id="c31b7-159">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c31b7-159"></span></span><!-- --><span data-ttu-id="c31b7-160">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.ChartCollection`对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.ChartCollectionData`</span><span class="sxs-lookup"><span data-stu-id="c31b7-160">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`</span></span><!-- --><span data-ttu-id="c31b7-161">），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="c31b7-161">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Chart:class'
    name: Excel.Chart
  - uid: 'excel!Excel.ChartType:enum'
    name: Excel.ChartType
  - uid: 'excel!Excel.Range:class'
    name: Range
  - uid: 'excel!Excel.ChartSeriesBy:enum'
    name: Excel.ChartSeriesBy
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.ChartCollection#items~0:complex'
    name: 'Excel.Chart[]'
    fullName: 'Excel.Chart[]'
    spec.typeScript:
      - uid: 'excel!Excel.Chart:class'
        name: Excel.Chart
        fullName: Excel.Chart
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartCollection:class'
    name: Excel.ChartCollection
  - uid: 'excel!Excel.ChartCollection#load~0:complex'
    name: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ChartCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ChartCollectionLoadOptions:interface'
        name: Excel.Interfaces.ChartCollectionLoadOptions
        fullName: Excel.Interfaces.ChartCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ChartCollectionData:interface'
    name: Excel.Interfaces.ChartCollectionData