### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableSort:class'
    summary: |-
      <span data-ttu-id="0cbc7-101">管理对 Table 对象的排序操作。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-101">Manages sorting operations on Table objects.</span></span>

      <span data-ttu-id="0cbc7-102">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0cbc7-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableSort
    fullName: Excel.TableSort
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableSort#apply:member(1)'
      - 'excel!Excel.TableSort#apply:member(2)'
      - 'excel!Excel.TableSort#clear:member(1)'
      - 'excel!Excel.TableSort#context:member'
      - 'excel!Excel.TableSort#fields:member'
      - 'excel!Excel.TableSort#load:member(1)'
      - 'excel!Excel.TableSort#load:member(2)'
      - 'excel!Excel.TableSort#load:member(3)'
      - 'excel!Excel.TableSort#matchCase:member'
      - 'excel!Excel.TableSort#method:member'
      - 'excel!Excel.TableSort#reapply:member(1)'
      - 'excel!Excel.TableSort#toJSON:member(1)'
  - uid: 'excel!Excel.TableSort#apply:member(1)'
    summary: |-
      <span data-ttu-id="0cbc7-103">执行排序操作。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-103">Perform a sort operation.</span></span>

      <span data-ttu-id="0cbc7-104">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0cbc7-104">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'apply(fields, matchCase, method)'
    fullName: 'apply(fields, matchCase, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0cbc7-105">示例</span><span class="sxs-lookup"><span data-stu-id="0cbc7-105">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.sort.apply([ 
                      {
                          key: 2,
                          ascending: true
                      },
                  ], true);
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: fields
          description: <span data-ttu-id="0cbc7-106">要用作排序依据的条件列表。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-106">The list of conditions to sort on.</span></span>
          type:
            - 'excel!Excel.TableSort#apply~0:complex'
        - id: matchCase
          description: <span data-ttu-id="0cbc7-107">可选。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-107">Optional.</span></span> <span data-ttu-id="0cbc7-108">是否让大小写对字符串排序产生影响。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-108">Whether to have the casing impact string ordering.</span></span>
          type:
            - boolean
        - id: method
          description: <span data-ttu-id="0cbc7-109">可选。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-109">Optional.</span></span> <span data-ttu-id="0cbc7-110">用于中文字符的排序方法。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-110">The ordering method used for Chinese characters.</span></span>
          type:
            - 'excel!Excel.SortMethod:enum'
  - uid: 'excel!Excel.TableSort#apply:member(2)'
    summary: |-
      <span data-ttu-id="0cbc7-111">执行排序操作。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-111">Perform a sort operation.</span></span>

      <span data-ttu-id="0cbc7-112">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0cbc7-112">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'apply(fields, matchCase, methodString)'
    fullName: 'apply(fields, matchCase, methodString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, methodString?: "PinYin" | "StrokeCount"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: <span data-ttu-id="0cbc7-113">要用作排序依据的条件列表。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-113">The list of conditions to sort on.</span></span>
          type:
            - 'excel!Excel.TableSort#apply~1:complex'
        - id: matchCase
          description: <span data-ttu-id="0cbc7-114">可选。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-114">Optional.</span></span> <span data-ttu-id="0cbc7-115">是否让大小写对字符串排序产生影响。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-115">Whether to have the casing impact string ordering.</span></span>
          type:
            - boolean
        - id: methodString
          description: <span data-ttu-id="0cbc7-116">可选。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-116">Optional.</span></span> <span data-ttu-id="0cbc7-117">用于中文字符的排序方法。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-117">The ordering method used for Chinese characters.</span></span>
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: 'excel!Excel.TableSort#clear:member(1)'
    summary: |-
      <span data-ttu-id="0cbc7-p105">清除表上的当前排序。尽管这不能修改表的排序，但它会清除标题按钮的状态。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-p105">Clears the sorting that is currently on the table. While this doesn't modify the table's ordering, it clears the state of the header buttons.</span></span>

      <span data-ttu-id="0cbc7-120">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0cbc7-120">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.TableSort#context:member'
    summary: <span data-ttu-id="0cbc7-121">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-121">The request context associated with the object.</span></span> <span data-ttu-id="0cbc7-122">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-122">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableSort#fields:member'
    summary: |-
      <span data-ttu-id="0cbc7-123">表示最后一次对表排序所使用的当前条件。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-123">Represents the current conditions used to last sort the table.</span></span> <span data-ttu-id="0cbc7-124">只读。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-124">Read-only.</span></span>

      <span data-ttu-id="0cbc7-125">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0cbc7-125">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: fields
    fullName: fields
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fields: Excel.SortField[];'
      return:
        type:
          - 'excel!Excel.TableSort#fields~0:complex'
  - uid: 'excel!Excel.TableSort#load:member(1)'
    summary: <span data-ttu-id="0cbc7-126">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0cbc7-127">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-127">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="0cbc7-128">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="0cbc7-128">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="0cbc7-129">`load(option?: string | string[]): Excel.TableSort`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-129">`load(option?: string | string[]): Excel.TableSort` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="0cbc7-130">`load(option?: { select?: string; expand?: string; }): Excel.TableSort`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-130">`load(option?: { select?: string; expand?: string; }): Excel.TableSort` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="0cbc7-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort` - Only available on collection types.</span></span> <span data-ttu-id="0cbc7-132">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="0cbc7-133">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0cbc7-134">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0cbc7-135">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableSortLoadOptions): Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.TableSortLoadOptions:interface'
  - uid: 'excel!Excel.TableSort#load:member(2)'
    summary: <span data-ttu-id="0cbc7-136">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0cbc7-137">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-137">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="0cbc7-138">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-138">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableSort#load:member(3)'
    summary: <span data-ttu-id="0cbc7-139">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0cbc7-140">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-140">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0cbc7-141">其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-141">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.TableSort#matchCase:member'
    summary: |-
      <span data-ttu-id="0cbc7-142">表示最后一次对表进行排序时大小写是否有影响。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-142">Represents whether the casing impacted the last sort of the table.</span></span> <span data-ttu-id="0cbc7-143">只读。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-143">Read-only.</span></span>

      <span data-ttu-id="0cbc7-144">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0cbc7-144">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: matchCase
    fullName: matchCase
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly matchCase: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.TableSort#method:member'
    summary: |-
      <span data-ttu-id="0cbc7-145">表示最后一次对表排序所使用的中文字符排序方法。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-145">Represents Chinese character ordering method last used to sort the table.</span></span> <span data-ttu-id="0cbc7-146">只读。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-146">Read-only.</span></span>

      <span data-ttu-id="0cbc7-147">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0cbc7-147">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: method
    fullName: method
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
      return:
        type:
          - 'excel!Excel.TableSort#method~0:complex'
  - uid: 'excel!Excel.TableSort#reapply:member(1)'
    summary: |-
      <span data-ttu-id="0cbc7-148">对 table 重新应用当前的排序参数。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-148">Reapplies the current sorting parameters to the table.</span></span>

      <span data-ttu-id="0cbc7-149">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0cbc7-149">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.TableSort#toJSON:member(1)'
    summary: '<span data-ttu-id="0cbc7-150">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0cbc7-150">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0cbc7-151">.</span><span class="sxs-lookup"><span data-stu-id="0cbc7-151"></span></span> <span data-ttu-id="0cbc7-152">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0cbc7-152"></span></span><!-- --><span data-ttu-id="0cbc7-153">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 TableSort 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.TableSortData`</span><span class="sxs-lookup"><span data-stu-id="0cbc7-153">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableSort object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableSortData`</span></span><!-- --><span data-ttu-id="0cbc7-154">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="0cbc7-154">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableSortData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableSortData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableSort#apply~0:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SortMethod:enum'
    name: Excel.SortMethod
  - uid: 'excel!Excel.TableSort#apply~1:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableSort#fields~0:complex'
    name: 'Excel.SortField[]'
    fullName: 'Excel.SortField[]'
    spec.typeScript:
      - uid: 'excel!Excel.SortField:interface'
        name: Excel.SortField
        fullName: Excel.SortField
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableSort:class'
    name: Excel.TableSort
  - uid: 'excel!Excel.Interfaces.TableSortLoadOptions:interface'
    name: Excel.Interfaces.TableSortLoadOptions
  - uid: 'excel!Excel.TableSort#method~0:complex'
    name: Excel.SortMethod | "PinYin" | "StrokeCount"
    fullName: Excel.SortMethod | "PinYin" | "StrokeCount"
    spec.typeScript:
      - uid: 'excel!Excel.SortMethod:enum'
        name: Excel.SortMethod
        fullName: Excel.SortMethod
      - name: ' | "PinYin" | "StrokeCount"'
        fullName: ' | "PinYin" | "StrokeCount"'
  - uid: 'excel!Excel.Interfaces.TableSortData:interface'
    name: Excel.Interfaces.TableSortData