### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableCollection:class'
    summary: |-
      <span data-ttu-id="bc58f-101">表示属于工作簿或工作表（具有取决于限定到的范围）的所有表的集合。</span><span class="sxs-lookup"><span data-stu-id="bc58f-101">Represents a collection of all the tables that are part of the workbook or worksheet, depending on how it was reached.</span></span>

      <span data-ttu-id="bc58f-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc58f-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableCollection
    fullName: Excel.TableCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableCollection#add:member(1)'
      - 'excel!Excel.TableCollection#context:member'
      - 'excel!Excel.TableCollection#count:member'
      - 'excel!Excel.TableCollection#getCount:member(1)'
      - 'excel!Excel.TableCollection#getItem:member(1)'
      - 'excel!Excel.TableCollection#getItemAt:member(1)'
      - 'excel!Excel.TableCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.TableCollection#items:member'
      - 'excel!Excel.TableCollection#load:member(1)'
      - 'excel!Excel.TableCollection#load:member(2)'
      - 'excel!Excel.TableCollection#load:member(3)'
      - 'excel!Excel.TableCollection#onChanged:member'
      - 'excel!Excel.TableCollection#toJSON:member(1)'
  - uid: 'excel!Excel.TableCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="bc58f-p101">新建表。范围对象或源地址决定了在哪个工作表下添加表。如果无法添加表（例如，由于地址无效，或者表与另一个表重叠），则会引发错误。</span><span class="sxs-lookup"><span data-stu-id="bc58f-p101">Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.</span></span>

      <span data-ttu-id="bc58f-106">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc58f-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(address, hasHeaders)'
    fullName: 'add(address, hasHeaders)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(address: Range | string, hasHeaders: boolean): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bc58f-107">示例</span><span class="sxs-lookup"><span data-stu-id="bc58f-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.add('Sheet1!A1:E7', true);
              table.load('name');
              return ctx.sync().then(function() {
                  console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="bc58f-108">Range 对象或表示数据源的区域的字符串地址或名称。</span><span class="sxs-lookup"><span data-stu-id="bc58f-108">A Range object, or a string address or name of the range representing the data source.</span></span> <span data-ttu-id="bc58f-109">如果地址不包含工作表名称，将使用当前活动的工作表。</span><span class="sxs-lookup"><span data-stu-id="bc58f-109">If the address does not contain a sheet name, the currently-active sheet is used.</span></span> <span data-ttu-id="bc58f-110">\[Api 集： ExcelApi 1.1/1.3。</span><span class="sxs-lookup"><span data-stu-id="bc58f-110">\[Api set: ExcelApi 1.1 / 1.3.</span></span> <span data-ttu-id="bc58f-111">在 ExcelApi 1.3 之前，此参数必须是字符串。</span><span class="sxs-lookup"><span data-stu-id="bc58f-111">Prior to ExcelApi 1.3, this parameter must be a string.</span></span> <span data-ttu-id="bc58f-112">从 Excel Api 1.3 开始，此参数可以是一个 Range 对象或一个字符串。\]</span><span class="sxs-lookup"><span data-stu-id="bc58f-112">Starting with Excel Api 1.3, this parameter may be a Range object or a string.\]</span></span>'
          type:
            - 'excel!Excel.TableCollection#add~0:complex'
        - id: hasHeaders
          description: '<span data-ttu-id="bc58f-p103">指示导入的数据是否具有列标签的布尔值。如果源不包含标头（即，当此属性设置为 false 时），Excel 将自动生成标头，数据将向下移动一行。</span><span class="sxs-lookup"><span data-stu-id="bc58f-p103">Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.</span></span>'
          type:
            - boolean
  - uid: 'excel!Excel.TableCollection#context:member'
    summary: <span data-ttu-id="bc58f-116">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="bc58f-116">The request context associated with the object.</span></span> <span data-ttu-id="bc58f-117">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="bc58f-117">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableCollection#count:member'
    summary: |-
      <span data-ttu-id="bc58f-118">返回工作簿中的表数目。</span><span class="sxs-lookup"><span data-stu-id="bc58f-118">Returns the number of tables in the workbook.</span></span> <span data-ttu-id="bc58f-119">只读。</span><span class="sxs-lookup"><span data-stu-id="bc58f-119">Read-only.</span></span>

      <span data-ttu-id="bc58f-120">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc58f-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="bc58f-121">获取集合中的表数量。</span><span class="sxs-lookup"><span data-stu-id="bc58f-121">Gets the number of tables in the collection.</span></span>

      <span data-ttu-id="bc58f-122">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc58f-122">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="bc58f-123">按名称或 ID 获取表。</span><span class="sxs-lookup"><span data-stu-id="bc58f-123">Gets a table by Name or ID.</span></span>

      <span data-ttu-id="bc58f-124">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc58f-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bc58f-125">示例</span><span class="sxs-lookup"><span data-stu-id="bc58f-125">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="bc58f-126">要检索的表的名称或 ID。</span><span class="sxs-lookup"><span data-stu-id="bc58f-126">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.TableCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="bc58f-127">根据其在集合中的位置获取表。</span><span class="sxs-lookup"><span data-stu-id="bc58f-127">Gets a table based on its position in the collection.</span></span>

      <span data-ttu-id="bc58f-128">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc58f-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bc58f-129">示例</span><span class="sxs-lookup"><span data-stu-id="bc58f-129">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="bc58f-130">要检索的对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="bc58f-130">Index value of the object to be retrieved.</span></span> <span data-ttu-id="bc58f-131">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="bc58f-131">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.TableCollection#getItemOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="bc58f-132">按名称或 ID 获取表。</span><span class="sxs-lookup"><span data-stu-id="bc58f-132">Gets a table by Name or ID.</span></span> <span data-ttu-id="bc58f-133">如果没有表，将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="bc58f-133">If the table does not exist, will return a null object.</span></span>

      <span data-ttu-id="bc58f-134">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc58f-134">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="bc58f-135">要检索的表的名称或 ID。</span><span class="sxs-lookup"><span data-stu-id="bc58f-135">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.TableCollection#items:member'
    summary: <span data-ttu-id="bc58f-136">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="bc58f-136">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Table[];'
      return:
        type:
          - 'excel!Excel.TableCollection#items~0:complex'
  - uid: 'excel!Excel.TableCollection#load:member(1)'
    summary: <span data-ttu-id="bc58f-137">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bc58f-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bc58f-138">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="bc58f-138">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="bc58f-139">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="bc58f-139">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="bc58f-140">`load(option?: string | string[]): Excel.TableCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="bc58f-140">`load(option?: string | string[]): Excel.TableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="bc58f-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="bc58f-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="bc58f-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="bc58f-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection` - Only available on collection types.</span></span> <span data-ttu-id="bc58f-143">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="bc58f-143">It is similar to the preceding signature.</span></span> <span data-ttu-id="bc58f-144">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="bc58f-144">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="bc58f-145">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="bc58f-145">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="bc58f-146">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="bc58f-146">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.TableCollection#load~0:complex'
  - uid: 'excel!Excel.TableCollection#load:member(2)'
    summary: <span data-ttu-id="bc58f-147">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bc58f-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bc58f-148">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="bc58f-148">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bc58f-149">示例</span><span class="sxs-lookup"><span data-stu-id="bc58f-149">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              tables.load();
              return ctx.sync().then(function() {
                  console.log("tables Count: " + tables.count);
                  for (var i = 0; i < tables.items.length; i++)
                  {
                      console.log(tables.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of tables
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              tables.load('count');
              return ctx.sync().then(function() {
                  console.log(tables.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="bc58f-150">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="bc58f-150">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableCollection;'
      return:
        type:
          - 'excel!Excel.TableCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.TableCollection#onChanged:member'
    summary: |-
      <span data-ttu-id="bc58f-151">当工作簿中的任何表或工作表上的数据发生更改时发生。</span><span class="sxs-lookup"><span data-stu-id="bc58f-151">Occurs when data changes on any table in a workbook, or a worksheet.</span></span>

      <span data-ttu-id="bc58f-152">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bc58f-152">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.TableCollection#onChanged~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bc58f-153">示例</span><span class="sxs-lookup"><span data-stu-id="bc58f-153">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let tables = context.workbook.tables;
              tables.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the table collection onChanged event");
          });
          ```
  - uid: 'excel!Excel.TableCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="bc58f-154">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="bc58f-154">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="bc58f-155">.</span><span class="sxs-lookup"><span data-stu-id="bc58f-155"></span></span> <span data-ttu-id="bc58f-156">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="bc58f-156"></span></span><!-- --><span data-ttu-id="bc58f-157">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.TableCollection`对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.TableCollectionData`</span><span class="sxs-lookup"><span data-stu-id="bc58f-157">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableCollectionData`</span></span><!-- --><span data-ttu-id="bc58f-158">），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="bc58f-158">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.TableCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.TableCollection#items~0:complex'
    name: 'Excel.Table[]'
    fullName: 'Excel.Table[]'
    spec.typeScript:
      - uid: 'excel!Excel.Table:class'
        name: Excel.Table
        fullName: Excel.Table
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableCollection:class'
    name: Excel.TableCollection
  - uid: 'excel!Excel.TableCollection#load~0:complex'
    name: Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.TableCollectionLoadOptions:interface'
        name: Excel.Interfaces.TableCollectionLoadOptions
        fullName: Excel.Interfaces.TableCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.TableCollection#onChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.TableChangedEventArgs:interface'
        name: Excel.TableChangedEventArgs
        fullName: Excel.TableChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.TableCollectionData:interface'
    name: Excel.Interfaces.TableCollectionData