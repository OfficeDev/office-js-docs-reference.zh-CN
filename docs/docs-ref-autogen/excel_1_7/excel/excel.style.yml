### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Style
    summary: |-
      一个封装样式的格式和其他属性的对象。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Style
    fullName: Excel.Style
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Style.borders
      - excel.Excel.Style.builtIn
      - excel.Excel.Style.context
      - excel.Excel.Style.delete
      - excel.Excel.Style.fill
      - excel.Excel.Style.font
      - excel.Excel.Style.formulaHidden
      - excel.Excel.Style.horizontalAlignment
      - excel.Excel.Style.includeAlignment
      - excel.Excel.Style.includeBorder
      - excel.Excel.Style.includeFont
      - excel.Excel.Style.includeNumber
      - excel.Excel.Style.includePatterns
      - excel.Excel.Style.includeProtection
      - excel.Excel.Style.indentLevel
      - excel.Excel.Style.load
      - excel.Excel.Style.load_1
      - excel.Excel.Style.load_2
      - excel.Excel.Style.locked
      - excel.Excel.Style.name
      - excel.Excel.Style.numberFormat
      - excel.Excel.Style.numberFormatLocal
      - excel.Excel.Style.readingOrder
      - excel.Excel.Style.set
      - excel.Excel.Style.set_1
      - excel.Excel.Style.shrinkToFit
      - excel.Excel.Style.toJSON
      - excel.Excel.Style.verticalAlignment
      - excel.Excel.Style.wrapText
  - uid: excel.Excel.Style.borders
    summary: |-
      四个 Border 对象的 Border 集合，表示四个边框的样式。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: borders
    fullName: borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
  - uid: excel.Excel.Style.builtIn
    summary: |-
      指示样式是否为内置样式。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly builtIn: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.context
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Style.delete
    summary: |-
      删除此样式。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              let style = context.workbook.styles.getItem("Diagonal Orientation Style");

              // Delete the diagonal orientation style from the style collection.
              // Styles are in the Home tab ribbon.
              style.delete();

              await context.sync();

              console.log("Successfully deleted the diagonal orientation style from the Home tab ribbon.");
          });
          ```
  - uid: excel.Excel.Style.fill
    summary: |-
      样式的填充。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.RangeFill;'
      return:
        type:
          - excel.Excel.RangeFill
  - uid: excel.Excel.Style.font
    summary: |-
      该 Font 对象表示样式的字体。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              let style = context.workbook.styles.getItem("Normal");
              style.font.load("bold, color, italic, name, size");
              style.fill.load("color");

              await context.sync();

              console.log("Bold: " + style.font.bold);
              console.log("Font color: " + style.font.color);
              console.log("Italic: " + style.font.italic);
              console.log("Name: " + style.font.name);
              console.log("Size: " + style.font.size);
              console.log("Fill color: " + style.fill.color);
          });
          ```
  - uid: excel.Excel.Style.formulaHidden
    summary: |-
      指示工作表受保护时是否隐藏公式。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: formulaHidden
    fullName: formulaHidden
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaHidden: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.horizontalAlignment
    summary: |-
      表示样式水平对齐。 有关详细信息, 请参阅 HorizontalAlignment。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: horizontalAlignment
    fullName: horizontalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
      return:
        type:
          - Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              let worksheet = context.workbook.worksheets.getItem("Sample");
              let range = worksheet.getRange("A1:E1");

              // Apply built-in style. 
              // Styles are in the Home tab ribbon.
              range.style = Excel.BuiltInStyle.neutral;
              range.format.horizontalAlignment = "Right";

              await context.sync();
          });
          ```
  - uid: excel.Excel.Style.includeAlignment
    summary: |-
      指示样式是否包含 AutoIndent、HorizontalAlignment、VerticalAlignment、WrapText、IndentLevel 和 TextOrientation 属性。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: includeAlignment
    fullName: includeAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeAlignment: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includeBorder
    summary: |-
      指示样式是否包含 Color、ColorIndex、LineStyle 和 Weight 边框属性。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: includeBorder
    fullName: includeBorder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeBorder: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includeFont
    summary: |-
      指示样式是否包含 Background、Bold、Color、ColorIndex、FontStyle、Italic、Name、Size、Strikethrough、Subscrip、Superscript 和 Underline 字体属性。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: includeFont
    fullName: includeFont
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeFont: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includeNumber
    summary: |-
      指示样式是否包含 NumberFormat 属性。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: includeNumber
    fullName: includeNumber
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeNumber: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includePatterns
    summary: |-
      指示样式是否包含 Color、ColorIndex、InvertIfNegative、Pattern、PatternColor 和 PatternColorIndex 内部属性。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: includePatterns
    fullName: includePatterns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includePatterns: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.includeProtection
    summary: |-
      指示样式是否包含 FormulaHidden 和 Locked 保护属性。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: includeProtection
    fullName: includeProtection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'includeProtection: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.indentLevel
    summary: |-
      0 到 250 之间的一个整数，指示样式的缩进水平。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: indentLevel
    fullName: indentLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'indentLevel: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Style.load
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
    remarks: |-
      除了此签名之外, 此方法还具有以下签名:

      `load(option?: string | string[]): Excel.Style`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。

      `load(option?: { select?: string; expand?: string; }): Excel.Style`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Style`-仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。

      #### <a name="examples"></a>示例

      ```typescript
      await Excel.run(async (context) => {
          let style = context.workbook.styles.getItem("Diagonal Orientation Style");            
          style.load("textOrientation, horizontalAlignment, autoIndent, readingOrder, wrapText, includeProtection, shrinkToFit, locked");

          await context.sync();

          console.log("Orientation: " + style.textOrientation);
          console.log("Horizontal alignment: " + style.horizontalAlignment);
          console.log("Add indent: " + style.autoIndent);
          console.log("Reading order: " + style.readingOrder);
          console.log("Wrap text: " + style.wrapText);
          console.log("Include protection: " + style.includeProtection);
          console.log("Shrink to fit: " + style.shrinkToFit);
          console.log("Style locked: " + style.locked);
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.StyleLoadOptions): Excel.Style;'
      return:
        type:
          - excel.Excel.Style
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.StyleLoadOptions
  - uid: excel.Excel.Style.load_1
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Style;'
      return:
        type:
          - excel.Excel.Style
        description: ''
      parameters:
        - id: propertyNames
          description: '一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Style.load_2
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Style;'
      return:
        type:
          - excel.Excel.Style
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Style.locked
    summary: |-
      指示工作表受保护时是否锁定对象。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: locked
    fullName: locked
    langs:
      - typeScript
    type: property
    syntax:
      content: 'locked: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.name
    summary: |-
      样式的名称。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Style.numberFormat
    summary: |-
      样式中数字格式的格式代码。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Style.numberFormatLocal
    summary: |-
      样式中数字格式的本地化格式代码。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: numberFormatLocal
    fullName: numberFormatLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormatLocal: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Style.readingOrder
    summary: |-
      样式中的阅读顺序。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: readingOrder
    fullName: readingOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readingOrder: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
  - uid: excel.Excel.Style.set
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名:

      `set(properties: Excel.Style): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.StyleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。'
          type:
            - Interfaces.StyleUpdateData
        - id: options
          description: '提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Style.set_1
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Style): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Style
  - uid: excel.Excel.Style.shrinkToFit
    summary: |-
      指示文本是否自动缩小以适合可用列宽。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: shrinkToFit
    fullName: shrinkToFit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shrinkToFit: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Style.toJSON
    summary: '重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel 样式对象是一个 API 对象, 但该`toJSON`方法返回一个简单的 JavaScript 对象 (类型为`Excel.Interfaces.StyleData`<!-- -->), 其中包含原始对象中所有已加载的子属性的浅表副本。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleData;'
      return:
        type:
          - excel.Excel.Interfaces.StyleData
        description: ''
  - uid: excel.Excel.Style.verticalAlignment
    summary: |-
      表示样式的垂直对齐方式。 有关详细信息, 请参阅 VerticalAlignment。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: verticalAlignment
    fullName: verticalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
      return:
        type:
          - Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
  - uid: excel.Excel.Style.wrapText
    summary: |-
      指示 Microsoft Excel 是否将对象中的文本换行。

      \[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: wrapText
    fullName: wrapText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapText: boolean;'
      return:
        type:
          - boolean