### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartLineFormat:class'
    summary: |-
      <span data-ttu-id="cc362-101">封装线条元素的格式设置选项。</span><span class="sxs-lookup"><span data-stu-id="cc362-101">Encapsulates the formatting options for line elements.</span></span>

      <span data-ttu-id="cc362-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc362-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartLineFormat
    fullName: Excel.ChartLineFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartLineFormat#clear:member(1)'
      - 'excel!Excel.ChartLineFormat#color:member'
      - 'excel!Excel.ChartLineFormat#context:member'
      - 'excel!Excel.ChartLineFormat#load:member(1)'
      - 'excel!Excel.ChartLineFormat#load:member(2)'
      - 'excel!Excel.ChartLineFormat#load:member(3)'
      - 'excel!Excel.ChartLineFormat#set:member(1)'
      - 'excel!Excel.ChartLineFormat#set:member(2)'
      - 'excel!Excel.ChartLineFormat#toJSON:member(1)'
  - uid: 'excel!Excel.ChartLineFormat#clear:member(1)'
    summary: |-
      <span data-ttu-id="cc362-103">清除图表元素的线条格式。</span><span class="sxs-lookup"><span data-stu-id="cc362-103">Clear the line format of a chart element.</span></span>

      <span data-ttu-id="cc362-104">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc362-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cc362-105">示例</span><span class="sxs-lookup"><span data-stu-id="cc362-105">Examples</span></span>

          ```javascript
          // Set to show legend of Chart1 and make it on top of the chart.
          Excel.run(function (ctx) { 
              var gridlines = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;
              gridlines.format.line.clear();
              return ctx.sync().then(function() {
                      console.log("Chart Major Gridlines Format Cleared");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.ChartLineFormat#color:member'
    summary: |-
      <span data-ttu-id="cc362-106">表示图表中的线条颜色的 HTML 颜色代码。</span><span class="sxs-lookup"><span data-stu-id="cc362-106">HTML color code representing the color of lines in the chart.</span></span>

      <span data-ttu-id="cc362-107">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc362-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartLineFormat#context:member'
    summary: <span data-ttu-id="cc362-108">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="cc362-108">The request context associated with the object.</span></span> <span data-ttu-id="cc362-109">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="cc362-109">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartLineFormat#load:member(1)'
    summary: <span data-ttu-id="cc362-110">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="cc362-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cc362-111">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="cc362-111">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartLineFormatLoadOptions): Excel.ChartLineFormat;'
      return:
        type:
          - 'excel!Excel.ChartLineFormat:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="cc362-112">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="cc362-112">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartLineFormatLoadOptions:interface'
  - uid: 'excel!Excel.ChartLineFormat#load:member(2)'
    summary: <span data-ttu-id="cc362-113">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="cc362-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cc362-114">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="cc362-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartLineFormat;'
      return:
        type:
          - 'excel!Excel.ChartLineFormat:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cc362-115">示例</span><span class="sxs-lookup"><span data-stu-id="cc362-115">Examples</span></span>

          ```javascript
          // Set chart major gridlines on value axis to be red.
          Excel.run(function (ctx) {
              var gridlines = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").axes.valueAxis.majorGridlines;
              gridlines.format.line.color = "#FF0000";
              return ctx.sync().then(function () {
                  console.log("Chart Gridlines Color Updated");
              });
          }).catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="cc362-116">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="cc362-116">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartLineFormat#load:member(3)'
    summary: <span data-ttu-id="cc362-117">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="cc362-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cc362-118">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="cc362-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartLineFormat;
      return:
        type:
          - 'excel!Excel.ChartLineFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="cc362-119">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="cc362-119">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ChartLineFormat#set:member(1)'
    summary: '<span data-ttu-id="cc362-120">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="cc362-120">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="cc362-121">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="cc362-121">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="cc362-122">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="cc362-122">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartLineFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartLineFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="cc362-123">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="cc362-123">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartLineFormatUpdateData:interface'
        - id: options
          description: <span data-ttu-id="cc362-124">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="cc362-124">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartLineFormat#set:member(2)'
    summary: '<span data-ttu-id="cc362-125">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="cc362-125">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartLineFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartLineFormat:class'
  - uid: 'excel!Excel.ChartLineFormat#toJSON:member(1)'
    summary: '<span data-ttu-id="cc362-126">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="cc362-126">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="cc362-127">.</span><span class="sxs-lookup"><span data-stu-id="cc362-127"></span></span> <span data-ttu-id="cc362-128">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="cc362-128"></span></span><!-- --><span data-ttu-id="cc362-129">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 ChartLineFormat 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.ChartLineFormatData`</span><span class="sxs-lookup"><span data-stu-id="cc362-129">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartLineFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartLineFormatData`</span></span><!-- --><span data-ttu-id="cc362-130">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="cc362-130">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartLineFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartLineFormatData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartLineFormat:class'
    name: Excel.ChartLineFormat
  - uid: 'excel!Excel.Interfaces.ChartLineFormatLoadOptions:interface'
    name: Excel.Interfaces.ChartLineFormatLoadOptions
  - uid: 'excel!Excel.Interfaces.ChartLineFormatUpdateData:interface'
    name: Interfaces.ChartLineFormatUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ChartLineFormatData:interface'
    name: Excel.Interfaces.ChartLineFormatData