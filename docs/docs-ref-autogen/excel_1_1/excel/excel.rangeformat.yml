### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeFormat
    summary: |-
      <span data-ttu-id="745e9-101">一个格式对象，其中封装了区域的字体、填充、边框、对齐方式和其他属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-101">A format object encapsulating the range's font, fill, borders, alignment, and other properties.</span></span>

      <span data-ttu-id="745e9-102">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="745e9-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RangeFormat
    fullName: Excel.RangeFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.RangeFormat.borders
      - excel.Excel.RangeFormat.context
      - excel.Excel.RangeFormat.fill
      - excel.Excel.RangeFormat.font
      - excel.Excel.RangeFormat.horizontalAlignment
      - excel.Excel.RangeFormat.load
      - excel.Excel.RangeFormat.load_1
      - excel.Excel.RangeFormat.load_2
      - excel.Excel.RangeFormat.set
      - excel.Excel.RangeFormat.set_1
      - excel.Excel.RangeFormat.toJSON
      - excel.Excel.RangeFormat.verticalAlignment
      - excel.Excel.RangeFormat.wrapText
  - uid: excel.Excel.RangeFormat.borders
    summary: |-
      <span data-ttu-id="745e9-103">应用于整个区域的 Border 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="745e9-103">Collection of border objects that apply to the overall range.</span></span> <span data-ttu-id="745e9-104">只读。</span><span class="sxs-lookup"><span data-stu-id="745e9-104">Read-only.</span></span>

      <span data-ttu-id="745e9-105">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="745e9-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: borders
    fullName: borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
  - uid: excel.Excel.RangeFormat.context
    summary: <span data-ttu-id="745e9-106">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="745e9-106">The request context associated with the object.</span></span> <span data-ttu-id="745e9-107">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="745e9-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.RangeFormat.fill
    summary: |-
      <span data-ttu-id="745e9-108">返回在整个区域内定义的 fill 对象。</span><span class="sxs-lookup"><span data-stu-id="745e9-108">Returns the fill object defined on the overall range.</span></span> <span data-ttu-id="745e9-109">只读。</span><span class="sxs-lookup"><span data-stu-id="745e9-109">Read-only.</span></span>

      <span data-ttu-id="745e9-110">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="745e9-110">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.RangeFill;'
      return:
        type:
          - excel.Excel.RangeFill
  - uid: excel.Excel.RangeFormat.font
    summary: |-
      <span data-ttu-id="745e9-111">返回在整个区域内定义的 Font 对象。</span><span class="sxs-lookup"><span data-stu-id="745e9-111">Returns the font object defined on the overall range.</span></span> <span data-ttu-id="745e9-112">只读。</span><span class="sxs-lookup"><span data-stu-id="745e9-112">Read-only.</span></span>

      <span data-ttu-id="745e9-113">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="745e9-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
  - uid: excel.Excel.RangeFormat.horizontalAlignment
    summary: |-
      <span data-ttu-id="745e9-114">表示指定对象的水平对齐方式。</span><span class="sxs-lookup"><span data-stu-id="745e9-114">Represents the horizontal alignment for the specified object.</span></span> <span data-ttu-id="745e9-115">有关详细信息, 请参阅 HorizontalAlignment。</span><span class="sxs-lookup"><span data-stu-id="745e9-115">See Excel.HorizontalAlignment for details.</span></span>

      <span data-ttu-id="745e9-116">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="745e9-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: horizontalAlignment
    fullName: horizontalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
      return:
        type:
          - Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
  - uid: excel.Excel.RangeFormat.load
    summary: <span data-ttu-id="745e9-117">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="745e9-118">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="745e9-118">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="745e9-119">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="745e9-119">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="745e9-120">`load(option?: string | string[]): Excel.RangeFormat`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-120">`load(option?: string | string[]): Excel.RangeFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="745e9-121">`load(option?: { select?: string; expand?: string; }): Excel.RangeFormat`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-121">`load(option?: { select?: string; expand?: string; }): Excel.RangeFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="745e9-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFormat`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="745e9-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFormat` - Only available on collection types.</span></span> <span data-ttu-id="745e9-123">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="745e9-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="745e9-124">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="745e9-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="745e9-125">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="745e9-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="745e9-126">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="745e9-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeFormatLoadOptions): Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeFormatLoadOptions
  - uid: excel.Excel.RangeFormat.load_1
    summary: '<span data-ttu-id="745e9-127">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="745e9-128">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="745e9-128">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="745e9-129">示例</span><span class="sxs-lookup"><span data-stu-id="745e9-129">Examples</span></span>

          ```javascript
          // Below example selects all of the Range's format properties. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load(["format/*", "format/fill", "format/borders", "format/font"]);
              return ctx.sync().then(function() {
                  console.log(range.format.wrapText);
                  console.log(range.format.fill.color);
                  console.log(range.format.font.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below sets font name, fill color and wraps text. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.wrapText = true;
              range.format.font.name = 'Times New Roman';
              range.format.fill.color = '0000FF';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="745e9-130">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeFormat.load_2
    summary: '<span data-ttu-id="745e9-131">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="745e9-132">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="745e9-132">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="745e9-133">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.RangeFormat.set
    summary: '<span data-ttu-id="745e9-134">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="745e9-135">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="745e9-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="745e9-136">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="745e9-136">This method has the following additional signature:</span></span>

      `set(properties: Excel.RangeFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="745e9-137">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.RangeFormatUpdateData
        - id: options
          description: '<span data-ttu-id="745e9-138">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="745e9-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.RangeFormat.set_1
    summary: '<span data-ttu-id="745e9-139">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="745e9-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.RangeFormat
  - uid: excel.Excel.RangeFormat.toJSON
    summary: '<span data-ttu-id="745e9-140">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="745e9-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="745e9-141">.</span><span class="sxs-lookup"><span data-stu-id="745e9-141"></span></span> <span data-ttu-id="745e9-142">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="745e9-142"></span></span><!-- --><span data-ttu-id="745e9-143">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 RangeFormat 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.RangeFormatData`</span><span class="sxs-lookup"><span data-stu-id="745e9-143">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFormatData`</span></span><!-- --><span data-ttu-id="745e9-144">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="745e9-144">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeFormatData
        description: ''
  - uid: excel.Excel.RangeFormat.verticalAlignment
    summary: |-
      <span data-ttu-id="745e9-145">表示指定对象的垂直对齐方式。</span><span class="sxs-lookup"><span data-stu-id="745e9-145">Represents the vertical alignment for the specified object.</span></span> <span data-ttu-id="745e9-146">有关详细信息, 请参阅 VerticalAlignment。</span><span class="sxs-lookup"><span data-stu-id="745e9-146">See Excel.VerticalAlignment for details.</span></span>

      <span data-ttu-id="745e9-147">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="745e9-147">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: verticalAlignment
    fullName: verticalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
      return:
        type:
          - Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
  - uid: excel.Excel.RangeFormat.wrapText
    summary: |-
      <span data-ttu-id="745e9-148">指示 Excel 是否将对象中的文本换行。</span><span class="sxs-lookup"><span data-stu-id="745e9-148">Indicates if Excel wraps the text in the object.</span></span> <span data-ttu-id="745e9-149">指示整个区域不具有统一换行设置的空值</span><span class="sxs-lookup"><span data-stu-id="745e9-149">A null value indicates that the entire range doesn't have uniform wrap setting</span></span>

      <span data-ttu-id="745e9-150">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="745e9-150">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: wrapText
    fullName: wrapText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapText: boolean;'
      return:
        type:
          - boolean