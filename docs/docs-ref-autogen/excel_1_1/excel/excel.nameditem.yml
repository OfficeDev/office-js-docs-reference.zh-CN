### YamlMime:UniversalReference
items:
  - uid: excel.Excel.NamedItem
    summary: |-
      <span data-ttu-id="6581f-101">表示单元格区域或值的定义名称。</span><span class="sxs-lookup"><span data-stu-id="6581f-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="6581f-102">名称可以是命名为对象的基元 (如下面的类型中所示)、range 对象或对区域的引用。</span><span class="sxs-lookup"><span data-stu-id="6581f-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="6581f-103">此对象可用于获取与名称相关的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="6581f-103">This object can be used to obtain range object associated with names.</span></span>

      <span data-ttu-id="6581f-104">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6581f-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItem
    fullName: Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.NamedItem.context
      - excel.Excel.NamedItem.getRange
      - excel.Excel.NamedItem.load
      - excel.Excel.NamedItem.load_1
      - excel.Excel.NamedItem.load_2
      - excel.Excel.NamedItem.name
      - excel.Excel.NamedItem.set
      - excel.Excel.NamedItem.set_1
      - excel.Excel.NamedItem.toJSON
      - excel.Excel.NamedItem.type
      - excel.Excel.NamedItem.value
      - excel.Excel.NamedItem.visible
  - uid: excel.Excel.NamedItem.context
    summary: <span data-ttu-id="6581f-105">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="6581f-105">The request context associated with the object.</span></span> <span data-ttu-id="6581f-106">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="6581f-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.NamedItem.getRange
    summary: |-
      <span data-ttu-id="6581f-107">返回与名称相关联的 Range 对象。</span><span class="sxs-lookup"><span data-stu-id="6581f-107">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="6581f-108">如果已命名项的类型不是 Range，将引发错误。</span><span class="sxs-lookup"><span data-stu-id="6581f-108">Throws an error if the named item's type is not a range.</span></span>

      <span data-ttu-id="6581f-109">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6581f-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6581f-110">示例</span><span class="sxs-lookup"><span data-stu-id="6581f-110">Examples</span></span>

          ```javascript
          // Returns the Range object that is associated with the name. 
          // null if the name is not of the type Range.
          // Note: This API currently supports only the Workbook scoped items.
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var range = names.getItem('MyRange').getRange();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.NamedItem.load
    summary: <span data-ttu-id="6581f-111">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6581f-112">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="6581f-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="6581f-113">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="6581f-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="6581f-114">`load(option?: string | string[]): Excel.NamedItem`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-114">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="6581f-115">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-115">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="6581f-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="6581f-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="6581f-117">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="6581f-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="6581f-118">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="6581f-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6581f-119">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="6581f-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6581f-120">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="6581f-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.NamedItemLoadOptions
  - uid: excel.Excel.NamedItem.load_1
    summary: '<span data-ttu-id="6581f-121">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6581f-122">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="6581f-122">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6581f-123">示例</span><span class="sxs-lookup"><span data-stu-id="6581f-123">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var namedItem = names.getItem('MyRange');
              namedItem.load('type');
              return ctx.sync().then(function() {
                      console.log(namedItem.type);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="6581f-124">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.NamedItem.load_2
    summary: '<span data-ttu-id="6581f-125">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6581f-126">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="6581f-126">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6581f-127">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.NamedItem.name
    summary: |-
      <span data-ttu-id="6581f-128">对象的名称。</span><span class="sxs-lookup"><span data-stu-id="6581f-128">The name of the object.</span></span> <span data-ttu-id="6581f-129">只读。</span><span class="sxs-lookup"><span data-stu-id="6581f-129">Read-only.</span></span>

      <span data-ttu-id="6581f-130">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6581f-130">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.NamedItem.set
    summary: '<span data-ttu-id="6581f-131">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-131">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6581f-132">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="6581f-132">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="6581f-133">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="6581f-133">This method has the following additional signature:</span></span>

      `set(properties: Excel.NamedItem): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="6581f-134">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-134">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.NamedItemUpdateData
        - id: options
          description: '<span data-ttu-id="6581f-135">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="6581f-135">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.NamedItem.set_1
    summary: '<span data-ttu-id="6581f-136">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="6581f-136">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.NamedItem
  - uid: excel.Excel.NamedItem.toJSON
    summary: '<span data-ttu-id="6581f-137">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6581f-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6581f-138">.</span><span class="sxs-lookup"><span data-stu-id="6581f-138"></span></span> <span data-ttu-id="6581f-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6581f-139"></span></span><!-- --><span data-ttu-id="6581f-140">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 NamedItem 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.NamedItemData`</span><span class="sxs-lookup"><span data-stu-id="6581f-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`</span></span><!-- --><span data-ttu-id="6581f-141">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="6581f-141">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type:
          - excel.Excel.Interfaces.NamedItemData
        description: ''
  - uid: excel.Excel.NamedItem.type
    summary: |-
      <span data-ttu-id="6581f-142">指明 name 公式返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="6581f-142">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="6581f-143">有关详细信息, 请参阅 NamedItemType。</span><span class="sxs-lookup"><span data-stu-id="6581f-143">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="6581f-144">只读。</span><span class="sxs-lookup"><span data-stu-id="6581f-144">Read-only.</span></span>

      <span data-ttu-id="6581f-145">\[[API 集: 字符串、整型、双精度、布尔值、范围、错误的 ExcelApi 1.1、数组的 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6581f-145">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type:
          - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
  - uid: excel.Excel.NamedItem.value
    summary: |-
      <span data-ttu-id="6581f-146">表示 name 公式计算出的值。</span><span class="sxs-lookup"><span data-stu-id="6581f-146">Represents the value computed by the name's formula.</span></span> <span data-ttu-id="6581f-147">对于已命名区域，将返回区域地址。</span><span class="sxs-lookup"><span data-stu-id="6581f-147">For a named range, will return the range address.</span></span> <span data-ttu-id="6581f-148">只读。</span><span class="sxs-lookup"><span data-stu-id="6581f-148">Read-only.</span></span>

      <span data-ttu-id="6581f-149">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6581f-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: excel.Excel.NamedItem.visible
    summary: |-
      <span data-ttu-id="6581f-150">指定对象是否可见。</span><span class="sxs-lookup"><span data-stu-id="6581f-150">Specifies whether the object is visible or not.</span></span>

      <span data-ttu-id="6581f-151">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6581f-151">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean