### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PivotTableCollection
    summary: |-
      <span data-ttu-id="be833-101">表示属于工作簿或工作表的所有 PivotTable 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="be833-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>

      <span data-ttu-id="be833-102">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be833-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.PivotTableCollection.context
      - excel.Excel.PivotTableCollection.getCount
      - excel.Excel.PivotTableCollection.getItem
      - excel.Excel.PivotTableCollection.getItemOrNullObject
      - excel.Excel.PivotTableCollection.items
      - excel.Excel.PivotTableCollection.load
      - excel.Excel.PivotTableCollection.load_1
      - excel.Excel.PivotTableCollection.load_2
      - excel.Excel.PivotTableCollection.refreshAll
      - excel.Excel.PivotTableCollection.toJSON
  - uid: excel.Excel.PivotTableCollection.context
    summary: <span data-ttu-id="be833-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="be833-103">The request context associated with the object.</span></span> <span data-ttu-id="be833-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="be833-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.PivotTableCollection.getCount
    summary: |-
      <span data-ttu-id="be833-105">获取集合中的数据透视表的数量。</span><span class="sxs-lookup"><span data-stu-id="be833-105">Gets the number of pivot tables in the collection.</span></span>

      <span data-ttu-id="be833-106">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be833-106">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.PivotTableCollection.getItem
    summary: |-
      <span data-ttu-id="be833-107">按名称获取 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="be833-107">Gets a PivotTable by name.</span></span>

      <span data-ttu-id="be833-108">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be833-108">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="be833-109">要检索的数据透视表的名称。</span><span class="sxs-lookup"><span data-stu-id="be833-109">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.PivotTableCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="be833-110">按 PivotTable 对象的名称获取此对象。</span><span class="sxs-lookup"><span data-stu-id="be833-110">Gets a PivotTable by name.</span></span> <span data-ttu-id="be833-111">如果没有 PivotTable 对象，将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="be833-111">If the PivotTable does not exist, will return a null object.</span></span>

      <span data-ttu-id="be833-112">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be833-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="be833-113">要检索的数据透视表的名称。</span><span class="sxs-lookup"><span data-stu-id="be833-113">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.PivotTableCollection.items
    summary: <span data-ttu-id="be833-114">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="be833-114">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'Excel.PivotTable[]'
  - uid: excel.Excel.PivotTableCollection.load
    summary: <span data-ttu-id="be833-115">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="be833-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be833-116">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="be833-116">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="be833-117">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="be833-117">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="be833-118">`load(option?: string | string[]): Excel.PivotTableCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="be833-118">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="be833-119">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="be833-119">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="be833-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="be833-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="be833-121">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="be833-121">It is similar to the preceding signature.</span></span> <span data-ttu-id="be833-122">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="be833-122">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="be833-123">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="be833-123">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="be833-124">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="be833-124">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.PivotTableCollection.load_1
    summary: '<span data-ttu-id="be833-125">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="be833-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be833-126">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="be833-126">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="be833-127">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="be833-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.PivotTableCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.PivotTableCollection.refreshAll
    summary: |-
      <span data-ttu-id="be833-128">刷新集合中的所有数据透视表。</span><span class="sxs-lookup"><span data-stu-id="be833-128">Refreshes all the pivot tables in the collection.</span></span>

      <span data-ttu-id="be833-129">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be833-129">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.PivotTableCollection.toJSON
    summary: '<span data-ttu-id="be833-130">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="be833-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="be833-131">.</span><span class="sxs-lookup"><span data-stu-id="be833-131"></span></span> <span data-ttu-id="be833-132">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="be833-132"></span></span><!-- --><span data-ttu-id="be833-133">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.PivotTableCollection`对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.PivotTableCollectionData`</span><span class="sxs-lookup"><span data-stu-id="be833-133">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`</span></span><!-- --><span data-ttu-id="be833-134">), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="be833-134">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotTableCollectionData
        description: ''