### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SettingCollection
    summary: |-
      <span data-ttu-id="70274-101">表示作为工作簿一部分的键值对设置对象的集合。</span><span class="sxs-lookup"><span data-stu-id="70274-101">Represents a collection of key-value pair setting objects that are part of the workbook.</span></span> <span data-ttu-id="70274-102">作用域限制为每个文件和加载项 (任务窗格或内容) 组合。</span><span class="sxs-lookup"><span data-stu-id="70274-102">The scope is limited to per file and add-in (task-pane or content) combination.</span></span>

      <span data-ttu-id="70274-103">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70274-103">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.SettingCollection
    fullName: Excel.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.SettingCollection.add
      - excel.Excel.SettingCollection.context
      - excel.Excel.SettingCollection.getCount
      - excel.Excel.SettingCollection.getItem
      - excel.Excel.SettingCollection.getItemOrNullObject
      - excel.Excel.SettingCollection.items
      - excel.Excel.SettingCollection.load
      - excel.Excel.SettingCollection.load_1
      - excel.Excel.SettingCollection.load_2
      - excel.Excel.SettingCollection.onSettingsChanged
      - excel.Excel.SettingCollection.toJSON
  - uid: excel.Excel.SettingCollection.add
    summary: |-
      <span data-ttu-id="70274-104">设置指定的 Setting 对象，或将其添加到工作簿中。</span><span class="sxs-lookup"><span data-stu-id="70274-104">Sets or adds the specified setting to the workbook.</span></span>

      <span data-ttu-id="70274-105">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70274-105">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: |-


          #### <a name="examples"></a><span data-ttu-id="70274-106">示例</span><span class="sxs-lookup"><span data-stu-id="70274-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="70274-107">新设置的键。</span><span class="sxs-lookup"><span data-stu-id="70274-107">The Key of the new setting.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="70274-108">新设置的值。</span><span class="sxs-lookup"><span data-stu-id="70274-108">The Value for the new setting.</span></span>
          type:
            - string | number | boolean | Date | Array<any> | any
  - uid: excel.Excel.SettingCollection.context
    summary: <span data-ttu-id="70274-109">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="70274-109">The request context associated with the object.</span></span> <span data-ttu-id="70274-110">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="70274-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.SettingCollection.getCount
    summary: |-
      <span data-ttu-id="70274-111">获取集合中的 Setting 对象的数量。</span><span class="sxs-lookup"><span data-stu-id="70274-111">Gets the number of Settings in the collection.</span></span>

      <span data-ttu-id="70274-112">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70274-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SettingCollection.getItem
    summary: |-
      <span data-ttu-id="70274-113">按键获取 Setting 项。</span><span class="sxs-lookup"><span data-stu-id="70274-113">Gets a Setting entry via the key.</span></span>

      <span data-ttu-id="70274-114">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70274-114">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="70274-115">设置的键。</span><span class="sxs-lookup"><span data-stu-id="70274-115">Key of the setting.</span></span>
          type:
            - string
  - uid: excel.Excel.SettingCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="70274-116">按键获取 Setting 项。</span><span class="sxs-lookup"><span data-stu-id="70274-116">Gets a Setting entry via the key.</span></span> <span data-ttu-id="70274-117">如果没有 Setting 项，将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="70274-117">If the Setting does not exist, will return a null object.</span></span>

      <span data-ttu-id="70274-118">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70274-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: |-


          #### <a name="examples"></a><span data-ttu-id="70274-119">示例</span><span class="sxs-lookup"><span data-stu-id="70274-119">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="70274-120">设置的键。</span><span class="sxs-lookup"><span data-stu-id="70274-120">The key of the setting.</span></span>
          type:
            - string
  - uid: excel.Excel.SettingCollection.items
    summary: <span data-ttu-id="70274-121">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="70274-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Setting[];'
      return:
        type:
          - 'Excel.Setting[]'
  - uid: excel.Excel.SettingCollection.load
    summary: <span data-ttu-id="70274-122">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="70274-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70274-123">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="70274-123">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="70274-124">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="70274-124">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="70274-125">`load(option?: string | string[]): Excel.SettingCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="70274-125">`load(option?: string | string[]): Excel.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="70274-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="70274-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="70274-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="70274-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id="70274-128">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="70274-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="70274-129">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="70274-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="70274-130">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="70274-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="70274-131">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="70274-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SettingCollection.load_1
    summary: '<span data-ttu-id="70274-132">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="70274-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70274-133">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="70274-133">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="70274-134">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="70274-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.SettingCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.SettingCollection.onSettingsChanged
    summary: |-
      <span data-ttu-id="70274-135">当文档中的设置变化时发生。</span><span class="sxs-lookup"><span data-stu-id="70274-135">Occurs when the Settings in the document are changed.</span></span>

      <span data-ttu-id="70274-136">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="70274-136">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSettingsChanged
    fullName: onSettingsChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="70274-137">示例</span><span class="sxs-lookup"><span data-stu-id="70274-137">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
  - uid: excel.Excel.SettingCollection.toJSON
    summary: '<span data-ttu-id="70274-138">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="70274-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="70274-139">.</span><span class="sxs-lookup"><span data-stu-id="70274-139"></span></span> <span data-ttu-id="70274-140">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="70274-140"></span></span><!-- --><span data-ttu-id="70274-141">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.SettingCollection`对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.SettingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="70274-141">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingCollectionData`</span></span><!-- --><span data-ttu-id="70274-142">), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="70274-142">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SettingCollectionData
        description: ''