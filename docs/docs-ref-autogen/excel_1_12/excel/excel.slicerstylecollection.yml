### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.SlicerStyleCollection:class'
    summary: |-
      表示 SlicerStyle 对象的集合。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.SlicerStyleCollection
    fullName: Excel.SlicerStyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.SlicerStyleCollection#add:member(1)'
      - 'excel!Excel.SlicerStyleCollection#context:member'
      - 'excel!Excel.SlicerStyleCollection#getCount:member(1)'
      - 'excel!Excel.SlicerStyleCollection#getDefault:member(1)'
      - 'excel!Excel.SlicerStyleCollection#getItem:member(1)'
      - 'excel!Excel.SlicerStyleCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.SlicerStyleCollection#items:member'
      - 'excel!Excel.SlicerStyleCollection#load:member(1)'
      - 'excel!Excel.SlicerStyleCollection#load:member(2)'
      - 'excel!Excel.SlicerStyleCollection#load:member(3)'
      - 'excel!Excel.SlicerStyleCollection#setDefault:member(1)'
      - 'excel!Excel.SlicerStyleCollection#toJSON:member(1)'
  - uid: 'excel!Excel.SlicerStyleCollection#add:member(1)'
    summary: |-
      使用指定名称创建空白 SlicerStyle。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'add(name, makeUniqueName)'
    fullName: 'add(name, makeUniqueName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, makeUniqueName?: boolean): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: 新创建的 SlicerStyle。
      parameters:
        - id: name
          description: 新 SlicerStyle 的唯一名称。 如果名称已在使用中，则将引发无效参数异常。
          type:
            - string
        - id: makeUniqueName
          description: 可选，默认值为 false。 如果为 true，则将数字追加到名称，以便根据需要使其唯一。
          type:
            - boolean
  - uid: 'excel!Excel.SlicerStyleCollection#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.SlicerStyleCollection#getCount:member(1)'
    summary: |-
      获取集合中的切片器样式数量。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.SlicerStyleCollection#getDefault:member(1)'
    summary: |-
      获取父对象范围的默认 SlicerStyle。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getDefault()
    fullName: getDefault()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDefault(): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: 作为当前默认 SlicerStyle 的 SlicerStyle 对象。
  - uid: 'excel!Excel.SlicerStyleCollection#getItem:member(1)'
    summary: |-
      按名称获取 SlicerStyle。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: 其名称与输入匹配的 SlicerStyle 对象。
      parameters:
        - id: name
          description: 要检索的 SlicerStyle 的名称。
          type:
            - string
  - uid: 'excel!Excel.SlicerStyleCollection#getItemOrNullObject:member(1)'
    summary: |-
      按名称获取 SlicerStyle。 如果没有 SlicerStyle，将返回 null 对象。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.SlicerStyle;'
      return:
        type:
          - 'excel!Excel.SlicerStyle:class'
        description: 其名称与输入匹配的 SlicerStyle 对象。
      parameters:
        - id: name
          description: 要检索的 SlicerStyle 的名称。
          type:
            - string
  - uid: 'excel!Excel.SlicerStyleCollection#items:member'
    summary: 获取此集合中已加载的子项。
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.SlicerStyle[];'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection#items~0:complex'
  - uid: 'excel!Excel.SlicerStyleCollection#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.SlicerStyleCollection#load~0:complex'
  - uid: 'excel!Excel.SlicerStyleCollection#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.SlicerStyleCollection#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.SlicerStyleCollection;'
      return:
        type:
          - 'excel!Excel.SlicerStyleCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.SlicerStyleCollection#setDefault:member(1)'
    summary: |-
      设置在父对象范围内使用的默认 SlicerStyle。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setDefault(newDefaultStyle)
    fullName: setDefault(newDefaultStyle)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDefault(newDefaultStyle: SlicerStyle | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: newDefaultStyle
          description: 应为新的默认值的 SlicerStyle 对象的 SlicerStyle 对象或名称。
          type:
            - 'excel!Excel.SlicerStyleCollection#setDefault~0:complex'
  - uid: 'excel!Excel.SlicerStyleCollection#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) 而原始 `Excel.SlicerStyleCollection` 对象是 API 对象，则该 `toJSON` 方法返回一个纯 JavaScript 对象 (类型为 `Excel.Interfaces.SlicerStyleCollectionData`<!-- -->包含集合项中任何已加载属性的浅表的 "items" 数组 ) 。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerStyleCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SlicerStyleCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.SlicerStyle:class'
    name: Excel.SlicerStyle
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.SlicerStyleCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.SlicerStyleCollection#items~0:complex'
    name: 'Excel.SlicerStyle[]'
    fullName: 'Excel.SlicerStyle[]'
    spec.typeScript:
      - uid: 'excel!Excel.SlicerStyle:class'
        name: Excel.SlicerStyle
        fullName: Excel.SlicerStyle
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.SlicerStyleCollection:class'
    name: Excel.SlicerStyleCollection
  - uid: 'excel!Excel.SlicerStyleCollection#load~0:complex'
    name: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions:interface'
        name: Excel.Interfaces.SlicerStyleCollectionLoadOptions
        fullName: Excel.Interfaces.SlicerStyleCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.SlicerStyleCollection#setDefault~0:complex'
    name: SlicerStyle | string
    fullName: Excel.SlicerStyle | string
    spec.typeScript:
      - uid: 'excel!Excel.SlicerStyle:class'
        name: SlicerStyle
        fullName: Excel.SlicerStyle
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Interfaces.SlicerStyleCollectionData:interface'
    name: Excel.Interfaces.SlicerStyleCollectionData