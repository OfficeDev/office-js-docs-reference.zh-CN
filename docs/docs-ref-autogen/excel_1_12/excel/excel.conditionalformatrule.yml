### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalFormatRule:class'
    summary: |-
      表示适用于所有传统规则/格式配对的规则。

      \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ConditionalFormatRule
    fullName: Excel.ConditionalFormatRule
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalFormatRule#context:member'
      - 'excel!Excel.ConditionalFormatRule#formula:member'
      - 'excel!Excel.ConditionalFormatRule#formulaLocal:member'
      - 'excel!Excel.ConditionalFormatRule#formulaR1C1:member'
      - 'excel!Excel.ConditionalFormatRule#load:member(1)'
      - 'excel!Excel.ConditionalFormatRule#load:member(2)'
      - 'excel!Excel.ConditionalFormatRule#load:member(3)'
      - 'excel!Excel.ConditionalFormatRule#set:member(1)'
      - 'excel!Excel.ConditionalFormatRule#set:member(2)'
      - 'excel!Excel.ConditionalFormatRule#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalFormatRule#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalFormatRule#formula:member'
    summary: |-
      如果需要，公式可对条件格式规则进行求值。

      \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: formula
    fullName: formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormatRule#formulaLocal:member'
    summary: |-
      如果需要，公式可采用用户的语言对条件格式规则进行求值。

      \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: formulaLocal
    fullName: formulaLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaLocal: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormatRule#formulaR1C1:member'
    summary: |-
      如果需要，公式可采用 R1C1 表示法对条件格式规则进行求值。

      \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: formulaR1C1
    fullName: formulaR1C1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaR1C1: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalFormatRuleLoadOptions): Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatRuleLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalFormatRule;
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalFormatRule#set:member(1)'
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名：

      `set(properties: Excel.ConditionalFormatRule): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatRuleUpdateData:interface'
        - id: options
          description: 提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalFormatRule#set:member(2)'
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalFormatRule): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalFormatRule:class'
  - uid: 'excel!Excel.ConditionalFormatRule#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) ，而原始 ConditionalFormatRule 对象是 API 对象，则该 `toJSON` 方法返回一个 (类型为的纯 JavaScript 对象。 `Excel.Interfaces.ConditionalFormatRuleData`<!-- -->) ，其中包含原始对象中任何已加载的子属性的浅表副本。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalFormatRuleData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalFormatRule:class'
    name: Excel.ConditionalFormatRule
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleLoadOptions:interface'
    name: Excel.Interfaces.ConditionalFormatRuleLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleUpdateData:interface'
    name: Interfaces.ConditionalFormatRuleUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleData:interface'
    name: Excel.Interfaces.ConditionalFormatRuleData