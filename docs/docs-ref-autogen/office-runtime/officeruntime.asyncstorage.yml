### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.AsyncStorage
    summary: '<span data-ttu-id="de640-101">异步、全局和永久的键-值存储。</span><span class="sxs-lookup"><span data-stu-id="de640-101">Asynchronous, global, and persistent key-value storage.</span></span> <span data-ttu-id="de640-102">每个域的存储限制为 10 MB, 可由多个加载项共享。</span><span class="sxs-lookup"><span data-stu-id="de640-102">Storage limit is 10 MB per domain, which may be shared by multiple add-ins.</span></span>'
    remarks: '<span data-ttu-id="de640-103">将来将被弃用, 请改用 Office。存储。</span><span class="sxs-lookup"><span data-stu-id="de640-103">Will be deprecated in the future, please use Office.Storage instead.</span></span>'
    name: OfficeRuntime.AsyncStorage
    fullName: OfficeRuntime.AsyncStorage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
      - office-runtime.OfficeRuntime.AsyncStorage.getItem
      - office-runtime.OfficeRuntime.AsyncStorage.multiGet
      - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
      - office-runtime.OfficeRuntime.AsyncStorage.multiSet
      - office-runtime.OfficeRuntime.AsyncStorage.removeItem
      - office-runtime.OfficeRuntime.AsyncStorage.setItem
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
    summary: <span data-ttu-id="de640-104">在完成时检索所有键并调用回调。</span><span class="sxs-lookup"><span data-stu-id="de640-104">Retrieves all keys and invokes a callback when finished.</span></span> <span data-ttu-id="de640-105">返回一个承诺。</span><span class="sxs-lookup"><span data-stu-id="de640-105">Returns a Promise.</span></span>
    name: getAllKeys(callback)
    fullName: getAllKeys(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(error?: Error, keys?: string[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
    summary: '<span data-ttu-id="de640-106">按键检索项, 然后发出回调。</span><span class="sxs-lookup"><span data-stu-id="de640-106">Retrieves an item by key, then issues a callback.</span></span> <span data-ttu-id="de640-107">返回一个承诺。</span><span class="sxs-lookup"><span data-stu-id="de640-107">Returns a Promise.</span></span>'
    name: 'getItem(key, callback)'
    fullName: 'getItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="de640-108">要检索的密钥的名称。</span><span class="sxs-lookup"><span data-stu-id="de640-108">The name of the key to retrieve.</span></span> <span data-ttu-id="de640-109">必须是字符串。</span><span class="sxs-lookup"><span data-stu-id="de640-109">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: <span data-ttu-id="de640-110">返回的结果是一个字符串。</span><span class="sxs-lookup"><span data-stu-id="de640-110">Returned result is a string.</span></span>
          type:
            - '(error?: Error, result?: string) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
    summary: '<span data-ttu-id="de640-111">从存储中检索多个项目, 并在完成时调用回调。</span><span class="sxs-lookup"><span data-stu-id="de640-111">Retrieves multiple items from storage and invokes a callback when finished.</span></span> <span data-ttu-id="de640-112">返回一个承诺。</span><span class="sxs-lookup"><span data-stu-id="de640-112">Returns a Promise.</span></span>'
    name: 'multiGet(keys, callback)'
    fullName: 'multiGet(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="de640-113">要检索的项的键。</span><span class="sxs-lookup"><span data-stu-id="de640-113">Keys of the items to be retrieved.</span></span> <span data-ttu-id="de640-114">必须是字符串数组。</span><span class="sxs-lookup"><span data-stu-id="de640-114">Must be an array of strings.</span></span>
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[], result?: string[][]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
    summary: '<span data-ttu-id="de640-115">删除存储区中的多个项目, 并在完成时调用回调。</span><span class="sxs-lookup"><span data-stu-id="de640-115">Removes multiple items from storage and invokes a callback when finished.</span></span> <span data-ttu-id="de640-116">返回一个承诺。</span><span class="sxs-lookup"><span data-stu-id="de640-116">Returns a Promise.</span></span>'
    name: 'multiRemove(keys, callback)'
    fullName: 'multiRemove(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: <span data-ttu-id="de640-117">要删除的项的键。</span><span class="sxs-lookup"><span data-stu-id="de640-117">Keys of the items to be removed.</span></span> <span data-ttu-id="de640-118">必须是字符串数组。</span><span class="sxs-lookup"><span data-stu-id="de640-118">Must be an array of strings.</span></span>
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
    summary: '<span data-ttu-id="de640-119">设置多个键值对, 并在完成时调用回调。</span><span class="sxs-lookup"><span data-stu-id="de640-119">Sets multiple key-value pairs and invokes a callback when finished.</span></span> <span data-ttu-id="de640-120">返回一个承诺。</span><span class="sxs-lookup"><span data-stu-id="de640-120">Returns a Promise.</span></span>'
    name: 'multiSet(keyValuePairs, callback)'
    fullName: 'multiSet(keyValuePairs, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValuePairs
          description: <span data-ttu-id="de640-121">必须是字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="de640-121">Must be arrays of strings.</span></span>
          type:
            - 'string[][]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
    summary: <span data-ttu-id="de640-122">按键移除项并在完成时调用回调。</span><span class="sxs-lookup"><span data-stu-id="de640-122">Removes items by key and invokes a callback when finished.</span></span> <span data-ttu-id="de640-123">它返回一个可解析为包含所请求的键和值的对象的承诺。</span><span class="sxs-lookup"><span data-stu-id="de640-123">It returns a Promise that resolves to an object containing the keys and values requested.</span></span>
    name: 'removeItem(key, callback)'
    fullName: 'removeItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="de640-124">要删除的项的键。</span><span class="sxs-lookup"><span data-stu-id="de640-124">The key of the item to be removed.</span></span> <span data-ttu-id="de640-125">必须是字符串。</span><span class="sxs-lookup"><span data-stu-id="de640-125">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
    summary: '<span data-ttu-id="de640-126">在存储中创建一个新的键值对, 或使用新值更新现有密钥。</span><span class="sxs-lookup"><span data-stu-id="de640-126">Creates a new key-value pair in storage or updates an existing key with a new value.</span></span> <span data-ttu-id="de640-127">返回一个承诺。</span><span class="sxs-lookup"><span data-stu-id="de640-127">Returns a Promise.</span></span>'
    name: 'setItem(key, value, callback)'
    fullName: 'setItem(key, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="de640-128">键/值对的键的名称。</span><span class="sxs-lookup"><span data-stu-id="de640-128">The name of the key for the key-value pair.</span></span> <span data-ttu-id="de640-129">必须是字符串。</span><span class="sxs-lookup"><span data-stu-id="de640-129">Must be a string.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="de640-130">值的名称。</span><span class="sxs-lookup"><span data-stu-id="de640-130">The name of the value.</span></span> <span data-ttu-id="de640-131">必须是字符串。</span><span class="sxs-lookup"><span data-stu-id="de640-131">Must be a string.</span></span>
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'