### YamlMime:TSType
name: OneNote.TableCell
uid: onenote!OneNote.TableCell:class
package: onenote!
fullName: OneNote.TableCell
summary: >-
  表示 OneNote 表中的一个单元格。


  \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: cellIndex
  uid: onenote!OneNote.TableCell#cellIndex:member
  package: onenote!
  fullName: cellIndex
  summary: >-
    获取单元格行中的单元格索引。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellIndex: number;'
    return:
      type: number
- name: context
  uid: onenote!OneNote.TableCell#context:member
  package: onenote!
  fullName: context
  summary: 与对象关联的请求上下文。 这会将外接程序的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="onenote!OneNote.RequestContext:class" />
- name: id
  uid: onenote!OneNote.TableCell#id:member
  package: onenote!
  fullName: id
  summary: >-
    获取单元格的 ID。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: paragraphs
  uid: onenote!OneNote.TableCell#paragraphs:member
  package: onenote!
  fullName: paragraphs
  summary: >-
    获取 TableCell 中 Paragraph 对象的集合。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type: <xref uid="onenote!OneNote.ParagraphCollection:class" />
- name: parentRow
  uid: onenote!OneNote.TableCell#parentRow:member
  package: onenote!
  fullName: parentRow
  summary: >-
    获取单元格的父行。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentRow: OneNote.TableRow;'
    return:
      type: <xref uid="onenote!OneNote.TableRow:class" />
- name: rowIndex
  uid: onenote!OneNote.TableCell#rowIndex:member
  package: onenote!
  fullName: rowIndex
  summary: >-
    获取表中单元格行的索引。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly rowIndex: number;'
    return:
      type: number
- name: shadingColor
  uid: onenote!OneNote.TableCell#shadingColor:member
  package: onenote!
  fullName: shadingColor
  summary: >-
    获取并设置单元格的底纹色


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'shadingColor: string;'
    return:
      type: string
methods:
- name: appendHtml(html)
  uid: onenote!OneNote.TableCell#appendHtml:member(1)
  package: onenote!
  fullName: appendHtml(html)
  summary: >-
    将指定的 HTML 添加到 TableCell 的底部。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'appendHtml(html: string): void;'
    parameters:
    - id: html
      description: 要追加的 HTML 字符串。 请参阅 [OneNote](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) 加载项 JavaScript API 支持的 HTML。
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get a table cell at row one and column two and add \"Hello\".\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var cell = table.getCell(1 /*Row Index*/, 2 /*Column Index*/);\n                cell.appendHtml(\"<p>Hello</p>\");\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: appendImage(base64EncodedImage, width, height)
  uid: onenote!OneNote.TableCell#appendImage:member(1)
  package: onenote!
  fullName: appendImage(base64EncodedImage, width, height)
  summary: >-
    将指定图像添加到表格单元格中。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'appendImage(base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    parameters:
    - id: base64EncodedImage
      description: 要追加的 HTML 字符串。
      type: string
    - id: width
      description: 可选。 以磅为单位的宽度。 默认值为 null，将考虑图像宽度。
      type: number
    - id: height
      description: 可选。 以磅为单位的高度。 默认值为 null，将考虑图像高度。
      type: number
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
      description: ''
- name: appendRichText(paragraphText)
  uid: onenote!OneNote.TableCell#appendRichText:member(1)
  package: onenote!
  fullName: appendRichText(paragraphText)
  summary: >-
    将指定文本添加到表格单元格中。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'appendRichText(paragraphText: string): OneNote.RichText;'
    parameters:
    - id: paragraphText
      description: 要追加的 HTML 字符串。
      type: string
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    var appendedRichText = null;\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get a table cell at row one and column two and add \"Hello\".\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var cell = table.getCell(1 /*Row Index*/, 2 /*Column Index*/);\n                appendedRichText = cell.appendRichText(\"Hello\");\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: appendTable(rowCount, columnCount, values)
  uid: onenote!OneNote.TableCell#appendTable:member(1)
  package: onenote!
  fullName: appendTable(rowCount, columnCount, values)
  summary: >-
    将带有指定行数和列数的表格添加到表格单元格中。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'appendTable(rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    parameters:
    - id: rowCount
      description: 必需。 表格的行数。
      type: number
    - id: columnCount
      description: 必需。 表格的列数。
      type: number
    - id: values
      description: 可选的二维数组。 如果指定数组中的对应字符串，则填充单元格。
      type: string[][]
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
      description: ''
- name: clear()
  uid: onenote!OneNote.TableCell#clear:member(1)
  package: onenote!
  fullName: clear()
  summary: >-
    清除单元格的内容。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: ''
- name: load(option)
  uid: onenote!OneNote.TableCell#load:member(1)
  package: onenote!
  fullName: load(option)
  summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
  remarks: >-
    除了此签名之外，此方法还具有以下签名：


    `load(option?: string | string[]): OneNote.TableCell` - 其中选项是逗号分隔的字符串或指定要加载的属性的字符串数组。


    `load(option?: { select?: string; expand?: string; }): OneNote.TableCell` - 其中 option.select 是一个以逗号分隔的字符串，用于指定要加载的属性，options.expand 是一个以逗号分隔的字符串，用于指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableCell` - 仅适用于集合类型。 它类似于前面的签名。 Option.top 指定结果中可包含的集合项的最大数量。 Option.skip 指定要跳过且未包含在结果中的项目数。 如果指定了 option.top，则结果集指定数量的项目后，将启动此参数。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OneNote.Interfaces.TableCellLoadOptions): OneNote.TableCell;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="onenote!OneNote.Interfaces.TableCellLoadOptions:interface" />
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
      description: ''
- name: load(propertyNames)
  uid: onenote!OneNote.TableCell#load:member(2)
  package: onenote!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.TableCell;'
    parameters:
    - id: propertyNames
      description: 以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get a table cell at row one and column two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var cell = table.getCell(1 /*Row Index*/, 2 /*Column Index*/);\n                \n                // Queue a command to load the table cell.\n                ctx.load(cell);\n                ctx.sync().then(function() {\n                    console.log(\"Cell Id: \" + cell.id);\n                    console.log(\"Cell Index: \" + cell.cellIndex);\n                    console.log(\"Cell's Row Index: \" + cell.rowIndex);\n                });\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nParentTable, ParentRow, Paragraphs\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get a table cell at row one and column two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var cell = table.getCell(1 /*Row Index*/, 2 /*Column Index*/);\n                \n                // Queue a command to load parentTable, parentRow and paragraphs of the table cell.\n                ctx.load(cell, \"parentTable, parentRow, paragraphs\");\n                \n                ctx.sync().then(function() {\n                    console.log(\"Parent Table Id: \" + cell.parentTable.id);\n                    console.log(\"Parent Row Id: \" + cell.parentRow.id);\n                    var paragraphs = cell.paragraphs;\n                    \n                    for (var i = 0; i < paragraphs.items.length; i++) {\n                        console.log(\"Paragraph Id: \" + paragraphs.items[i].id);\n                    }\n                });\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(option)
  uid: onenote!OneNote.TableCell#load:member(3)
  package: onenote!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(option?: {
                  select?: string;
                  expand?: string;
              }): OneNote.TableCell;
    parameters:
    - id: option
      description: ''
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
      description: ''
- name: set(properties, options)
  uid: onenote!OneNote.TableCell#set:member(1)
  package: onenote!
  fullName: set(properties, options)
  summary: 同时设置对象的多个属性。 可以使用相应的属性传递普通对象，也可以传递同一类型的另一个 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: OneNote.TableCell): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.TableCellUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性按等态结构构造到调用该方法的对象的属性。
      type: <xref uid="onenote!OneNote.Interfaces.TableCellUpdateData:interface" />
    - id: options
      description: 提供在属性对象尝试设置任何只读属性时禁止错误的选项。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: onenote!OneNote.TableCell#set:member(2)
  package: onenote!
  fullName: set(properties)
  summary: 基于现有的已加载对象，同时设置对象上的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: OneNote.TableCell): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="onenote!OneNote.TableCell:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: onenote!OneNote.TableCell#toJSON:member(1)
  package: onenote!
  fullName: toJSON()
  summary: 重写 JavaScript 方法，以便向 API 对象 `toJSON()` 传递时提供更多有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->，反过来，调用传递给该对象的对象的方法。) 而原始 OneNote.TableCell 对象是一个 API 对象，该方法返回一个纯 `toJSON` JavaScript 对象， (类型为 `toJSON``OneNote.Interfaces.TableCellData`<!-- -->) 原始对象中任何加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): OneNote.Interfaces.TableCellData;'
    return:
      type: <xref uid="onenote!OneNote.Interfaces.TableCellData:interface" />
      description: ''
- name: track()
  uid: onenote!OneNote.TableCell#track:member(1)
  package: onenote!
  fullName: track()
  summary: 根据文档中的相应更改来跟踪对象，以便进行自动调整。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 如果你在“.sync”调用之间和按顺序执行“.run”批处理之外使用此对象，并且在对象上设置属性或调用方法时出现“InvalidObjectPath”错误，则需要在首次创建对象时为跟踪的对象集合添加对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): OneNote.TableCell;'
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
      description: ''
- name: untrack()
  uid: onenote!OneNote.TableCell#untrack:member(1)
  package: onenote!
  fullName: untrack()
  summary: 释放与此对象关联的内存（如果先前已跟踪过）。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 拥有许多跟踪对象会降低主机应用程序的速度，因此请在使用完毕后释放所添加的任何对象。 在内存释放生效之前，你需要调用“context.sync()”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): OneNote.TableCell;'
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: e1ce9176d0eccba8028e98cd90e4a383400185bb
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50542116"
