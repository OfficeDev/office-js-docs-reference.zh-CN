### YamlMime:TSType
name: OneNote.Application
uid: onenote!OneNote.Application:class
package: onenote!
fullName: OneNote.Application
summary: >-
  表示包含所有全局可寻址的 OneNote 对象的顶级对象，例如笔记本、活动笔记本和活动分区。


  \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: onenote!OneNote.Application#context:member
  package: onenote!
  fullName: context
  summary: 与对象关联的请求上下文。 这会将外接程序的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="onenote!OneNote.RequestContext:class" />
- name: notebooks
  uid: onenote!OneNote.Application#notebooks:member
  package: onenote!
  fullName: notebooks
  summary: >-
    获取 OneNote 应用程序实例中打开的笔记本集合。 在 Web 上的 OneNote 中，应用程序实例中一次仅打开一个笔记本。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly notebooks: OneNote.NotebookCollection;'
    return:
      type: <xref uid="onenote!OneNote.NotebookCollection:class" />
methods:
- name: getActiveNotebook()
  uid: onenote!OneNote.Application#getActiveNotebook:member(1)
  package: onenote!
  fullName: getActiveNotebook()
  summary: >-
    如果活动笔记本存在，则对其获取。 如果没有处于活动状态的部分，则引发 ItemNotFound。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveNotebook(): OneNote.Notebook;'
    return:
      type: <xref uid="onenote!OneNote.Notebook:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active notebook.\n    var notebook = context.application.getActiveNotebook();\n            \n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Notebook name: \" + notebook.name);\n            console.log(\"Notebook ID: \" + notebook.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getActiveNotebookOrNull()
  uid: onenote!OneNote.Application#getActiveNotebookOrNull:member(1)
  package: onenote!
  fullName: getActiveNotebookOrNull()
  summary: >-
    如果活动笔记本存在，则对其获取。 如果没有处于活动状态的部分，则返回 null。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveNotebookOrNull(): OneNote.Notebook;'
    return:
      type: <xref uid="onenote!OneNote.Notebook:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active notebook.\n    var notebook = context.application.getActiveNotebookOrNull();\n\n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('id,name');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // check if active notebook is set.\n            if (!notebook.isNull) {\n                console.log(\"Notebook name: \" + notebook.name);\n                console.log(\"Notebook ID: \" + notebook.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getActiveOutline()
  uid: onenote!OneNote.Application#getActiveOutline:member(1)
  package: onenote!
  fullName: getActiveOutline()
  summary: >-
    如果活动边框存在，则对其获取，如果没有处于活动状态的边框，则引发 ItemNotFound。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveOutline(): OneNote.Outline;'
    return:
      type: <xref uid="onenote!OneNote.Outline:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // get active outline.\n    var outline = context.application.getActiveOutline();\n\n    // Queue a command to load the id of the outline.         \n    outline.load('id');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Show some properties.\n            console.log(\"outline id: \" + outline.id);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getActiveOutlineOrNull()
  uid: onenote!OneNote.Application#getActiveOutlineOrNull:member(1)
  package: onenote!
  fullName: getActiveOutlineOrNull()
  summary: >-
    如果活动边框存在，则对其获取，否则，返回 null。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveOutlineOrNull(): OneNote.Outline;'
    return:
      type: <xref uid="onenote!OneNote.Outline:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // get active outline.\n    var outline = context.application.getActiveOutlineOrNull();\n\n    // Queue a command to load the id of the outline.         \n    outline.load('id');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            if (!outline.isNull) {\n                console.log(\"outline id: \" + outline.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getActivePage()
  uid: onenote!OneNote.Application#getActivePage:member(1)
  package: onenote!
  fullName: getActivePage()
  summary: >-
    如果活动页面存在，则对其获取。 如果没有处于活动状态的页面，则引发 ItemNotFound。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActivePage(): OneNote.Page;'
    return:
      type: <xref uid="onenote!OneNote.Page:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active page.\n    var page = context.application.getActivePage();\n            \n    // Queue a command to load the page. \n    // For best performance, request specific properties.           \n    page.load('id,title');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Page title: \" + page.title);\n            console.log(\"Page ID: \" + page.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getActivePageOrNull()
  uid: onenote!OneNote.Application#getActivePageOrNull:member(1)
  package: onenote!
  fullName: getActivePageOrNull()
  summary: >-
    如果活动页面存在，则对其获取。 如果没有处于活动状态的页面，则返回 null。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActivePageOrNull(): OneNote.Page;'
    return:
      type: <xref uid="onenote!OneNote.Page:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active page.\n    var page = context.application.getActivePageOrNull();\n\n    // Queue a command to load the page. \n    // For best performance, request specific properties.           \n    page.load('id,title');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            if (!page.isNull) {\n                // Show some properties.\n                console.log(\"Page title: \" + page.title);\n                console.log(\"Page ID: \" + page.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getActiveParagraph()
  uid: onenote!OneNote.Application#getActiveParagraph:member(1)
  package: onenote!
  fullName: getActiveParagraph()
  summary: >-
    如果活动 Paragraph 存在，则获取活动 Paragraph，如果没有处于活动状态的 Paragraph，则引发 ItemNotFound。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveParagraph(): OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: getActiveParagraphOrNull()
  uid: onenote!OneNote.Application#getActiveParagraphOrNull:member(1)
  package: onenote!
  fullName: getActiveParagraphOrNull()
  summary: >-
    如果活动 Paragraph 存在，则获取该 Paragraph，否则返回 null。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveParagraphOrNull(): OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: getActiveSection()
  uid: onenote!OneNote.Application#getActiveSection:member(1)
  package: onenote!
  fullName: getActiveSection()
  summary: >-
    如果活动分区存在，则对其获取。 如果没有处于活动状态的分区，则引发 ItemNotFound。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSection(): OneNote.Section;'
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active section.\n    var section = context.application.getActiveSection();\n            \n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Section name: \" + section.name);\n            console.log(\"Section ID: \" + section.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getActiveSectionOrNull()
  uid: onenote!OneNote.Application#getActiveSectionOrNull:member(1)
  package: onenote!
  fullName: getActiveSectionOrNull()
  summary: >-
    如果活动分区存在，则对其获取。 如果没有处于活动状态的分区，则返回 null。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSectionOrNull(): OneNote.Section;'
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active section.\n    var section = context.application.getActiveSectionOrNull();\n\n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load('id,name');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            if (!section.isNull) {\n                // Show some properties.\n                console.log(\"Section name: \" + section.name);\n                console.log(\"Section ID: \" + section.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getWindowSize()
  uid: onenote!OneNote.Application#getWindowSize:member(1)
  package: onenote!
  fullName: getWindowSize()
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getWindowSize(): OfficeExtension.ClientResult<number[]>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number[]&gt;
      description: ''
- name: insertHtmlAtCurrentPosition(html)
  uid: onenote!OneNote.Application#insertHtmlAtCurrentPosition:member(1)
  package: onenote!
  fullName: insertHtmlAtCurrentPosition(html)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtmlAtCurrentPosition(html: string): void;'
    parameters:
    - id: html
      description: ''
      type: string
    return:
      type: void
      description: ''
- name: isViewingDeletedNotes()
  uid: onenote!OneNote.Application#isViewingDeletedNotes:member(1)
  package: onenote!
  fullName: isViewingDeletedNotes()
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'isViewingDeletedNotes(): OfficeExtension.ClientResult<boolean>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;boolean&gt;
      description: ''
- name: load(option)
  uid: onenote!OneNote.Application#load:member(1)
  package: onenote!
  fullName: load(option)
  summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
  remarks: >-
    除了此签名之外，此方法还具有以下签名：


    `load(option?: string | string[]): OneNote.Application` - 其中选项是逗号分隔的字符串或指定要加载的属性的字符串数组。


    `load(option?: { select?: string; expand?: string; }): OneNote.Application` - 其中 option.select 是一个以逗号分隔的字符串，用于指定要加载的属性，options.expand 是一个以逗号分隔的字符串，用于指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application` - 仅适用于集合类型。 它类似于前面的签名。 Option.top 指定结果中可包含的集合项的最大数量。 Option.skip 指定要跳过且未包含在结果中的项目数。 如果指定了 option.top，则结果集指定数量的项目后，将启动此参数。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OneNote.Interfaces.ApplicationLoadOptions): OneNote.Application;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="onenote!OneNote.Interfaces.ApplicationLoadOptions:interface" />
    return:
      type: <xref uid="onenote!OneNote.Application:class" />
      description: ''
- name: load(propertyNames)
  uid: onenote!OneNote.Application#load:member(2)
  package: onenote!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Application;'
    parameters:
    - id: propertyNames
      description: 以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="onenote!OneNote.Application:class" />
      description: ''
- name: load(option)
  uid: onenote!OneNote.Application#load:member(3)
  package: onenote!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(option?: {
                  select?: string;
                  expand?: string;
              }): OneNote.Application;
    parameters:
    - id: option
      description: ''
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="onenote!OneNote.Application:class" />
      description: ''
- name: navigateToPage(page)
  uid: onenote!OneNote.Application#navigateToPage:member(1)
  package: onenote!
  fullName: navigateToPage(page)
  summary: >-
    打开应用程序实例中指定的页面。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'navigateToPage(page: OneNote.Page): void;'
    parameters:
    - id: page
      description: 要打开的页面。
      type: <xref uid="onenote!OneNote.Page:class" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n            \n    // Queue a command to load the pages. \n    // For best performance, request specific properties.           \n    pages.load('id');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // This example loads the first page in the section.\n            var page = pages.items[0];\n                        \n            // Open the page in the application.                    \n            context.application.navigateToPage(page);\n                    \n            // Run the queued command.\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: navigateToPageWithClientUrl(url)
  uid: onenote!OneNote.Application#navigateToPageWithClientUrl:member(1)
  package: onenote!
  fullName: navigateToPageWithClientUrl(url)
  summary: >-
    获取特定页面，并在应用程序实例中将其打开。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'navigateToPageWithClientUrl(url: string): OneNote.Page;'
    parameters:
    - id: url
      description: 要打开页面的客户端 url。
      type: string
    return:
      type: <xref uid="onenote!OneNote.Page:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n\n    // Queue a command to load the pages. \n    // For best performance, request specific properties.           \n    pages.load('clientUrl');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // This example loads the first page in the section.\n            var page = pages.items[0];\n\n            // Open the page in the application.                    \n            context.application.navigateToPageWithClientUrl(page.clientUrl);\n\n            // Run the queued command.\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: toJSON()
  uid: onenote!OneNote.Application#toJSON:member(1)
  package: onenote!
  fullName: toJSON()
  summary: 重写 JavaScript 方法，以便向 API 对象 `toJSON()` 传递时提供更多有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->，反过来，调用传递给它的对象的方法。) 而原始 OneNote.Application 对象是一个 API 对象，该方法返回一个纯 `toJSON` JavaScript 对象， (类型为 `toJSON``OneNote.Interfaces.ApplicationData`<!-- -->) 原始对象中任何加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ApplicationData;'
    return:
      type: <xref uid="onenote!OneNote.Interfaces.ApplicationData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 3d9b1bbc84b9eff7743316b64599f253b7afca1a
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50538119"
