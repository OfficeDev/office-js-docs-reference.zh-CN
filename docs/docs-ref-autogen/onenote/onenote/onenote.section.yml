### YamlMime:TSType
name: OneNote.Section
uid: onenote!OneNote.Section:class
package: onenote!
fullName: OneNote.Section
summary: >-
  表示 OneNote 分区。 分区可包含页面。


  \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: clientUrl
  uid: onenote!OneNote.Section#clientUrl:member
  package: onenote!
  fullName: clientUrl
  summary: >-
    分区的客户端 url。 只读


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly clientUrl: string;'
    return:
      type: string
- name: context
  uid: onenote!OneNote.Section#context:member
  package: onenote!
  fullName: context
  summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="onenote!OneNote.RequestContext:class" />
- name: id
  uid: onenote!OneNote.Section#id:member
  package: onenote!
  fullName: id
  summary: >-
    获取分区的 ID。 只读。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: isEncrypted
  uid: onenote!OneNote.Section#isEncrypted:member
  package: onenote!
  fullName: isEncrypted
  summary: >-
    如此如果使用密码加密此节。 只读


    \[[API 集： OneNoteApi 1.2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEncrypted: boolean;'
    return:
      type: boolean
- name: isLocked
  uid: onenote!OneNote.Section#isLocked:member
  package: onenote!
  fullName: isLocked
  summary: >-
    如果此节已锁定，则为 True。 只读


    \[[API 集： OneNoteApi 1.2](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isLocked: boolean;'
    return:
      type: boolean
- name: name
  uid: onenote!OneNote.Section#name:member
  package: onenote!
  fullName: name
  summary: >-
    获取分区的名称。 只读。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: notebook
  uid: onenote!OneNote.Section#notebook:member
  package: onenote!
  fullName: notebook
  summary: >-
    获取包含分区的笔记本。 只读。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly notebook: OneNote.Notebook;'
    return:
      type: <xref uid="onenote!OneNote.Notebook:class" />
- name: pages
  uid: onenote!OneNote.Section#pages:member
  package: onenote!
  fullName: pages
  summary: >-
    分区中的页面集合。 只读


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pages: OneNote.PageCollection;'
    return:
      type: <xref uid="onenote!OneNote.PageCollection:class" />
- name: parentSectionGroup
  uid: onenote!OneNote.Section#parentSectionGroup:member
  package: onenote!
  fullName: parentSectionGroup
  summary: >-
    获取包含分区的分区组。 如果分区是笔记本的直接子级，则引发 ItemNotFound。 只读。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentSectionGroup: OneNote.SectionGroup;'
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
- name: parentSectionGroupOrNull
  uid: onenote!OneNote.Section#parentSectionGroupOrNull:member
  package: onenote!
  fullName: parentSectionGroupOrNull
  summary: >-
    获取包含分区的分区组。 如果分区是笔记本的直接子级，则返回 null。 只读。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentSectionGroupOrNull: OneNote.SectionGroup;'
    return:
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
- name: webUrl
  uid: onenote!OneNote.Section#webUrl:member
  package: onenote!
  fullName: webUrl
  summary: >-
    页面的 Web URL。 只读


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly webUrl: string;'
    return:
      type: string
methods:
- name: addPage(title)
  uid: onenote!OneNote.Section#addPage:member(1)
  package: onenote!
  fullName: addPage(title)
  summary: >-
    添加新页面至分区结尾。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addPage(title: string): OneNote.Page;'
    parameters:
    - id: title
      description: 新页面的标题。
      type: string
    return:
      type: <xref uid="onenote!OneNote.Page:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n            \n    // Queue a command to add a page to the current section.\n    var page = context.application.getActiveSection().addPage(\"Wish list\");\n            \n    // Queue a command to load the id and title of the new page. \n    // This example loads the new page so it can read its properties later.           \n    page.load('id,title');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n             \n            // Display the properties.       \n            console.log(\"Page name: \" + page.title);\n            console.log(\"Page ID: \" + page.id);\n\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: copyToNotebook(destinationNotebook)
  uid: onenote!OneNote.Section#copyToNotebook:member(1)
  package: onenote!
  fullName: copyToNotebook(destinationNotebook)
  summary: >-
    将此分区复制到指定的笔记本。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'copyToNotebook(destinationNotebook: OneNote.Notebook): OneNote.Section;'
    parameters:
    - id: destinationNotebook
      description: 要将此分区复制到的笔记本。
      type: <xref uid="onenote!OneNote.Notebook:class" />
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n    var app = context.application;\n    \n    // Gets the active Notebook.\n    var notebook = app.getActiveNotebook();\n    \n    // Gets the active Section.\n    var section = app.getActiveSection();\n    \n    var newSection;\n    \n    return context.sync()\n        .then(function() {\n            newSection = section.copyToNotebook(notebook);\n            newSection.load('id');\n            return context.sync();\n        })\n        .then(function() {\n            console.log(newSection.id);\n        });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: copyToSectionGroup(destinationSectionGroup)
  uid: onenote!OneNote.Section#copyToSectionGroup:member(1)
  package: onenote!
  fullName: copyToSectionGroup(destinationSectionGroup)
  summary: >-
    将此分区复制到指定的分区组。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'copyToSectionGroup(destinationSectionGroup: OneNote.SectionGroup): OneNote.Section;'
    parameters:
    - id: destinationSectionGroup
      description: 要将此分区复制到的分区组。
      type: <xref uid="onenote!OneNote.SectionGroup:class" />
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (ctx) {\n    var app = ctx.application;\n    \n    // Gets the active Notebook.\n    var notebook = app.getActiveNotebook();\n    \n    // Gets the active Section.\n    var section = app.getActiveSection();\n    \n    var newSection;\n    \n    return ctx.sync()\n        .then(function() {\n            var firstSectionGroup = notebook.sectionGroups.items[0];\n            newSection = section.copyToSectionGroup(firstSectionGroup);\n            newSection.load('id');\n            return ctx.sync();\n        })\n        .then(function() {\n            console.log(newSection.id);\n        });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getRestApiId()
  uid: onenote!OneNote.Section#getRestApiId:member(1)
  package: onenote!
  fullName: getRestApiId()
  summary: >-
    获取 REST API ID。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRestApiId(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function(ctx){\n    // Get the current section.         \n    var section = ctx.application.getActiveSection();\n    var restApiId = section.getRestApiId();\n\n    return ctx.sync().\n        then(function(){\n            console.log(\"The REST API ID is \" + restApiId.value);\n            // Note that the REST API ID isn't all you need to interact with the OneNote REST API. \n            // This is only required for SharePoint notebooks. baseUrl will be null for OneDrive notebooks.\n            // For SharePoint notebooks, the notebook baseUrl should be used to talk to the \n            // OneNote REST API according to the OneNote Development Blog.\n            // https://blogs.msdn.microsoft.com/onenotedev/2015/06/11/and-sharepoint-makes-three/\n        });\n});\n```"
- name: insertSectionAsSibling(location, title)
  uid: onenote!OneNote.Section#insertSectionAsSibling:member(1)
  package: onenote!
  fullName: insertSectionAsSibling(location, title)
  summary: >-
    在当前分区之前或之后插入一个新的分区。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertSectionAsSibling(location: OneNote.InsertLocation, title: string): OneNote.Section;'
    parameters:
    - id: location
      description: 相对于当前分区的新分区的位置。
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: title
      description: 新节的名称。
      type: string
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
- name: insertSectionAsSibling(locationString, title)
  uid: onenote!OneNote.Section#insertSectionAsSibling:member(2)
  package: onenote!
  fullName: insertSectionAsSibling(locationString, title)
  summary: >-
    在当前分区之前或之后插入一个新的分区。


    \[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertSectionAsSibling(locationString: "Before" | "After", title: string): OneNote.Section;'
    parameters:
    - id: locationString
      description: 相对于当前分区的新分区的位置。
      type: "\"Before\" | \"After\""
    - id: title
      description: 新节的名称。
      type: string
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n            \n    // Queue a command to insert a section after the current section.\n    var section = context.application.getActiveSection().insertSectionAsSibling(\"After\", \"New section\");\n            \n    // Queue a command to load the id and name of the new section. \n    // This example loads the new section so it can read its properties later.           \n    section.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n             \n            // Display the properties.       \n            console.log(\"Section name: \" + section.name);\n            console.log(\"Section ID: \" + section.id);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(option)
  uid: onenote!OneNote.Section#load:member(1)
  package: onenote!
  fullName: load(option)
  summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
  remarks: >-
    除了此签名之外，此方法还具有以下签名：


    `load(option?: string | string[]): OneNote.Section` -Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。


    `load(option?: { select?: string; expand?: string; }): OneNote.Section` -Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Section` -仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OneNote.Interfaces.SectionLoadOptions): OneNote.Section;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="onenote!OneNote.Interfaces.SectionLoadOptions:interface" />
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
- name: load(propertyNames)
  uid: onenote!OneNote.Section#load:member(2)
  package: onenote!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Section;'
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the current section.\n    var section = context.application.getActiveSection();\n            \n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load(\"id\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            console.log(\"Section ID: \" + section.id);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the current section.\n    var section = context.application.getActiveSection();\n            \n    // Queue a command to load the section with the specified properties. \n    section.load(\"name,notebook/name\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            console.log(\"Section name: \" + section.name);\n            console.log(\"Parent notebook name: \" + section.notebook.name);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n    // Queue a command to add a page to the current section.\n    var section = context.application.getActiveSection();\n    section.load('clientUrl,notebook');\n    var sectionGroup = section.parentSectionGroupOrNull;\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            if(sectionGroup.isNull === false)\n            {\n                // If a parent section group exists, queue a command to add a section in it!\n                sectionGroup.addSection(\"NewSectionInSectionGroup\");\n            }\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: onenote!OneNote.Section#load:member(3)
  package: onenote!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Section;'
    parameters:
    - id: propertyNamesAndPaths
      description: 其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
- name: toJSON()
  uid: onenote!OneNote.Section#toJSON:member(1)
  package: onenote!
  fullName: toJSON()
  summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) ，而原始的 OneNote. Section 对象是 API 对象，则该 `toJSON` 方法返回一个简单的 JavaScript 对象 (键入为 `OneNote.Interfaces.SectionData`<!-- -->) ，其中包含原始对象中任何已加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): OneNote.Interfaces.SectionData;'
    return:
      type: <xref uid="onenote!OneNote.Interfaces.SectionData:interface" />
      description: ''
- name: track()
  uid: onenote!OneNote.Section#track:member(1)
  package: onenote!
  fullName: track()
  summary: 根据文档中的相应更改来跟踪对象，以便进行自动调整。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 如果你在“.sync”调用之间和按顺序执行“.run”批处理之外使用此对象，并且在对象上设置属性或调用方法时出现“InvalidObjectPath”错误，则需要在首次创建对象时为跟踪的对象集合添加对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): OneNote.Section;'
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
- name: untrack()
  uid: onenote!OneNote.Section#untrack:member(1)
  package: onenote!
  fullName: untrack()
  summary: 释放与此对象关联的内存（如果先前已跟踪过）。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 拥有许多跟踪对象会降低主机应用程序的速度，因此请在使用完毕后释放所添加的任何对象。 在内存释放生效之前，你需要调用“context.sync()”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): OneNote.Section;'
    return:
      type: <xref uid="onenote!OneNote.Section:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 633c50abaef924c543e59e95e04334d075297d3d
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49136608"
