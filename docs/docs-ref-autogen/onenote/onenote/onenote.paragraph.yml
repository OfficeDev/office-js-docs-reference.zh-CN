### YamlMime:TSType
name: OneNote.Paragraph
uid: onenote!OneNote.Paragraph:class
package: onenote!
fullName: OneNote.Paragraph
summary: >-
  页面上可见内容的容器。 一个 Paragraph 可包含任意一个 ParagraphType 类型的内容。


  \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: onenote!OneNote.Paragraph#context:member
  package: onenote!
  fullName: context
  summary: 与对象关联的请求上下文。 这会将外接程序的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="onenote!OneNote.RequestContext:class" />
- name: id
  uid: onenote!OneNote.Paragraph#id:member
  package: onenote!
  fullName: id
  summary: >-
    获取段落对象的 ID。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: image
  uid: onenote!OneNote.Paragraph#image:member
  package: onenote!
  fullName: image
  summary: >-
    获取 Paragraph 中的 Image 对象。 如果 ParagraphType 不是 Image，则引发异常。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly image: OneNote.Image;'
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
- name: inkWords
  uid: onenote!OneNote.Paragraph#inkWords:member
  package: onenote!
  fullName: inkWords
  summary: >-
    获取 Paragraph 中的 Ink 集合。 如果 ParagraphType 不为 Ink，则引发异常。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inkWords: OneNote.InkWordCollection;'
    return:
      type: <xref uid="onenote!OneNote.InkWordCollection:class" />
- name: outline
  uid: onenote!OneNote.Paragraph#outline:member
  package: onenote!
  fullName: outline
  summary: >-
    获取包含“段落”的“边框”对象。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly outline: OneNote.Outline;'
    return:
      type: <xref uid="onenote!OneNote.Outline:class" />
- name: paragraphs
  uid: onenote!OneNote.Paragraph#paragraphs:member
  package: onenote!
  fullName: paragraphs
  summary: >-
    此段落下的段落集合。 只读


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type: <xref uid="onenote!OneNote.ParagraphCollection:class" />
- name: parentParagraph
  uid: onenote!OneNote.Paragraph#parentParagraph:member
  package: onenote!
  fullName: parentParagraph
  summary: >-
    获取父段落对象。 如果父段落不存在，则引发。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentParagraph: OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
- name: parentParagraphOrNull
  uid: onenote!OneNote.Paragraph#parentParagraphOrNull:member
  package: onenote!
  fullName: parentParagraphOrNull
  summary: >-
    获取父段落对象。 如果父段落不存在，则返回 null。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
- name: parentTableCell
  uid: onenote!OneNote.Paragraph#parentTableCell:member
  package: onenote!
  fullName: parentTableCell
  summary: >-
    获取包含 Paragraph 的 TableCell 对象（如果存在）。 如果父级不为 TableCell，则引发 ItemNotFound。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCell: OneNote.TableCell;'
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
- name: parentTableCellOrNull
  uid: onenote!OneNote.Paragraph#parentTableCellOrNull:member
  package: onenote!
  fullName: parentTableCellOrNull
  summary: >-
    获取包含 Paragraph 的 TableCell 对象（如果存在）。 如果父级不为 TableCell，则返回 null。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
- name: richText
  uid: onenote!OneNote.Paragraph#richText:member
  package: onenote!
  fullName: richText
  summary: >-
    获取 Paragraph 中的 RichText 对象。 如果 ParagraphType 不为 RichText，则引发异常。 只读


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly richText: OneNote.RichText;'
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
- name: table
  uid: onenote!OneNote.Paragraph#table:member
  package: onenote!
  fullName: table
  summary: >-
    获取 Paragraph 中的 Table 对象。 如果 ParagraphType 不为 Table，则引发异常。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly table: OneNote.Table;'
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
- name: type
  uid: onenote!OneNote.Paragraph#type:member
  package: onenote!
  fullName: type
  summary: >-
    获取 Paragraph 对象的类型。 只读。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
    return:
      type: <xref uid="onenote!OneNote.ParagraphType:enum" /> | "RichText" | "Image" | "Table" | "Ink" | "Other"
methods:
- name: addNoteTag(type, status)
  uid: onenote!OneNote.Paragraph#addNoteTag:member(1)
  package: onenote!
  fullName: addNoteTag(type, status)
  summary: >-
    将 NoteTag 添加到段落。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
    parameters:
    - id: type
      description: NoteTag 的类型。
      type: <xref uid="onenote!OneNote.NoteTagType:enum" />
    - id: status
      description: NoteTag 的状态。
      type: <xref uid="onenote!OneNote.NoteTagStatus:enum" />
    return:
      type: <xref uid="onenote!OneNote.NoteTag:class" />
      description: ''
- name: addNoteTag(typeString, status)
  uid: onenote!OneNote.Paragraph#addNoteTag:member(2)
  package: onenote!
  fullName: addNoteTag(typeString, status)
  summary: >-
    将 NoteTag 添加到段落。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
    parameters:
    - id: typeString
      description: NoteTag 的类型。
      type: "\"Unknown\" | \"ToDo\" | \"Important\" | \"Question\" | \"Contact\" | \"Address\" | \"PhoneNumber\" | \"Website\" | \"Idea\" | \"Critical\" | \"ToDoPriority1\" | \"ToDoPriority2\""
    - id: status
      description: NoteTag 的状态。
      type: "\"Unknown\" | \"Normal\" | \"Completed\" | \"Disabled\" | \"OutlookTask\" | \"TaskNotSyncedYet\" | \"TaskRemoved\""
    return:
      type: <xref uid="onenote!OneNote.NoteTag:class" />
      description: ''
- name: delete()
  uid: onenote!OneNote.Paragraph#delete:member(1)
  package: onenote!
  fullName: delete()
  summary: >-
    删除 paragraph


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    \n    var paragraphs = pageContent.outline.paragraphs;\n    \n    var firstParagraph = paragraphs.getItemAt(0);\n    \n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Queue a command to delete the first paragraph                 \n            firstParagraph.delete();\n            \n            // Run the command to delete it\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getParagraphInfo()
  uid: onenote!OneNote.Paragraph#getParagraphInfo:member(1)
  package: onenote!
  fullName: getParagraphInfo()
  summary: >-
    获取段落的列表信息


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="onenote!OneNote.ParagraphInfo:interface" />&gt;
      description: ''
- name: insertHtmlAsSibling(insertLocation, html)
  uid: onenote!OneNote.Paragraph#insertHtmlAsSibling:member(1)
  package: onenote!
  fullName: insertHtmlAsSibling(insertLocation, html)
  summary: >-
    插入指定的 HTML 内容


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
    parameters:
    - id: insertLocation
      description: 相对于当前 Paragraph 的新内容的位置。
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: html
      description: 描述内容的可视化演示文稿的 HTML 字符串。 请参阅 [OneNote](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) 加载项 JavaScript API 支持的 HTML。
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertHtmlAsSibling(\"Before\", \"<p>ContentBeforeFirstParagraph</p>\");\n            firstParagraph.insertHtmlAsSibling(\"After\", \"<p>ContentAfterFirstParagraph</p>\");\n            \n            // Run the command to run inserts\n            return context.sync();\n        });\n))\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertHtmlAsSibling(insertLocationString, html)
  uid: onenote!OneNote.Paragraph#insertHtmlAsSibling:member(2)
  package: onenote!
  fullName: insertHtmlAsSibling(insertLocationString, html)
  summary: >-
    插入指定的 HTML 内容


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
    parameters:
    - id: insertLocationString
      description: 相对于当前 Paragraph 的新内容的位置。
      type: "\"Before\" | \"After\""
    - id: html
      description: 描述内容的可视化演示文稿的 HTML 字符串。 请参阅 [OneNote](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) 加载项 JavaScript API 支持的 HTML。
      type: string
    return:
      type: void
      description: ''
- name: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  uid: onenote!OneNote.Paragraph#insertImageAsSibling:member(1)
  package: onenote!
  fullName: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  summary: >-
    在指定的插入位置插入图像。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    parameters:
    - id: insertLocation
      description: 相对于当前段落的表格的位置。
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: base64EncodedImage
      description: 要追加的 HTML 字符串。
      type: string
    - id: width
      description: 可选。 以磅为单位的宽度。 默认值为 null，将考虑图像宽度。
      type: number
    - id: height
      description: 可选。 以磅为单位的高度。 默认值为 null，将考虑图像高度。
      type: number
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertImageAsSibling(\"Before\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            firstParagraph.insertImageAsSibling(\"After\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            \n            // Run the command to insert images\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  uid: onenote!OneNote.Paragraph#insertImageAsSibling:member(2)
  package: onenote!
  fullName: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  summary: >-
    在指定的插入位置插入图像。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    parameters:
    - id: insertLocationString
      description: 相对于当前段落的表格的位置。
      type: "\"Before\" | \"After\""
    - id: base64EncodedImage
      description: 要追加的 HTML 字符串。
      type: string
    - id: width
      description: 可选。 以磅为单位的宽度。 默认值为 null，将考虑图像宽度。
      type: number
    - id: height
      description: 可选。 以磅为单位的高度。 默认值为 null，将考虑图像高度。
      type: number
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
      description: ''
- name: insertRichTextAsSibling(insertLocation, paragraphText)
  uid: onenote!OneNote.Paragraph#insertRichTextAsSibling:member(1)
  package: onenote!
  fullName: insertRichTextAsSibling(insertLocation, paragraphText)
  summary: >-
    在指定的插入位置插入段落文本。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
    parameters:
    - id: insertLocation
      description: 相对于当前段落的表格的位置。
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: paragraphText
      description: 要追加的 HTML 字符串。
      type: string
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertRichTextAsSibling(\"Before\", \"Text Appears Before Paragraph\");\n            firstParagraph.insertRichTextAsSibling(\"After\", \"Text Appears After Paragraph\");\n            \n            // Run the command to insert text contents\n            return context.sync();\n        });\n})    \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
- name: insertRichTextAsSibling(insertLocationString, paragraphText)
  uid: onenote!OneNote.Paragraph#insertRichTextAsSibling:member(2)
  package: onenote!
  fullName: insertRichTextAsSibling(insertLocationString, paragraphText)
  summary: >-
    在指定的插入位置插入段落文本。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
    parameters:
    - id: insertLocationString
      description: 相对于当前段落的表格的位置。
      type: "\"Before\" | \"After\""
    - id: paragraphText
      description: 要追加的 HTML 字符串。
      type: string
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: ''
- name: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  uid: onenote!OneNote.Paragraph#insertTableAsSibling:member(1)
  package: onenote!
  fullName: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  summary: >-
    将具有指定行数和列数的表格添加到当前段落的之前或之后。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    parameters:
    - id: insertLocation
      description: 相对于当前段落的表格的位置。
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: rowCount
      description: 表格的行数。
      type: number
    - id: columnCount
      description: 表格的列数。
      type: number
    - id: values
      description: 可选的二维数组。 如果指定数组中的对应字符串，则填充单元格。
      type: string[][]
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
      description: ''
- name: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  uid: onenote!OneNote.Paragraph#insertTableAsSibling:member(2)
  package: onenote!
  fullName: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  summary: >-
    将具有指定行数和列数的表格添加到当前段落的之前或之后。


    \[[API 集：OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    parameters:
    - id: insertLocationString
      description: 相对于当前段落的表格的位置。
      type: "\"Before\" | \"After\""
    - id: rowCount
      description: 表格的行数。
      type: number
    - id: columnCount
      description: 表格的列数。
      type: number
    - id: values
      description: 可选的二维数组。 如果指定数组中的对应字符串，则填充单元格。
      type: string[][]
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
      description: ''
- name: load(option)
  uid: onenote!OneNote.Paragraph#load:member(1)
  package: onenote!
  fullName: load(option)
  summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
  remarks: >-
    除了此签名之外，此方法还具有以下签名：


    `load(option?: string | string[]): OneNote.Paragraph` - 其中选项是逗号分隔的字符串或指定要加载的属性的字符串数组。


    `load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` - 其中 option.select 是一个以逗号分隔的字符串，用于指定要加载的属性，options.expand 是一个以逗号分隔的字符串，用于指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` - 仅适用于集合类型。 它类似于前面的签名。 Option.top 指定结果中可包含的集合项的最大数量。 Option.skip 指定要跳过且未包含在结果中的项目数。 如果指定了 option.top，则结果集指定数量的项目后，将启动此参数。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="onenote!OneNote.Interfaces.ParagraphLoadOptions:interface" />
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: load(propertyNames)
  uid: onenote!OneNote.Paragraph#load:member(2)
  package: onenote!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
    parameters:
    - id: propertyNames
      description: 以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n    \n    // Queue a command to load the outline property of each pageContent.\n    pageContents.load(\"outline\");\n        \n    // Get the first PageContent on the page, and then get its Outline.\n    var pageContent = pageContents._GetItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n            \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the text.                  \n            $.each(paragraphs.items, function(index, paragraph) {\n                console.log(\"Paragraph type: \" + paragraph.type);\n                console.log(\"Paragraph ID: \" + paragraph.id);\n            });\n        });\n})        \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```\n```javascript\nOneNote.run(function(context) {\n    var app = context.application;\n    \n    // Gets the active outline\n    var outline = app.getActiveOutline();\n    \n    // load nested paragraphs and their types.\n    outline.load(\"paragraphs/type\");\n    \n    return context.sync().then(function () {\n        var paragraphs = outline.paragraphs.items;\n        \n        var promise;\n        // for each nested paragraphs, load tables only\n        for (var i = 0; i < paragraphs.length; i++) {\n            var paragraph = paragraphs[i];\n            if (paragraph.type == \"Table\") {\n                paragraph.load(\"table/id\");\n                promise =  context.sync().then(function() {\n                    console.log(paragraph.table.id);\n                });\n            }\n        }\n        return promise;\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(option)
  uid: onenote!OneNote.Paragraph#load:member(3)
  package: onenote!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(option?: {
                  select?: string;
                  expand?: string;
              }): OneNote.Paragraph;
    parameters:
    - id: option
      description: ''
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: set(properties, options)
  uid: onenote!OneNote.Paragraph#set:member(1)
  package: onenote!
  fullName: set(properties, options)
  summary: 同时设置对象的多个属性。 可以使用相应的属性传递普通对象，也可以传递同一类型的另一个 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: OneNote.Paragraph): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性按等态结构构造到调用该方法的对象的属性。
      type: <xref uid="onenote!OneNote.Interfaces.ParagraphUpdateData:interface" />
    - id: options
      description: 提供在属性对象尝试设置任何只读属性时禁止错误的选项。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: onenote!OneNote.Paragraph#set:member(2)
  package: onenote!
  fullName: set(properties)
  summary: 基于现有的已加载对象，同时设置对象上的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: OneNote.Paragraph): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="onenote!OneNote.Paragraph:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: onenote!OneNote.Paragraph#toJSON:member(1)
  package: onenote!
  fullName: toJSON()
  summary: 重写 JavaScript 方法，以便向 API 对象 `toJSON()` 传递时提供更多有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->，反过来，调用传递给它的对象的方法。) 而原始 OneNote.Paragraph 对象是 API 对象，该方法返回一个纯 `toJSON` JavaScript 对象， (类型为 `toJSON``OneNote.Interfaces.ParagraphData`<!-- -->) 原始对象中任何加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
    return:
      type: <xref uid="onenote!OneNote.Interfaces.ParagraphData:interface" />
      description: ''
- name: track()
  uid: onenote!OneNote.Paragraph#track:member(1)
  package: onenote!
  fullName: track()
  summary: 根据文档中的相应更改来跟踪对象，以便进行自动调整。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 如果你在“.sync”调用之间和按顺序执行“.run”批处理之外使用此对象，并且在对象上设置属性或调用方法时出现“InvalidObjectPath”错误，则需要在首次创建对象时为跟踪的对象集合添加对象。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: untrack()
  uid: onenote!OneNote.Paragraph#untrack:member(1)
  package: onenote!
  fullName: untrack()
  summary: 释放与此对象关联的内存（如果先前已跟踪过）。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 拥有许多跟踪对象会降低主机应用程序的速度，因此请在使用完毕后释放所添加的任何对象。 在内存释放生效之前，你需要调用“context.sync()”。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 4b94e238114adf1df9fc6f5f84664963d891f08b
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50537993"
