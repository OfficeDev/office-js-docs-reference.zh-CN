### YamlMime:UniversalReference
ms.openlocfilehash: 678b994e3166ff3f1d307db6fb129581d7f52a27
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979853"
items:
- uid: onenote.OneNote.ParagraphCollection
  summary: >-
    <span data-ttu-id="d993a-101">表示一组 Paragraph 对象。</span><span class="sxs-lookup"><span data-stu-id="d993a-101">Represents a collection of Paragraph objects.</span></span>


    <span data-ttu-id="d993a-102">\[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d993a-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.ParagraphCollection
  fullName: OneNote.ParagraphCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.ParagraphCollection.context
  - onenote.OneNote.ParagraphCollection.count
  - onenote.OneNote.ParagraphCollection.getItem
  - onenote.OneNote.ParagraphCollection.getItemAt
  - onenote.OneNote.ParagraphCollection.items
  - onenote.OneNote.ParagraphCollection.load
  - onenote.OneNote.ParagraphCollection.load_1
  - onenote.OneNote.ParagraphCollection.load_2
  - onenote.OneNote.ParagraphCollection.toJSON
  - onenote.OneNote.ParagraphCollection.track
  - onenote.OneNote.ParagraphCollection.untrack
- uid: onenote.OneNote.ParagraphCollection.context
  summary: <span data-ttu-id="d993a-103">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="d993a-103">The request context associated with the object.</span></span> <span data-ttu-id="d993a-104">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="d993a-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.ParagraphCollection.count
  summary: >-
    <span data-ttu-id="d993a-p102">返回页面中的段落数目。只读。</span><span class="sxs-lookup"><span data-stu-id="d993a-p102">Returns the number of paragraphs in the page. Read-only.</span></span>


    <span data-ttu-id="d993a-107">\[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d993a-107">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.ParagraphCollection.getItem
  summary: >-
    <span data-ttu-id="d993a-p103">按其在集合中的 ID 或索引获取 Paragraph 对象。只读。</span><span class="sxs-lookup"><span data-stu-id="d993a-p103">Gets a Paragraph object by ID or by its index in the collection. Read-only.</span></span>


    <span data-ttu-id="d993a-110">\[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d993a-110">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number | string): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="d993a-111">Paragraph 对象的 ID 或集合中 Paragraph 对象的索引位置。</span><span class="sxs-lookup"><span data-stu-id="d993a-111">The ID of the Paragraph object, or the index location of the Paragraph object in the collection.</span></span>
      type:
      - number | string
- uid: onenote.OneNote.ParagraphCollection.getItemAt
  summary: >-
    <span data-ttu-id="d993a-112">根据其在集合中的位置获取 paragraph。</span><span class="sxs-lookup"><span data-stu-id="d993a-112">Gets a paragraph on its position in the collection.</span></span>


    <span data-ttu-id="d993a-113">\[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d993a-113">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d993a-114\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d993a-114\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page, and then get its Outline's first paragraph.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the type and richText.text property of this paragraph.\n    firstParagraph.load(\"id,type\");\n\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            // Write text from paragraph to console\n            console.log(\n                \"First Paragraph found with id : \" + \n                firstParagraph.id + \" and type \" + firstParagraph.type);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: index
      description: <span data-ttu-id="d993a-p104">要检索的对象的索引值。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="d993a-p104">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: onenote.OneNote.ParagraphCollection.items
  summary: <span data-ttu-id="d993a-117">获取此集合中的加载的子项目。</span><span class="sxs-lookup"><span data-stu-id="d993a-117">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: OneNote.Paragraph[];'
    return:
      type:
      - OneNote.Paragraph[]
- uid: onenote.OneNote.ParagraphCollection.load
  summary: <span data-ttu-id="d993a-118">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="d993a-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d993a-119">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="d993a-119">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d993a-120">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="d993a-120">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d993a-121">`load(option?: string | string[]): OneNote.ParagraphCollection`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="d993a-121">`load(option?: string | string[]): OneNote.ParagraphCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d993a-122">`load(option?: { select?: string; expand?: string; }): OneNote.ParagraphCollection`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="d993a-122">`load(option?: { select?: string; expand?: string; }): OneNote.ParagraphCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d993a-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.ParagraphCollection`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="d993a-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.ParagraphCollection` - Only available on collection types.</span></span> <span data-ttu-id="d993a-124">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="d993a-124">It is similar to the preceding signature.</span></span> <span data-ttu-id="d993a-125">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="d993a-125">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d993a-126">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="d993a-126">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d993a-127">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="d993a-127">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.ParagraphCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions): OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - OneNote.Interfaces.ParagraphCollectionLoadOptions & OneNote.Interfaces.CollectionLoadOptions
- uid: onenote.OneNote.ParagraphCollection.load_1
  summary: <span data-ttu-id="d993a-128">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="d993a-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d993a-129">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="d993a-129">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d993a-130\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d993a-130\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page, and then get its Outline's first paragraph.\n    var pageContent = pageContents.getItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            var firstParagraph = paragraphs.items[0];\n            // Write text from first paragraph to console\n            console.log(\n                \"First Paragraph found with id : \" + \n                firstParagraph.id + \" and type \" + firstParagraph.type);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page, and then get its outline's paragraphs.\n    var outlinePageContents = ;\n    var paragraphs = ;\n    var richTextParagraphs = ;\n    // Queue a command to load the id and type of each page content in the outline.\n    pageContents.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            // Load all page contents of type Outline\n            $.each(pageContents.items, function(index, pageContent) {\n                if(pageContent.type == 'Outline')\n                {\n                    pageContent.load('outline,outline/paragraphs,outline/paragraphs/type');\n                    outlinePageContents.push(pageContent);\n                }\n            });\n            return context.sync();\n        })\n        .then(function () {\n            // Load all rich text paragraphs across outlines\n            $.each(outlinePageContents, function(index, outlinePageContent) {\n                var outline = outlinePageContent.outline;\n                paragraphs = paragraphs.concat(outline.paragraphs.items);\n            });\n            $.each(paragraphs, function(index, paragraph) {\n                if(paragraph.type == 'RichText')\n                {\n                    richTextParagraphs.push(paragraph);\n                    paragraph.load(\"id,richText/text\");\n                }\n            });\n            return context.sync();\n        })\n        .then(function () {\n            // Display all rich text paragraphs to the console\n            $.each(richTextParagraphs, function(index, richTextParagraph) {\n                var richText = richTextParagraph.richText;\n                console.log(\n                    \"Paragraph found with richtext content : \" + \n                    richText.text + \" and richtext id : \" + richText.id);\n            });\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d993a-131">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="d993a-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.ParagraphCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: onenote.OneNote.ParagraphCollection.toJSON
  summary: <span data-ttu-id="d993a-132">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="d993a-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d993a-133">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)而原始`OneNote.ParagraphCollection`对象是 API 对象，`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`OneNote.Interfaces.ParagraphCollectionData` <!-- -->)，其中包含数组"项目"的任何加载属性集的项目的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="d993a-133">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `OneNote.ParagraphCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ParagraphCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphCollectionData;'
    return:
      type:
      - onenote.OneNote.Interfaces.ParagraphCollectionData
      description: ''
- uid: onenote.OneNote.ParagraphCollection.track
  summary: <span data-ttu-id="d993a-134">跟踪自动调整根据周围的文档中的更改的对象。</span><span class="sxs-lookup"><span data-stu-id="d993a-134">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="d993a-135">此呼叫是 context.trackedObjects.add(thisObject) 简写。</span><span class="sxs-lookup"><span data-stu-id="d993a-135">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="d993a-136">如果您正在使用此对象跨".sync"呼叫和外部".run"批处理和 get"InvalidObjectPath"错误的顺序执行设置属性时，或调用对象的方法，您需要具有将对象添加到跟踪对象首先创建对象集合。</span><span class="sxs-lookup"><span data-stu-id="d993a-136">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
      description: ''
- uid: onenote.OneNote.ParagraphCollection.untrack
  summary: <span data-ttu-id="d993a-137">发行版与此对象，如果以前跟踪关联的内存。</span><span class="sxs-lookup"><span data-stu-id="d993a-137">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="d993a-138">此呼叫是简写 context.trackedObjects.remove(thisObject)。</span><span class="sxs-lookup"><span data-stu-id="d993a-138">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="d993a-139">具有许多跟踪的对象速度减慢主机应用程序，因此请记住以释放添加在完成后的任何对象使用它们。</span><span class="sxs-lookup"><span data-stu-id="d993a-139">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="d993a-140">您将需要的内存版本生效前调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="d993a-140">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
      description: ''
