### YamlMime:UniversalReference
ms.openlocfilehash: c1d4fc7026b542c523e277258154f6c7d60a8f55
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 10/17/2018
ms.locfileid: "25586547"
items:
- uid: onenote.OneNote.ParagraphCollection
  summary: >-
    <span data-ttu-id="241d3-101">表示一组 Paragraph 对象。</span><span class="sxs-lookup"><span data-stu-id="241d3-101">Represents a collection of Paragraph objects.</span></span>


    <span data-ttu-id="241d3-102">\[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="241d3-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.ParagraphCollection
  fullName: onenote.OneNote.ParagraphCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.ParagraphCollection.count
  - onenote.OneNote.ParagraphCollection.getItem
  - onenote.OneNote.ParagraphCollection.getItemAt
  - onenote.OneNote.ParagraphCollection.items
  - onenote.OneNote.ParagraphCollection.load
  - onenote.OneNote.ParagraphCollection.toJSON
  - onenote.OneNote.ParagraphCollection.track
  - onenote.OneNote.ParagraphCollection.untrack
- uid: onenote.OneNote.ParagraphCollection.count
  summary: >-
    <span data-ttu-id="241d3-p101">返回页面中的段落数目。只读。</span><span class="sxs-lookup"><span data-stu-id="241d3-p101">Returns the number of paragraphs in the page. Read-only.</span></span>


    <span data-ttu-id="241d3-105">\[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="241d3-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: count
  fullName: onenote.OneNote.ParagraphCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.ParagraphCollection.getItem
  summary: >-
    <span data-ttu-id="241d3-p102">按其在集合中的 ID 或索引获取 Paragraph 对象。只读。</span><span class="sxs-lookup"><span data-stu-id="241d3-p102">Gets a Paragraph object by ID or by its index in the collection. Read-only.</span></span>


    <span data-ttu-id="241d3-108">\[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="241d3-108">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: onenote.OneNote.ParagraphCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number | string): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="241d3-109">Paragraph 对象的 ID 或集合中 Paragraph 对象的索引位置。</span><span class="sxs-lookup"><span data-stu-id="241d3-109">The ID of the Paragraph object, or the index location of the Paragraph object in the collection.</span></span>
      type:
      - number | string
- uid: onenote.OneNote.ParagraphCollection.getItemAt
  summary: >-
    <span data-ttu-id="241d3-110">根据其在集合中的位置获取 paragraph。</span><span class="sxs-lookup"><span data-stu-id="241d3-110">Gets a paragraph on its position in the collection.</span></span>


    <span data-ttu-id="241d3-111">\[[API 集： OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="241d3-111">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: onenote.OneNote.ParagraphCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"241d3-112\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"241d3-112\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page, and then get its Outline's first paragraph.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the type and richText.text property of this paragraph.\n    firstParagraph.load(\"id,type\");\n\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            // Write text from paragraph to console\n            console.log(\n                \"First Paragraph found with id : \" + \n                firstParagraph.id + \" and type \" + firstParagraph.type);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
    parameters:
    - id: index
      description: <span data-ttu-id="241d3-p103">要检索的对象的索引值。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="241d3-p103">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: onenote.OneNote.ParagraphCollection.items
  summary: <span data-ttu-id="241d3-115">获取此集合中的加载的子项目。</span><span class="sxs-lookup"><span data-stu-id="241d3-115">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: onenote.OneNote.ParagraphCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: OneNote.Paragraph[];'
    return:
      type:
      - OneNote.Paragraph[]
- uid: onenote.OneNote.ParagraphCollection.load
  summary: <span data-ttu-id="241d3-116">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="241d3-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="241d3-117">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="241d3-117">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"241d3-118\">除了此签名，此方法具有以下签名：</span><span class=\"sxs-lookup\"><span data-stu-id=\"241d3-118\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"241d3-119\">`load(option?: { select?: string; expand?: string; }): OneNote.ParagraphCollection`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class=\"sxs-lookup\"><span data-stu-id=\"241d3-119\">`load(option?: { select?: string; expand?: string; }): OneNote.ParagraphCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"241d3-120\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.ParagraphCollection`-仅可对集合的类型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"241d3-120\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.ParagraphCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"241d3-121\">它是类似于前一个签名。</span><span class=\"sxs-lookup\"><span data-stu-id=\"241d3-121\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"241d3-122\">Option.top 指定集合项可在结果中包含的最大数目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"241d3-122\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"241d3-123\">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"241d3-123\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"241d3-124\">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class=\"sxs-lookup\"><span data-stu-id=\"241d3-124\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"241d3-125\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"241d3-125\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page, and then get its Outline's first paragraph.\n    var pageContent = pageContents.getItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            var firstParagraph = paragraphs.items[0];\n            // Write text from first paragraph to console\n            console.log(\n                \"First Paragraph found with id : \" + \n                firstParagraph.id + \" and type \" + firstParagraph.type);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page, and then get its outline's paragraphs.\n    var outlinePageContents = ;\n    var paragraphs = ;\n    var richTextParagraphs = ;\n    // Queue a command to load the id and type of each page content in the outline.\n    pageContents.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            // Load all page contents of type Outline\n            $.each(pageContents.items, function(index, pageContent) {\n                if(pageContent.type == 'Outline')\n                {\n                    pageContent.load('outline,outline/paragraphs,outline/paragraphs/type');\n                    outlinePageContents.push(pageContent);\n                }\n            });\n            return context.sync();\n        })\n        .then(function () {\n            // Load all rich text paragraphs across outlines\n            $.each(outlinePageContents, function(index, outlinePageContent) {\n                var outline = outlinePageContent.outline;\n                paragraphs = paragraphs.concat(outline.paragraphs.items);\n            });\n            $.each(paragraphs, function(index, paragraph) {\n                if(paragraph.type == 'RichText')\n                {\n                    richTextParagraphs.push(paragraph);\n                    paragraph.load(\"id,richText/text\");\n                }\n            });\n            return context.sync();\n        })\n        .then(function () {\n            // Display all rich text paragraphs to the console\n            $.each(richTextParagraphs, function(index, richTextParagraph) {\n                var richText = richTextParagraph.richText;\n                console.log(\n                    \"Paragraph found with richtext content : \" + \n                    richText.text + \" and richtext id : \" + richText.id);\n            });\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: onenote.OneNote.ParagraphCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="241d3-126">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="241d3-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.ParagraphCollection.toJSON
  name: toJSON()
  fullName: onenote.OneNote.ParagraphCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphCollectionData;'
    return:
      type:
      - onenote.OneNote.Interfaces.ParagraphCollectionData
      description: ''
- uid: onenote.OneNote.ParagraphCollection.track
  summary: <span data-ttu-id="241d3-127">跟踪自动调整根据周围的文档中的更改的对象。</span><span class="sxs-lookup"><span data-stu-id="241d3-127">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="241d3-128">此呼叫是 context.trackedObjects.add(thisObject) 简写。</span><span class="sxs-lookup"><span data-stu-id="241d3-128">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="241d3-129">如果您正在使用此对象跨".sync"呼叫和外部".run"批处理和 get"InvalidObjectPath"错误的顺序执行设置属性时，或调用对象的方法，您需要具有将对象添加到跟踪对象首先创建对象集合。</span><span class="sxs-lookup"><span data-stu-id="241d3-129">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: onenote.OneNote.ParagraphCollection.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
      description: ''
- uid: onenote.OneNote.ParagraphCollection.untrack
  summary: <span data-ttu-id="241d3-130">发行版与此对象，如果以前跟踪关联的内存。</span><span class="sxs-lookup"><span data-stu-id="241d3-130">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="241d3-131">此呼叫是简写 context.trackedObjects.remove(thisObject)。</span><span class="sxs-lookup"><span data-stu-id="241d3-131">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="241d3-132">具有许多跟踪的对象速度减慢主机应用程序，因此请记住以释放添加在完成后的任何对象使用它们。</span><span class="sxs-lookup"><span data-stu-id="241d3-132">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="241d3-133">您将需要的内存版本生效前调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="241d3-133">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: onenote.OneNote.ParagraphCollection.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.ParagraphCollection;'
    return:
      type:
      - onenote.OneNote.ParagraphCollection
      description: ''
