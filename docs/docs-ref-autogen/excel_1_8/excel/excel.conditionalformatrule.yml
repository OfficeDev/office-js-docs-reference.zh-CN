### YamlMime:TSType
name: Excel.ConditionalFormatRule
uid: excel!Excel.ConditionalFormatRule:class
package: excel!
fullName: Excel.ConditionalFormatRule
summary: >-
  表示所有传统规则/格式配对的规则。


  \[[API 集：ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.ConditionalFormatRule#context:member
  package: excel!
  fullName: context
  summary: 与对象关联的请求上下文。 这会将外接程序的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: formula
  uid: excel!Excel.ConditionalFormatRule#formula:member
  package: excel!
  fullName: formula
  summary: >-
    如果需要，公式可对条件格式规则进行求值。


    \[[API 集：ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formula: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/14-conditional-formatting/conditional-formatting-basic.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- name: formulaLocal
  uid: excel!Excel.ConditionalFormatRule#formulaLocal:member
  package: excel!
  fullName: formulaLocal
  summary: >-
    如果需要，公式可采用用户的语言对条件格式规则进行求值。


    \[[API 集：ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulaLocal: string;'
    return:
      type: string
- name: formulaR1C1
  uid: excel!Excel.ConditionalFormatRule#formulaR1C1:member
  package: excel!
  fullName: formulaR1C1
  summary: >-
    如果需要，公式可采用 R1C1 表示法对条件格式规则进行求值。


    \[[API 集：ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulaR1C1: string;'
    return:
      type: string
methods:
- name: load(options)
  uid: excel!Excel.ConditionalFormatRule#load:member(1)
  package: excel!
  fullName: load(options)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.ConditionalFormatRuleLoadOptions): Excel.ConditionalFormatRule;'
    parameters:
    - id: options
      description: 提供要加载的对象的属性的选项。
      type: <xref uid="excel!Excel.Interfaces.ConditionalFormatRuleLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.ConditionalFormatRule:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.ConditionalFormatRule#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormatRule;'
    parameters:
    - id: propertyNames
      description: 以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.ConditionalFormatRule:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.ConditionalFormatRule#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.ConditionalFormatRule;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，它是一个以逗号分隔的字符串，用于指定要加载的 `propertyNamesAndPaths.expand` 导航属性。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.ConditionalFormatRule:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.ConditionalFormatRule#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 同时设置对象的多个属性。 你可以传递具有相应属性的普通对象，也可以传递同一类型的另一个 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: Excel.ConditionalFormatRule): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性以等态方式构造到调用该方法的对象的属性。
      type: <xref uid="excel!Excel.Interfaces.ConditionalFormatRuleUpdateData:interface" />
    - id: options
      description: 提供在属性对象尝试设置任何只读属性时禁止错误的选项。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.ConditionalFormatRule#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 基于现有的已加载对象，同时设置对象上的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.ConditionalFormatRule): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.ConditionalFormatRule:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.ConditionalFormatRule#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: 重写 JavaScript 方法，以便向 API 对象传递 `toJSON()` 时提供更多有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->，反过来，调用传递给该对象的对象的方法。) 而原始 Excel.ConditionalFormatRule 对象是一个 API 对象，该方法返回一个类型为 (`toJSON` `toJSON` JavaScript 对象 `Excel.Interfaces.ConditionalFormatRuleData`<!-- -->) 包含原始对象中任何加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.ConditionalFormatRuleData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 9b0b2731ff251d434bfe2c647eaadb049bdb7987
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49858219"
