### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeBorder:class'
    summary: |-
      <span data-ttu-id="e5622-101">代表对象的边框。</span><span class="sxs-lookup"><span data-stu-id="e5622-101">Represents the border of an object.</span></span>

      <span data-ttu-id="e5622-102">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5622-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalRangeBorder
    fullName: Excel.ConditionalRangeBorder
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeBorder#color:member'
      - 'excel!Excel.ConditionalRangeBorder#context:member'
      - 'excel!Excel.ConditionalRangeBorder#load:member(1)'
      - 'excel!Excel.ConditionalRangeBorder#load:member(2)'
      - 'excel!Excel.ConditionalRangeBorder#load:member(3)'
      - 'excel!Excel.ConditionalRangeBorder#set:member(1)'
      - 'excel!Excel.ConditionalRangeBorder#set:member(2)'
      - 'excel!Excel.ConditionalRangeBorder#sideIndex:member'
      - 'excel!Excel.ConditionalRangeBorder#style:member'
      - 'excel!Excel.ConditionalRangeBorder#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalRangeBorder#color:member'
    summary: |-
      <span data-ttu-id="e5622-103">代表\#RRGGBB （例如 "FFA500"）或命名的 HTML 颜色（例如 "橙色"）的边框线条颜色的 HTML 颜色代码。</span><span class="sxs-lookup"><span data-stu-id="e5622-103">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>

      <span data-ttu-id="e5622-104">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5622-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalRangeBorder#context:member'
    summary: <span data-ttu-id="e5622-105">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="e5622-105">The request context associated with the object.</span></span> <span data-ttu-id="e5622-106">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="e5622-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(1)'
    summary: <span data-ttu-id="e5622-107">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e5622-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5622-108">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="e5622-108">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalRangeBorderLoadOptions): Excel.ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="e5622-109">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="e5622-109">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeBorderLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(2)'
    summary: <span data-ttu-id="e5622-110">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e5622-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5622-111">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="e5622-111">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeBorder;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="e5622-112">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="e5622-112">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeBorder#load:member(3)'
    summary: <span data-ttu-id="e5622-113">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e5622-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5622-114">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="e5622-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeBorder;
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e5622-115">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="e5622-115">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalRangeBorder#set:member(1)'
    summary: '<span data-ttu-id="e5622-116">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="e5622-116">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e5622-117">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="e5622-117">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e5622-118">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="e5622-118">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalRangeBorder): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeBorderUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="e5622-119">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="e5622-119">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeBorderUpdateData:interface'
        - id: options
          description: <span data-ttu-id="e5622-120">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="e5622-120">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeBorder#set:member(2)'
    summary: '<span data-ttu-id="e5622-121">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="e5622-121">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeBorder): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeBorder:class'
  - uid: 'excel!Excel.ConditionalRangeBorder#sideIndex:member'
    summary: |-
      <span data-ttu-id="e5622-122">指示边框的特定边的常量值。</span><span class="sxs-lookup"><span data-stu-id="e5622-122">Constant value that indicates the specific side of the border.</span></span> <span data-ttu-id="e5622-123">有关详细信息，请参阅 ConditionalRangeBorderIndex。</span><span class="sxs-lookup"><span data-stu-id="e5622-123">See Excel.ConditionalRangeBorderIndex for details.</span></span> <span data-ttu-id="e5622-124">只读。</span><span class="sxs-lookup"><span data-stu-id="e5622-124">Read-only.</span></span>

      <span data-ttu-id="e5622-125">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5622-125">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sideIndex
    fullName: sideIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sideIndex: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder#sideIndex~0:complex'
  - uid: 'excel!Excel.ConditionalRangeBorder#style:member'
    summary: |-
      <span data-ttu-id="e5622-126">线条样式的常量之一，指定边框的线条样式。</span><span class="sxs-lookup"><span data-stu-id="e5622-126">One of the constants of line style specifying the line style for the border.</span></span> <span data-ttu-id="e5622-127">有关详细信息，请参阅 BorderLineStyle。</span><span class="sxs-lookup"><span data-stu-id="e5622-127">See Excel.BorderLineStyle for details.</span></span>

      <span data-ttu-id="e5622-128">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5622-128">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot";'
      return:
        type:
          - 'excel!Excel.ConditionalRangeBorder#style~0:complex'
  - uid: 'excel!Excel.ConditionalRangeBorder#toJSON:member(1)'
    summary: '<span data-ttu-id="e5622-129">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e5622-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e5622-130">.</span><span class="sxs-lookup"><span data-stu-id="e5622-130"></span></span> <span data-ttu-id="e5622-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e5622-131"></span></span><!-- --><span data-ttu-id="e5622-132">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 ConditionalRangeBorder 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.ConditionalRangeBorderData`</span><span class="sxs-lookup"><span data-stu-id="e5622-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeBorder object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeBorderData`</span></span><!-- --><span data-ttu-id="e5622-133">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="e5622-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeBorderData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeBorderData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeBorder:class'
    name: Excel.ConditionalRangeBorder
  - uid: 'excel!Excel.Interfaces.ConditionalRangeBorderLoadOptions:interface'
    name: Excel.Interfaces.ConditionalRangeBorderLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeBorderUpdateData:interface'
    name: Interfaces.ConditionalRangeBorderUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.ConditionalRangeBorder#sideIndex~0:complex'
    name: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
    fullName: Excel.ConditionalRangeBorderIndex | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeBorderIndex:enum'
        name: Excel.ConditionalRangeBorderIndex
        fullName: Excel.ConditionalRangeBorderIndex
      - name: ' | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"'
        fullName: ' | "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight"'
  - uid: 'excel!Excel.ConditionalRangeBorder#style~0:complex'
    name: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
    fullName: Excel.ConditionalRangeBorderLineStyle | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"
    spec.typeScript:
      - uid: 'excel!Excel.ConditionalRangeBorderLineStyle:enum'
        name: Excel.ConditionalRangeBorderLineStyle
        fullName: Excel.ConditionalRangeBorderLineStyle
      - name: ' | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"'
        fullName: ' | "None" | "Continuous" | "Dash" | "DashDot" | "DashDotDot" | "Dot"'
  - uid: 'excel!Excel.Interfaces.ConditionalRangeBorderData:interface'
    name: Excel.Interfaces.ConditionalRangeBorderData