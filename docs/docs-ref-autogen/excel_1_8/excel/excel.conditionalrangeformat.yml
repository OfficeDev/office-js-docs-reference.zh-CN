### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ConditionalRangeFormat
    summary: |-
      <span data-ttu-id="165a4-101">将条件格式区域的字体、填充、边框和其他属性封装在一起的格式对象。</span><span class="sxs-lookup"><span data-stu-id="165a4-101">A format object encapsulating the conditional formats range's font, fill, borders, and other properties.</span></span>

      <span data-ttu-id="165a4-102">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="165a4-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalRangeFormat
    fullName: Excel.ConditionalRangeFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ConditionalRangeFormat.borders
      - excel.Excel.ConditionalRangeFormat.context
      - excel.Excel.ConditionalRangeFormat.fill
      - excel.Excel.ConditionalRangeFormat.font
      - excel.Excel.ConditionalRangeFormat.load
      - excel.Excel.ConditionalRangeFormat.load_1
      - excel.Excel.ConditionalRangeFormat.load_2
      - excel.Excel.ConditionalRangeFormat.numberFormat
      - excel.Excel.ConditionalRangeFormat.set
      - excel.Excel.ConditionalRangeFormat.set_1
      - excel.Excel.ConditionalRangeFormat.toJSON
  - uid: excel.Excel.ConditionalRangeFormat.borders
    summary: |-
      <span data-ttu-id="165a4-103">应用于整体条件格式范围的 border 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="165a4-103">Collection of border objects that apply to the overall conditional format range.</span></span> <span data-ttu-id="165a4-104">只读。</span><span class="sxs-lookup"><span data-stu-id="165a4-104">Read-only.</span></span>

      <span data-ttu-id="165a4-105">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="165a4-105">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: borders
    fullName: borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: Excel.ConditionalRangeBorderCollection;'
      return:
        type:
          - excel.Excel.ConditionalRangeBorderCollection
  - uid: excel.Excel.ConditionalRangeFormat.context
    summary: <span data-ttu-id="165a4-106">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="165a4-106">The request context associated with the object.</span></span> <span data-ttu-id="165a4-107">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="165a4-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ConditionalRangeFormat.fill
    summary: |-
      <span data-ttu-id="165a4-108">返回在整体条件格式范围上定义的 fill 对象。</span><span class="sxs-lookup"><span data-stu-id="165a4-108">Returns the fill object defined on the overall conditional format range.</span></span> <span data-ttu-id="165a4-109">只读。</span><span class="sxs-lookup"><span data-stu-id="165a4-109">Read-only.</span></span>

      <span data-ttu-id="165a4-110">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="165a4-110">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.ConditionalRangeFill;'
      return:
        type:
          - excel.Excel.ConditionalRangeFill
  - uid: excel.Excel.ConditionalRangeFormat.font
    summary: |-
      <span data-ttu-id="165a4-111">返回在整体条件格式区域上定义的 font 对象。</span><span class="sxs-lookup"><span data-stu-id="165a4-111">Returns the font object defined on the overall conditional format range.</span></span> <span data-ttu-id="165a4-112">只读。</span><span class="sxs-lookup"><span data-stu-id="165a4-112">Read-only.</span></span>

      <span data-ttu-id="165a4-113">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="165a4-113">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.ConditionalRangeFont;'
      return:
        type:
          - excel.Excel.ConditionalRangeFont
  - uid: excel.Excel.ConditionalRangeFormat.load
    summary: <span data-ttu-id="165a4-114">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="165a4-115">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="165a4-115">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="165a4-116">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="165a4-116">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="165a4-117">`load(option?: string | string[]): Excel.ConditionalRangeFormat`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-117">`load(option?: string | string[]): Excel.ConditionalRangeFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="165a4-118">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-118">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="165a4-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFormat`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="165a4-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFormat` - Only available on collection types.</span></span> <span data-ttu-id="165a4-120">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="165a4-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="165a4-121">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="165a4-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="165a4-122">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="165a4-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="165a4-123">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="165a4-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ConditionalRangeFormatLoadOptions): Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ConditionalRangeFormatLoadOptions
  - uid: excel.Excel.ConditionalRangeFormat.load_1
    summary: '<span data-ttu-id="165a4-124">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="165a4-125">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="165a4-125">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="165a4-126">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.ConditionalRangeFormat.load_2
    summary: '<span data-ttu-id="165a4-127">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="165a4-128">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="165a4-128">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="165a4-129">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ConditionalRangeFormat.numberFormat
    summary: |-
      <span data-ttu-id="165a4-130">表示给定范围的 Excel 数字格式代码。</span><span class="sxs-lookup"><span data-stu-id="165a4-130">Represents Excel's number format code for the given range.</span></span> <span data-ttu-id="165a4-131">如果传入 null, 则清除。</span><span class="sxs-lookup"><span data-stu-id="165a4-131">Cleared if null is passed in.</span></span>

      <span data-ttu-id="165a4-132">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="165a4-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: numberFormat
    fullName: numberFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'numberFormat: any;'
      return:
        type:
          - any
  - uid: excel.Excel.ConditionalRangeFormat.set
    summary: '<span data-ttu-id="165a4-133">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-133">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="165a4-134">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="165a4-134">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="165a4-135">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="165a4-135">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalRangeFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="165a4-136">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-136">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.ConditionalRangeFormatUpdateData
        - id: options
          description: '<span data-ttu-id="165a4-137">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="165a4-137">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ConditionalRangeFormat.set_1
    summary: '<span data-ttu-id="165a4-138">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="165a4-138">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ConditionalRangeFormat
  - uid: excel.Excel.ConditionalRangeFormat.toJSON
    summary: '<span data-ttu-id="165a4-139">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="165a4-139">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="165a4-140">.</span><span class="sxs-lookup"><span data-stu-id="165a4-140"></span></span> <span data-ttu-id="165a4-141">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="165a4-141"></span></span><!-- --><span data-ttu-id="165a4-142">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 ConditionalRangeFormat 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.ConditionalRangeFormatData`</span><span class="sxs-lookup"><span data-stu-id="165a4-142">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFormatData`</span></span><!-- --><span data-ttu-id="165a4-143">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="165a4-143">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ConditionalRangeFormatData
        description: ''