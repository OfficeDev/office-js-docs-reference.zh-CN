### YamlMime:UniversalReference
items:
  - uid: excel.Excel.BindingCollection
    summary: |-
      <span data-ttu-id="bb076-101">表示属于工作簿的所有绑定对象的集合。</span><span class="sxs-lookup"><span data-stu-id="bb076-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>

      <span data-ttu-id="bb076-102">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.BindingCollection
    fullName: Excel.BindingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.BindingCollection.add
      - excel.Excel.BindingCollection.add_1
      - excel.Excel.BindingCollection.addFromNamedItem
      - excel.Excel.BindingCollection.addFromNamedItem_1
      - excel.Excel.BindingCollection.addFromSelection
      - excel.Excel.BindingCollection.addFromSelection_1
      - excel.Excel.BindingCollection.context
      - excel.Excel.BindingCollection.count
      - excel.Excel.BindingCollection.getCount
      - excel.Excel.BindingCollection.getItem
      - excel.Excel.BindingCollection.getItemAt
      - excel.Excel.BindingCollection.getItemOrNullObject
      - excel.Excel.BindingCollection.items
      - excel.Excel.BindingCollection.load
      - excel.Excel.BindingCollection.load_1
      - excel.Excel.BindingCollection.load_2
      - excel.Excel.BindingCollection.toJSON
  - uid: excel.Excel.BindingCollection.add
    summary: |-
      <span data-ttu-id="bb076-103">将新的 binding 对象添加到特定区域。</span><span class="sxs-lookup"><span data-stu-id="bb076-103">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="bb076-104">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingType, id)'
    fullName: 'add(range, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="bb076-p101">要将绑定绑定到的范围。可以是 Excel 范围对象，也可以是字符串。如果是字符串，必须包含完整地址，包括工作表名称</span><span class="sxs-lookup"><span data-stu-id="bb076-p101">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - Range | string
        - id: bindingType
          description: <span data-ttu-id="bb076-108">绑定的类型。</span><span class="sxs-lookup"><span data-stu-id="bb076-108">Type of binding.</span></span> <span data-ttu-id="bb076-109">请参阅 BindingType。</span><span class="sxs-lookup"><span data-stu-id="bb076-109">See Excel.BindingType.</span></span>
          type:
            - excel.Excel.BindingType
        - id: id
          description: <span data-ttu-id="bb076-110">绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="bb076-110">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.add_1
    summary: |-
      <span data-ttu-id="bb076-111">将新的 binding 对象添加到特定区域。</span><span class="sxs-lookup"><span data-stu-id="bb076-111">Add a new binding to a particular Range.</span></span>

      <span data-ttu-id="bb076-112">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-112">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(range, bindingTypeString, id)'
    fullName: 'add(range, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(range: Range | string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: range
          description: '<span data-ttu-id="bb076-p103">要将绑定绑定到的范围。可以是 Excel 范围对象，也可以是字符串。如果是字符串，必须包含完整地址，包括工作表名称</span><span class="sxs-lookup"><span data-stu-id="bb076-p103">Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name</span></span>'
          type:
            - Range | string
        - id: bindingTypeString
          description: <span data-ttu-id="bb076-116">绑定的类型。</span><span class="sxs-lookup"><span data-stu-id="bb076-116">Type of binding.</span></span> <span data-ttu-id="bb076-117">请参阅 BindingType。</span><span class="sxs-lookup"><span data-stu-id="bb076-117">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="bb076-118">绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="bb076-118">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromNamedItem
    summary: |-
      <span data-ttu-id="bb076-119">根据工作簿中的命名项添加新的 binding 对象。</span><span class="sxs-lookup"><span data-stu-id="bb076-119">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="bb076-120">如果已命名项目引用多个区域, 则将返回 "InvalidReference" 错误。</span><span class="sxs-lookup"><span data-stu-id="bb076-120">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="bb076-121">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-121">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingType, id)'
    fullName: 'addFromNamedItem(name, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="bb076-122">从中创建绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="bb076-122">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingType
          description: <span data-ttu-id="bb076-123">绑定的类型。</span><span class="sxs-lookup"><span data-stu-id="bb076-123">Type of binding.</span></span> <span data-ttu-id="bb076-124">请参阅 BindingType。</span><span class="sxs-lookup"><span data-stu-id="bb076-124">See Excel.BindingType.</span></span>
          type:
            - excel.Excel.BindingType
        - id: id
          description: <span data-ttu-id="bb076-125">绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="bb076-125">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromNamedItem_1
    summary: |-
      <span data-ttu-id="bb076-126">根据工作簿中的命名项添加新的 binding 对象。</span><span class="sxs-lookup"><span data-stu-id="bb076-126">Add a new binding based on a named item in the workbook.</span></span> <span data-ttu-id="bb076-127">如果已命名项目引用多个区域, 则将返回 "InvalidReference" 错误。</span><span class="sxs-lookup"><span data-stu-id="bb076-127">If the named item references to multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="bb076-128">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-128">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromNamedItem(name, bindingTypeString, id)'
    fullName: 'addFromNamedItem(name, bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItem(name: string, bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="bb076-129">从中创建绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="bb076-129">Name from which to create binding.</span></span>
          type:
            - string
        - id: bindingTypeString
          description: <span data-ttu-id="bb076-130">绑定的类型。</span><span class="sxs-lookup"><span data-stu-id="bb076-130">Type of binding.</span></span> <span data-ttu-id="bb076-131">请参阅 BindingType。</span><span class="sxs-lookup"><span data-stu-id="bb076-131">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="bb076-132">绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="bb076-132">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromSelection
    summary: |-
      <span data-ttu-id="bb076-133">根据当前选择的内容添加新的 binding 对象。</span><span class="sxs-lookup"><span data-stu-id="bb076-133">Add a new binding based on the current selection.</span></span> <span data-ttu-id="bb076-134">如果所选内容有多个区域, 则将返回 "InvalidReference" 错误。</span><span class="sxs-lookup"><span data-stu-id="bb076-134">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="bb076-135">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-135">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingType, id)'
    fullName: 'addFromSelection(bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingType: Excel.BindingType, id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: bindingType
          description: <span data-ttu-id="bb076-136">绑定的类型。</span><span class="sxs-lookup"><span data-stu-id="bb076-136">Type of binding.</span></span> <span data-ttu-id="bb076-137">请参阅 BindingType。</span><span class="sxs-lookup"><span data-stu-id="bb076-137">See Excel.BindingType.</span></span>
          type:
            - excel.Excel.BindingType
        - id: id
          description: <span data-ttu-id="bb076-138">绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="bb076-138">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.addFromSelection_1
    summary: |-
      <span data-ttu-id="bb076-139">根据当前选择的内容添加新的 binding 对象。</span><span class="sxs-lookup"><span data-stu-id="bb076-139">Add a new binding based on the current selection.</span></span> <span data-ttu-id="bb076-140">如果所选内容有多个区域, 则将返回 "InvalidReference" 错误。</span><span class="sxs-lookup"><span data-stu-id="bb076-140">If the selection has multiple areas, the "InvalidReference" error will be returned.</span></span>

      <span data-ttu-id="bb076-141">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-141">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'addFromSelection(bindingTypeString, id)'
    fullName: 'addFromSelection(bindingTypeString, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingTypeString: "Range" | "Table" | "Text", id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: bindingTypeString
          description: <span data-ttu-id="bb076-142">绑定的类型。</span><span class="sxs-lookup"><span data-stu-id="bb076-142">Type of binding.</span></span> <span data-ttu-id="bb076-143">请参阅 BindingType。</span><span class="sxs-lookup"><span data-stu-id="bb076-143">See Excel.BindingType.</span></span>
          type:
            - '"Range" | "Table" | "Text"'
        - id: id
          description: <span data-ttu-id="bb076-144">绑定的名称。</span><span class="sxs-lookup"><span data-stu-id="bb076-144">Name of binding.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.context
    summary: <span data-ttu-id="bb076-145">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="bb076-145">The request context associated with the object.</span></span> <span data-ttu-id="bb076-146">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="bb076-146">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.BindingCollection.count
    summary: |-
      <span data-ttu-id="bb076-147">返回集合中绑定的数量。</span><span class="sxs-lookup"><span data-stu-id="bb076-147">Returns the number of bindings in the collection.</span></span> <span data-ttu-id="bb076-148">只读。</span><span class="sxs-lookup"><span data-stu-id="bb076-148">Read-only.</span></span>

      <span data-ttu-id="bb076-149">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.BindingCollection.getCount
    summary: |-
      <span data-ttu-id="bb076-150">获取集合中的绑定数量。</span><span class="sxs-lookup"><span data-stu-id="bb076-150">Gets the number of bindings in the collection.</span></span>

      <span data-ttu-id="bb076-151">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-151">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.BindingCollection.getItem
    summary: |-
      <span data-ttu-id="bb076-152">按 ID 获取绑定对象。</span><span class="sxs-lookup"><span data-stu-id="bb076-152">Gets a binding object by ID.</span></span>

      <span data-ttu-id="bb076-153">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bb076-154">示例</span><span class="sxs-lookup"><span data-stu-id="bb076-154">Examples</span></span>

          ```javascript
          // Create a table binding to monitor data changes in the table. 
          // When data is changed, the background color of the table will be changed to orange.
          function addEventHandler() {
              // Create Table1
              Excel.run(function (ctx) { 
                  ctx.workbook.tables.add("Sheet1!A1:C4", true);
                  return ctx.sync().then(function() {
                          console.log("My Diet Data Inserted!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
              //Create a new table binding for Table1
              Office.context.document.bindings.addFromNamedItemAsync(
                  "Table1", Office.CoercionType.Table, { id: "myBinding" }, function (asyncResult) {
                  if (asyncResult.status == "failed") {
                      console.log("Action failed with error: " + asyncResult.error.message);
                  }
                  else {
                      // If succeeded, then add event handler to the table binding.
                      Office.select("bindings#myBinding").addHandlerAsync(
                          Office.EventType.BindingDataChanged, onBindingDataChanged);
                  }
              });
          }
              
          // when data in the table is changed, this event will be triggered.
          function onBindingDataChanged(eventArgs) {
              Excel.run(function (ctx) { 
                  // highlight the table in orange to indicate data has been changed.
                  ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = "Orange";
                  return ctx.sync().then(function() {
                          console.log("The value in this table got changed!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
          }
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="bb076-155">要检索的绑定对象的 ID。</span><span class="sxs-lookup"><span data-stu-id="bb076-155">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.getItemAt
    summary: |-
      <span data-ttu-id="bb076-156">根据其在项目数组中的位置获取绑定对象。</span><span class="sxs-lookup"><span data-stu-id="bb076-156">Gets a binding object based on its position in the items array.</span></span>

      <span data-ttu-id="bb076-157">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bb076-158">示例</span><span class="sxs-lookup"><span data-stu-id="bb076-158">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.bindings.count - 1;
              var binding = ctx.workbook.bindings.getItemAt(lastPosition);
              binding.load('type')
              return ctx.sync().then(function() {
                      console.log(binding.type); 
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="bb076-159">要检索的对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="bb076-159">Index value of the object to be retrieved.</span></span> <span data-ttu-id="bb076-160">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="bb076-160">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.BindingCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="bb076-161">按 ID 获取 Binding 对象。</span><span class="sxs-lookup"><span data-stu-id="bb076-161">Gets a binding object by ID.</span></span> <span data-ttu-id="bb076-162">如果没有 Binding 对象，将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="bb076-162">If the binding object does not exist, will return a null object.</span></span>

      <span data-ttu-id="bb076-163">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bb076-163">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(id)
    fullName: getItemOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="bb076-164">要检索的绑定对象的 ID。</span><span class="sxs-lookup"><span data-stu-id="bb076-164">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.items
    summary: <span data-ttu-id="bb076-165">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="bb076-165">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Binding[];'
      return:
        type:
          - 'Excel.Binding[]'
  - uid: excel.Excel.BindingCollection.load
    summary: <span data-ttu-id="bb076-166">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bb076-166">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bb076-167">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="bb076-167">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="bb076-168">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="bb076-168">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="bb076-169">`load(option?: string | string[]): Excel.BindingCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="bb076-169">`load(option?: string | string[]): Excel.BindingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="bb076-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="bb076-170">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="bb076-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="bb076-171">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id="bb076-172">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="bb076-172">It is similar to the preceding signature.</span></span> <span data-ttu-id="bb076-173">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="bb076-173">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="bb076-174">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="bb076-174">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="bb076-175">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="bb076-175">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.BindingCollection.load_1
    summary: '<span data-ttu-id="bb076-176">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bb076-176">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bb076-177">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="bb076-177">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bb076-178">示例</span><span class="sxs-lookup"><span data-stu-id="bb076-178">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < bindings.items.length; i++)
                  {
                      console.log(bindings.items[i].id);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of bindings
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('count');
              return ctx.sync().then(function() {
                  console.log("Bindings: Count= " + bindings.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="bb076-179">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="bb076-179">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.BindingCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.BindingCollection.toJSON
    summary: '<span data-ttu-id="bb076-180">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="bb076-180">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="bb076-181">.</span><span class="sxs-lookup"><span data-stu-id="bb076-181"></span></span> <span data-ttu-id="bb076-182">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="bb076-182"></span></span><!-- --><span data-ttu-id="bb076-183">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.BindingCollection`对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.BindingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="bb076-183">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`</span></span><!-- --><span data-ttu-id="bb076-184">), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="bb076-184">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.BindingCollectionData
        description: ''