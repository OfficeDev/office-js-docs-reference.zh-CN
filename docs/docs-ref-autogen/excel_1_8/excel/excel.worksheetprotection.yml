### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorksheetProtection:class'
    summary: |-
      <span data-ttu-id="35c36-101">表示对工作表对象的保护。</span><span class="sxs-lookup"><span data-stu-id="35c36-101">Represents the protection of a sheet object.</span></span>

      <span data-ttu-id="35c36-102">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="35c36-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorksheetProtection
    fullName: Excel.WorksheetProtection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorksheetProtection#context:member'
      - 'excel!Excel.WorksheetProtection#load:member(1)'
      - 'excel!Excel.WorksheetProtection#load:member(2)'
      - 'excel!Excel.WorksheetProtection#load:member(3)'
      - 'excel!Excel.WorksheetProtection#options:member'
      - 'excel!Excel.WorksheetProtection#protect:member(1)'
      - 'excel!Excel.WorksheetProtection#protected:member'
      - 'excel!Excel.WorksheetProtection#toJSON:member(1)'
      - 'excel!Excel.WorksheetProtection#unprotect:member(1)'
  - uid: 'excel!Excel.WorksheetProtection#context:member'
    summary: <span data-ttu-id="35c36-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="35c36-103">The request context associated with the object.</span></span> <span data-ttu-id="35c36-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="35c36-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorksheetProtection#load:member(1)'
    summary: <span data-ttu-id="35c36-105">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="35c36-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="35c36-106">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="35c36-106">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="35c36-107">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="35c36-107">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="35c36-108">`load(option?: string | string[]): Excel.WorksheetProtection`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="35c36-108">`load(option?: string | string[]): Excel.WorksheetProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="35c36-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="35c36-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="35c36-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="35c36-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection` - Only available on collection types.</span></span> <span data-ttu-id="35c36-111">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="35c36-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="35c36-112">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="35c36-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="35c36-113">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="35c36-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="35c36-114">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="35c36-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface'
  - uid: 'excel!Excel.WorksheetProtection#load:member(2)'
    summary: <span data-ttu-id="35c36-115">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="35c36-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="35c36-116">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="35c36-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="35c36-117">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="35c36-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorksheetProtection#load:member(3)'
    summary: <span data-ttu-id="35c36-118">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="35c36-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="35c36-119">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="35c36-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorksheetProtection;'
      return:
        type:
          - 'excel!Excel.WorksheetProtection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="35c36-120">其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="35c36-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.WorksheetProtection#options:member'
    summary: |-
      <span data-ttu-id="35c36-121">工作表保护选项。</span><span class="sxs-lookup"><span data-stu-id="35c36-121">Sheet protection options.</span></span> <span data-ttu-id="35c36-122">只读。</span><span class="sxs-lookup"><span data-stu-id="35c36-122">Read-only.</span></span>

      <span data-ttu-id="35c36-123">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="35c36-123">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: options
    fullName: options
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly options: Excel.WorksheetProtectionOptions;'
      return:
        type:
          - 'excel!Excel.WorksheetProtectionOptions:interface'
  - uid: 'excel!Excel.WorksheetProtection#protect:member(1)'
    summary: |-
      <span data-ttu-id="35c36-124">保护 worksheet。</span><span class="sxs-lookup"><span data-stu-id="35c36-124">Protects a worksheet.</span></span> <span data-ttu-id="35c36-125">如果工作表已受到保护，则失败。</span><span class="sxs-lookup"><span data-stu-id="35c36-125">Fails if the worksheet has already been protected.</span></span>

      <span data-ttu-id="35c36-126">\[[API 集： ExcelApi 1.2 用于选项; 1.7 表示密码](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="35c36-126">\[ [API set: ExcelApi 1.2 for options; 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'protect(options, password)'
    fullName: 'protect(options, password)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35c36-127">示例</span><span class="sxs-lookup"><span data-stu-id="35c36-127">Examples</span></span>

          ```javascript
          Excel.run(function(ctx) {
            // get a reference to Sheet1
            var sheet = ctx.workbook.worksheets.getItem("Sheet1");

            // Protect inserting or deleting rows in Sheet1
            sheet.protection.protect({
              allowInsertRows: false,
              allowDeleteRows: false
            });

            return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect();
              }
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect(null, password);
              }
          });
          ```
      parameters:
        - id: options
          description: <span data-ttu-id="35c36-128">可选。</span><span class="sxs-lookup"><span data-stu-id="35c36-128">Optional.</span></span> <span data-ttu-id="35c36-129">工作表保护选项。</span><span class="sxs-lookup"><span data-stu-id="35c36-129">Sheet protection options.</span></span>
          type:
            - 'excel!Excel.WorksheetProtectionOptions:interface'
        - id: password
          description: <span data-ttu-id="35c36-130">可选。</span><span class="sxs-lookup"><span data-stu-id="35c36-130">Optional.</span></span> <span data-ttu-id="35c36-131">工作表保护密码。</span><span class="sxs-lookup"><span data-stu-id="35c36-131">Sheet protection password.</span></span>
          type:
            - string
  - uid: 'excel!Excel.WorksheetProtection#protected:member'
    summary: |-
      <span data-ttu-id="35c36-132">表示该工作表是否受保护。</span><span class="sxs-lookup"><span data-stu-id="35c36-132">Indicates if the worksheet is protected.</span></span> <span data-ttu-id="35c36-133">只读。</span><span class="sxs-lookup"><span data-stu-id="35c36-133">Read-only.</span></span>

      <span data-ttu-id="35c36-134">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="35c36-134">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.WorksheetProtection#toJSON:member(1)'
    summary: '<span data-ttu-id="35c36-135">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="35c36-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="35c36-136">.</span><span class="sxs-lookup"><span data-stu-id="35c36-136"></span></span> <span data-ttu-id="35c36-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="35c36-137"></span></span><!-- --><span data-ttu-id="35c36-138">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 WorksheetProtection 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.WorksheetProtectionData`</span><span class="sxs-lookup"><span data-stu-id="35c36-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`</span></span><!-- --><span data-ttu-id="35c36-139">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="35c36-139">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorksheetProtectionData:interface'
        description: ''
  - uid: 'excel!Excel.WorksheetProtection#unprotect:member(1)'
    summary: |-
      <span data-ttu-id="35c36-140">解除对 worksheet 的保护。</span><span class="sxs-lookup"><span data-stu-id="35c36-140">Unprotects a worksheet.</span></span>

      <span data-ttu-id="35c36-141">\[[API 集： ExcelApi 1.7 用于密码](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="35c36-141">\[ [API set: ExcelApi 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="35c36-142">示例</span><span class="sxs-lookup"><span data-stu-id="35c36-142">Examples</span></span>

          ```javascript
          Excel.run(function(ctx) {
            // get a reference to Sheet1
            var sheet = ctx.workbook.worksheets.getItem("Sheet1");

            // Remove all protects applied to Sheet1
            sheet.protection.unprotect();

            return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Unprotecting a worksheet with unprotect() will remove all 
          // WorksheetProtectionOptions options applied to a worksheet.
          // To remove only a subset of WorksheetProtectionOptions use the 
          // protect() method and set the options you wish to remove to true.
          Excel.run(function(ctx) {
            var sheet = ctx.workbook.worksheets.getItem("Sheet1");
            sheet.protection.protect({
              allowInsertRows: false, // Protect row insertion
              allowDeleteRows: true // Unprotect row deletion
            });
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect();
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="35c36-143">工作表保护密码。</span><span class="sxs-lookup"><span data-stu-id="35c36-143">sheet protection password.</span></span>
          type:
            - string
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorksheetProtection:class'
    name: Excel.WorksheetProtection
  - uid: 'excel!Excel.Interfaces.WorksheetProtectionLoadOptions:interface'
    name: Excel.Interfaces.WorksheetProtectionLoadOptions
  - uid: 'excel!Excel.WorksheetProtectionOptions:interface'
    name: Excel.WorksheetProtectionOptions
  - uid: 'excel!Excel.Interfaces.WorksheetProtectionData:interface'
    name: Excel.Interfaces.WorksheetProtectionData