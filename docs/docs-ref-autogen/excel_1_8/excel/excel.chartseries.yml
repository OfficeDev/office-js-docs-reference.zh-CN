### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartSeries:class'
    summary: |-
      代表图表上的系列。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ChartSeries
    fullName: Excel.ChartSeries
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartSeries#axisGroup:member'
      - 'excel!Excel.ChartSeries#chartType:member'
      - 'excel!Excel.ChartSeries#context:member'
      - 'excel!Excel.ChartSeries#dataLabels:member'
      - 'excel!Excel.ChartSeries#delete:member(1)'
      - 'excel!Excel.ChartSeries#doughnutHoleSize:member'
      - 'excel!Excel.ChartSeries#explosion:member'
      - 'excel!Excel.ChartSeries#filtered:member'
      - 'excel!Excel.ChartSeries#firstSliceAngle:member'
      - 'excel!Excel.ChartSeries#format:member'
      - 'excel!Excel.ChartSeries#gapWidth:member'
      - 'excel!Excel.ChartSeries#hasDataLabels:member'
      - 'excel!Excel.ChartSeries#invertIfNegative:member'
      - 'excel!Excel.ChartSeries#load:member(1)'
      - 'excel!Excel.ChartSeries#load:member(2)'
      - 'excel!Excel.ChartSeries#load:member(3)'
      - 'excel!Excel.ChartSeries#markerBackgroundColor:member'
      - 'excel!Excel.ChartSeries#markerForegroundColor:member'
      - 'excel!Excel.ChartSeries#markerSize:member'
      - 'excel!Excel.ChartSeries#markerStyle:member'
      - 'excel!Excel.ChartSeries#name:member'
      - 'excel!Excel.ChartSeries#overlap:member'
      - 'excel!Excel.ChartSeries#plotOrder:member'
      - 'excel!Excel.ChartSeries#points:member'
      - 'excel!Excel.ChartSeries#secondPlotSize:member'
      - 'excel!Excel.ChartSeries#set:member(1)'
      - 'excel!Excel.ChartSeries#set:member(2)'
      - 'excel!Excel.ChartSeries#setBubbleSizes:member(1)'
      - 'excel!Excel.ChartSeries#setValues:member(1)'
      - 'excel!Excel.ChartSeries#setXAxisValues:member(1)'
      - 'excel!Excel.ChartSeries#showShadow:member'
      - 'excel!Excel.ChartSeries#smooth:member'
      - 'excel!Excel.ChartSeries#splitType:member'
      - 'excel!Excel.ChartSeries#toJSON:member(1)'
      - 'excel!Excel.ChartSeries#trendlines:member'
      - 'excel!Excel.ChartSeries#varyByCategories:member'
  - uid: 'excel!Excel.ChartSeries#axisGroup:member'
    summary: |-
      指定指定系列的组。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: axisGroup
    fullName: axisGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
      return:
        type:
          - 'excel!Excel.ChartSeries#axisGroup~0:complex'
  - uid: 'excel!Excel.ChartSeries#chartType:member'
    summary: |-
      表示系列的图表类型。 有关详细信息，请参阅 ChartType。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: chartType
    fullName: chartType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
      return:
        type:
          - 'excel!Excel.ChartSeries#chartType~0:complex'
  - uid: 'excel!Excel.ChartSeries#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartSeries#dataLabels:member'
    summary: |-
      表示系列中所有数据标签的集合。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: dataLabels
    fullName: dataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataLabels: Excel.ChartDataLabels;'
      return:
        type:
          - 'excel!Excel.ChartDataLabels:class'
  - uid: 'excel!Excel.ChartSeries#delete:member(1)'
    summary: |-
      删除 chart series 对象。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-series.yaml
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");
            const seriesCollection = sheet.charts.getItemAt(0).series;
            seriesCollection.load("count");
            await context.sync();

            if (seriesCollection.count > 0) {
              const series = seriesCollection.getItemAt(0);

              // Delete the first series.
              series.delete();
            }

            await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#doughnutHoleSize:member'
    summary: |-
      表示图表系列的圆环孔大小。 仅对圆环图和分离型圆环图有效。 对无效图表引发无效参数异常。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: doughnutHoleSize
    fullName: doughnutHoleSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'doughnutHoleSize: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#explosion:member'
    summary: |-
      指定饼图或圆环图切片的爆炸值。 如果未分解（切片尖端位于饼图中心），则返回 0（零）。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: explosion
    fullName: explosion
    langs:
      - typeScript
    type: property
    syntax:
      content: 'explosion: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#filtered:member'
    summary: |-
      指定是否筛选系列。 不适用于曲面图。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: filtered
    fullName: filtered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'filtered: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#firstSliceAngle:member'
    summary: |-
      指定第一个饼图或圆环图的扇区的角度（以度为单位（从垂直方向顺时针方向）。 只适用于饼图、三维饼图和圆环图。 可以是 0 到 360 之间的值。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: firstSliceAngle
    fullName: firstSliceAngle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstSliceAngle: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#format:member'
    summary: |-
      表示图表系列的格式，包括填充和线条格式。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartSeriesFormat;'
      return:
        type:
          - 'excel!Excel.ChartSeriesFormat:class'
  - uid: 'excel!Excel.ChartSeries#gapWidth:member'
    summary: |-
      表示图表系列的间隙宽度。 仅对条形图和柱形图有效，以及折线图和饼图的特定类。 对无效图表引发无效参数异常。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: gapWidth
    fullName: gapWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gapWidth: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#hasDataLabels:member'
    summary: |-
      指定该系列是否具有数据标签。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: hasDataLabels
    fullName: hasDataLabels
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasDataLabels: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#invertIfNegative:member'
    summary: |-
      如此如果当 Excel 中的模式与一个负数相对应时反转该模式。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: invertIfNegative
    fullName: invertIfNegative
    langs:
      - typeScript
    type: property
    syntax:
      content: 'invertIfNegative: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.Interfaces.ChartSeriesLoadOptions:interface'
  - uid: 'excel!Excel.ChartSeries#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Rename the 1st series of Chart1 to "New Series Name"
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1");    
              chart.series.getItemAt(0).name = "New Series Name";
              return ctx.sync().then(function() {
                      console.log("Series1 Renamed");
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartSeries#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartSeries;
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ChartSeries#markerBackgroundColor:member'
    summary: |-
      指定图表系列的标记背景色。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: markerBackgroundColor
    fullName: markerBackgroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerBackgroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-series-markers.yaml
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#markerForegroundColor:member'
    summary: |-
      指定图表系列的标记前景色。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: markerForegroundColor
    fullName: markerForegroundColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerForegroundColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-series-markers.yaml
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#markerSize:member'
    summary: |-
      指定图表系列的标记大小。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: markerSize
    fullName: markerSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerSize: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-series-markers.yaml
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#markerStyle:member'
    summary: |-
      指定图表系列的标记样式。 有关详细信息，请参阅 ChartMarkerStyle。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: markerStyle
    fullName: markerStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
      return:
        type:
          - 'excel!Excel.ChartSeries#markerStyle~0:complex'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-series-markers.yaml
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              let salesTable = sheet.tables.getItem("SalesTable");
              let dataRange = sheet.getRange("A1:E7");

              // Create an XY scatter chart.
              let chart = sheet.charts.add("XYScatterSmooth", dataRange, "Auto");
              chart.title.text = "Bicycle Parts Quarterly Sales"; 
            
              let series = chart.series;
              let series0 = series.getItemAt(0);
              let series1 = series.getItemAt(1);
              let series2 = series.getItemAt(2);
              let series3 = series.getItemAt(3);

              // Set markers.
              series0.markerStyle = "Dash";
              series0.markerForegroundColor = "black";
              series1.markerStyle = "Star";
              series1.markerForegroundColor = "black";
              series2.markerStyle = "X";
              series2.markerSize = 12;
              series3.markerStyle = "Triangle";
              series3.markerBackgroundColor = "purple";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ChartSeries#name:member'
    summary: |-
      指定图表中系列的名称。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartSeries#overlap:member'
    summary: |-
      指定条柱的摆放方式。 可以是–100到100之间的值。 只适用于二维条形图和二维柱形图。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: overlap
    fullName: overlap
    langs:
      - typeScript
    type: property
    syntax:
      content: 'overlap: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#plotOrder:member'
    summary: |-
      指定图表系列在图表组中的绘制顺序。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: plotOrder
    fullName: plotOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'plotOrder: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#points:member'
    summary: |-
      返回系列中所有数据点的集合。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: points
    fullName: points
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly points: Excel.ChartPointsCollection;'
      return:
        type:
          - 'excel!Excel.ChartPointsCollection:class'
  - uid: 'excel!Excel.ChartSeries#secondPlotSize:member'
    summary: |-
      指定复合饼图或复合条饼图条形图的第二部分的大小，以主饼图大小的百分比形式表示。 可以是 5 到 200 之间的值。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: secondPlotSize
    fullName: secondPlotSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'secondPlotSize: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeries#set:member(1)'
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名：

      `set(properties: Excel.ChartSeries): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。
          type:
            - 'excel!Excel.Interfaces.ChartSeriesUpdateData:interface'
        - id: options
          description: 提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartSeries#set:member(2)'
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartSeries): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartSeries:class'
  - uid: 'excel!Excel.ChartSeries#setBubbleSizes:member(1)'
    summary: |-
      设置图表系列的气泡大小。 仅适用于气泡图。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setBubbleSizes(sourceData)
    fullName: setBubbleSizes(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setBubbleSizes(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: 对应于源数据的 Range 对象。
          type:
            - 'excel!Excel.Range:class'
  - uid: 'excel!Excel.ChartSeries#setValues:member(1)'
    summary: |-
      设置图表系列的值。 对于散点图，它表示 Y 轴的值。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setValues(sourceData)
    fullName: setValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/10-chart/chart-series.yaml
          await Excel.run(async (context) => {
            const sheet = context.workbook.worksheets.getItem("Sample");

            let seriesCollection = sheet.charts.getItemAt(0);
            let rangeSelection = sheet.getRange("C2:C7");
            let xRangeSelection = sheet.getRange("A1:A7");

            // Add a series.
            let newSeries = seriesCollection.series.add("Qtr2");
            newSeries.setValues(rangeSelection);
            newSeries.setXAxisValues(xRangeSelection);

            await context.sync();
          });
          ```
      parameters:
        - id: sourceData
          description: 对应于源数据的 Range 对象。
          type:
            - 'excel!Excel.Range:class'
  - uid: 'excel!Excel.ChartSeries#setXAxisValues:member(1)'
    summary: |-
      设置图表系列的 X 轴的值。 仅适用于散点图。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setXAxisValues(sourceData)
    fullName: setXAxisValues(sourceData)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXAxisValues(sourceData: Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceData
          description: 对应于源数据的 Range 对象。
          type:
            - 'excel!Excel.Range:class'
  - uid: 'excel!Excel.ChartSeries#showShadow:member'
    summary: |-
      指定系列是否具有阴影。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showShadow
    fullName: showShadow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showShadow: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#smooth:member'
    summary: |-
      指定系列是否平滑。 仅适用于折线图和散点图。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: smooth
    fullName: smooth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'smooth: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ChartSeries#splitType:member'
    summary: |-
      指定拆分复合饼图或复合条饼图条形图的两个部分的方式。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: splitType
    fullName: splitType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'splitType: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit";'
      return:
        type:
          - 'excel!Excel.ChartSeries#splitType~0:complex'
  - uid: 'excel!Excel.ChartSeries#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，也 `toJSON` 会调用传递给它的对象的方法。尽管原始 ChartSeries 对象是 API 对象，但 `toJSON` 方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.ChartSeriesData`<!-- -->），其中包含原始对象中所有已加载的子属性的浅表副本。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartSeriesData:interface'
        description: ''
  - uid: 'excel!Excel.ChartSeries#trendlines:member'
    summary: |-
      系列中趋势线的集合。

      \[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: trendlines
    fullName: trendlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
      return:
        type:
          - 'excel!Excel.ChartTrendlineCollection:class'
  - uid: 'excel!Excel.ChartSeries#varyByCategories:member'
    summary: |-
      如此如果 Excel 为每个数据标记分配不同的颜色或图案。 图表必须只包含一个系列。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: varyByCategories
    fullName: varyByCategories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'varyByCategories: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.ChartSeries#axisGroup~0:complex'
    name: Excel.ChartAxisGroup | "Primary" | "Secondary"
    fullName: Excel.ChartAxisGroup | "Primary" | "Secondary"
    spec.typeScript:
      - uid: 'excel!Excel.ChartAxisGroup:enum'
        name: Excel.ChartAxisGroup
        fullName: Excel.ChartAxisGroup
      - name: ' | "Primary" | "Secondary"'
        fullName: ' | "Primary" | "Secondary"'
  - uid: 'excel!Excel.ChartSeries#chartType~0:complex'
    name: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
    fullName: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
    spec.typeScript:
      - uid: 'excel!Excel.ChartType:enum'
        name: Excel.ChartType
        fullName: Excel.ChartType
      - name: ' | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"'
        fullName: ' | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartDataLabels:class'
    name: Excel.ChartDataLabels
  - uid: 'excel!Excel.ChartSeriesFormat:class'
    name: Excel.ChartSeriesFormat
  - uid: 'excel!Excel.ChartSeries:class'
    name: Excel.ChartSeries
  - uid: 'excel!Excel.Interfaces.ChartSeriesLoadOptions:interface'
    name: Excel.Interfaces.ChartSeriesLoadOptions
  - uid: 'excel!Excel.ChartSeries#markerStyle~0:complex'
    name: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
    fullName: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
    spec.typeScript:
      - uid: 'excel!Excel.ChartMarkerStyle:enum'
        name: Excel.ChartMarkerStyle
        fullName: Excel.ChartMarkerStyle
      - name: ' | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"'
        fullName: ' | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"'
  - uid: 'excel!Excel.ChartPointsCollection:class'
    name: Excel.ChartPointsCollection
  - uid: 'excel!Excel.Interfaces.ChartSeriesUpdateData:interface'
    name: Interfaces.ChartSeriesUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Range:class'
    name: Range
  - uid: 'excel!Excel.ChartSeries#splitType~0:complex'
    name: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"
    fullName: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"
    spec.typeScript:
      - uid: 'excel!Excel.ChartSplitType:enum'
        name: Excel.ChartSplitType
        fullName: Excel.ChartSplitType
      - name: ' | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"'
        fullName: ' | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"'
  - uid: 'excel!Excel.Interfaces.ChartSeriesData:interface'
    name: Excel.Interfaces.ChartSeriesData
  - uid: 'excel!Excel.ChartTrendlineCollection:class'
    name: Excel.ChartTrendlineCollection