### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableRowCollection:class'
    summary: |-
      <span data-ttu-id="89c3b-101">表示属于表的所有行的集合。</span><span class="sxs-lookup"><span data-stu-id="89c3b-101">Represents a collection of all the rows that are part of the table.</span></span>

      <span data-ttu-id="89c3b-102">请注意，与在添加新行/列之前的区域或列不同，TableRow 对象表示表行的物理位置，而不是数据。</span><span class="sxs-lookup"><span data-stu-id="89c3b-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="89c3b-103">也就是说，如果对数据进行排序或添加新行，则表行将继续指向为其创建该索引的索引。</span><span class="sxs-lookup"><span data-stu-id="89c3b-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="89c3b-104">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="89c3b-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableRowCollection
    fullName: Excel.TableRowCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableRowCollection#add:member(1)'
      - 'excel!Excel.TableRowCollection#context:member'
      - 'excel!Excel.TableRowCollection#count:member'
      - 'excel!Excel.TableRowCollection#getCount:member(1)'
      - 'excel!Excel.TableRowCollection#getItemAt:member(1)'
      - 'excel!Excel.TableRowCollection#items:member'
      - 'excel!Excel.TableRowCollection#load:member(1)'
      - 'excel!Excel.TableRowCollection#load:member(2)'
      - 'excel!Excel.TableRowCollection#load:member(3)'
      - 'excel!Excel.TableRowCollection#toJSON:member(1)'
  - uid: 'excel!Excel.TableRowCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="89c3b-105">向表中添加一行或多行。</span><span class="sxs-lookup"><span data-stu-id="89c3b-105">Adds one or more rows to the table.</span></span> <span data-ttu-id="89c3b-106">返回对象是新添加的首行。</span><span class="sxs-lookup"><span data-stu-id="89c3b-106">The return object will be the top of the newly added row(s).</span></span>

      <span data-ttu-id="89c3b-107">请注意，与在添加新行/列之前的区域或列不同，TableRow 对象表示表行的物理位置，而不是数据。</span><span class="sxs-lookup"><span data-stu-id="89c3b-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="89c3b-108">也就是说，如果对数据进行排序或添加新行，则表行将继续指向为其创建该索引的索引。</span><span class="sxs-lookup"><span data-stu-id="89c3b-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="89c3b-109">\[[API 集：用于添加单个行的 ExcelApi 1.1; 1.4 允许添加多个行。](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="89c3b-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="89c3b-110">\]</span><span class="sxs-lookup"><span data-stu-id="89c3b-110"></span></span>
    name: 'add(index, values)'
    fullName: 'add(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="89c3b-111">示例</span><span class="sxs-lookup"><span data-stu-id="89c3b-111">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var values = [["Sample", "Values", "For", "New", "Row"]];
              var row = tables.getItem("Table1").rows.add(null, values);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="89c3b-p105">可选。指定新行的相对位置。如果为 NULL 或 -1，将在末尾进行添加。插入的行下方的所有行都会向下移动。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="89c3b-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>'
          type:
            - number
        - id: values
          description: <span data-ttu-id="89c3b-117">可选。</span><span class="sxs-lookup"><span data-stu-id="89c3b-117">Optional.</span></span> <span data-ttu-id="89c3b-118">未设置格式的表行值的二维数组。</span><span class="sxs-lookup"><span data-stu-id="89c3b-118">A 2-dimensional array of unformatted values of the table row.</span></span>
          type:
            - 'excel!Excel.TableRowCollection#add~0:complex'
  - uid: 'excel!Excel.TableRowCollection#context:member'
    summary: <span data-ttu-id="89c3b-119">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="89c3b-119">The request context associated with the object.</span></span> <span data-ttu-id="89c3b-120">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="89c3b-120">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableRowCollection#count:member'
    summary: |-
      <span data-ttu-id="89c3b-121">返回表中的行数。</span><span class="sxs-lookup"><span data-stu-id="89c3b-121">Returns the number of rows in the table.</span></span> <span data-ttu-id="89c3b-122">只读。</span><span class="sxs-lookup"><span data-stu-id="89c3b-122">Read-only.</span></span>

      <span data-ttu-id="89c3b-123">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="89c3b-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableRowCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="89c3b-124">获取表格中的行数。</span><span class="sxs-lookup"><span data-stu-id="89c3b-124">Gets the number of rows in the table.</span></span>

      <span data-ttu-id="89c3b-125">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="89c3b-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableRowCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableRowCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="89c3b-126">根据其在集合中的位置获取行。</span><span class="sxs-lookup"><span data-stu-id="89c3b-126">Gets a row based on its position in the collection.</span></span>

      <span data-ttu-id="89c3b-127">请注意，与在添加新行/列之前的区域或列不同，TableRow 对象表示表行的物理位置，而不是数据。</span><span class="sxs-lookup"><span data-stu-id="89c3b-127">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="89c3b-128">也就是说，如果对数据进行排序或添加新行，则表行将继续指向为其创建该索引的索引。</span><span class="sxs-lookup"><span data-stu-id="89c3b-128">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="89c3b-129">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="89c3b-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="89c3b-130">示例</span><span class="sxs-lookup"><span data-stu-id="89c3b-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);
              tablerow.load('name');
              return ctx.sync().then(function() {
                      console.log(tablerow.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="89c3b-131">要检索的对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="89c3b-131">Index value of the object to be retrieved.</span></span> <span data-ttu-id="89c3b-132">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="89c3b-132">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.TableRowCollection#items:member'
    summary: <span data-ttu-id="89c3b-133">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="89c3b-133">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableRow[];'
      return:
        type:
          - 'excel!Excel.TableRowCollection#items~0:complex'
  - uid: 'excel!Excel.TableRowCollection#load:member(1)'
    summary: <span data-ttu-id="89c3b-134">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="89c3b-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="89c3b-135">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="89c3b-135">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="89c3b-136">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="89c3b-136">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.TableRowCollection#load~0:complex'
  - uid: 'excel!Excel.TableRowCollection#load:member(2)'
    summary: <span data-ttu-id="89c3b-137">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="89c3b-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="89c3b-138">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="89c3b-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="89c3b-139">示例</span><span class="sxs-lookup"><span data-stu-id="89c3b-139">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerows = ctx.workbook.tables.getItem('Table1').rows;
              tablerows.load('items');
              return ctx.sync().then(function() {
                  console.log("tablerows Count: " + tablerows.count);
                  for (var i = 0; i < tablerows.items.length; i++)
                  {
                      console.log(tablerows.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // In the example, we'll select the top 100 rows of the table.
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.getItem("Table1");
              var tableRows = table.rows.load({"select" : "index, values","top": 100, "skip": 0 })
              return ctx.sync().then(function() {
                  for (var i = 0; i < tableRows.items.length; i++)
                  {
                      console.log(tableRows.items[i].index);
                      console.log(tableRows.items[i].values);
                  }
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="89c3b-140">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="89c3b-140">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableRowCollection#load:member(3)'
    summary: <span data-ttu-id="89c3b-141">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="89c3b-141">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="89c3b-142">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="89c3b-142">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="89c3b-143">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="89c3b-143">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.TableRowCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="89c3b-144">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="89c3b-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="89c3b-145">.</span><span class="sxs-lookup"><span data-stu-id="89c3b-145"></span></span> <span data-ttu-id="89c3b-146">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="89c3b-146"></span></span><!-- --><span data-ttu-id="89c3b-147">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.TableRowCollection`对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.TableRowCollectionData`</span><span class="sxs-lookup"><span data-stu-id="89c3b-147">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableRowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowCollectionData`</span></span><!-- --><span data-ttu-id="89c3b-148">），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="89c3b-148">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableRowCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.TableRow:class'
    name: Excel.TableRow
  - uid: 'excel!Excel.TableRowCollection#add~0:complex'
    name: Array<Array<boolean | string | number>> | boolean | string | number
    fullName: Array<Array<boolean | string | number>> | boolean | string | number
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <boolean | string | number>> | boolean | string | number
        fullName: <boolean | string | number>> | boolean | string | number
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableRowCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.TableRowCollection#items~0:complex'
    name: 'Excel.TableRow[]'
    fullName: 'Excel.TableRow[]'
    spec.typeScript:
      - uid: 'excel!Excel.TableRow:class'
        name: Excel.TableRow
        fullName: Excel.TableRow
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableRowCollection:class'
    name: Excel.TableRowCollection
  - uid: 'excel!Excel.TableRowCollection#load~0:complex'
    name: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.TableRowCollectionLoadOptions:interface'
        name: Excel.Interfaces.TableRowCollectionLoadOptions
        fullName: Excel.Interfaces.TableRowCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.TableRowCollectionData:interface'
    name: Excel.Interfaces.TableRowCollectionData