### YamlMime:UniversalReference
items:
  - uid: 'powerpoint!PowerPoint.Application:class'
    summary: '\[[API 集： PowerPointApi 1.0](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]'
    name: PowerPoint.Application
    fullName: PowerPoint.Application
    langs:
      - typeScript
    type: class
    extends:
      - 'powerpoint!OfficeExtension.ClientObject:class'
    package: powerpoint!
    children:
      - 'powerpoint!PowerPoint.Application#context:member'
      - 'powerpoint!PowerPoint.Application.newObject:member(1)'
      - 'powerpoint!PowerPoint.Application#toJSON:member(1)'
  - uid: 'powerpoint!PowerPoint.Application#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'powerpoint!PowerPoint.RequestContext:class'
  - uid: 'powerpoint!PowerPoint.Application.newObject:member(1)'
    summary: 创建 PowerPoint 的新实例。 Application 对象
    name: newObject(context)
    fullName: newObject(context)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static newObject(context: OfficeExtension.ClientRequestContext): PowerPoint.Application;'
      return:
        type:
          - 'powerpoint!PowerPoint.Application:class'
        description: ''
      parameters:
        - id: context
          description: ''
          type:
            - 'powerpoint!OfficeExtension.ClientRequestContext:class'
  - uid: 'powerpoint!PowerPoint.Application#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) ，而原始的 PowerPoint. Application 对象是 API 对象，则该 `toJSON` 方法返回一个简单的 JavaScript 对象 (类型为 `PowerPoint.Interfaces.ApplicationData`<!-- -->) ，其中包含原始对象中任何已加载的子属性的浅表副本。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type:
          - |-
            {
                        [key: string]: string;
                    }
        description: ''
references:
  - uid: 'powerpoint!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'powerpoint!PowerPoint.RequestContext:class'
    name: RequestContext
  - uid: 'powerpoint!PowerPoint.Application:class'
    name: PowerPoint.Application
  - uid: 'powerpoint!OfficeExtension.ClientRequestContext:class'
    name: OfficeExtension.ClientRequestContext