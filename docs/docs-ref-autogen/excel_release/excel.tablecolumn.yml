### YamlMime:UniversalReference
ms.openlocfilehash: c5101c3974d9926bc691047a2d9d52cb7babc8ce
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110086"
items:
- uid: excel_release.Excel.TableColumn
  summary: >-
    <span data-ttu-id="bd2df-101">代表表格中的一列。</span><span class="sxs-lookup"><span data-stu-id="bd2df-101">Represents a column in a table.</span></span>


    <span data-ttu-id="bd2df-102">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableColumn
  fullName: Excel.TableColumn
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableColumn.context
  - excel_release.Excel.TableColumn.delete
  - excel_release.Excel.TableColumn.filter
  - excel_release.Excel.TableColumn.getDataBodyRange
  - excel_release.Excel.TableColumn.getHeaderRowRange
  - excel_release.Excel.TableColumn.getRange
  - excel_release.Excel.TableColumn.getTotalRowRange
  - excel_release.Excel.TableColumn.id
  - excel_release.Excel.TableColumn.index
  - excel_release.Excel.TableColumn.load
  - excel_release.Excel.TableColumn.load_1
  - excel_release.Excel.TableColumn.load_2
  - excel_release.Excel.TableColumn.name
  - excel_release.Excel.TableColumn.set
  - excel_release.Excel.TableColumn.set_1
  - excel_release.Excel.TableColumn.toJSON
  - excel_release.Excel.TableColumn.values
- uid: excel_release.Excel.TableColumn.context
  summary: <span data-ttu-id="bd2df-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="bd2df-103">The request context associated with the object.</span></span> <span data-ttu-id="bd2df-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="bd2df-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableColumn.delete
  summary: >-
    <span data-ttu-id="bd2df-105">从表中删除列。</span><span class="sxs-lookup"><span data-stu-id="bd2df-105">Deletes the column from the table.</span></span>


    <span data-ttu-id="bd2df-106">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2df-107\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2df-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.filter
  summary: >-
    <span data-ttu-id="bd2df-p102">检索应用于列的筛选器。只读。</span><span class="sxs-lookup"><span data-stu-id="bd2df-p102">Retrieve the filter applied to the column. Read-only.</span></span>


    <span data-ttu-id="bd2df-110">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filter
  fullName: filter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filter: Excel.Filter;'
    return:
      type:
      - excel.Excel.Filter
- uid: excel_release.Excel.TableColumn.getDataBodyRange
  summary: >-
    <span data-ttu-id="bd2df-111">获取与列的数据体相关的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="bd2df-111">Gets the range object associated with the data body of the column.</span></span>


    <span data-ttu-id="bd2df-112">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2df-113\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2df-113\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var dataBodyRange = column.getDataBodyRange();\n    dataBodyRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(dataBodyRange.address);\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.getHeaderRowRange
  summary: >-
    <span data-ttu-id="bd2df-114">获取与列的标头行相关的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="bd2df-114">Gets the range object associated with the header row of the column.</span></span>


    <span data-ttu-id="bd2df-115">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getHeaderRowRange()
  fullName: getHeaderRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2df-116\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2df-116\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var headerRowRange = columns.getHeaderRowRange();\n    headerRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(headerRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.getRange
  summary: >-
    <span data-ttu-id="bd2df-117">获取与整个列相关的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="bd2df-117">Gets the range object associated with the entire column.</span></span>


    <span data-ttu-id="bd2df-118">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2df-119\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2df-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var columnRange = columns.getRange();\n    columnRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(columnRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.getTotalRowRange
  summary: >-
    <span data-ttu-id="bd2df-120">获取与列的总计行相关的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="bd2df-120">Gets the range object associated with the totals row of the column.</span></span>


    <span data-ttu-id="bd2df-121">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTotalRowRange()
  fullName: getTotalRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2df-122\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2df-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var totalRowRange = columns.getTotalRowRange();\n    totalRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(totalRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.TableColumn.id
  summary: >-
    <span data-ttu-id="bd2df-p103">返回标识表内的列的唯一键。只读。</span><span class="sxs-lookup"><span data-stu-id="bd2df-p103">Returns a unique key that identifies the column within the table. Read-only.</span></span>


    <span data-ttu-id="bd2df-125">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableColumn.index
  summary: >-
    <span data-ttu-id="bd2df-p104">返回表的列集合内列的索引编号。从零开始编制索引。只读。</span><span class="sxs-lookup"><span data-stu-id="bd2df-p104">Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.</span></span>


    <span data-ttu-id="bd2df-129">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: index
  fullName: index
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly index: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableColumn.load
  summary: <span data-ttu-id="bd2df-130">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bd2df-131">在读取属性之前, 必须先调用 "context, sync ()"。</span><span class="sxs-lookup"><span data-stu-id="bd2df-131">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="bd2df-132">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="bd2df-132">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="bd2df-133">`load(option?: string | string[]): Excel.TableColumn`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-133">`load(option?: string | string[]): Excel.TableColumn` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="bd2df-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="bd2df-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="bd2df-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id="bd2df-136">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="bd2df-136">It is similar to the preceding signature.</span></span> <span data-ttu-id="bd2df-137">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="bd2df-137">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="bd2df-138">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="bd2df-138">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="bd2df-139">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="bd2df-139">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.TableColumnLoadOptions
- uid: excel_release.Excel.TableColumn.load_1
  summary: <span data-ttu-id="bd2df-140">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bd2df-141">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="bd2df-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd2df-142\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd2df-142\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);\n    column.load('index');\n    return ctx.sync().then(function() {\n        console.log(column.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var tables = ctx.workbook.tables;\n    var newValues = [[\"New\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.values = newValues;\n    column.load('values');\n    return ctx.sync().then(function() {\n        console.log(column.values);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="bd2df-143">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.TableColumn.load_2
  summary: <span data-ttu-id="bd2df-144">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bd2df-145">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="bd2df-145">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="bd2df-146">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.TableColumn.name
  summary: >-
    <span data-ttu-id="bd2df-147">表示表列的名称。</span><span class="sxs-lookup"><span data-stu-id="bd2df-147">Represents the name of the table column.</span></span>


    <span data-ttu-id="bd2df-148">\[[API 集: ExcelApi 1.1 用于获取名称; 1.4 用于设置名称。](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="bd2df-148">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="bd2df-149">\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-149"></span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.TableColumn.set
  summary: <span data-ttu-id="bd2df-150">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="bd2df-151">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="bd2df-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="bd2df-152">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="bd2df-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.TableColumn): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="bd2df-153">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableColumnUpdateData
    - id: options
      description: <span data-ttu-id="bd2df-154">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="bd2df-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.TableColumn.set_1
  summary: <span data-ttu-id="bd2df-155">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="bd2df-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.TableColumn): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.TableColumn
- uid: excel_release.Excel.TableColumn.toJSON
  summary: <span data-ttu-id="bd2df-156">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。</span><span class="sxs-lookup"><span data-stu-id="bd2df-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="bd2df-157">(`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)尽管原始 TableColumn 对象是 API 对象, 但该`toJSON`方法返回一个纯 JavaScript 对象 (类型为`Excel.Interfaces.TableColumnData` <!-- -->), 其中包含原始对象中任何已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="bd2df-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnData
      description: ''
- uid: excel_release.Excel.TableColumn.values
  summary: >-
    <span data-ttu-id="bd2df-158">表示指定范围的原始值。</span><span class="sxs-lookup"><span data-stu-id="bd2df-158">Represents the raw values of the specified range.</span></span> <span data-ttu-id="bd2df-159">返回的数据可以是 string、number 或 boolean 类型。</span><span class="sxs-lookup"><span data-stu-id="bd2df-159">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="bd2df-160">包含错误的单元格将返回错误字符串。</span><span class="sxs-lookup"><span data-stu-id="bd2df-160">Cells that contain an error will return the error string.</span></span>


    <span data-ttu-id="bd2df-161">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bd2df-161">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: values
  fullName: values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
