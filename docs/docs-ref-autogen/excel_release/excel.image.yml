### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.Image
    summary: |-
      <span data-ttu-id="b6cad-101">代表工作表中的图像。</span><span class="sxs-lookup"><span data-stu-id="b6cad-101">Represents an image in the worksheet.</span></span> <span data-ttu-id="b6cad-102">若要获取相应的 Shape 对象, 请使用 Image。 Shape。</span><span class="sxs-lookup"><span data-stu-id="b6cad-102">To get the corresponding Shape object, use Image.shape.</span></span>

      <span data-ttu-id="b6cad-103">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6cad-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Image
    fullName: Excel.Image
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.Image.context
      - excel_release.Excel.Image.format
      - excel_release.Excel.Image.id
      - excel_release.Excel.Image.load
      - excel_release.Excel.Image.load_1
      - excel_release.Excel.Image.load_2
      - excel_release.Excel.Image.shape
      - excel_release.Excel.Image.toJSON
  - uid: excel_release.Excel.Image.context
    summary: <span data-ttu-id="b6cad-104">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="b6cad-104">The request context associated with the object.</span></span> <span data-ttu-id="b6cad-105">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="b6cad-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.Image.format
    summary: |-
      <span data-ttu-id="b6cad-106">返回图像的格式。</span><span class="sxs-lookup"><span data-stu-id="b6cad-106">Returns the format of the image.</span></span> <span data-ttu-id="b6cad-107">只读。</span><span class="sxs-lookup"><span data-stu-id="b6cad-107">Read-only.</span></span>

      <span data-ttu-id="b6cad-108">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6cad-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
      return:
        type:
          - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b6cad-109">示例</span><span class="sxs-lookup"><span data-stu-id="b6cad-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const image = sheet.shapes.getItem("Image").image;
              image.load("format");
              await context.sync();

              console.log("The image's format is: " + image.format);
              await context.sync();
          });
          ```
  - uid: excel_release.Excel.Image.id
    summary: |-
      <span data-ttu-id="b6cad-110">表示图像对象的形状标识符。</span><span class="sxs-lookup"><span data-stu-id="b6cad-110">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="b6cad-111">只读。</span><span class="sxs-lookup"><span data-stu-id="b6cad-111">Read-only.</span></span>

      <span data-ttu-id="b6cad-112">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6cad-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.Image.load
    summary: <span data-ttu-id="b6cad-113">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="b6cad-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6cad-114">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="b6cad-114">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="b6cad-115">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="b6cad-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="b6cad-116">`load(option?: string | string[]): Excel.Image`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="b6cad-116">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="b6cad-117">`load(option?: { select?: string; expand?: string; }): Excel.Image`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="b6cad-117">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="b6cad-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="b6cad-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="b6cad-119">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="b6cad-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="b6cad-120">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="b6cad-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b6cad-121">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="b6cad-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b6cad-122">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="b6cad-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ImageLoadOptions
  - uid: excel_release.Excel.Image.load_1
    summary: '<span data-ttu-id="b6cad-123">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="b6cad-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6cad-124">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="b6cad-124">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="b6cad-125">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="b6cad-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.Image.load_2
    summary: '<span data-ttu-id="b6cad-126">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="b6cad-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6cad-127">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="b6cad-127">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="b6cad-128">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="b6cad-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.Image.shape
    summary: |-
      <span data-ttu-id="b6cad-129">返回与图像关联的形状对象。</span><span class="sxs-lookup"><span data-stu-id="b6cad-129">Returns the Shape object associated with the image.</span></span> <span data-ttu-id="b6cad-130">只读。</span><span class="sxs-lookup"><span data-stu-id="b6cad-130">Read-only.</span></span>

      <span data-ttu-id="b6cad-131">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6cad-131">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel_release.Excel.Image.toJSON
    summary: '<span data-ttu-id="b6cad-132">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="b6cad-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="b6cad-133">.</span><span class="sxs-lookup"><span data-stu-id="b6cad-133"></span></span> <span data-ttu-id="b6cad-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="b6cad-134"></span></span><!-- --><span data-ttu-id="b6cad-135">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel 图像对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.ImageData`</span><span class="sxs-lookup"><span data-stu-id="b6cad-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`</span></span><!-- --><span data-ttu-id="b6cad-136">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="b6cad-136">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ImageData;'
      return:
        type:
          - excel.Excel.Interfaces.ImageData
        description: ''