### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PageBreak
    summary: '<span data-ttu-id="63fa9-101">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63fa9-101">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
    name: Excel.PageBreak
    fullName: Excel.PageBreak
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PageBreak.columnIndex
      - excel_release.Excel.PageBreak.context
      - excel_release.Excel.PageBreak.delete
      - excel_release.Excel.PageBreak.getCellAfterBreak
      - excel_release.Excel.PageBreak.load
      - excel_release.Excel.PageBreak.load_1
      - excel_release.Excel.PageBreak.load_2
      - excel_release.Excel.PageBreak.rowIndex
      - excel_release.Excel.PageBreak.toJSON
  - uid: excel_release.Excel.PageBreak.columnIndex
    summary: |-
      <span data-ttu-id="63fa9-102">表示分页符的列索引</span><span class="sxs-lookup"><span data-stu-id="63fa9-102">Represents the column index for the page break</span></span>

      <span data-ttu-id="63fa9-103">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63fa9-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnIndex
    fullName: columnIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnIndex: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.PageBreak.context
    summary: <span data-ttu-id="63fa9-104">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="63fa9-104">The request context associated with the object.</span></span> <span data-ttu-id="63fa9-105">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="63fa9-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PageBreak.delete
    summary: |-
      <span data-ttu-id="63fa9-106">删除分页符对象。</span><span class="sxs-lookup"><span data-stu-id="63fa9-106">Deletes a page break object.</span></span>

      <span data-ttu-id="63fa9-107">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63fa9-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.PageBreak.getCellAfterBreak
    summary: |-
      <span data-ttu-id="63fa9-108">获取分页符后的第一个单元格。</span><span class="sxs-lookup"><span data-stu-id="63fa9-108">Gets the first cell after the page break.</span></span>

      <span data-ttu-id="63fa9-109">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63fa9-109">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCellAfterBreak()
    fullName: getCellAfterBreak()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCellAfterBreak(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PageBreak.load
    summary: <span data-ttu-id="63fa9-110">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="63fa9-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="63fa9-111">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="63fa9-111">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="63fa9-112">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="63fa9-112">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="63fa9-113">`load(option?: string | string[]): Excel.PageBreak`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="63fa9-113">`load(option?: string | string[]): Excel.PageBreak` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="63fa9-114">`load(option?: { select?: string; expand?: string; }): Excel.PageBreak`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="63fa9-114">`load(option?: { select?: string; expand?: string; }): Excel.PageBreak` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="63fa9-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PageBreak`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="63fa9-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PageBreak` - Only available on collection types.</span></span> <span data-ttu-id="63fa9-116">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="63fa9-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="63fa9-117">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="63fa9-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="63fa9-118">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="63fa9-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="63fa9-119">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="63fa9-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PageBreakLoadOptions): Excel.PageBreak;'
      return:
        type:
          - excel.Excel.PageBreak
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PageBreakLoadOptions
  - uid: excel_release.Excel.PageBreak.load_1
    summary: '<span data-ttu-id="63fa9-120">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="63fa9-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="63fa9-121">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="63fa9-121">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PageBreak;'
      return:
        type:
          - excel.Excel.PageBreak
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="63fa9-122">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="63fa9-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PageBreak.load_2
    summary: '<span data-ttu-id="63fa9-123">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="63fa9-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="63fa9-124">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="63fa9-124">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PageBreak;'
      return:
        type:
          - excel.Excel.PageBreak
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="63fa9-125">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="63fa9-125">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.PageBreak.rowIndex
    summary: |-
      <span data-ttu-id="63fa9-126">表示分页符的行索引</span><span class="sxs-lookup"><span data-stu-id="63fa9-126">Represents the row index for the page break</span></span>

      <span data-ttu-id="63fa9-127">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63fa9-127">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowIndex
    fullName: rowIndex
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowIndex: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.PageBreak.toJSON
    summary: '<span data-ttu-id="63fa9-128">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="63fa9-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="63fa9-129">.</span><span class="sxs-lookup"><span data-stu-id="63fa9-129"></span></span> <span data-ttu-id="63fa9-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="63fa9-130"></span></span><!-- --><span data-ttu-id="63fa9-131">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 PageBreak 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.PageBreakData`</span><span class="sxs-lookup"><span data-stu-id="63fa9-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PageBreak object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PageBreakData`</span></span><!-- --><span data-ttu-id="63fa9-132">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="63fa9-132">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PageBreakData;'
      return:
        type:
          - excel.Excel.Interfaces.PageBreakData
        description: ''