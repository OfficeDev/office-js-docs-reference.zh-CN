### YamlMime:UniversalReference
ms.openlocfilehash: 0d5b21815c26ef49e7f551c2809eb4a14d6baf6a
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30116106"
items:
- uid: excel_release.Excel.PivotField
  summary: >-
    <span data-ttu-id="7faf0-101">表示 Excel 透视字段。</span><span class="sxs-lookup"><span data-stu-id="7faf0-101">Represents the Excel PivotField.</span></span>


    <span data-ttu-id="7faf0-102">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7faf0-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotField
  fullName: Excel.PivotField
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.PivotField.context
  - excel_release.Excel.PivotField.id
  - excel_release.Excel.PivotField.items
  - excel_release.Excel.PivotField.load
  - excel_release.Excel.PivotField.load_1
  - excel_release.Excel.PivotField.load_2
  - excel_release.Excel.PivotField.name
  - excel_release.Excel.PivotField.set
  - excel_release.Excel.PivotField.set_1
  - excel_release.Excel.PivotField.showAllItems
  - excel_release.Excel.PivotField.sortByLabels
  - excel_release.Excel.PivotField.subtotals
  - excel_release.Excel.PivotField.toJSON
- uid: excel_release.Excel.PivotField.context
  summary: <span data-ttu-id="7faf0-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="7faf0-103">The request context associated with the object.</span></span> <span data-ttu-id="7faf0-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="7faf0-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.PivotField.id
  summary: >-
    <span data-ttu-id="7faf0-105">PivotField 的 ID。</span><span class="sxs-lookup"><span data-stu-id="7faf0-105">Id of the PivotField.</span></span>


    <span data-ttu-id="7faf0-106">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7faf0-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.PivotField.items
  summary: >-
    <span data-ttu-id="7faf0-107">返回与 PivotField 相关联的 PivotFields。</span><span class="sxs-lookup"><span data-stu-id="7faf0-107">Returns the PivotFields associated with the PivotField.</span></span>


    <span data-ttu-id="7faf0-108">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7faf0-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotItemCollection;'
    return:
      type:
      - excel.Excel.PivotItemCollection
- uid: excel_release.Excel.PivotField.load
  summary: <span data-ttu-id="7faf0-109">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7faf0-110">在读取属性之前, 必须先调用 "context, sync ()"。</span><span class="sxs-lookup"><span data-stu-id="7faf0-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="7faf0-111">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="7faf0-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="7faf0-112">`load(option?: string | string[]): Excel.PivotField`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-112">`load(option?: string | string[]): Excel.PivotField` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="7faf0-113">`load(option?: { select?: string; expand?: string; }): Excel.PivotField`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-113">`load(option?: { select?: string; expand?: string; }): Excel.PivotField` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="7faf0-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotField`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="7faf0-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotField` - Only available on collection types.</span></span> <span data-ttu-id="7faf0-115">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="7faf0-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="7faf0-116">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="7faf0-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7faf0-117">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="7faf0-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7faf0-118">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="7faf0-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotFieldLoadOptions): Excel.PivotField;'
    return:
      type:
      - excel.Excel.PivotField
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.PivotFieldLoadOptions
- uid: excel_release.Excel.PivotField.load_1
  summary: <span data-ttu-id="7faf0-119">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7faf0-120">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="7faf0-120">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotField;'
    return:
      type:
      - excel.Excel.PivotField
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="7faf0-121">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.PivotField.load_2
  summary: <span data-ttu-id="7faf0-122">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7faf0-123">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="7faf0-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotField;'
    return:
      type:
      - excel.Excel.PivotField
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="7faf0-124">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.PivotField.name
  summary: >-
    <span data-ttu-id="7faf0-125">PivotField 的名称。</span><span class="sxs-lookup"><span data-stu-id="7faf0-125">Name of the PivotField.</span></span>


    <span data-ttu-id="7faf0-126">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7faf0-126">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.PivotField.set
  summary: <span data-ttu-id="7faf0-127">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-127">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="7faf0-128">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="7faf0-128">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="7faf0-129">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="7faf0-129">This method has the following additional signature:</span></span>


    `set(properties: Excel.PivotField): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PivotFieldUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="7faf0-130">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-130">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PivotFieldUpdateData
    - id: options
      description: <span data-ttu-id="7faf0-131">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="7faf0-131">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.PivotField.set_1
  summary: <span data-ttu-id="7faf0-132">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="7faf0-132">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.PivotField): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.PivotField
- uid: excel_release.Excel.PivotField.showAllItems
  summary: >-
    <span data-ttu-id="7faf0-133">确定是否显示 PivotField 的所有项。</span><span class="sxs-lookup"><span data-stu-id="7faf0-133">Determines whether to show all items of the PivotField.</span></span>


    <span data-ttu-id="7faf0-134">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7faf0-134">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showAllItems
  fullName: showAllItems
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showAllItems: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.PivotField.sortByLabels
  summary: >-
    <span data-ttu-id="7faf0-135">PivotField 排序。</span><span class="sxs-lookup"><span data-stu-id="7faf0-135">Sorts the PivotField.</span></span> <span data-ttu-id="7faf0-136">如果指定 DataPivotHierarchy，则会基于它进行排序，如果未指定，则会基于 PivotField 本身进行排序。</span><span class="sxs-lookup"><span data-stu-id="7faf0-136">If a DataPivotHierarchy is specified, then sort will be applied based on it, if not sort will be based on the PivotField itself.</span></span>


    <span data-ttu-id="7faf0-137">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7faf0-137">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sortByLabels(sortby)
  fullName: sortByLabels(sortby)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'sortByLabels(sortby: SortBy): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sortby
      description: <span data-ttu-id="7faf0-138">表示按升序还是降序进行排序。</span><span class="sxs-lookup"><span data-stu-id="7faf0-138">Represents whether the sorting is done in an ascending or descending order.</span></span>
      type:
      - SortBy
- uid: excel_release.Excel.PivotField.subtotals
  summary: >-
    <span data-ttu-id="7faf0-139">PivotField 小计。</span><span class="sxs-lookup"><span data-stu-id="7faf0-139">Subtotals of the PivotField.</span></span>


    <span data-ttu-id="7faf0-140">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7faf0-140">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: subtotals
  fullName: subtotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subtotals: Excel.Subtotals;'
    return:
      type:
      - excel.Excel.Subtotals
- uid: excel_release.Excel.PivotField.toJSON
  summary: <span data-ttu-id="7faf0-141">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。</span><span class="sxs-lookup"><span data-stu-id="7faf0-141">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="7faf0-142">(`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)原始的 Excel. 透视字段对象是一个 API 对象, 而`toJSON`该方法将返回一个纯 JavaScript 对象 ( `Excel.Interfaces.PivotFieldData` <!-- -->类型为), 其中包含原始对象中任何已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="7faf0-142">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotField object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotFieldData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotFieldData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotFieldData
      description: ''
