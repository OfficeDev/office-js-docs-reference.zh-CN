### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.RangeAreas
    summary: |-
      RangeAreas 表示同一工作表中的一个或多个矩形区域的集合。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeAreas
    fullName: Excel.RangeAreas
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.RangeAreas.address
      - excel_release.Excel.RangeAreas.addressLocal
      - excel_release.Excel.RangeAreas.areaCount
      - excel_release.Excel.RangeAreas.areas
      - excel_release.Excel.RangeAreas.calculate
      - excel_release.Excel.RangeAreas.cellCount
      - excel_release.Excel.RangeAreas.clear
      - excel_release.Excel.RangeAreas.clear_1
      - excel_release.Excel.RangeAreas.conditionalFormats
      - excel_release.Excel.RangeAreas.context
      - excel_release.Excel.RangeAreas.convertDataTypeToText
      - excel_release.Excel.RangeAreas.convertToLinkedDataType
      - excel_release.Excel.RangeAreas.copyFrom
      - excel_release.Excel.RangeAreas.copyFrom_1
      - excel_release.Excel.RangeAreas.dataValidation
      - excel_release.Excel.RangeAreas.format
      - excel_release.Excel.RangeAreas.getEntireColumn
      - excel_release.Excel.RangeAreas.getEntireRow
      - excel_release.Excel.RangeAreas.getIntersection
      - excel_release.Excel.RangeAreas.getIntersectionOrNullObject
      - excel_release.Excel.RangeAreas.getOffsetRangeAreas
      - excel_release.Excel.RangeAreas.getSpecialCells
      - excel_release.Excel.RangeAreas.getSpecialCells_1
      - excel_release.Excel.RangeAreas.getSpecialCellsOrNullObject
      - excel_release.Excel.RangeAreas.getSpecialCellsOrNullObject_1
      - excel_release.Excel.RangeAreas.getTables
      - excel_release.Excel.RangeAreas.getUsedRangeAreas
      - excel_release.Excel.RangeAreas.getUsedRangeAreasOrNullObject
      - excel_release.Excel.RangeAreas.isEntireColumn
      - excel_release.Excel.RangeAreas.isEntireRow
      - excel_release.Excel.RangeAreas.load
      - excel_release.Excel.RangeAreas.load_1
      - excel_release.Excel.RangeAreas.load_2
      - excel_release.Excel.RangeAreas.set
      - excel_release.Excel.RangeAreas.set_1
      - excel_release.Excel.RangeAreas.setDirty
      - excel_release.Excel.RangeAreas.style
      - excel_release.Excel.RangeAreas.toJSON
      - excel_release.Excel.RangeAreas.track
      - excel_release.Excel.RangeAreas.untrack
      - excel_release.Excel.RangeAreas.worksheet
  - uid: excel_release.Excel.RangeAreas.address
    summary: |-
      返回 A1 样式中的 RageAreas 引用。 地址值将包含单元格的每个矩形块的工作表名称（例如“Sheet1!A1:B4, Sheet1!D1:D4”）。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly address: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.RangeAreas.addressLocal
    summary: |-
      返回用户区域设置中的 RageAreas 引用。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: addressLocal
    fullName: addressLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly addressLocal: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.RangeAreas.areaCount
    summary: |-
      返回包含此 RangeAreas 对象的矩形区域的数量。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: areaCount
    fullName: areaCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly areaCount: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.RangeAreas.areas
    summary: |-
      返回包含此 RangeAreas 对象的矩形区域的集合。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: areas
    fullName: areas
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly areas: Excel.RangeCollection;'
      return:
        type:
          - excel.Excel.RangeCollection
  - uid: excel_release.Excel.RangeAreas.calculate
    summary: |-
      计算 RangeAreas 中的所有单元格。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: calculate()
    fullName: calculate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.RangeAreas.cellCount
    summary: |-
      返回 RangeAreas 对象中的单元格数量，即总计各个矩形区域的单元格计数。 如果单元格计数超过 2^31-1 (2,147,483,647)，则返回 -1。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: cellCount
    fullName: cellCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly cellCount: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.RangeAreas.clear
    summary: |-
      清除包含此 RangeAreas 对象的每个区域的值、格式、填充、边框等。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear(applyTo)
    fullName: clear(applyTo)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(applyTo?: Excel.ClearApplyTo): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: applyTo
          description: '可选。 确定清除操作的类型。 有关详细信息, 请参阅 ClearApplyTo。 默认值为 "All"。'
          type:
            - excel.Excel.ClearApplyTo
  - uid: excel_release.Excel.RangeAreas.clear_1
    summary: |-
      清除包含此 RangeAreas 对象的每个区域的值、格式、填充、边框等。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear(applyToString)
    fullName: clear(applyToString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(applyToString?: "All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: applyToString
          description: '可选。 确定清除操作的类型。 有关详细信息, 请参阅 ClearApplyTo。 默认值为 "All"。'
          type:
            - '"All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"'
  - uid: excel_release.Excel.RangeAreas.conditionalFormats
    summary: |-
      返回与此 RangeAreas 对象中的任何单元格相交的 ConditionalFormats 集合。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: conditionalFormats
    fullName: conditionalFormats
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly conditionalFormats: Excel.ConditionalFormatCollection;'
      return:
        type:
          - excel.Excel.ConditionalFormatCollection
  - uid: excel_release.Excel.RangeAreas.context
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.RangeAreas.convertDataTypeToText
    summary: |-
      将 RangeAreas 中具有数据类型的所有单元格转换为文本。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: convertDataTypeToText()
    fullName: convertDataTypeToText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertDataTypeToText(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.RangeAreas.convertToLinkedDataType
    summary: |-
      将 RangeAreas 中的所有单元格转换为链接数据类型。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'convertToLinkedDataType(serviceID, languageCulture)'
    fullName: 'convertToLinkedDataType(serviceID, languageCulture)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToLinkedDataType(serviceID: number, languageCulture: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: serviceID
          description: 将用于查询数据的服务 ID。
          type:
            - number
        - id: languageCulture
          description: 要为其查询服务的语言区域性。
          type:
            - string
  - uid: excel_release.Excel.RangeAreas.copyFrom
    summary: |-
      将单元格数据或格式从源区域或 RangeAreas 复制到当前 RangeAreas。 目标 rangeAreas 的大小可以与源区域或 RangeAreas 的大小不同。 如果目标小于源, 则将自动扩展目标。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    fullName: 'copyFrom(sourceRange, copyType, skipBlanks, transpose)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyType?: Excel.RangeCopyType, skipBlanks?: boolean, transpose?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceRange
          description: '要从其复制的源区域或 RangeAreas。 当源 RangeAreas 有多个区域时, 它必须位于大纲形式中, 可以通过删除矩形区域中的整行或整列来创建。'
          type:
            - Range | RangeAreas | string
        - id: copyType
          description: 要复制的单元格数据的类型或格式。 默认值为 "All"。
          type:
            - excel.Excel.RangeCopyType
        - id: skipBlanks
          description: '如果为 True, 则在源区域或 RangeAreas 中跳过空单元格。 默认为 false。'
          type:
            - boolean
        - id: transpose
          description: 如此如果转置目标 RangeAreas 中的单元格。 默认为 false。
          type:
            - boolean
  - uid: excel_release.Excel.RangeAreas.copyFrom_1
    summary: |-
      将单元格数据或格式从源区域或 RangeAreas 复制到当前 RangeAreas。 目标 rangeAreas 的大小可以与源区域或 RangeAreas 的大小不同。 如果目标小于源, 则将自动扩展目标。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)'
    fullName: 'copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyTypeString?: "All" | "Formulas" | "Values" | "Formats", skipBlanks?: boolean, transpose?: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sourceRange
          description: '要从其复制的源区域或 RangeAreas。 当源 RangeAreas 有多个区域时, 它必须位于大纲形式中, 可以通过删除矩形区域中的整行或整列来创建。'
          type:
            - Range | RangeAreas | string
        - id: copyTypeString
          description: 要复制的单元格数据的类型或格式。 默认值为 "All"。
          type:
            - '"All" | "Formulas" | "Values" | "Formats"'
        - id: skipBlanks
          description: '如果为 True, 则在源区域或 RangeAreas 中跳过空单元格。 默认为 false。'
          type:
            - boolean
        - id: transpose
          description: 如此如果转置目标 RangeAreas 中的单元格。 默认为 false。
          type:
            - boolean
  - uid: excel_release.Excel.RangeAreas.dataValidation
    summary: |-
      返回 RangeAreas 中的所有区域的 dataValidation 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: dataValidation
    fullName: dataValidation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataValidation: Excel.DataValidation;'
      return:
        type:
          - excel.Excel.DataValidation
  - uid: excel_release.Excel.RangeAreas.format
    summary: |-
      返回一个 rangeFormat 对象，其中封装了 RangeAreas 对象中的所有区域的字体、填充、边框、对齐方式和其他属性。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {

              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const usedRange = sheet.getUsedRange();

              // Find the ranges with formulas
              const formulaRanges = usedRange.getSpecialCells("Formulas");
              formulaRanges.format.fill.color = "lightgreen";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.RangeAreas.getEntireColumn
    summary: |-
      返回表示 RangeAreas 的整个列的 RangeAreas 对象（例如，如果当前 RangeAreas 表示单元格“B4:E11, H2”，它将返回表示列“B:E, H:H”的 RangeAreas）。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getEntireColumn()
    fullName: getEntireColumn()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireColumn(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel_release.Excel.RangeAreas.getEntireRow
    summary: |-
      获取表示 RangeAreas 的整个行的 RangeAreas 对象（例如，如果当前 RangeAreas 表示单元格“B4:E11”，它将返回表示行“4:11”的 RangeAreas）。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getEntireRow()
    fullName: getEntireRow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntireRow(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel_release.Excel.RangeAreas.getIntersection
    summary: |-
      返回 RangeAreas 对象，它表示给定区域或 RangeAreas 的交集。 如果未找到任何交集，则将引发 ItemNotFound 错误。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getIntersection(anotherRange)
    fullName: getIntersection(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIntersection(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: anotherRange
          description: 将用于确定交集的 range、RangeAreas 对象或 range 地址。
          type:
            - Range | RangeAreas | string
  - uid: excel_release.Excel.RangeAreas.getIntersectionOrNullObject
    summary: |-
      返回 RangeAreas 对象，它表示给定区域或 RangeAreas 的交集。 如果未找到任何交集，将返回 null 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getIntersectionOrNullObject(anotherRange)
    fullName: getIntersectionOrNullObject(anotherRange)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getIntersectionOrNullObject(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: anotherRange
          description: 将用于确定交集的范围、RangeAreas 或地址。
          type:
            - Range | RangeAreas | string
  - uid: excel_release.Excel.RangeAreas.getOffsetRangeAreas
    summary: |-
      返回 RangeAreas 对象，它按特定的行和列偏移量进行移动。 返回的 RangeAreas 的维度将与原始对象匹配。 如果生成的 RangeAreas 强行超出工作表网格的边界，则将引发错误。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    fullName: 'getOffsetRangeAreas(rowOffset, columnOffset)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOffsetRangeAreas(rowOffset: number, columnOffset: number): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: rowOffset
          description: RangeAreas 要偏移的行数 (正值、负值或 0)。 正值表示向下偏移，负值表示向上偏移。
          type:
            - number
        - id: columnOffset
          description: RangeAreas 要偏移的列数 (正值、负值或 0)。 正值表示向右偏移，负值表示向左偏移。
          type:
            - number
  - uid: excel_release.Excel.RangeAreas.getSpecialCells
    summary: |-
      返回一个 RangeAreas 对象，它表示匹配指定类型和值的所有单元格。 如果未找到符合条件的特殊单元格，则会引发错误。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCells(cellType, cellValueType)'
    fullName: 'getSpecialCells(cellType, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCells(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellType
          description: 要包含的单元格的类型。
          type:
            - excel.Excel.SpecialCellType
        - id: cellValueType
          description: '如果 cellType 为常量或公式, 则此参数用于确定要在结果中包含哪些类型的单元格。 可以将这些值组合在一起, 以返回多个类型。 默认情况下，将选择所有常量或公式，无论类型如何。'
          type:
            - excel.Excel.SpecialCellValueType
  - uid: excel_release.Excel.RangeAreas.getSpecialCells_1
    summary: |-
      返回一个 RangeAreas 对象，它表示匹配指定类型和值的所有单元格。 如果未找到符合条件的特殊单元格，则会引发错误。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCells(cellTypeString, cellValueType)'
    fullName: 'getSpecialCells(cellTypeString, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCells(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellTypeString
          description: 要包含的单元格的类型。
          type:
            - '"ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible"'
        - id: cellValueType
          description: '如果 cellType 为常量或公式, 则此参数用于确定要在结果中包含哪些类型的单元格。 可以将这些值组合在一起, 以返回多个类型。 默认情况下，将选择所有常量或公式，无论类型如何。'
          type:
            - '"All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"'
  - uid: excel_release.Excel.RangeAreas.getSpecialCellsOrNullObject
    summary: |-
      返回一个 RangeAreas 对象，它表示匹配指定类型和值的所有单元格。 如果未找到符合条件的特殊单元格，则返回 null 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCellsOrNullObject(cellType, cellValueType)'
    fullName: 'getSpecialCellsOrNullObject(cellType, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCellsOrNullObject(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellType
          description: 要包含的单元格的类型。
          type:
            - excel.Excel.SpecialCellType
        - id: cellValueType
          description: '如果 cellType 为常量或公式, 则此参数用于确定要在结果中包含哪些类型的单元格。 可以将这些值组合在一起, 以返回多个类型。 默认情况下，将选择所有常量或公式，无论类型如何。'
          type:
            - excel.Excel.SpecialCellValueType
  - uid: excel_release.Excel.RangeAreas.getSpecialCellsOrNullObject_1
    summary: |-
      返回一个 RangeAreas 对象，它表示匹配指定类型和值的所有单元格。 如果未找到符合条件的特殊单元格，则返回 null 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getSpecialCellsOrNullObject(cellTypeString, cellValueType)'
    fullName: 'getSpecialCellsOrNullObject(cellTypeString, cellValueType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSpecialCellsOrNullObject(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: cellTypeString
          description: 要包含的单元格的类型。
          type:
            - '"ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible"'
        - id: cellValueType
          description: '如果 cellType 为常量或公式, 则此参数用于确定要在结果中包含哪些类型的单元格。 可以将这些值组合在一起, 以返回多个类型。 默认情况下，将选择所有常量或公式，无论类型如何。'
          type:
            - '"All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"'
  - uid: excel_release.Excel.RangeAreas.getTables
    summary: |-
      返回与此 RangeAreas 对象中的任何区域重叠的限定范围的表格集合。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getTables(fullyContained)
    fullName: getTables(fullyContained)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTables(fullyContained?: boolean): Excel.TableScopedCollection;'
      return:
        type:
          - excel.Excel.TableScopedCollection
        description: ''
      parameters:
        - id: fullyContained
          description: '如果为 true, 则仅返回完全包含在区域边界内的表。 默认为 false。'
          type:
            - boolean
  - uid: excel_release.Excel.RangeAreas.getUsedRangeAreas
    summary: |-
      返回使用的 RangeAreas，它包含 RangeAreas 对象中的各个矩形区域的所有已用区域。 如果 RangeAreas 中没有已使用的单元格, 则将引发 ItemNotFound 错误。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getUsedRangeAreas(valuesOnly)
    fullName: getUsedRangeAreas(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeAreas(valuesOnly?: boolean): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: valuesOnly
          description: 是否仅将值为的单元格视为已使用的单元格。 默认为 false。
          type:
            - boolean
  - uid: excel_release.Excel.RangeAreas.getUsedRangeAreasOrNullObject
    summary: |-
      返回使用的 RangeAreas，它包含 RangeAreas 对象中的各个矩形区域的所有已用区域。 如果 RangeAreas 中没有已使用的单元格, 则将返回 null 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getUsedRangeAreasOrNullObject(valuesOnly)
    fullName: getUsedRangeAreasOrNullObject(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeAreasOrNullObject(valuesOnly?: boolean): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: valuesOnly
          description: 是否仅将值为的单元格视为已使用的单元格。
          type:
            - boolean
  - uid: excel_release.Excel.RangeAreas.isEntireColumn
    summary: |-
      指示此 RangeAreas 对象上的所有区域是否表示整列（例如“A:C, Q:Z”）。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isEntireColumn
    fullName: isEntireColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireColumn: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.RangeAreas.isEntireRow
    summary: |-
      指示此 RangeAreas 对象上的所有区域是否表示整行（例如“1:3, 5:7”）。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isEntireRow
    fullName: isEntireRow
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEntireRow: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.RangeAreas.load
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
    remarks: |-
      除了此签名之外, 此方法还具有以下签名:

      `load(option?: string | string[]): Excel.RangeAreas`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。

      `load(option?: { select?: string; expand?: string; }): Excel.RangeAreas`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeAreas`-仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeAreasLoadOptions): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeAreasLoadOptions
  - uid: excel_release.Excel.RangeAreas.load_1
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: propertyNames
          description: '一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.RangeAreas.load_2
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.RangeAreas.set
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名:

      `set(properties: Excel.RangeAreas): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeAreasUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。'
          type:
            - Interfaces.RangeAreasUpdateData
        - id: options
          description: '提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.RangeAreas.set_1
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeAreas): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.RangeAreas
  - uid: excel_release.Excel.RangeAreas.setDirty
    summary: |-
      设置要在下一次重新计算时重新进行计算的 RangeAreas。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setDirty()
    fullName: setDirty()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDirty(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.RangeAreas.style
    summary: |-
      表示此 RangeAreas 对象中的所有区域的样式。 如果单元格的样式不一致, 则将返回 null。 对于自定义样式, 将返回样式名称。 对于内置样式, 将返回一个表示 BuiltInStyle 枚举中的值的字符串。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.RangeAreas.toJSON
    summary: '重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 RangeAreas 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.RangeAreasData`<!-- -->), 其中包含原始对象中所有已加载的子属性的浅表副本。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeAreasData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeAreasData
        description: ''
  - uid: excel_release.Excel.RangeAreas.track
    summary: 根据文档中的相应更改来跟踪对象，以便进行自动调整。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 如果你在“.sync”调用之间和按顺序执行“.run”批处理之外使用此对象，并且在对象上设置属性或调用方法时出现“InvalidObjectPath”错误，则需要在首次创建对象时为跟踪的对象集合添加对象。
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel_release.Excel.RangeAreas.untrack
    summary: 释放与此对象关联的内存（如果先前已跟踪过）。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 拥有许多跟踪对象会降低主机应用程序的速度，因此请在使用完毕后释放所添加的任何对象。 在内存释放生效之前，你需要调用“context.sync()”。
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel_release.Excel.RangeAreas.worksheet
    summary: |-
      返回当前 RangeAreas 的工作表。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet