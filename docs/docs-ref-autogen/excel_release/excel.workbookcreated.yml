### YamlMime:UniversalReference
ms.openlocfilehash: 8c3288be5aa8e5d49c1608aa409e9d99d515c4c8
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30114601"
items:
- uid: excel_release.Excel.WorkbookCreated
  summary: >-
    <span data-ttu-id="b0a4f-101">WorkbookCreated 对象是 CreateWorkbook 创建的顶级对象。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-101">The WorkbookCreated object is the top level object created by Application.CreateWorkbook.</span></span> <span data-ttu-id="b0a4f-102">WorkbookCreated 对象是特殊的工作簿对象。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-102">A WorkbookCreated object is a special Workbook object.</span></span>


    <span data-ttu-id="b0a4f-103">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b0a4f-103">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorkbookCreated
  fullName: Excel.WorkbookCreated
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorkbookCreated.context
  - excel_release.Excel.WorkbookCreated.load
  - excel_release.Excel.WorkbookCreated.load_1
  - excel_release.Excel.WorkbookCreated.toJSON
- uid: excel_release.Excel.WorkbookCreated.context
  summary: <span data-ttu-id="b0a4f-104">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-104">The request context associated with the object.</span></span> <span data-ttu-id="b0a4f-105">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-105">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorkbookCreated.load
  summary: <span data-ttu-id="b0a4f-106">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-106">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b0a4f-107">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-107">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookCreated;'
    return:
      type:
      - excel.Excel.WorkbookCreated
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="b0a4f-108">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-108">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.WorkbookCreated.load_1
  summary: <span data-ttu-id="b0a4f-109">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b0a4f-110">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-110">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookCreated;'
    return:
      type:
      - excel.Excel.WorkbookCreated
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="b0a4f-111">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-111">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.WorkbookCreated.toJSON
  summary: <span data-ttu-id="b0a4f-112">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-112">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="b0a4f-113">(`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)尽管原始 WorkbookCreated 对象是 API 对象, 但该`toJSON`方法返回一个纯 JavaScript 对象 (类型为`Excel.Interfaces.WorkbookCreatedData` <!-- -->), 其中包含原始对象中任何已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="b0a4f-113">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookCreated object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookCreatedData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookCreatedData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookCreatedData
      description: ''
