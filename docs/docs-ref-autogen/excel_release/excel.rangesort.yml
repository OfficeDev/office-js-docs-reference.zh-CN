### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.RangeSort
    summary: |-
      管理对 Range 对象的排序操作。

      \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeSort
    fullName: Excel.RangeSort
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.RangeSort.apply
      - excel_release.Excel.RangeSort.apply_1
      - excel_release.Excel.RangeSort.context
      - excel_release.Excel.RangeSort.toJSON
  - uid: excel_release.Excel.RangeSort.apply
    summary: |-
      执行排序操作。

      \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    fullName: 'apply(fields, matchCase, hasHeaders, orientation, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientation?: Excel.SortOrientation, method?: Excel.SortMethod): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: 要用作排序依据的条件列表。
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: 可选。 是否让大小写对字符串排序产生影响。
          type:
            - boolean
        - id: hasHeaders
          description: 可选。 该区域是否有标头。
          type:
            - boolean
        - id: orientation
          description: 可选。 该操作是对行还是列排序。
          type:
            - excel.Excel.SortOrientation
        - id: method
          description: 可选。 用于中文字符的排序方法。
          type:
            - excel.Excel.SortMethod
  - uid: excel_release.Excel.RangeSort.apply_1
    summary: |-
      执行排序操作。

      \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    fullName: 'apply(fields, matchCase, hasHeaders, orientationString, method)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientationString?: "Rows" | "Columns", method?: "PinYin" | "StrokeCount"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: fields
          description: 要用作排序依据的条件列表。
          type:
            - 'Excel.SortField[]'
        - id: matchCase
          description: 可选。 是否让大小写对字符串排序产生影响。
          type:
            - boolean
        - id: hasHeaders
          description: 可选。 该区域是否有标头。
          type:
            - boolean
        - id: orientationString
          description: 可选。 该操作是对行还是列排序。
          type:
            - '"Rows" | "Columns"'
        - id: method
          description: 可选。 用于中文字符的排序方法。
          type:
            - '"PinYin" | "StrokeCount"'
  - uid: excel_release.Excel.RangeSort.context
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.RangeSort.toJSON
    summary: '重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 RangeSort 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.RangeSortData`<!-- -->), 其中包含原始对象中所有已加载的子属性的浅表副本。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        toJSON(): {
                    [key: string]: string;
                };
      return:
        type:
          - |-
            {
                        [key: string]: string;
                    }
        description: ''