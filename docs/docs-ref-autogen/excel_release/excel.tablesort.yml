### YamlMime:UniversalReference
ms.openlocfilehash: b0b8e9b041a07e0d44e398de28f081d839527adc
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30117086"
items:
- uid: excel_release.Excel.TableSort
  summary: >-
    管理对 Table 对象的排序操作。


    \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.TableSort
  fullName: Excel.TableSort
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableSort.apply
  - excel_release.Excel.TableSort.apply_1
  - excel_release.Excel.TableSort.clear
  - excel_release.Excel.TableSort.context
  - excel_release.Excel.TableSort.fields
  - excel_release.Excel.TableSort.load
  - excel_release.Excel.TableSort.load_1
  - excel_release.Excel.TableSort.load_2
  - excel_release.Excel.TableSort.matchCase
  - excel_release.Excel.TableSort.method
  - excel_release.Excel.TableSort.reapply
  - excel_release.Excel.TableSort.toJSON
- uid: excel_release.Excel.TableSort.apply
  summary: >-
    执行排序操作。


    \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, method)
  fullName: apply(fields, matchCase, method)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.sort.apply([ \n            {\n                key: 2,\n                ascending: true\n            },\n        ], true);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: fields
      description: 作为排序依据的条件列表。
      type:
      - Excel.SortField[]
    - id: matchCase
      description: 可选。是否让大小写对字符串排序产生影响。
      type:
      - boolean
    - id: method
      description: 可选。 中文字符使用的排序方法。
      type:
      - excel.Excel.SortMethod
- uid: excel_release.Excel.TableSort.apply_1
  summary: >-
    执行排序操作。


    \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, methodString)
  fullName: apply(fields, matchCase, methodString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, methodString?: "PinYin" | "StrokeCount"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fields
      description: 作为排序依据的条件列表。
      type:
      - Excel.SortField[]
    - id: matchCase
      description: 可选。是否让大小写对字符串排序产生影响。
      type:
      - boolean
    - id: methodString
      description: 可选。 中文字符使用的排序方法。
      type:
      - "\"PinYin\" | \"StrokeCount\""
- uid: excel_release.Excel.TableSort.clear
  summary: >-
    清除表上的当前排序。尽管这不能修改表的排序，但它会清除标题按钮的状态。


    \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.TableSort.context
  summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableSort.fields
  summary: >-
    表示最后一次对表排序所使用的当前条件。只读。


    \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: fields
  fullName: fields
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fields: Excel.SortField[];'
    return:
      type:
      - Excel.SortField[]
- uid: excel_release.Excel.TableSort.load
  summary: 对命令进行排队, 以加载对象的指定属性。 在读取属性之前, 必须先调用 "context, sync ()"。
  remarks: >-
    除了此签名之外, 此方法还具有以下签名:


    `load(option?: string | string[]): Excel.TableSort`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。


    `load(option?: { select?: string; expand?: string; }): Excel.TableSort`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort`-仅适用于集合类型。 它类似于前面的签名。 top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableSortLoadOptions): Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.TableSortLoadOptions
- uid: excel_release.Excel.TableSort.load_1
  summary: 对命令进行排队, 以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
      description: ''
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。
      type:
      - string | string[]
- uid: excel_release.Excel.TableSort.load_2
  summary: 对命令进行排队, 以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: 其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.TableSort.matchCase
  summary: >-
    表示最后一次对表进行排序时大小写是否有影响。只读。


    \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: matchCase
  fullName: matchCase
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly matchCase: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.TableSort.method
  summary: >-
    表示上次用于对表进行排序的中文字符排序方法。 只读。


    \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: method
  fullName: method
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
    return:
      type:
      - Excel.SortMethod | "PinYin" | "StrokeCount"
- uid: excel_release.Excel.TableSort.reapply
  summary: >-
    对 table 重新应用当前的排序参数。


    \[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: reapply()
  fullName: reapply()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'reapply(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.TableSort.toJSON
  summary: 重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。 (`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)尽管原始 TableSort 对象是 API 对象, 但该`toJSON`方法返回一个纯 JavaScript 对象 (类型为`Excel.Interfaces.TableSortData` <!-- -->), 其中包含原始对象中任何已加载的子属性的浅表副本。
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableSortData;'
    return:
      type:
      - excel.Excel.Interfaces.TableSortData
      description: ''
