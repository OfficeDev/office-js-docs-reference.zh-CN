### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PivotTableCollection
    summary: |-
      <span data-ttu-id="e7d43-101">表示属于工作簿或工作表的所有 PivotTable 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="e7d43-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>

      <span data-ttu-id="e7d43-102">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7d43-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PivotTableCollection.add
      - excel_release.Excel.PivotTableCollection.context
      - excel_release.Excel.PivotTableCollection.getCount
      - excel_release.Excel.PivotTableCollection.getItem
      - excel_release.Excel.PivotTableCollection.getItemOrNullObject
      - excel_release.Excel.PivotTableCollection.items
      - excel_release.Excel.PivotTableCollection.load
      - excel_release.Excel.PivotTableCollection.load_1
      - excel_release.Excel.PivotTableCollection.load_2
      - excel_release.Excel.PivotTableCollection.refreshAll
      - excel_release.Excel.PivotTableCollection.toJSON
  - uid: excel_release.Excel.PivotTableCollection.add
    summary: |-
      <span data-ttu-id="e7d43-103">基于指定的数据源添加数据透视表，并将其插入到目标区域的左上单元格。</span><span class="sxs-lookup"><span data-stu-id="e7d43-103">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>

      <span data-ttu-id="e7d43-104">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7d43-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(name, source, destination)'
    fullName: 'add(name, source, destination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: |-
          <span data-ttu-id="e7d43-105">返回新插入的数据透视表。</span><span class="sxs-lookup"><span data-stu-id="e7d43-105">Returns the newly inserted PivotTable.</span></span>

          #### <a name="examples"></a><span data-ttu-id="e7d43-106">示例</span><span class="sxs-lookup"><span data-stu-id="e7d43-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
              const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
              context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="e7d43-107">新数据透视表的名称。</span><span class="sxs-lookup"><span data-stu-id="e7d43-107">The name of the new PivotTable.</span></span>
          type:
            - string
        - id: source
          description: '<span data-ttu-id="e7d43-108">新数据透视表的源数据, 可以是区域 (或包含工作表名称的字符串地址) 或表。</span><span class="sxs-lookup"><span data-stu-id="e7d43-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>'
          type:
            - Range | string | Table
        - id: destination
          description: <span data-ttu-id="e7d43-109">数据透视表目标区域（工作表中用于放置所生成的报表的区域）左上角的单元格。</span><span class="sxs-lookup"><span data-stu-id="e7d43-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
          type:
            - Range | string
  - uid: excel_release.Excel.PivotTableCollection.context
    summary: <span data-ttu-id="e7d43-110">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="e7d43-110">The request context associated with the object.</span></span> <span data-ttu-id="e7d43-111">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="e7d43-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PivotTableCollection.getCount
    summary: |-
      <span data-ttu-id="e7d43-112">获取集合中的数据透视表的数量。</span><span class="sxs-lookup"><span data-stu-id="e7d43-112">Gets the number of pivot tables in the collection.</span></span>

      <span data-ttu-id="e7d43-113">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7d43-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.PivotTableCollection.getItem
    summary: |-
      <span data-ttu-id="e7d43-114">按名称获取 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="e7d43-114">Gets a PivotTable by name.</span></span>

      <span data-ttu-id="e7d43-115">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7d43-115">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="e7d43-116">要检索的数据透视表的名称。</span><span class="sxs-lookup"><span data-stu-id="e7d43-116">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.PivotTableCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="e7d43-117">按 PivotTable 对象的名称获取此对象。</span><span class="sxs-lookup"><span data-stu-id="e7d43-117">Gets a PivotTable by name.</span></span> <span data-ttu-id="e7d43-118">如果没有 PivotTable 对象，将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="e7d43-118">If the PivotTable does not exist, will return a null object.</span></span>

      <span data-ttu-id="e7d43-119">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7d43-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="e7d43-120">要检索的数据透视表的名称。</span><span class="sxs-lookup"><span data-stu-id="e7d43-120">Name of the PivotTable to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.PivotTableCollection.items
    summary: <span data-ttu-id="e7d43-121">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="e7d43-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'Excel.PivotTable[]'
  - uid: excel_release.Excel.PivotTableCollection.load
    summary: <span data-ttu-id="e7d43-122">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e7d43-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e7d43-123">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="e7d43-123">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e7d43-124">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="e7d43-124">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e7d43-125">`load(option?: string | string[]): Excel.PivotTableCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="e7d43-125">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e7d43-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="e7d43-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e7d43-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="e7d43-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="e7d43-128">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="e7d43-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="e7d43-129">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="e7d43-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e7d43-130">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="e7d43-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e7d43-131">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="e7d43-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.PivotTableCollection.load_1
    summary: '<span data-ttu-id="e7d43-132">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e7d43-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e7d43-133">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="e7d43-133">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="e7d43-134">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="e7d43-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PivotTableCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.PivotTableCollection.refreshAll
    summary: |-
      <span data-ttu-id="e7d43-135">刷新集合中的所有数据透视表。</span><span class="sxs-lookup"><span data-stu-id="e7d43-135">Refreshes all the pivot tables in the collection.</span></span>

      <span data-ttu-id="e7d43-136">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e7d43-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.PivotTableCollection.toJSON
    summary: '<span data-ttu-id="e7d43-137">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e7d43-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e7d43-138">.</span><span class="sxs-lookup"><span data-stu-id="e7d43-138"></span></span> <span data-ttu-id="e7d43-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e7d43-139"></span></span><!-- --><span data-ttu-id="e7d43-140">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.PivotTableCollection`对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.PivotTableCollectionData`</span><span class="sxs-lookup"><span data-stu-id="e7d43-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`</span></span><!-- --><span data-ttu-id="e7d43-141">), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="e7d43-141">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotTableCollectionData
        description: ''