### YamlMime:UniversalReference
ms.openlocfilehash: 1545dd125ef73b33f92d6e69b995893987e9fa19
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30107307"
items:
- uid: excel_release.Excel.ShowAsRule
  summary: '<span data-ttu-id="179c4-101">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="179c4-101">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
  name: Excel.ShowAsRule
  fullName: Excel.ShowAsRule
  langs:
  - typeScript
  type: interface
  package: excel_release
  children:
  - excel_release.Excel.ShowAsRule.baseField
  - excel_release.Excel.ShowAsRule.baseItem
  - excel_release.Excel.ShowAsRule.calculation
- uid: excel_release.Excel.ShowAsRule.baseField
  summary: >-
    <span data-ttu-id="179c4-102">基于 ShowAs 计算的基础 PivotField，如适用，基于 ShowAsCalculation 类型，否则为 null。</span><span class="sxs-lookup"><span data-stu-id="179c4-102">The base PivotField to base the ShowAs calculation, if applicable based on the ShowAsCalculation type, else null.</span></span>


    <span data-ttu-id="179c4-103">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="179c4-103">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: baseField
  fullName: baseField
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseField?: Excel.PivotField;'
    return:
      type:
      - excel.Excel.PivotField
- uid: excel_release.Excel.ShowAsRule.baseItem
  summary: >-
    <span data-ttu-id="179c4-104">基于 ShowAs 计算的基础 Item，如适用，基于 ShowAsCalculation 类型，否则为 null。</span><span class="sxs-lookup"><span data-stu-id="179c4-104">The base Item to base the ShowAs calculation on, if applicable based on the ShowAsCalculation type, else null.</span></span>


    <span data-ttu-id="179c4-105">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="179c4-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: baseItem
  fullName: baseItem
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseItem?: Excel.PivotItem;'
    return:
      type:
      - excel.Excel.PivotItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"179c4-106\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"179c4-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    const farmDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem(\"Sum of Crates Sold at Farm\");\n    const wholesaleDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem(\"Sum of Crates Sold Wholesale\");\n\n    farmDataHierarchy.load(\"showAs\");\n    wholesaleDataHierarchy.load(\"showAs\");\n    await context.sync();\n\n    // show the difference between crate sales of the \"A Farms\" and the other farms\n    // this difference is both aggregated and shown for individual fruit types (where applicable)\n    let farmShowAs = farmDataHierarchy.showAs;\n    farmShowAs.calculation = Excel.ShowAsCalculation.differenceFrom;\n    farmShowAs.baseField = pivotTable.rowHierarchies.getItem(\"Farm\").fields.getItem(\"Farm\");\n    farmShowAs.baseItem = pivotTable.rowHierarchies.getItem(\"Farm\").fields.getItem(\"Farm\").items.getItem(\"A Farms\");\n    farmDataHierarchy.showAs = farmShowAs;\n\n    let wholesaleShowAs = wholesaleDataHierarchy.showAs;\n    wholesaleShowAs.calculation = Excel.ShowAsCalculation.differenceFrom;\n    wholesaleShowAs.baseField = pivotTable.rowHierarchies.getItem(\"Farm\").fields.getItem(\"Farm\");\n    wholesaleShowAs.baseItem = pivotTable.rowHierarchies.getItem(\"Farm\").fields.getItem(\"Farm\").items.getItem(\"A Farms\");\n    wholesaleDataHierarchy.showAs = wholesaleShowAs;\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ShowAsRule.calculation
  summary: >-
    <span data-ttu-id="179c4-107">数据 PivotField 使用的 ShowAs 计算。</span><span class="sxs-lookup"><span data-stu-id="179c4-107">The ShowAs Calculation to use for the Data PivotField.</span></span> <span data-ttu-id="179c4-108">有关详细信息, 请参阅 ShowAsCalculation。</span><span class="sxs-lookup"><span data-stu-id="179c4-108">See Excel.ShowAsCalculation for Details.</span></span>


    <span data-ttu-id="179c4-109">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="179c4-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculation
  fullName: calculation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculation: Excel.ShowAsCalculation | "Unknown" | "None" | "PercentOfGrandTotal" | "PercentOfRowTotal" | "PercentOfColumnTotal" | "PercentOfParentRowTotal" | "PercentOfParentColumnTotal" | "PercentOfParentTotal" | "PercentOf" | "RunningTotal" | "PercentRunningTotal" | "DifferenceFrom" | "PercentDifferenceFrom" | "RankAscending" | "RankDecending" | "Index";'
    return:
      type:
      - Excel.ShowAsCalculation | "Unknown" | "None" | "PercentOfGrandTotal" | "PercentOfRowTotal" | "PercentOfColumnTotal" | "PercentOfParentRowTotal" | "PercentOfParentColumnTotal" | "PercentOfParentTotal" | "PercentOf" | "RunningTotal" | "PercentRunningTotal" | "DifferenceFrom" | "PercentDifferenceFrom" | "RankAscending" | "RankDecending" | "Index"
