### YamlMime:UniversalReference
ms.openlocfilehash: 0965d6765b7328572822371ee8eac2abfb2ac90d
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30107181"
items:
- uid: excel_release.Excel.ConditionalFormatRule
  summary: >-
    表示适用于所有传统规则/格式配对的规则。


    \[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ConditionalFormatRule
  fullName: Excel.ConditionalFormatRule
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.ConditionalFormatRule.context
  - excel_release.Excel.ConditionalFormatRule.formula
  - excel_release.Excel.ConditionalFormatRule.formulaLocal
  - excel_release.Excel.ConditionalFormatRule.formulaR1C1
  - excel_release.Excel.ConditionalFormatRule.load
  - excel_release.Excel.ConditionalFormatRule.load_1
  - excel_release.Excel.ConditionalFormatRule.load_2
  - excel_release.Excel.ConditionalFormatRule.set
  - excel_release.Excel.ConditionalFormatRule.set_1
  - excel_release.Excel.ConditionalFormatRule.toJSON
- uid: excel_release.Excel.ConditionalFormatRule.context
  summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.ConditionalFormatRule.formula
  summary: >-
    如果需要，公式可对条件格式规则进行求值。


    \[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a>示例\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.ConditionalFormatRule.formulaLocal
  summary: >-
    如果需要，公式可采用用户的语言对条件格式规则进行求值。


    \[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: formulaLocal
  fullName: formulaLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaLocal: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.ConditionalFormatRule.formulaR1C1
  summary: >-
    如果需要，公式可采用 R1C1 表示法对条件格式规则进行求值。


    \[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: formulaR1C1
  fullName: formulaR1C1
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaR1C1: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.ConditionalFormatRule.load
  summary: 对命令进行排队, 以加载对象的指定属性。 在读取属性之前, 必须先调用 "context, sync ()"。
  remarks: >-
    除了此签名之外, 此方法还具有以下签名:


    `load(option?: string | string[]): Excel.ConditionalFormatRule`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。


    `load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule`-仅适用于集合类型。 它类似于前面的签名。 top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ConditionalFormatRuleLoadOptions): Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ConditionalFormatRuleLoadOptions
- uid: excel_release.Excel.ConditionalFormatRule.load_1
  summary: 对命令进行排队, 以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: ''
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。
      type:
      - string | string[]
- uid: excel_release.Excel.ConditionalFormatRule.load_2
  summary: 对命令进行排队, 以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: 其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.ConditionalFormatRule.set
  summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
  remarks: >-
    此方法具有以下附加签名:


    `set(properties: Excel.ConditionalFormatRule): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: 一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。
      type:
      - Interfaces.ConditionalFormatRuleUpdateData
    - id: options
      description: 提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.ConditionalFormatRule.set_1
  summary: 基于现有加载的对象同时设置该对象的多个属性。
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ConditionalFormatRule): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ConditionalFormatRule
- uid: excel_release.Excel.ConditionalFormatRule.toJSON
  summary: 重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。 (`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)尽管原始 ConditionalFormatRule 对象是 API 对象, 但该`toJSON`方法返回一个纯 JavaScript 对象 (类型为`Excel.Interfaces.ConditionalFormatRuleData` <!-- -->), 其中包含原始对象中任何已加载的子属性的浅表副本。
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatRuleData
      description: ''
