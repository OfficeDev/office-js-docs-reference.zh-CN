### YamlMime:UniversalReference
ms.openlocfilehash: 9e7c73e46e4faeeb20aa7654769de93814999357
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30113474"
items:
- uid: excel_release.Excel.RangeFont
  summary: >-
    此对象表示对象的字体属性（字体名称、字号、颜色等）。


    \[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.RangeFont
  fullName: Excel.RangeFont
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.RangeFont.bold
  - excel_release.Excel.RangeFont.color
  - excel_release.Excel.RangeFont.context
  - excel_release.Excel.RangeFont.italic
  - excel_release.Excel.RangeFont.load
  - excel_release.Excel.RangeFont.load_1
  - excel_release.Excel.RangeFont.load_2
  - excel_release.Excel.RangeFont.name
  - excel_release.Excel.RangeFont.set
  - excel_release.Excel.RangeFont.set_1
  - excel_release.Excel.RangeFont.size
  - excel_release.Excel.RangeFont.toJSON
  - excel_release.Excel.RangeFont.underline
- uid: excel_release.Excel.RangeFont.bold
  summary: >-
    表示字体的加粗状态。


    \[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: bold
  fullName: bold
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bold: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.RangeFont.color
  summary: >-
    文本颜色的 HTML 颜色代码表示形式。 例如， \#FF0000 表示红色。


    \[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.RangeFont.context
  summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.RangeFont.italic
  summary: >-
    表示字体的斜体状态。


    \[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: italic
  fullName: italic
  langs:
  - typeScript
  type: property
  syntax:
    content: 'italic: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.RangeFont.load
  summary: 对命令进行排队, 以加载对象的指定属性。 在读取属性之前, 必须先调用 "context, sync ()"。
  remarks: >-
    除了此签名之外, 此方法还具有以下签名:


    `load(option?: string | string[]): Excel.RangeFont`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。


    `load(option?: { select?: string; expand?: string; }): Excel.RangeFont`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont`-仅适用于集合类型。 它类似于前面的签名。 top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeFontLoadOptions): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RangeFontLoadOptions
- uid: excel_release.Excel.RangeFont.load_1
  summary: 对命令进行排队, 以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: "\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFont = range.format.font;\n    rangeFont.load('name');\n    return ctx.sync().then(function() {\n        console.log(rangeFont.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets font name. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.font.name = 'Times New Roman';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。
      type:
      - string | string[]
- uid: excel_release.Excel.RangeFont.load_2
  summary: 对命令进行排队, 以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: 其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.RangeFont.name
  summary: >-
    字体名称（例如"Calibri"）


    \[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.RangeFont.set
  summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
  remarks: >-
    此方法具有以下附加签名:


    `set(properties: Excel.RangeFont): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.RangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: 一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。
      type:
      - Interfaces.RangeFontUpdateData
    - id: options
      description: 提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.RangeFont.set_1
  summary: 基于现有加载的对象同时设置该对象的多个属性。
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.RangeFont): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.RangeFont
- uid: excel_release.Excel.RangeFont.size
  summary: >-
    字号


    \[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: size
  fullName: size
  langs:
  - typeScript
  type: property
  syntax:
    content: 'size: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.RangeFont.toJSON
  summary: 重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。 (`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)尽管原始 RangeFont 对象是 API 对象, 但该`toJSON`方法返回一个纯 JavaScript 对象 (类型为`Excel.Interfaces.RangeFontData` <!-- -->), 其中包含原始对象中任何已加载的子属性的浅表副本。
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFontData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFontData
      description: ''
- uid: excel_release.Excel.RangeFont.underline
  summary: >-
    应用于字体的下划线类型。 有关详细信息, 请参阅 RangeUnderlineStyle。


    \[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: underline
  fullName: underline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
    return:
      type:
      - Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
