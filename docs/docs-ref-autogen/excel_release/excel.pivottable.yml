### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PivotTable
    summary: |-
      <span data-ttu-id="ff2b4-101">表示 Excel 数据透视表。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-101">Represents an Excel PivotTable.</span></span>

      <span data-ttu-id="ff2b4-102">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTable
    fullName: Excel.PivotTable
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PivotTable.columnHierarchies
      - excel_release.Excel.PivotTable.context
      - excel_release.Excel.PivotTable.dataHierarchies
      - excel_release.Excel.PivotTable.delete
      - excel_release.Excel.PivotTable.filterHierarchies
      - excel_release.Excel.PivotTable.hierarchies
      - excel_release.Excel.PivotTable.id
      - excel_release.Excel.PivotTable.layout
      - excel_release.Excel.PivotTable.load
      - excel_release.Excel.PivotTable.load_1
      - excel_release.Excel.PivotTable.load_2
      - excel_release.Excel.PivotTable.name
      - excel_release.Excel.PivotTable.refresh
      - excel_release.Excel.PivotTable.rowHierarchies
      - excel_release.Excel.PivotTable.set
      - excel_release.Excel.PivotTable.set_1
      - excel_release.Excel.PivotTable.toJSON
      - excel_release.Excel.PivotTable.worksheet
  - uid: excel_release.Excel.PivotTable.columnHierarchies
    summary: |-
      <span data-ttu-id="ff2b4-103">数据透视表的列透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-103">The Column Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="ff2b4-104">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnHierarchies
    fullName: columnHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.RowColumnPivotHierarchyCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ff2b4-105">示例</span><span class="sxs-lookup"><span data-stu-id="ff2b4-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");       

              // check if the PivotTable already has a column
              const column = pivotTable.columnHierarchies.getItemOrNullObject("Farm");
              column.load("id");
              await context.sync();

              if (column.isNullObject) {
                  // ading the farm column to the column hierarchy automatically removes it from the row hierarchy
                  pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem("Farm"));
              } else {
                  pivotTable.columnHierarchies.remove(column);
              }

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.PivotTable.context
    summary: <span data-ttu-id="ff2b4-106">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-106">The request context associated with the object.</span></span> <span data-ttu-id="ff2b4-107">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PivotTable.dataHierarchies
    summary: |-
      <span data-ttu-id="ff2b4-108">数据透视表的数据透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-108">The Data Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="ff2b4-109">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataHierarchies
    fullName: dataHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.DataPivotHierarchyCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ff2b4-110">示例</span><span class="sxs-lookup"><span data-stu-id="ff2b4-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold at Farm"));
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold Wholesale"));

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.PivotTable.delete
    summary: |-
      <span data-ttu-id="ff2b4-111">删除 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-111">Deletes the PivotTable.</span></span>

      <span data-ttu-id="ff2b4-112">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ff2b4-113">示例</span><span class="sxs-lookup"><span data-stu-id="ff2b4-113">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.worksheets.getItem("Pivot").pivotTables.getItem("Farm Sales").delete();

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.PivotTable.filterHierarchies
    summary: |-
      <span data-ttu-id="ff2b4-114">数据透视表的筛选器透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-114">The Filter Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="ff2b4-115">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-115">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filterHierarchies
    fullName: filterHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.FilterPivotHierarchyCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ff2b4-116">示例</span><span class="sxs-lookup"><span data-stu-id="ff2b4-116">Examples</span></span>

          ```typescript
          async function filter(functionType: Excel.AggregationFunction) {
              await Excel.run(async (context) => {
                  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
                  const filters = pivotTable.filterHierarchies;
                  const filter = filters.getItemOrNullObject("Classification");
                  filter.load();
                  await context.sync();

                  // add the Classification hierarchy to the filter, if it's not already there
                  if (filter.isNullObject) {
                      filters.add(pivotTable.hierarchies.getItem("Classification"));
                      await context.sync();
                  }
              });
          }
          ```
  - uid: excel_release.Excel.PivotTable.hierarchies
    summary: |-
      <span data-ttu-id="ff2b4-117">数据透视表的透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-117">The Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="ff2b4-118">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hierarchies
    fullName: hierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.PivotHierarchyCollection
  - uid: excel_release.Excel.PivotTable.id
    summary: |-
      <span data-ttu-id="ff2b4-119">数据透视表的 ID。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-119">Id of the PivotTable.</span></span> <span data-ttu-id="ff2b4-120">只读。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-120">Read-only.</span></span>

      <span data-ttu-id="ff2b4-121">\[[API 集: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-121">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.PivotTable.layout
    summary: |-
      <span data-ttu-id="ff2b4-122">PivotLayout，用于说明数据透视表的布局和可视化结构。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-122">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>

      <span data-ttu-id="ff2b4-123">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layout
    fullName: layout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly layout: Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ff2b4-124">示例</span><span class="sxs-lookup"><span data-stu-id="ff2b4-124">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.layout.load("layoutType");
              await context.sync();

              // cycle between the three layout types
              if (pivotTable.layout.layoutType === "Compact") {
                  pivotTable.layout.layoutType = "Outline";
              } else if (pivotTable.layout.layoutType === "Outline") {
                  pivotTable.layout.layoutType = "Tabular";
              } else {
                  pivotTable.layout.layoutType = "Compact";
              }
              await context.sync();
              console.log("Pivot layout is now " + pivotTable.layout.layoutType);
          });
          ```
  - uid: excel_release.Excel.PivotTable.load
    summary: <span data-ttu-id="ff2b4-125">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ff2b4-126">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-126">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="ff2b4-127">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="ff2b4-127">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="ff2b4-128">`load(option?: string | string[]): Excel.PivotTable`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-128">`load(option?: string | string[]): Excel.PivotTable` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="ff2b4-129">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-129">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="ff2b4-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="ff2b4-131">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-131">It is similar to the preceding signature.</span></span> <span data-ttu-id="ff2b4-132">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-132">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ff2b4-133">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-133">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ff2b4-134">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-134">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotTableLoadOptions
  - uid: excel_release.Excel.PivotTable.load_1
    summary: '<span data-ttu-id="ff2b4-135">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ff2b4-136">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-136">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="ff2b4-137">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PivotTable.load_2
    summary: '<span data-ttu-id="ff2b4-138">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ff2b4-139">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-139">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="ff2b4-140">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-140">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.PivotTable.name
    summary: |-
      <span data-ttu-id="ff2b4-141">PivotTable 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-141">Name of the PivotTable.</span></span>

      <span data-ttu-id="ff2b4-142">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-142">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.PivotTable.refresh
    summary: |-
      <span data-ttu-id="ff2b4-143">刷新 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-143">Refreshes the PivotTable.</span></span>

      <span data-ttu-id="ff2b4-144">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refresh()
    fullName: refresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refresh(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.PivotTable.rowHierarchies
    summary: |-
      <span data-ttu-id="ff2b4-145">数据透视表的行透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-145">The Row Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="ff2b4-146">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-146">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowHierarchies
    fullName: rowHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - excel.Excel.RowColumnPivotHierarchyCollection
  - uid: excel_release.Excel.PivotTable.set
    summary: '<span data-ttu-id="ff2b4-147">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-147">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="ff2b4-148">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-148">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="ff2b4-149">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="ff2b4-149">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotTable): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="ff2b4-150">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-150">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.PivotTableUpdateData
        - id: options
          description: '<span data-ttu-id="ff2b4-151">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-151">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.PivotTable.set_1
    summary: '<span data-ttu-id="ff2b4-152">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-152">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotTable): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotTable
  - uid: excel_release.Excel.PivotTable.toJSON
    summary: '<span data-ttu-id="ff2b4-153">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="ff2b4-153">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="ff2b4-154">.</span><span class="sxs-lookup"><span data-stu-id="ff2b4-154"></span></span> <span data-ttu-id="ff2b4-155">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="ff2b4-155"></span></span><!-- --><span data-ttu-id="ff2b4-156">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel 数据透视表对象是 API 对象, 但`toJSON`方法返回一个简单的 JavaScript 对象 (类型为`Excel.Interfaces.PivotTableData`</span><span class="sxs-lookup"><span data-stu-id="ff2b4-156">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`</span></span><!-- --><span data-ttu-id="ff2b4-157">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-157">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotTableData
        description: ''
  - uid: excel_release.Excel.PivotTable.worksheet
    summary: |-
      <span data-ttu-id="ff2b4-158">包含当前 PivotTable 对象的工作表。</span><span class="sxs-lookup"><span data-stu-id="ff2b4-158">The worksheet containing the current PivotTable.</span></span>

      <span data-ttu-id="ff2b4-159">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ff2b4-159">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet