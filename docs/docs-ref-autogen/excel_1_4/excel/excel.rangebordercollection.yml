### YamlMime:UniversalReference
items:
  - uid: excel.Excel.RangeBorderCollection
    summary: |-
      <span data-ttu-id="68bd2-101">表示构成区域边框的 Border 对象。</span><span class="sxs-lookup"><span data-stu-id="68bd2-101">Represents the border objects that make up the range border.</span></span>

      <span data-ttu-id="68bd2-102">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="68bd2-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RangeBorderCollection
    fullName: Excel.RangeBorderCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.RangeBorderCollection.context
      - excel.Excel.RangeBorderCollection.count
      - excel.Excel.RangeBorderCollection.getItem
      - excel.Excel.RangeBorderCollection.getItem_1
      - excel.Excel.RangeBorderCollection.getItemAt
      - excel.Excel.RangeBorderCollection.items
      - excel.Excel.RangeBorderCollection.load
      - excel.Excel.RangeBorderCollection.load_1
      - excel.Excel.RangeBorderCollection.load_2
      - excel.Excel.RangeBorderCollection.toJSON
  - uid: excel.Excel.RangeBorderCollection.context
    summary: <span data-ttu-id="68bd2-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="68bd2-103">The request context associated with the object.</span></span> <span data-ttu-id="68bd2-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="68bd2-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.RangeBorderCollection.count
    summary: |-
      <span data-ttu-id="68bd2-105">集合中的 border 对象数量。</span><span class="sxs-lookup"><span data-stu-id="68bd2-105">Number of border objects in the collection.</span></span> <span data-ttu-id="68bd2-106">只读。</span><span class="sxs-lookup"><span data-stu-id="68bd2-106">Read-only.</span></span>

      <span data-ttu-id="68bd2-107">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="68bd2-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.RangeBorderCollection.getItem
    summary: |-
      <span data-ttu-id="68bd2-108">使用其名称获取 border 对象</span><span class="sxs-lookup"><span data-stu-id="68bd2-108">Gets a border object using its name.</span></span>

      <span data-ttu-id="68bd2-109">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="68bd2-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: |-


          #### <a name="examples"></a><span data-ttu-id="68bd2-110">示例</span><span class="sxs-lookup"><span data-stu-id="68bd2-110">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borderName = 'EdgeTop';
              var border = range.format.borders.getItem(borderName);
              border.load('style');
              return ctx.sync().then(function() {
                      console.log(border.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="68bd2-111">要检索的 border 对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="68bd2-111">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="68bd2-112">有关详细信息, 请参阅 BorderIndex。</span><span class="sxs-lookup"><span data-stu-id="68bd2-112">See Excel.BorderIndex for details.</span></span>'
          type:
            - excel.Excel.BorderIndex
  - uid: excel.Excel.RangeBorderCollection.getItem_1
    summary: |-
      <span data-ttu-id="68bd2-113">使用其名称获取 border 对象</span><span class="sxs-lookup"><span data-stu-id="68bd2-113">Gets a border object using its name.</span></span>

      <span data-ttu-id="68bd2-114">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="68bd2-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(indexString)
    fullName: getItem(indexString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: ''
      parameters:
        - id: indexString
          description: '<span data-ttu-id="68bd2-115">要检索的 border 对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="68bd2-115">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="68bd2-116">有关详细信息, 请参阅 BorderIndex。</span><span class="sxs-lookup"><span data-stu-id="68bd2-116">See Excel.BorderIndex for details.</span></span>'
          type:
            - '"EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"'
  - uid: excel.Excel.RangeBorderCollection.getItemAt
    summary: |-
      <span data-ttu-id="68bd2-117">使用其索引获取 border 对象</span><span class="sxs-lookup"><span data-stu-id="68bd2-117">Gets a border object using its index.</span></span>

      <span data-ttu-id="68bd2-118">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="68bd2-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.RangeBorder;'
      return:
        type:
          - excel.Excel.RangeBorder
        description: |-


          #### <a name="examples"></a><span data-ttu-id="68bd2-119">示例</span><span class="sxs-lookup"><span data-stu-id="68bd2-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var border = range.format.borders.getItemAt(0);
              border.load('sideIndex');
              return ctx.sync().then(function() {
                  console.log(border.sideIndex);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="68bd2-120">要检索的对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="68bd2-120">Index value of the object to be retrieved.</span></span> <span data-ttu-id="68bd2-121">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="68bd2-121">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.RangeBorderCollection.items
    summary: <span data-ttu-id="68bd2-122">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="68bd2-122">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.RangeBorder[];'
      return:
        type:
          - 'Excel.RangeBorder[]'
  - uid: excel.Excel.RangeBorderCollection.load
    summary: <span data-ttu-id="68bd2-123">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="68bd2-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="68bd2-124">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="68bd2-124">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="68bd2-125">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="68bd2-125">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="68bd2-126">`load(option?: string | string[]): Excel.RangeBorderCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="68bd2-126">`load(option?: string | string[]): Excel.RangeBorderCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="68bd2-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="68bd2-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="68bd2-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="68bd2-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection` - Only available on collection types.</span></span> <span data-ttu-id="68bd2-129">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="68bd2-129">It is similar to the preceding signature.</span></span> <span data-ttu-id="68bd2-130">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="68bd2-130">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="68bd2-131">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="68bd2-131">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="68bd2-132">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="68bd2-132">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.RangeBorderCollection.load_1
    summary: '<span data-ttu-id="68bd2-133">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="68bd2-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="68bd2-134">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="68bd2-134">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="68bd2-135">示例</span><span class="sxs-lookup"><span data-stu-id="68bd2-135">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borders = range.format.borders;
              border.load('items');
              return ctx.sync().then(function() {
                  console.log(borders.count);
                  for (var i = 0; i < borders.items.length; i++)
                  {
                      console.log(borders.items[i].sideIndex);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="68bd2-136">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="68bd2-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.RangeBorderCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.RangeBorderCollection.toJSON
    summary: '<span data-ttu-id="68bd2-137">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="68bd2-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="68bd2-138">.</span><span class="sxs-lookup"><span data-stu-id="68bd2-138"></span></span> <span data-ttu-id="68bd2-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="68bd2-139"></span></span><!-- --><span data-ttu-id="68bd2-140">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.RangeBorderCollection`对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.RangeBorderCollectionData`</span><span class="sxs-lookup"><span data-stu-id="68bd2-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeBorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderCollectionData`</span></span><!-- --><span data-ttu-id="68bd2-141">), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="68bd2-141">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeBorderCollectionData
        description: ''