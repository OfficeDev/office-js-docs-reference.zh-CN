### YamlMime:UniversalReference
items:
  - uid: excel.Excel.FunctionResult
    summary: |-
      <span data-ttu-id="f730c-101">包含函数求值操作的结果的对象</span><span class="sxs-lookup"><span data-stu-id="f730c-101">An object containing the result of a function-evaluation operation</span></span>

      <span data-ttu-id="f730c-102">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f730c-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.FunctionResult
    fullName: Excel.FunctionResult
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.FunctionResult.context
      - excel.Excel.FunctionResult.error
      - excel.Excel.FunctionResult.load
      - excel.Excel.FunctionResult.load_1
      - excel.Excel.FunctionResult.load_2
      - excel.Excel.FunctionResult.toJSON
      - excel.Excel.FunctionResult.value
  - uid: excel.Excel.FunctionResult.context
    summary: <span data-ttu-id="f730c-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="f730c-103">The request context associated with the object.</span></span> <span data-ttu-id="f730c-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="f730c-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.FunctionResult.error
    summary: |-
      <span data-ttu-id="f730c-105">表示错误的错误值 (\#如 "DIV/0")。</span><span class="sxs-lookup"><span data-stu-id="f730c-105">Error value (such as "\#DIV/0") representing the error.</span></span> <span data-ttu-id="f730c-106">如果未设置错误字符串, 则函数成功, 并将其结果写入值字段。</span><span class="sxs-lookup"><span data-stu-id="f730c-106">If the error string is not set, then the function succeeded, and its result is written to the Value field.</span></span> <span data-ttu-id="f730c-107">该错误始终位于英语区域设置中。</span><span class="sxs-lookup"><span data-stu-id="f730c-107">The error is always in the English locale.</span></span>

      <span data-ttu-id="f730c-108">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f730c-108">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: error
    fullName: error
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly error: string;'
      return:
        type:
          - string
  - uid: excel.Excel.FunctionResult.load
    summary: <span data-ttu-id="f730c-109">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="f730c-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f730c-110">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="f730c-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="f730c-111">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="f730c-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="f730c-112">`load(option?: string | string[]): FunctionResult<T>`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="f730c-112">`load(option?: string | string[]): FunctionResult<T>` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="f730c-113">`load(option?: { select?: string; expand?: string; }): FunctionResult<T>`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="f730c-113">`load(option?: { select?: string; expand?: string; }): FunctionResult<T>` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="f730c-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): FunctionResult<T>`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="f730c-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): FunctionResult<T>` - Only available on collection types.</span></span> <span data-ttu-id="f730c-115">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="f730c-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="f730c-116">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="f730c-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="f730c-117">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="f730c-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="f730c-118">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="f730c-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.FunctionResultLoadOptions): FunctionResult<T>;'
      return:
        type:
          - FunctionResult<T>
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.FunctionResultLoadOptions
  - uid: excel.Excel.FunctionResult.load_1
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: string | string[]): FunctionResult<T>;'
      return:
        type:
          - FunctionResult<T>
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'string | string[]'
  - uid: excel.Excel.FunctionResult.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(option?: {
                    select?: string;
                    expand?: string;
                }): FunctionResult<T>;
      return:
        type:
          - FunctionResult<T>
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: excel.Excel.FunctionResult.toJSON
    summary: '<span data-ttu-id="f730c-119">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f730c-119">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f730c-120">.</span><span class="sxs-lookup"><span data-stu-id="f730c-120"></span></span> <span data-ttu-id="f730c-121">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f730c-121"></span></span><!-- --><span data-ttu-id="f730c-122">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 FunctionResult<T>对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Interfaces.FunctionResultData<T>`</span><span class="sxs-lookup"><span data-stu-id="f730c-122">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original FunctionResult<T> object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Interfaces.FunctionResultData<T>`</span></span><!-- --><span data-ttu-id="f730c-123">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="f730c-123">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Interfaces.FunctionResultData<T>;'
      return:
        type:
          - Interfaces.FunctionResultData<T>
        description: ''
  - uid: excel.Excel.FunctionResult.value
    summary: |-
      <span data-ttu-id="f730c-124">函数计算的值。</span><span class="sxs-lookup"><span data-stu-id="f730c-124">The value of function evaluation.</span></span> <span data-ttu-id="f730c-125">仅当未发生错误 (即, 未设置 Error 属性) 时, 才会填充 "值" 字段。</span><span class="sxs-lookup"><span data-stu-id="f730c-125">The value field will be populated only if no error has occurred (i.e., the Error property is not set).</span></span>

      <span data-ttu-id="f730c-126">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f730c-126">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: T;'
      return:
        type:
          - T