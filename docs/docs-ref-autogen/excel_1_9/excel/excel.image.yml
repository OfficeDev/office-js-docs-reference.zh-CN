### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Image:class'
    summary: |-
      <span data-ttu-id="f2236-101">代表工作表中的图像。</span><span class="sxs-lookup"><span data-stu-id="f2236-101">Represents an image in the worksheet.</span></span> <span data-ttu-id="f2236-102">若要获取相应的 Shape 对象，请使用 Image. Shape。</span><span class="sxs-lookup"><span data-stu-id="f2236-102">To get the corresponding Shape object, use Image.shape.</span></span>

      <span data-ttu-id="f2236-103">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2236-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Image
    fullName: Excel.Image
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Image#context:member'
      - 'excel!Excel.Image#format:member'
      - 'excel!Excel.Image#id:member'
      - 'excel!Excel.Image#load:member(1)'
      - 'excel!Excel.Image#load:member(2)'
      - 'excel!Excel.Image#load:member(3)'
      - 'excel!Excel.Image#shape:member'
      - 'excel!Excel.Image#toJSON:member(1)'
  - uid: 'excel!Excel.Image#context:member'
    summary: <span data-ttu-id="f2236-104">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="f2236-104">The request context associated with the object.</span></span> <span data-ttu-id="f2236-105">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="f2236-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Image#format:member'
    summary: |-
      <span data-ttu-id="f2236-106">返回图像的格式。</span><span class="sxs-lookup"><span data-stu-id="f2236-106">Returns the format of the image.</span></span> <span data-ttu-id="f2236-107">只读。</span><span class="sxs-lookup"><span data-stu-id="f2236-107">Read-only.</span></span>

      <span data-ttu-id="f2236-108">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2236-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
      return:
        type:
          - 'excel!Excel.Image#format~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f2236-109">示例</span><span class="sxs-lookup"><span data-stu-id="f2236-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const image = sheet.shapes.getItem("Image").image;
              image.load("format");
              await context.sync();

              console.log("The image's format is: " + image.format);
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Image#id:member'
    summary: |-
      <span data-ttu-id="f2236-110">表示图像对象的形状标识符。</span><span class="sxs-lookup"><span data-stu-id="f2236-110">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="f2236-111">只读。</span><span class="sxs-lookup"><span data-stu-id="f2236-111">Read-only.</span></span>

      <span data-ttu-id="f2236-112">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2236-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Image#load:member(1)'
    summary: <span data-ttu-id="f2236-113">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="f2236-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f2236-114">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="f2236-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
      return:
        type:
          - 'excel!Excel.Image:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="f2236-115">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="f2236-115">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ImageLoadOptions:interface'
  - uid: 'excel!Excel.Image#load:member(2)'
    summary: <span data-ttu-id="f2236-116">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="f2236-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f2236-117">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="f2236-117">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Image;'
      return:
        type:
          - 'excel!Excel.Image:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f2236-118">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="f2236-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Image#load:member(3)'
    summary: <span data-ttu-id="f2236-119">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="f2236-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f2236-120">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="f2236-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Image;
      return:
        type:
          - 'excel!Excel.Image:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="f2236-121">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="f2236-121">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Image#shape:member'
    summary: |-
      <span data-ttu-id="f2236-122">返回与图像关联的形状对象。</span><span class="sxs-lookup"><span data-stu-id="f2236-122">Returns the Shape object associated with the image.</span></span> <span data-ttu-id="f2236-123">只读。</span><span class="sxs-lookup"><span data-stu-id="f2236-123">Read-only.</span></span>

      <span data-ttu-id="f2236-124">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f2236-124">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
  - uid: 'excel!Excel.Image#toJSON:member(1)'
    summary: '<span data-ttu-id="f2236-125">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f2236-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f2236-126">.</span><span class="sxs-lookup"><span data-stu-id="f2236-126"></span></span> <span data-ttu-id="f2236-127">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f2236-127"></span></span><!-- --><span data-ttu-id="f2236-128">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel 图像对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.ImageData`</span><span class="sxs-lookup"><span data-stu-id="f2236-128">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`</span></span><!-- --><span data-ttu-id="f2236-129">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="f2236-129">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ImageData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ImageData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Image#format~0:complex'
    name: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
    fullName: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
    spec.typeScript:
      - uid: 'excel!Excel.PictureFormat:enum'
        name: Excel.PictureFormat
        fullName: Excel.PictureFormat
      - name: ' | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"'
        fullName: ' | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"'
  - uid: 'excel!Excel.Image:class'
    name: Excel.Image
  - uid: 'excel!Excel.Interfaces.ImageLoadOptions:interface'
    name: Excel.Interfaces.ImageLoadOptions
  - uid: 'excel!Excel.Shape:class'
    name: Excel.Shape
  - uid: 'excel!Excel.Interfaces.ImageData:interface'
    name: Excel.Interfaces.ImageData