### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableRowCollection
    summary: |-
      <span data-ttu-id="b8509-101">表示属于表的所有行的集合。</span><span class="sxs-lookup"><span data-stu-id="b8509-101">Represents a collection of all the rows that are part of the table.</span></span>

      <span data-ttu-id="b8509-102">请注意, 与在添加新行/列之前的区域或列不同, TableRow 对象表示表行的物理位置, 而不是数据。</span><span class="sxs-lookup"><span data-stu-id="b8509-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="b8509-103">也就是说, 如果对数据进行排序或添加新行, 则表行将继续指向为其创建该索引的索引。</span><span class="sxs-lookup"><span data-stu-id="b8509-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="b8509-104">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8509-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableRowCollection
    fullName: Excel.TableRowCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TableRowCollection.add
      - excel.Excel.TableRowCollection.context
      - excel.Excel.TableRowCollection.count
      - excel.Excel.TableRowCollection.getCount
      - excel.Excel.TableRowCollection.getItemAt
      - excel.Excel.TableRowCollection.items
      - excel.Excel.TableRowCollection.load
      - excel.Excel.TableRowCollection.load_1
      - excel.Excel.TableRowCollection.load_2
      - excel.Excel.TableRowCollection.toJSON
  - uid: excel.Excel.TableRowCollection.add
    summary: |-
      <span data-ttu-id="b8509-105">向表中添加一行或多行。</span><span class="sxs-lookup"><span data-stu-id="b8509-105">Adds one or more rows to the table.</span></span> <span data-ttu-id="b8509-106">返回对象是新添加的首行。</span><span class="sxs-lookup"><span data-stu-id="b8509-106">The return object will be the top of the newly added row(s).</span></span>

      <span data-ttu-id="b8509-107">请注意, 与在添加新行/列之前的区域或列不同, TableRow 对象表示表行的物理位置, 而不是数据。</span><span class="sxs-lookup"><span data-stu-id="b8509-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="b8509-108">也就是说, 如果对数据进行排序或添加新行, 则表行将继续指向为其创建该索引的索引。</span><span class="sxs-lookup"><span data-stu-id="b8509-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="b8509-109">\[[API 集: 用于添加单个行的 ExcelApi 1.1; 1.4 允许添加多个行。](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="b8509-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="b8509-110">\]</span><span class="sxs-lookup"><span data-stu-id="b8509-110"></span></span>
    name: 'add(index, values)'
    fullName: 'add(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b8509-111">示例</span><span class="sxs-lookup"><span data-stu-id="b8509-111">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var values = [["Sample", "Values", "For", "New", "Row"]];
              var row = tables.getItem("Table1").rows.add(null, values);
              row.load('index');
              return ctx.sync().then(function() {
                  console.log(row.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="b8509-p105">可选。指定新行的相对位置。如果为 NULL 或 -1，将在末尾进行添加。插入的行下方的所有行都会向下移动。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="b8509-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>'
          type:
            - number
        - id: values
          description: <span data-ttu-id="b8509-117">可选。</span><span class="sxs-lookup"><span data-stu-id="b8509-117">Optional.</span></span> <span data-ttu-id="b8509-118">未设置格式的表行值的二维数组。</span><span class="sxs-lookup"><span data-stu-id="b8509-118">A 2-dimensional array of unformatted values of the table row.</span></span>
          type:
            - Array<Array<boolean | string | number>> | boolean | string | number
  - uid: excel.Excel.TableRowCollection.context
    summary: <span data-ttu-id="b8509-119">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="b8509-119">The request context associated with the object.</span></span> <span data-ttu-id="b8509-120">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="b8509-120">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TableRowCollection.count
    summary: |-
      <span data-ttu-id="b8509-121">返回表中的行数。</span><span class="sxs-lookup"><span data-stu-id="b8509-121">Returns the number of rows in the table.</span></span> <span data-ttu-id="b8509-122">只读。</span><span class="sxs-lookup"><span data-stu-id="b8509-122">Read-only.</span></span>

      <span data-ttu-id="b8509-123">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8509-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableRowCollection.getCount
    summary: |-
      <span data-ttu-id="b8509-124">获取表格中的行数。</span><span class="sxs-lookup"><span data-stu-id="b8509-124">Gets the number of rows in the table.</span></span>

      <span data-ttu-id="b8509-125">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8509-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.TableRowCollection.getItemAt
    summary: |-
      <span data-ttu-id="b8509-126">根据其在集合中的位置获取行。</span><span class="sxs-lookup"><span data-stu-id="b8509-126">Gets a row based on its position in the collection.</span></span>

      <span data-ttu-id="b8509-127">请注意, 与在添加新行/列之前的区域或列不同, TableRow 对象表示表行的物理位置, 而不是数据。</span><span class="sxs-lookup"><span data-stu-id="b8509-127">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="b8509-128">也就是说, 如果对数据进行排序或添加新行, 则表行将继续指向为其创建该索引的索引。</span><span class="sxs-lookup"><span data-stu-id="b8509-128">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>

      <span data-ttu-id="b8509-129">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b8509-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableRow;'
      return:
        type:
          - excel.Excel.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b8509-130">示例</span><span class="sxs-lookup"><span data-stu-id="b8509-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);
              tablerow.load('name');
              return ctx.sync().then(function() {
                      console.log(tablerow.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="b8509-131">要检索的对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="b8509-131">Index value of the object to be retrieved.</span></span> <span data-ttu-id="b8509-132">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="b8509-132">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.TableRowCollection.items
    summary: <span data-ttu-id="b8509-133">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="b8509-133">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableRow[];'
      return:
        type:
          - 'Excel.TableRow[]'
  - uid: excel.Excel.TableRowCollection.load
    summary: <span data-ttu-id="b8509-134">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="b8509-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b8509-135">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="b8509-135">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="b8509-136">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="b8509-136">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="b8509-137">`load(option?: string | string[]): Excel.TableRowCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="b8509-137">`load(option?: string | string[]): Excel.TableRowCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="b8509-138">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="b8509-138">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="b8509-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="b8509-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection` - Only available on collection types.</span></span> <span data-ttu-id="b8509-140">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="b8509-140">It is similar to the preceding signature.</span></span> <span data-ttu-id="b8509-141">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="b8509-141">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b8509-142">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="b8509-142">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b8509-143">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="b8509-143">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableRowCollection;'
      return:
        type:
          - excel.Excel.TableRowCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.TableRowCollection.load_1
    summary: '<span data-ttu-id="b8509-144">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="b8509-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b8509-145">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="b8509-145">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableRowCollection;'
      return:
        type:
          - excel.Excel.TableRowCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="b8509-146">示例</span><span class="sxs-lookup"><span data-stu-id="b8509-146">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablerows = ctx.workbook.tables.getItem('Table1').rows;
              tablerows.load('items');
              return ctx.sync().then(function() {
                  console.log("tablerows Count: " + tablerows.count);
                  for (var i = 0; i < tablerows.items.length; i++)
                  {
                      console.log(tablerows.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // In the example, we'll select the top 100 rows of the table.
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.getItem("Table1");
              var tableRows = table.rows.load({"select" : "index, values","top": 100, "skip": 0 })
              return ctx.sync().then(function() {
                  for (var i = 0; i < tableRows.items.length; i++)
                  {
                      console.log(tableRows.items[i].index);
                      console.log(tableRows.items[i].values);
                  }
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="b8509-147">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="b8509-147">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableRowCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableRowCollection;'
      return:
        type:
          - excel.Excel.TableRowCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.TableRowCollection.toJSON
    summary: '<span data-ttu-id="b8509-148">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="b8509-148">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="b8509-149">.</span><span class="sxs-lookup"><span data-stu-id="b8509-149"></span></span> <span data-ttu-id="b8509-150">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="b8509-150"></span></span><!-- --><span data-ttu-id="b8509-151">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.TableRowCollection`对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.TableRowCollectionData`</span><span class="sxs-lookup"><span data-stu-id="b8509-151">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableRowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowCollectionData`</span></span><!-- --><span data-ttu-id="b8509-152">), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="b8509-152">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.TableRowCollectionData
        description: ''