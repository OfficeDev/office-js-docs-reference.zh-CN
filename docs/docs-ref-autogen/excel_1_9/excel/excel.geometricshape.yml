### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.GeometricShape:class'
    summary: |-
      <span data-ttu-id="49c6b-101">代表工作表中的几何形状。</span><span class="sxs-lookup"><span data-stu-id="49c6b-101">Represents a geometric shape inside a worksheet.</span></span> <span data-ttu-id="49c6b-102">在 Excel 中，几何形状可以是矩形、箭头总汇、公式符号、流程图项、星形、横幅、标注或任何其他基本形状。</span><span class="sxs-lookup"><span data-stu-id="49c6b-102">A geometric shape can be a rectangle, block arrow, equation symbol, flowchart item, star, banner, callout, or any other basic shape in Excel.</span></span>

      <span data-ttu-id="49c6b-103">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="49c6b-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.GeometricShape
    fullName: Excel.GeometricShape
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.GeometricShape#context:member'
      - 'excel!Excel.GeometricShape#id:member'
      - 'excel!Excel.GeometricShape#load:member(1)'
      - 'excel!Excel.GeometricShape#load:member(2)'
      - 'excel!Excel.GeometricShape#load:member(3)'
      - 'excel!Excel.GeometricShape#shape:member'
      - 'excel!Excel.GeometricShape#toJSON:member(1)'
  - uid: 'excel!Excel.GeometricShape#context:member'
    summary: <span data-ttu-id="49c6b-104">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="49c6b-104">The request context associated with the object.</span></span> <span data-ttu-id="49c6b-105">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="49c6b-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.GeometricShape#id:member'
    summary: |-
      <span data-ttu-id="49c6b-106">返回形状标识符。</span><span class="sxs-lookup"><span data-stu-id="49c6b-106">Returns the shape identifier.</span></span> <span data-ttu-id="49c6b-107">只读。</span><span class="sxs-lookup"><span data-stu-id="49c6b-107">Read-only.</span></span>

      <span data-ttu-id="49c6b-108">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="49c6b-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.GeometricShape#load:member(1)'
    summary: <span data-ttu-id="49c6b-109">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="49c6b-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="49c6b-110">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="49c6b-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="49c6b-111">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="49c6b-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="49c6b-112">`load(option?: string | string[]): Excel.GeometricShape`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="49c6b-112">`load(option?: string | string[]): Excel.GeometricShape` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="49c6b-113">`load(option?: { select?: string; expand?: string; }): Excel.GeometricShape`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="49c6b-113">`load(option?: { select?: string; expand?: string; }): Excel.GeometricShape` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="49c6b-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.GeometricShape`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="49c6b-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.GeometricShape` - Only available on collection types.</span></span> <span data-ttu-id="49c6b-115">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="49c6b-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="49c6b-116">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="49c6b-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="49c6b-117">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="49c6b-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="49c6b-118">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="49c6b-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.GeometricShapeLoadOptions): Excel.GeometricShape;'
      return:
        type:
          - 'excel!Excel.GeometricShape:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.GeometricShapeLoadOptions:interface'
  - uid: 'excel!Excel.GeometricShape#load:member(2)'
    summary: <span data-ttu-id="49c6b-119">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="49c6b-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="49c6b-120">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="49c6b-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.GeometricShape;'
      return:
        type:
          - 'excel!Excel.GeometricShape:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="49c6b-121">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="49c6b-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.GeometricShape#load:member(3)'
    summary: <span data-ttu-id="49c6b-122">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="49c6b-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="49c6b-123">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="49c6b-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.GeometricShape;'
      return:
        type:
          - 'excel!Excel.GeometricShape:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="49c6b-124">其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="49c6b-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.GeometricShape#shape:member'
    summary: |-
      <span data-ttu-id="49c6b-125">返回几何形状的形状对象。</span><span class="sxs-lookup"><span data-stu-id="49c6b-125">Returns the Shape object for the geometric shape.</span></span> <span data-ttu-id="49c6b-126">只读。</span><span class="sxs-lookup"><span data-stu-id="49c6b-126">Read-only.</span></span>

      <span data-ttu-id="49c6b-127">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="49c6b-127">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
  - uid: 'excel!Excel.GeometricShape#toJSON:member(1)'
    summary: '<span data-ttu-id="49c6b-128">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="49c6b-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="49c6b-129">.</span><span class="sxs-lookup"><span data-stu-id="49c6b-129"></span></span> <span data-ttu-id="49c6b-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="49c6b-130"></span></span><!-- --><span data-ttu-id="49c6b-131">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 GeometricShape 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.GeometricShapeData`</span><span class="sxs-lookup"><span data-stu-id="49c6b-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.GeometricShape object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.GeometricShapeData`</span></span><!-- --><span data-ttu-id="49c6b-132">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="49c6b-132">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.GeometricShapeData;'
      return:
        type:
          - 'excel!Excel.Interfaces.GeometricShapeData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.GeometricShape:class'
    name: Excel.GeometricShape
  - uid: 'excel!Excel.Interfaces.GeometricShapeLoadOptions:interface'
    name: Excel.Interfaces.GeometricShapeLoadOptions
  - uid: 'excel!Excel.Shape:class'
    name: Excel.Shape
  - uid: 'excel!Excel.Interfaces.GeometricShapeData:interface'
    name: Excel.Interfaces.GeometricShapeData