### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Line
    summary: |-
      代表工作表中的一条线。 若要获取相应的 Shape 对象, 请使用`Line.shape`<!-- -->.

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Line
    fullName: Excel.Line
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Line.beginArrowheadLength
      - excel.Excel.Line.beginArrowheadStyle
      - excel.Excel.Line.beginArrowheadWidth
      - excel.Excel.Line.beginConnectedShape
      - excel.Excel.Line.beginConnectedSite
      - excel.Excel.Line.connectBeginShape
      - excel.Excel.Line.connectEndShape
      - excel.Excel.Line.connectorType
      - excel.Excel.Line.context
      - excel.Excel.Line.disconnectBeginShape
      - excel.Excel.Line.disconnectEndShape
      - excel.Excel.Line.endArrowheadLength
      - excel.Excel.Line.endArrowheadStyle
      - excel.Excel.Line.endArrowheadWidth
      - excel.Excel.Line.endConnectedShape
      - excel.Excel.Line.endConnectedSite
      - excel.Excel.Line.id
      - excel.Excel.Line.isBeginConnected
      - excel.Excel.Line.isEndConnected
      - excel.Excel.Line.load
      - excel.Excel.Line.load_1
      - excel.Excel.Line.load_2
      - excel.Excel.Line.set
      - excel.Excel.Line.set_1
      - excel.Excel.Line.shape
      - excel.Excel.Line.toJSON
  - uid: excel.Excel.Line.beginArrowheadLength
    summary: |-
      表示指定线条始端的箭头长度。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: beginArrowheadLength
    fullName: beginArrowheadLength
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type:
          - Excel.ArrowheadLength | "Short" | "Medium" | "Long"
  - uid: excel.Excel.Line.beginArrowheadStyle
    summary: |-
      表示指定线条始端的箭头样式。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: beginArrowheadStyle
    fullName: beginArrowheadStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
      return:
        type:
          - Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
  - uid: excel.Excel.Line.beginArrowheadWidth
    summary: |-
      表示指定线条始端的箭头宽度。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: beginArrowheadWidth
    fullName: beginArrowheadWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type:
          - Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
  - uid: excel.Excel.Line.beginConnectedShape
    summary: |-
      表示指定线条始端所附加到的形状。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: beginConnectedShape
    fullName: beginConnectedShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly beginConnectedShape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel.Excel.Line.beginConnectedSite
    summary: |-
      表示连接线始端所连接的连接站点。 只读。 当线条的始端没有附加到任何形状时，返回 null。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: beginConnectedSite
    fullName: beginConnectedSite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly beginConnectedSite: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Line.connectBeginShape
    summary: |-
      将指定连接线的始端附加到指定形状。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'connectBeginShape(shape, connectionSite)'
    fullName: 'connectBeginShape(shape, connectionSite)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'connectBeginShape(shape: Excel.Shape, connectionSite: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          });
          ```
      parameters:
        - id: shape
          description: 要连接的形状。
          type:
            - excel.Excel.Shape
        - id: connectionSite
          description: 连接符的起点所附加到的形状上的连接点。 必须是介于 0 (含) 和指定形状的连接网站数 (独占) 之间的整数。
          type:
            - number
  - uid: excel.Excel.Line.connectEndShape
    summary: |-
      将指定连接线的末端附加到指定形状。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'connectEndShape(shape, connectionSite)'
    fullName: 'connectEndShape(shape, connectionSite)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'connectEndShape(shape: Excel.Shape, connectionSite: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          });
          ```
      parameters:
        - id: shape
          description: 要连接的形状。
          type:
            - excel.Excel.Shape
        - id: connectionSite
          description: 连接符的终点所连接的形状上的连接点。 必须是介于 0 (含) 和指定形状的连接网站数 (独占) 之间的整数。
          type:
            - number
  - uid: excel.Excel.Line.connectorType
    summary: |-
      表示线条的连接器类型。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: connectorType
    fullName: connectorType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'connectorType: Excel.ConnectorType | "Straight" | "Elbow" | "Curve";'
      return:
        type:
          - Excel.ConnectorType | "Straight" | "Elbow" | "Curve"
  - uid: excel.Excel.Line.context
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Line.disconnectBeginShape
    summary: |-
      使指定连接线的始端与形状脱离。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: disconnectBeginShape()
    fullName: disconnectBeginShape()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'disconnectBeginShape(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Line.disconnectEndShape
    summary: |-
      使指定连接线的末端与形状脱离。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: disconnectEndShape()
    fullName: disconnectEndShape()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'disconnectEndShape(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Line.endArrowheadLength
    summary: |-
      表示指定线条末端的箭头长度。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: endArrowheadLength
    fullName: endArrowheadLength
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type:
          - Excel.ArrowheadLength | "Short" | "Medium" | "Long"
  - uid: excel.Excel.Line.endArrowheadStyle
    summary: |-
      表示指定线条末端的箭头样式。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: endArrowheadStyle
    fullName: endArrowheadStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
      return:
        type:
          - Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
  - uid: excel.Excel.Line.endArrowheadWidth
    summary: |-
      表示指定线条末端的箭头宽度。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: endArrowheadWidth
    fullName: endArrowheadWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type:
          - Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
  - uid: excel.Excel.Line.endConnectedShape
    summary: |-
      表示指定线条末端所附加到的形状。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: endConnectedShape
    fullName: endConnectedShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly endConnectedShape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel.Excel.Line.endConnectedSite
    summary: |-
      表示连接线末端所连接的连接站点。 只读。 当线条的末端没有附加到任何形状时，返回 null。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: endConnectedSite
    fullName: endConnectedSite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly endConnectedSite: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Line.id
    summary: |-
      表示形状标识符。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Line.isBeginConnected
    summary: |-
      指定指定线条的始端是否连接到形状。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isBeginConnected
    fullName: isBeginConnected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isBeginConnected: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Line.isEndConnected
    summary: |-
      指定指定线条的末端是否连接到形状。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isEndConnected
    fullName: isEndConnected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEndConnected: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Line.load
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
    remarks: |-
      除了此签名之外, 此方法还具有以下签名:

      `load(option?: string | string[]): Excel.Line`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。

      `load(option?: { select?: string; expand?: string; }): Excel.Line`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Line`-仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.LineLoadOptions): Excel.Line;'
      return:
        type:
          - excel.Excel.Line
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.LineLoadOptions
  - uid: excel.Excel.Line.load_1
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Line;'
      return:
        type:
          - excel.Excel.Line
        description: ''
      parameters:
        - id: propertyNames
          description: '一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Line.load_2
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Line;'
      return:
        type:
          - excel.Excel.Line
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Line.set
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名:

      `set(properties: Excel.Line): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.LineUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。'
          type:
            - Interfaces.LineUpdateData
        - id: options
          description: '提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Line.set_1
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Line): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Line
  - uid: excel.Excel.Line.shape
    summary: |-
      返回与线条关联的形状对象。 只读。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel.Excel.Line.toJSON
    summary: '重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel Line 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.LineData`<!-- -->), 其中包含原始对象中所有已加载的子属性的浅表副本。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.LineData;'
      return:
        type:
          - excel.Excel.Interfaces.LineData
        description: ''