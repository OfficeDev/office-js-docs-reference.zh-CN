### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.FunctionResult:class'
    summary: |-
      <span data-ttu-id="23edd-101">包含函数求值操作的结果的对象</span><span class="sxs-lookup"><span data-stu-id="23edd-101">An object containing the result of a function-evaluation operation</span></span>

      <span data-ttu-id="23edd-102">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23edd-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.FunctionResult
    fullName: Excel.FunctionResult
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.FunctionResult#context:member'
      - 'excel!Excel.FunctionResult#error:member'
      - 'excel!Excel.FunctionResult#load:member(1)'
      - 'excel!Excel.FunctionResult#load:member(2)'
      - 'excel!Excel.FunctionResult#load:member(3)'
      - 'excel!Excel.FunctionResult#toJSON:member(1)'
      - 'excel!Excel.FunctionResult#value:member'
  - uid: 'excel!Excel.FunctionResult#context:member'
    summary: <span data-ttu-id="23edd-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="23edd-103">The request context associated with the object.</span></span> <span data-ttu-id="23edd-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="23edd-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.FunctionResult#error:member'
    summary: |-
      <span data-ttu-id="23edd-105">表示错误的错误值（\#如 "DIV/0"）。</span><span class="sxs-lookup"><span data-stu-id="23edd-105">Error value (such as "\#DIV/0") representing the error.</span></span> <span data-ttu-id="23edd-106">如果未设置错误字符串，则函数成功，并将其结果写入值字段。</span><span class="sxs-lookup"><span data-stu-id="23edd-106">If the error string is not set, then the function succeeded, and its result is written to the Value field.</span></span> <span data-ttu-id="23edd-107">该错误始终位于英语区域设置中。</span><span class="sxs-lookup"><span data-stu-id="23edd-107">The error is always in the English locale.</span></span>

      <span data-ttu-id="23edd-108">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23edd-108">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: error
    fullName: error
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly error: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.FunctionResult#load:member(1)'
    summary: <span data-ttu-id="23edd-109">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="23edd-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="23edd-110">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="23edd-110">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.FunctionResultLoadOptions): FunctionResult<T>;'
      return:
        type:
          - 'excel!Excel.FunctionResult#load~0:complex'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="23edd-111">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="23edd-111">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.FunctionResultLoadOptions:interface'
  - uid: 'excel!Excel.FunctionResult#load:member(2)'
    summary: <span data-ttu-id="23edd-112">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="23edd-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="23edd-113">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="23edd-113">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): FunctionResult<T>;'
      return:
        type:
          - 'excel!Excel.FunctionResult#load~1:complex'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="23edd-114">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="23edd-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.FunctionResult#load:member(3)'
    summary: <span data-ttu-id="23edd-115">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="23edd-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="23edd-116">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="23edd-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): FunctionResult<T>;
      return:
        type:
          - 'excel!Excel.FunctionResult#load~2:complex'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="23edd-117">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="23edd-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.FunctionResult#toJSON:member(1)'
    summary: '<span data-ttu-id="23edd-118">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="23edd-118">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="23edd-119">.</span><span class="sxs-lookup"><span data-stu-id="23edd-119"></span></span> <span data-ttu-id="23edd-120">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="23edd-120"></span></span><!-- --><span data-ttu-id="23edd-121">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 FunctionResult<T>对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Interfaces.FunctionResultData<T>`</span><span class="sxs-lookup"><span data-stu-id="23edd-121">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original FunctionResult<T> object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Interfaces.FunctionResultData<T>`</span></span><!-- --><span data-ttu-id="23edd-122">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="23edd-122">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Interfaces.FunctionResultData<T>;'
      return:
        type:
          - 'excel!Excel.FunctionResult#toJSON~0:complex'
        description: ''
  - uid: 'excel!Excel.FunctionResult#value:member'
    summary: |-
      <span data-ttu-id="23edd-123">函数计算的值。</span><span class="sxs-lookup"><span data-stu-id="23edd-123">The value of function evaluation.</span></span> <span data-ttu-id="23edd-124">仅当未发生错误（即，未设置 Error 属性）时，才会填充 "值" 字段。</span><span class="sxs-lookup"><span data-stu-id="23edd-124">The value field will be populated only if no error has occurred (i.e., the Error property is not set).</span></span>

      <span data-ttu-id="23edd-125">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="23edd-125">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: T;'
      return:
        type:
          - T
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.FunctionResult#load~0:complex'
    name: FunctionResult<T>
    fullName: Excel.FunctionResult<T>
    spec.typeScript:
      - uid: 'excel!Excel.FunctionResult:class'
        name: FunctionResult
        fullName: Excel.FunctionResult
      - name: <T>
        fullName: <T>
  - uid: 'excel!Excel.Interfaces.FunctionResultLoadOptions:interface'
    name: Excel.Interfaces.FunctionResultLoadOptions
  - uid: 'excel!Excel.FunctionResult#load~1:complex'
    name: FunctionResult<T>
    fullName: Excel.FunctionResult<T>
    spec.typeScript:
      - uid: 'excel!Excel.FunctionResult:class'
        name: FunctionResult
        fullName: Excel.FunctionResult
      - name: <T>
        fullName: <T>
  - uid: 'excel!Excel.FunctionResult#load~2:complex'
    name: FunctionResult<T>
    fullName: Excel.FunctionResult<T>
    spec.typeScript:
      - uid: 'excel!Excel.FunctionResult:class'
        name: FunctionResult
        fullName: Excel.FunctionResult
      - name: <T>
        fullName: <T>
  - uid: 'excel!Excel.FunctionResult#toJSON~0:complex'
    name: Interfaces.FunctionResultData<T>
    fullName: Excel.Interfaces.FunctionResultData<T>
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.FunctionResultData:interface'
        name: Interfaces.FunctionResultData
        fullName: Excel.Interfaces.FunctionResultData
      - name: <T>
        fullName: <T>