### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTable:class'
    summary: |-
      <span data-ttu-id="f24df-101">表示 Excel 数据透视表。</span><span class="sxs-lookup"><span data-stu-id="f24df-101">Represents an Excel PivotTable.</span></span> <span data-ttu-id="f24df-102">若要了解有关数据透视表对象模型的详细信息，请参阅[使用 Excel JAVASCRIPT API 处理数据透视表](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables)</span><span class="sxs-lookup"><span data-stu-id="f24df-102">To learn more about the PivotTable object model, read [Work with PivotTables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables)</span></span><!-- --><span data-ttu-id="f24df-103">.</span><span class="sxs-lookup"><span data-stu-id="f24df-103"></span></span>

      <span data-ttu-id="f24df-104">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTable
    fullName: Excel.PivotTable
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTable#columnHierarchies:member'
      - 'excel!Excel.PivotTable#context:member'
      - 'excel!Excel.PivotTable#dataHierarchies:member'
      - 'excel!Excel.PivotTable#delete:member(1)'
      - 'excel!Excel.PivotTable#enableDataValueEditing:member'
      - 'excel!Excel.PivotTable#filterHierarchies:member'
      - 'excel!Excel.PivotTable#hierarchies:member'
      - 'excel!Excel.PivotTable#id:member'
      - 'excel!Excel.PivotTable#layout:member'
      - 'excel!Excel.PivotTable#load:member(1)'
      - 'excel!Excel.PivotTable#load:member(2)'
      - 'excel!Excel.PivotTable#load:member(3)'
      - 'excel!Excel.PivotTable#name:member'
      - 'excel!Excel.PivotTable#refresh:member(1)'
      - 'excel!Excel.PivotTable#rowHierarchies:member'
      - 'excel!Excel.PivotTable#set:member(1)'
      - 'excel!Excel.PivotTable#set:member(2)'
      - 'excel!Excel.PivotTable#toJSON:member(1)'
      - 'excel!Excel.PivotTable#useCustomSortLists:member'
      - 'excel!Excel.PivotTable#worksheet:member'
  - uid: 'excel!Excel.PivotTable#columnHierarchies:member'
    summary: |-
      <span data-ttu-id="f24df-105">数据透视表的列透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="f24df-105">The Column Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="f24df-106">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnHierarchies
    fullName: columnHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.RowColumnPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f24df-107">示例</span><span class="sxs-lookup"><span data-stu-id="f24df-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");       

              // check if the PivotTable already has a column
              const column = pivotTable.columnHierarchies.getItemOrNullObject("Farm");
              column.load("id");
              await context.sync();

              if (column.isNullObject) {
                  // ading the farm column to the column hierarchy automatically removes it from the row hierarchy
                  pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem("Farm"));
              } else {
                  pivotTable.columnHierarchies.remove(column);
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#context:member'
    summary: <span data-ttu-id="f24df-108">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="f24df-108">The request context associated with the object.</span></span> <span data-ttu-id="f24df-109">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="f24df-109">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTable#dataHierarchies:member'
    summary: |-
      <span data-ttu-id="f24df-110">数据透视表的数据透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="f24df-110">The Data Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="f24df-111">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataHierarchies
    fullName: dataHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f24df-112">示例</span><span class="sxs-lookup"><span data-stu-id="f24df-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold at Farm"));
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold Wholesale"));

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#delete:member(1)'
    summary: |-
      <span data-ttu-id="f24df-113">删除 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="f24df-113">Deletes the PivotTable.</span></span>

      <span data-ttu-id="f24df-114">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-114">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f24df-115">示例</span><span class="sxs-lookup"><span data-stu-id="f24df-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.worksheets.getItem("Pivot").pivotTables.getItem("Farm Sales").delete();

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#enableDataValueEditing:member'
    summary: |-
      <span data-ttu-id="f24df-116">指定数据透视表是否允许用户编辑数据体中的值。</span><span class="sxs-lookup"><span data-stu-id="f24df-116">Specifies whether the PivotTable allows values in the data body to be edited by the user.</span></span>

      <span data-ttu-id="f24df-117">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-117">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: enableDataValueEditing
    fullName: enableDataValueEditing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableDataValueEditing: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotTable#filterHierarchies:member'
    summary: |-
      <span data-ttu-id="f24df-118">数据透视表的筛选器透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="f24df-118">The Filter Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="f24df-119">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-119">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filterHierarchies
    fullName: filterHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.FilterPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f24df-120">示例</span><span class="sxs-lookup"><span data-stu-id="f24df-120">Examples</span></span>

          ```typescript
          async function filter(functionType: Excel.AggregationFunction) {
              await Excel.run(async (context) => {
                  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
                  const filters = pivotTable.filterHierarchies;
                  const filter = filters.getItemOrNullObject("Classification");
                  filter.load();
                  await context.sync();

                  // add the Classification hierarchy to the filter, if it's not already there
                  if (filter.isNullObject) {
                      filters.add(pivotTable.hierarchies.getItem("Classification"));
                      await context.sync();
                  }
              });
          }
          ```
  - uid: 'excel!Excel.PivotTable#hierarchies:member'
    summary: |-
      <span data-ttu-id="f24df-121">数据透视表的透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="f24df-121">The Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="f24df-122">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-122">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hierarchies
    fullName: hierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.PivotHierarchyCollection:class'
  - uid: 'excel!Excel.PivotTable#id:member'
    summary: |-
      <span data-ttu-id="f24df-123">数据透视表的 ID。</span><span class="sxs-lookup"><span data-stu-id="f24df-123">Id of the PivotTable.</span></span> <span data-ttu-id="f24df-124">只读。</span><span class="sxs-lookup"><span data-stu-id="f24df-124">Read-only.</span></span>

      <span data-ttu-id="f24df-125">\[[API 集： ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-125">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotTable#layout:member'
    summary: |-
      <span data-ttu-id="f24df-126">PivotLayout，用于说明数据透视表的布局和可视化结构。</span><span class="sxs-lookup"><span data-stu-id="f24df-126">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>

      <span data-ttu-id="f24df-127">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-127">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layout
    fullName: layout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly layout: Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="f24df-128">示例</span><span class="sxs-lookup"><span data-stu-id="f24df-128">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.layout.load("layoutType");
              await context.sync();

              // cycle between the three layout types
              if (pivotTable.layout.layoutType === "Compact") {
                  pivotTable.layout.layoutType = "Outline";
              } else if (pivotTable.layout.layoutType === "Outline") {
                  pivotTable.layout.layoutType = "Tabular";
              } else {
                  pivotTable.layout.layoutType = "Compact";
              }
              await context.sync();
              console.log("Pivot layout is now " + pivotTable.layout.layoutType);
          });
          ```
  - uid: 'excel!Excel.PivotTable#load:member(1)'
    summary: <span data-ttu-id="f24df-129">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="f24df-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f24df-130">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="f24df-130">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="f24df-131">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="f24df-131">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.PivotTableLoadOptions:interface'
  - uid: 'excel!Excel.PivotTable#load:member(2)'
    summary: <span data-ttu-id="f24df-132">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="f24df-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f24df-133">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="f24df-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="f24df-134">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="f24df-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTable#load:member(3)'
    summary: <span data-ttu-id="f24df-135">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="f24df-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f24df-136">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="f24df-136">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotTable;
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="f24df-137">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="f24df-137">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.PivotTable#name:member'
    summary: |-
      <span data-ttu-id="f24df-138">PivotTable 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="f24df-138">Name of the PivotTable.</span></span>

      <span data-ttu-id="f24df-139">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-139">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotTable#refresh:member(1)'
    summary: |-
      <span data-ttu-id="f24df-140">刷新 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="f24df-140">Refreshes the PivotTable.</span></span>

      <span data-ttu-id="f24df-141">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-141">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refresh()
    fullName: refresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refresh(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.PivotTable#rowHierarchies:member'
    summary: |-
      <span data-ttu-id="f24df-142">数据透视表的行透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="f24df-142">The Row Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="f24df-143">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowHierarchies
    fullName: rowHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.RowColumnPivotHierarchyCollection:class'
  - uid: 'excel!Excel.PivotTable#set:member(1)'
    summary: '<span data-ttu-id="f24df-144">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="f24df-144">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="f24df-145">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="f24df-145">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="f24df-146">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="f24df-146">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotTable): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="f24df-147">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="f24df-147">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.PivotTableUpdateData:interface'
        - id: options
          description: <span data-ttu-id="f24df-148">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="f24df-148">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotTable#set:member(2)'
    summary: '<span data-ttu-id="f24df-149">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="f24df-149">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotTable): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotTable:class'
  - uid: 'excel!Excel.PivotTable#toJSON:member(1)'
    summary: '<span data-ttu-id="f24df-150">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="f24df-150">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="f24df-151">.</span><span class="sxs-lookup"><span data-stu-id="f24df-151"></span></span> <span data-ttu-id="f24df-152">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="f24df-152"></span></span><!-- --><span data-ttu-id="f24df-153">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel 数据透视表对象是 API 对象，但`toJSON`方法返回一个简单的 JavaScript 对象（类型为`Excel.Interfaces.PivotTableData`</span><span class="sxs-lookup"><span data-stu-id="f24df-153">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`</span></span><!-- --><span data-ttu-id="f24df-154">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="f24df-154">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableData:interface'
        description: ''
  - uid: 'excel!Excel.PivotTable#useCustomSortLists:member'
    summary: |-
      <span data-ttu-id="f24df-155">指定排序时，数据透视表是否使用自定义列表。</span><span class="sxs-lookup"><span data-stu-id="f24df-155">Specifies whether the PivotTable uses custom lists when sorting.</span></span>

      <span data-ttu-id="f24df-156">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-156">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: useCustomSortLists
    fullName: useCustomSortLists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useCustomSortLists: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotTable#worksheet:member'
    summary: |-
      <span data-ttu-id="f24df-157">包含当前 PivotTable 对象的工作表。</span><span class="sxs-lookup"><span data-stu-id="f24df-157">The worksheet containing the current PivotTable.</span></span>

      <span data-ttu-id="f24df-158">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f24df-158">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RowColumnPivotHierarchyCollection:class'
    name: Excel.RowColumnPivotHierarchyCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.DataPivotHierarchyCollection:class'
    name: Excel.DataPivotHierarchyCollection
  - uid: 'excel!Excel.FilterPivotHierarchyCollection:class'
    name: Excel.FilterPivotHierarchyCollection
  - uid: 'excel!Excel.PivotHierarchyCollection:class'
    name: Excel.PivotHierarchyCollection
  - uid: 'excel!Excel.PivotLayout:class'
    name: Excel.PivotLayout
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.Interfaces.PivotTableLoadOptions:interface'
    name: Excel.Interfaces.PivotTableLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotTableUpdateData:interface'
    name: Interfaces.PivotTableUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.PivotTableData:interface'
    name: Excel.Interfaces.PivotTableData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet