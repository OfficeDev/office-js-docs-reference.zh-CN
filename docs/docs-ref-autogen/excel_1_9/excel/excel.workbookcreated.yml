### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.WorkbookCreated:class'
    summary: |-
      <span data-ttu-id="7f89b-101">WorkbookCreated 对象是 CreateWorkbook 创建的顶级对象。</span><span class="sxs-lookup"><span data-stu-id="7f89b-101">The WorkbookCreated object is the top level object created by Application.CreateWorkbook.</span></span> <span data-ttu-id="7f89b-102">WorkbookCreated 对象是特殊的工作簿对象。</span><span class="sxs-lookup"><span data-stu-id="7f89b-102">A WorkbookCreated object is a special Workbook object.</span></span>

      <span data-ttu-id="7f89b-103">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7f89b-103">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorkbookCreated
    fullName: Excel.WorkbookCreated
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.WorkbookCreated#context:member'
      - 'excel!Excel.WorkbookCreated#load:member(1)'
      - 'excel!Excel.WorkbookCreated#load:member(2)'
      - 'excel!Excel.WorkbookCreated#toJSON:member(1)'
  - uid: 'excel!Excel.WorkbookCreated#context:member'
    summary: <span data-ttu-id="7f89b-104">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="7f89b-104">The request context associated with the object.</span></span> <span data-ttu-id="7f89b-105">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="7f89b-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.WorkbookCreated#load:member(1)'
    summary: <span data-ttu-id="7f89b-106">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="7f89b-106">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7f89b-107">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="7f89b-107">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorkbookCreated;'
      return:
        type:
          - 'excel!Excel.WorkbookCreated:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="7f89b-108">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="7f89b-108">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.WorkbookCreated#load:member(2)'
    summary: <span data-ttu-id="7f89b-109">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="7f89b-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7f89b-110">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="7f89b-110">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookCreated;'
      return:
        type:
          - 'excel!Excel.WorkbookCreated:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="7f89b-111">其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="7f89b-111">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.WorkbookCreated#toJSON:member(1)'
    summary: '<span data-ttu-id="7f89b-112">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7f89b-112">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7f89b-113">.</span><span class="sxs-lookup"><span data-stu-id="7f89b-113"></span></span> <span data-ttu-id="7f89b-114">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7f89b-114"></span></span><!-- --><span data-ttu-id="7f89b-115">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 WorkbookCreated 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.WorkbookCreatedData`</span><span class="sxs-lookup"><span data-stu-id="7f89b-115">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookCreated object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookCreatedData`</span></span><!-- --><span data-ttu-id="7f89b-116">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="7f89b-116">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookCreatedData;'
      return:
        type:
          - 'excel!Excel.Interfaces.WorkbookCreatedData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.WorkbookCreated:class'
    name: Excel.WorkbookCreated
  - uid: 'excel!Excel.Interfaces.WorkbookCreatedData:interface'
    name: Excel.Interfaces.WorkbookCreatedData