### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TextRange
    summary: |-
      <span data-ttu-id="74849-101">包含附加到形状上的文本，以及用于操作文本的属性和方法。</span><span class="sxs-lookup"><span data-stu-id="74849-101">Contains the text that is attached to a shape, in addition to properties and methods for manipulating the text.</span></span>

      <span data-ttu-id="74849-102">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="74849-102">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TextRange
    fullName: Excel.TextRange
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.TextRange.context
      - excel.Excel.TextRange.font
      - excel.Excel.TextRange.getSubstring
      - excel.Excel.TextRange.load
      - excel.Excel.TextRange.load_1
      - excel.Excel.TextRange.load_2
      - excel.Excel.TextRange.set
      - excel.Excel.TextRange.set_1
      - excel.Excel.TextRange.text
      - excel.Excel.TextRange.toJSON
  - uid: excel.Excel.TextRange.context
    summary: <span data-ttu-id="74849-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="74849-103">The request context associated with the object.</span></span> <span data-ttu-id="74849-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="74849-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.TextRange.font
    summary: |-
      <span data-ttu-id="74849-105">返回一个 ShapeFont 对象，该对象表示文本范围的字体属性。</span><span class="sxs-lookup"><span data-stu-id="74849-105">Returns a ShapeFont object that represents the font attributes for the text range.</span></span> <span data-ttu-id="74849-106">只读。</span><span class="sxs-lookup"><span data-stu-id="74849-106">Read-only.</span></span>

      <span data-ttu-id="74849-107">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="74849-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.ShapeFont;'
      return:
        type:
          - excel.Excel.ShapeFont
  - uid: excel.Excel.TextRange.getSubstring
    summary: |-
      <span data-ttu-id="74849-108">返回给定区域内子字符串的 TextRange 对象。</span><span class="sxs-lookup"><span data-stu-id="74849-108">Returns a TextRange object for the substring in the given range.</span></span>

      <span data-ttu-id="74849-109">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="74849-109">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getSubstring(start, length)'
    fullName: 'getSubstring(start, length)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSubstring(start: number, length?: number): Excel.TextRange;'
      return:
        type:
          - excel.Excel.TextRange
        description: ''
      parameters:
        - id: start
          description: <span data-ttu-id="74849-110">从文本范围中获取的第一个字符的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="74849-110">The zero-based index of the first character to get from the text range.</span></span>
          type:
            - number
        - id: length
          description: '<span data-ttu-id="74849-111">可选。</span><span class="sxs-lookup"><span data-stu-id="74849-111">Optional.</span></span> <span data-ttu-id="74849-112">要在新文本范围中返回的字符数。</span><span class="sxs-lookup"><span data-stu-id="74849-112">The number of characters to be returned in the new text range.</span></span> <span data-ttu-id="74849-113">如果省略 length, 则将返回从文本范围的最后一段的最后一段的末尾开始的所有字符。</span><span class="sxs-lookup"><span data-stu-id="74849-113">If length is omitted, all the characters from start to the end of the text range''s last paragraph will be returned.</span></span>'
          type:
            - number
  - uid: excel.Excel.TextRange.load
    summary: <span data-ttu-id="74849-114">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="74849-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="74849-115">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="74849-115">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="74849-116">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="74849-116">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="74849-117">`load(option?: string | string[]): Excel.TextRange`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="74849-117">`load(option?: string | string[]): Excel.TextRange` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="74849-118">`load(option?: { select?: string; expand?: string; }): Excel.TextRange`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="74849-118">`load(option?: { select?: string; expand?: string; }): Excel.TextRange` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="74849-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextRange`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="74849-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextRange` - Only available on collection types.</span></span> <span data-ttu-id="74849-120">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="74849-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="74849-121">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="74849-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="74849-122">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="74849-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="74849-123">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="74849-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TextRangeLoadOptions): Excel.TextRange;'
      return:
        type:
          - excel.Excel.TextRange
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TextRangeLoadOptions
  - uid: excel.Excel.TextRange.load_1
    summary: '<span data-ttu-id="74849-124">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="74849-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="74849-125">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="74849-125">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TextRange;'
      return:
        type:
          - excel.Excel.TextRange
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="74849-126">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="74849-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.TextRange.load_2
    summary: '<span data-ttu-id="74849-127">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="74849-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="74849-128">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="74849-128">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TextRange;'
      return:
        type:
          - excel.Excel.TextRange
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="74849-129">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="74849-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.TextRange.set
    summary: '<span data-ttu-id="74849-130">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="74849-130">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="74849-131">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="74849-131">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="74849-132">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="74849-132">This method has the following additional signature:</span></span>

      `set(properties: Excel.TextRange): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TextRangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="74849-133">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="74849-133">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.TextRangeUpdateData
        - id: options
          description: '<span data-ttu-id="74849-134">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="74849-134">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.TextRange.set_1
    summary: '<span data-ttu-id="74849-135">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="74849-135">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TextRange): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TextRange
  - uid: excel.Excel.TextRange.text
    summary: |-
      <span data-ttu-id="74849-136">表示文本范围的纯文本内容。</span><span class="sxs-lookup"><span data-stu-id="74849-136">Represents the plain text content of the text range.</span></span>

      <span data-ttu-id="74849-137">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="74849-137">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
  - uid: excel.Excel.TextRange.toJSON
    summary: '<span data-ttu-id="74849-138">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="74849-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="74849-139">.</span><span class="sxs-lookup"><span data-stu-id="74849-139"></span></span> <span data-ttu-id="74849-140">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="74849-140"></span></span><!-- --><span data-ttu-id="74849-141">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel. TextRange 对象是一个 API 对象, 但`toJSON`该方法返回一个简单的 JavaScript 对象 (类型为`Excel.Interfaces.TextRangeData`</span><span class="sxs-lookup"><span data-stu-id="74849-141">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TextRange object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TextRangeData`</span></span><!-- --><span data-ttu-id="74849-142">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="74849-142">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TextRangeData;'
      return:
        type:
          - excel.Excel.Interfaces.TextRangeData
        description: ''