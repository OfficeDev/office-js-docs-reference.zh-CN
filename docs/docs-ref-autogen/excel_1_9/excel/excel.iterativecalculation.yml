### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.IterativeCalculation:class'
    summary: |-
      <span data-ttu-id="6bc49-101">表示迭代计算设置。</span><span class="sxs-lookup"><span data-stu-id="6bc49-101">Represents the Iterative Calculation settings.</span></span>

      <span data-ttu-id="6bc49-102">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6bc49-102">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.IterativeCalculation
    fullName: Excel.IterativeCalculation
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.IterativeCalculation#context:member'
      - 'excel!Excel.IterativeCalculation#enabled:member'
      - 'excel!Excel.IterativeCalculation#load:member(1)'
      - 'excel!Excel.IterativeCalculation#load:member(2)'
      - 'excel!Excel.IterativeCalculation#load:member(3)'
      - 'excel!Excel.IterativeCalculation#maxChange:member'
      - 'excel!Excel.IterativeCalculation#maxIteration:member'
      - 'excel!Excel.IterativeCalculation#set:member(1)'
      - 'excel!Excel.IterativeCalculation#set:member(2)'
      - 'excel!Excel.IterativeCalculation#toJSON:member(1)'
  - uid: 'excel!Excel.IterativeCalculation#context:member'
    summary: <span data-ttu-id="6bc49-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="6bc49-103">The request context associated with the object.</span></span> <span data-ttu-id="6bc49-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="6bc49-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.IterativeCalculation#enabled:member'
    summary: |-
      <span data-ttu-id="6bc49-105">如果 Excel 使用迭代来处理循环引用，则为 True。</span><span class="sxs-lookup"><span data-stu-id="6bc49-105">True if Excel will use iteration to resolve circular references.</span></span>

      <span data-ttu-id="6bc49-106">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6bc49-106">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: enabled
    fullName: enabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enabled: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.IterativeCalculation#load:member(1)'
    summary: <span data-ttu-id="6bc49-107">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6bc49-108">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="6bc49-108">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="6bc49-109">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="6bc49-109">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="6bc49-110">`load(option?: string | string[]): Excel.IterativeCalculation`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-110">`load(option?: string | string[]): Excel.IterativeCalculation` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="6bc49-111">`load(option?: { select?: string; expand?: string; }): Excel.IterativeCalculation`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-111">`load(option?: { select?: string; expand?: string; }): Excel.IterativeCalculation` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="6bc49-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IterativeCalculation`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="6bc49-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IterativeCalculation` - Only available on collection types.</span></span> <span data-ttu-id="6bc49-113">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="6bc49-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="6bc49-114">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="6bc49-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6bc49-115">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="6bc49-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6bc49-116">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="6bc49-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.IterativeCalculationLoadOptions): Excel.IterativeCalculation;'
      return:
        type:
          - 'excel!Excel.IterativeCalculation:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.IterativeCalculationLoadOptions:interface'
  - uid: 'excel!Excel.IterativeCalculation#load:member(2)'
    summary: <span data-ttu-id="6bc49-117">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6bc49-118">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="6bc49-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.IterativeCalculation;'
      return:
        type:
          - 'excel!Excel.IterativeCalculation:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="6bc49-119">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.IterativeCalculation#load:member(3)'
    summary: <span data-ttu-id="6bc49-120">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6bc49-121">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="6bc49-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.IterativeCalculation;'
      return:
        type:
          - 'excel!Excel.IterativeCalculation:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6bc49-122">其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-122">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.IterativeCalculation#maxChange:member'
    summary: |-
      <span data-ttu-id="6bc49-123">返回或设置 Excel 处理循环引用时迭代之间的最大变化值。</span><span class="sxs-lookup"><span data-stu-id="6bc49-123">Returns or sets the maximum amount of change between each iteration as Excel resolves circular references.</span></span>

      <span data-ttu-id="6bc49-124">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6bc49-124">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: maxChange
    fullName: maxChange
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxChange: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.IterativeCalculation#maxIteration:member'
    summary: |-
      <span data-ttu-id="6bc49-125">返回或设置 Excel 处理循环引用的最大迭代次数。</span><span class="sxs-lookup"><span data-stu-id="6bc49-125">Returns or sets the maximum number of iterations that Excel can use to resolve a circular reference.</span></span>

      <span data-ttu-id="6bc49-126">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6bc49-126">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: maxIteration
    fullName: maxIteration
    langs:
      - typeScript
    type: property
    syntax:
      content: 'maxIteration: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.IterativeCalculation#set:member(1)'
    summary: '<span data-ttu-id="6bc49-127">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-127">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6bc49-128">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="6bc49-128">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="6bc49-129">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="6bc49-129">This method has the following additional signature:</span></span>

      `set(properties: Excel.IterativeCalculation): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.IterativeCalculationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="6bc49-130">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-130">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.IterativeCalculationUpdateData:interface'
        - id: options
          description: <span data-ttu-id="6bc49-131">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="6bc49-131">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.IterativeCalculation#set:member(2)'
    summary: '<span data-ttu-id="6bc49-132">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="6bc49-132">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.IterativeCalculation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.IterativeCalculation:class'
  - uid: 'excel!Excel.IterativeCalculation#toJSON:member(1)'
    summary: '<span data-ttu-id="6bc49-133">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6bc49-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6bc49-134">.</span><span class="sxs-lookup"><span data-stu-id="6bc49-134"></span></span> <span data-ttu-id="6bc49-135">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6bc49-135"></span></span><!-- --><span data-ttu-id="6bc49-136">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 IterativeCalculation 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.IterativeCalculationData`</span><span class="sxs-lookup"><span data-stu-id="6bc49-136">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.IterativeCalculation object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.IterativeCalculationData`</span></span><!-- --><span data-ttu-id="6bc49-137">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="6bc49-137">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.IterativeCalculationData;'
      return:
        type:
          - 'excel!Excel.Interfaces.IterativeCalculationData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.IterativeCalculation:class'
    name: Excel.IterativeCalculation
  - uid: 'excel!Excel.Interfaces.IterativeCalculationLoadOptions:interface'
    name: Excel.Interfaces.IterativeCalculationLoadOptions
  - uid: 'excel!Excel.Interfaces.IterativeCalculationUpdateData:interface'
    name: Interfaces.IterativeCalculationUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.IterativeCalculationData:interface'
    name: Excel.Interfaces.IterativeCalculationData