### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotLayout:class'
    summary: |-
      <span data-ttu-id="3f73b-101">表示数据透视表的可视化布局。</span><span class="sxs-lookup"><span data-stu-id="3f73b-101">Represents the visual layout of the PivotTable.</span></span>

      <span data-ttu-id="3f73b-102">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotLayout#autoFormat:member'
      - 'excel!Excel.PivotLayout#context:member'
      - 'excel!Excel.PivotLayout#getColumnLabelRange:member(1)'
      - 'excel!Excel.PivotLayout#getDataBodyRange:member(1)'
      - 'excel!Excel.PivotLayout#getDataHierarchy:member(1)'
      - 'excel!Excel.PivotLayout#getFilterAxisRange:member(1)'
      - 'excel!Excel.PivotLayout#getPivotItems:member(1)'
      - 'excel!Excel.PivotLayout#getPivotItems:member(2)'
      - 'excel!Excel.PivotLayout#getRange:member(1)'
      - 'excel!Excel.PivotLayout#getRowLabelRange:member(1)'
      - 'excel!Excel.PivotLayout#layoutType:member'
      - 'excel!Excel.PivotLayout#load:member(1)'
      - 'excel!Excel.PivotLayout#load:member(2)'
      - 'excel!Excel.PivotLayout#load:member(3)'
      - 'excel!Excel.PivotLayout#preserveFormatting:member'
      - 'excel!Excel.PivotLayout#set:member(1)'
      - 'excel!Excel.PivotLayout#set:member(2)'
      - 'excel!Excel.PivotLayout#setAutoSortOnCell:member(1)'
      - 'excel!Excel.PivotLayout#setAutoSortOnCell:member(2)'
      - 'excel!Excel.PivotLayout#showColumnGrandTotals:member'
      - 'excel!Excel.PivotLayout#showRowGrandTotals:member'
      - 'excel!Excel.PivotLayout#subtotalLocation:member'
      - 'excel!Excel.PivotLayout#toJSON:member(1)'
  - uid: 'excel!Excel.PivotLayout#autoFormat:member'
    summary: |-
      <span data-ttu-id="3f73b-103">指定是否在刷新或移动字段时自动进行格式化</span><span class="sxs-lookup"><span data-stu-id="3f73b-103">Specifies whether formatting will be automatically formatted when it’s refreshed or when fields are moved</span></span>

      <span data-ttu-id="3f73b-104">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-104">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#context:member'
    summary: <span data-ttu-id="3f73b-105">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="3f73b-105">The request context associated with the object.</span></span> <span data-ttu-id="3f73b-106">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="3f73b-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotLayout#getColumnLabelRange:member(1)'
    summary: |-
      <span data-ttu-id="3f73b-107">返回数据透视表列标签所在位置的区域。</span><span class="sxs-lookup"><span data-stu-id="3f73b-107">Returns the range where the PivotTable's column labels reside.</span></span>

      <span data-ttu-id="3f73b-108">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getDataBodyRange:member(1)'
    summary: |-
      <span data-ttu-id="3f73b-109">返回数据透视表数据值所在位置的区域。</span><span class="sxs-lookup"><span data-stu-id="3f73b-109">Returns the range where the PivotTable's data values reside.</span></span>

      <span data-ttu-id="3f73b-110">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-110">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3f73b-111">示例</span><span class="sxs-lookup"><span data-stu-id="3f73b-111">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotLayout#getDataHierarchy:member(1)'
    summary: |-
      <span data-ttu-id="3f73b-112">获取 DataHierarchy，它用于计算数据透视表中指定区域内的值。</span><span class="sxs-lookup"><span data-stu-id="3f73b-112">Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="3f73b-113">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-113">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchy:class'
        description: <span data-ttu-id="3f73b-114">用于计算指定单元格中的值的 DataPivotHierarchy 对象。</span><span class="sxs-lookup"><span data-stu-id="3f73b-114">The DataPivotHierarchy object used to calculate the value in the specified cell.</span></span>
      parameters:
        - id: cell
          description: <span data-ttu-id="3f73b-115">数据透视表数据正文中的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="3f73b-115">A single cell within the PivotTable data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getDataHierarchy~0:complex'
  - uid: 'excel!Excel.PivotLayout#getFilterAxisRange:member(1)'
    summary: |-
      <span data-ttu-id="3f73b-116">返回数据透视表筛选区的区域。</span><span class="sxs-lookup"><span data-stu-id="3f73b-116">Returns the range of the PivotTable's filter area.</span></span>

      <span data-ttu-id="3f73b-117">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-117">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getPivotItems:member(1)'
    summary: |-
      <span data-ttu-id="3f73b-118">从构成数据透视表中指定区域内的值的轴获取 PivotItems。</span><span class="sxs-lookup"><span data-stu-id="3f73b-118">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="3f73b-119">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-119">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'excel!Excel.PivotLayout#getPivotItems~0:complex'
        description: <span data-ttu-id="3f73b-120">用于计算指定行中的值的 PivotItems 的集合。</span><span class="sxs-lookup"><span data-stu-id="3f73b-120">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
      parameters:
        - id: axis
          description: <span data-ttu-id="3f73b-121">要从其获取 PivotItems 的轴。</span><span class="sxs-lookup"><span data-stu-id="3f73b-121">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="3f73b-122">必须是 "行" 或 "列"。</span><span class="sxs-lookup"><span data-stu-id="3f73b-122">Must be either "row" or "column."</span></span>
          type:
            - 'excel!Excel.PivotAxis:enum'
        - id: cell
          description: <span data-ttu-id="3f73b-123">数据透视表的数据正文中的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="3f73b-123">A single cell within the PivotTable's data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getPivotItems~1:complex'
  - uid: 'excel!Excel.PivotLayout#getPivotItems:member(2)'
    summary: |-
      <span data-ttu-id="3f73b-124">从构成数据透视表中指定区域内的值的轴获取 PivotItems。</span><span class="sxs-lookup"><span data-stu-id="3f73b-124">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="3f73b-125">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-125">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'excel!Excel.PivotLayout#getPivotItems~2:complex'
        description: <span data-ttu-id="3f73b-126">用于计算指定行中的值的 PivotItems 的集合。</span><span class="sxs-lookup"><span data-stu-id="3f73b-126">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
      parameters:
        - id: axisString
          description: <span data-ttu-id="3f73b-127">要从其获取 PivotItems 的轴。</span><span class="sxs-lookup"><span data-stu-id="3f73b-127">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="3f73b-128">必须是 "行" 或 "列"。</span><span class="sxs-lookup"><span data-stu-id="3f73b-128">Must be either "row" or "column."</span></span>
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: <span data-ttu-id="3f73b-129">数据透视表的数据正文中的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="3f73b-129">A single cell within the PivotTable's data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getPivotItems~3:complex'
  - uid: 'excel!Excel.PivotLayout#getRange:member(1)'
    summary: |-
      <span data-ttu-id="3f73b-130">返回存在数据透视表的区域，不包括筛选区。</span><span class="sxs-lookup"><span data-stu-id="3f73b-130">Returns the range the PivotTable exists on, excluding the filter area.</span></span>

      <span data-ttu-id="3f73b-131">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-131">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getRowLabelRange:member(1)'
    summary: |-
      <span data-ttu-id="3f73b-132">返回数据透视表行标签所在位置的区域。</span><span class="sxs-lookup"><span data-stu-id="3f73b-132">Returns the range where the PivotTable's row labels reside.</span></span>

      <span data-ttu-id="3f73b-133">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-133">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#layoutType:member'
    summary: |-
      <span data-ttu-id="3f73b-134">此属性指示数据透视表上的所有字段的 PivotLayoutType。</span><span class="sxs-lookup"><span data-stu-id="3f73b-134">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="3f73b-135">如果字段状态不同，则为 null。</span><span class="sxs-lookup"><span data-stu-id="3f73b-135">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="3f73b-136">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-136">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - 'excel!Excel.PivotLayout#layoutType~0:complex'
  - uid: 'excel!Excel.PivotLayout#load:member(1)'
    summary: <span data-ttu-id="3f73b-137">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3f73b-138">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="3f73b-138">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="3f73b-139">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="3f73b-139">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="3f73b-140">`load(option?: string | string[]): Excel.PivotLayout`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-140">`load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="3f73b-141">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-141">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="3f73b-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="3f73b-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only available on collection types.</span></span> <span data-ttu-id="3f73b-143">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="3f73b-143">It is similar to the preceding signature.</span></span> <span data-ttu-id="3f73b-144">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="3f73b-144">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="3f73b-145">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="3f73b-145">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="3f73b-146">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="3f73b-146">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.PivotLayoutLoadOptions:interface'
  - uid: 'excel!Excel.PivotLayout#load:member(2)'
    summary: <span data-ttu-id="3f73b-147">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3f73b-148">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="3f73b-148">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3f73b-149">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-149">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotLayout#load:member(3)'
    summary: <span data-ttu-id="3f73b-150">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-150">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3f73b-151">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="3f73b-151">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="3f73b-152">其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-152">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.PivotLayout#preserveFormatting:member'
    summary: |-
      <span data-ttu-id="3f73b-153">指定是否在通过透视、排序或更改页面字段项等操作来刷新或重新计算报表时保留格式。</span><span class="sxs-lookup"><span data-stu-id="3f73b-153">Specifies whether formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.</span></span>

      <span data-ttu-id="3f73b-154">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-154">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#set:member(1)'
    summary: '<span data-ttu-id="3f73b-155">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-155">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="3f73b-156">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="3f73b-156">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="3f73b-157">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="3f73b-157">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="3f73b-158">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-158">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.PivotLayoutUpdateData:interface'
        - id: options
          description: <span data-ttu-id="3f73b-159">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="3f73b-159">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotLayout#set:member(2)'
    summary: '<span data-ttu-id="3f73b-160">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="3f73b-160">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotLayout:class'
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell:member(1)'
    summary: |-
      <span data-ttu-id="3f73b-161">将数据透视表设置为使用指定的单元格设置自动排序，以自动选择排序的所有条件和上下文。</span><span class="sxs-lookup"><span data-stu-id="3f73b-161">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="3f73b-162">这与从 UI 应用自动排序的行为相同。</span><span class="sxs-lookup"><span data-stu-id="3f73b-162">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="3f73b-163">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-163">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="3f73b-164">要使用的单个单元格获取应用自动排序的条件。</span><span class="sxs-lookup"><span data-stu-id="3f73b-164">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - 'excel!Excel.PivotLayout#setAutoSortOnCell~0:complex'
        - id: sortBy
          description: <span data-ttu-id="3f73b-165">排序的方向。</span><span class="sxs-lookup"><span data-stu-id="3f73b-165">The direction of the sort.</span></span>
          type:
            - 'excel!Excel.SortBy:enum'
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell:member(2)'
    summary: |-
      <span data-ttu-id="3f73b-166">将数据透视表设置为使用指定的单元格设置自动排序，以自动选择排序的所有条件和上下文。</span><span class="sxs-lookup"><span data-stu-id="3f73b-166">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="3f73b-167">这与从 UI 应用自动排序的行为相同。</span><span class="sxs-lookup"><span data-stu-id="3f73b-167">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="3f73b-168">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-168">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="3f73b-169">要使用的单个单元格获取应用自动排序的条件。</span><span class="sxs-lookup"><span data-stu-id="3f73b-169">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - 'excel!Excel.PivotLayout#setAutoSortOnCell~1:complex'
        - id: sortByString
          description: <span data-ttu-id="3f73b-170">排序的方向。</span><span class="sxs-lookup"><span data-stu-id="3f73b-170">The direction of the sort.</span></span>
          type:
            - '"Ascending" | "Descending"'
  - uid: 'excel!Excel.PivotLayout#showColumnGrandTotals:member'
    summary: |-
      <span data-ttu-id="3f73b-171">指定数据透视表报表是否显示列总计。</span><span class="sxs-lookup"><span data-stu-id="3f73b-171">Specifies whether the PivotTable report shows grand totals for columns.</span></span>

      <span data-ttu-id="3f73b-172">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-172">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#showRowGrandTotals:member'
    summary: |-
      <span data-ttu-id="3f73b-173">指定数据透视表报表是否显示行总计。</span><span class="sxs-lookup"><span data-stu-id="3f73b-173">Specifies whether the PivotTable report shows grand totals for rows.</span></span>

      <span data-ttu-id="3f73b-174">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-174">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#subtotalLocation:member'
    summary: |-
      <span data-ttu-id="3f73b-175">此属性指示数据透视表上的所有字段的 SubtotalLocationType。</span><span class="sxs-lookup"><span data-stu-id="3f73b-175">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="3f73b-176">如果字段状态不同，则为 null。</span><span class="sxs-lookup"><span data-stu-id="3f73b-176">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="3f73b-177">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3f73b-177">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - 'excel!Excel.PivotLayout#subtotalLocation~0:complex'
  - uid: 'excel!Excel.PivotLayout#toJSON:member(1)'
    summary: '<span data-ttu-id="3f73b-178">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3f73b-178">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3f73b-179">.</span><span class="sxs-lookup"><span data-stu-id="3f73b-179"></span></span> <span data-ttu-id="3f73b-180">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3f73b-180"></span></span><!-- --><span data-ttu-id="3f73b-181">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 PivotLayout 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.PivotLayoutData`</span><span class="sxs-lookup"><span data-stu-id="3f73b-181">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`</span></span><!-- --><span data-ttu-id="3f73b-182">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="3f73b-182">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotLayoutData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.DataPivotHierarchy:class'
    name: Excel.DataPivotHierarchy
  - uid: 'excel!Excel.PivotLayout#getDataHierarchy~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~0:complex'
    name: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    fullName: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: Excel.PivotItem
        fullName: Excel.PivotItem
      - name: '[]>'
        fullName: '[]>'
  - uid: 'excel!Excel.PivotAxis:enum'
    name: Excel.PivotAxis
  - uid: 'excel!Excel.PivotLayout#getPivotItems~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~2:complex'
    name: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    fullName: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: Excel.PivotItem
        fullName: Excel.PivotItem
      - name: '[]>'
        fullName: '[]>'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~3:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#layoutType~0:complex'
    name: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
    fullName: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
    spec.typeScript:
      - uid: 'excel!Excel.PivotLayoutType:enum'
        name: Excel.PivotLayoutType
        fullName: Excel.PivotLayoutType
      - name: ' | "Compact" | "Tabular" | "Outline"'
        fullName: ' | "Compact" | "Tabular" | "Outline"'
  - uid: 'excel!Excel.PivotLayout:class'
    name: Excel.PivotLayout
  - uid: 'excel!Excel.Interfaces.PivotLayoutLoadOptions:interface'
    name: Excel.Interfaces.PivotLayoutLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotLayoutUpdateData:interface'
    name: Interfaces.PivotLayoutUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.SortBy:enum'
    name: Excel.SortBy
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#subtotalLocation~0:complex'
    name: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
    fullName: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
    spec.typeScript:
      - uid: 'excel!Excel.SubtotalLocationType:enum'
        name: Excel.SubtotalLocationType
        fullName: Excel.SubtotalLocationType
      - name: ' | "AtTop" | "AtBottom" | "Off"'
        fullName: ' | "AtTop" | "AtBottom" | "Off"'
  - uid: 'excel!Excel.Interfaces.PivotLayoutData:interface'
    name: Excel.Interfaces.PivotLayoutData