### YamlMime:UniversalReference
items:
  - uid: 'powerpoint!PowerPoint.Slide:class'
    summary: |-
      代表演示文稿的单张幻灯片。

      \[[API 集： POWERPOINTAPI BETA (仅预览) ](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    isPreview: true
    name: PowerPoint.Slide
    fullName: PowerPoint.Slide
    langs:
      - typeScript
    type: class
    extends:
      - 'powerpoint!OfficeExtension.ClientObject:class'
    package: powerpoint!
    children:
      - 'powerpoint!PowerPoint.Slide#context:member'
      - 'powerpoint!PowerPoint.Slide#delete:member(1)'
      - 'powerpoint!PowerPoint.Slide#id:member'
      - 'powerpoint!PowerPoint.Slide#load:member(1)'
      - 'powerpoint!PowerPoint.Slide#load:member(2)'
      - 'powerpoint!PowerPoint.Slide#load:member(3)'
      - 'powerpoint!PowerPoint.Slide#toJSON:member(1)'
  - uid: 'powerpoint!PowerPoint.Slide#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'powerpoint!PowerPoint.RequestContext:class'
  - uid: 'powerpoint!PowerPoint.Slide#delete:member(1)'
    summary: |-
      删除演示文稿中的幻灯片。 如果幻灯片不存在，则不执行任何操作。

      \[[API 集： POWERPOINTAPI BETA (仅预览) ](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'powerpoint!PowerPoint.Slide#id:member'
    summary: |-
      获取幻灯片的唯一 ID。

      \[[API 集： POWERPOINTAPI BETA (仅预览) ](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'powerpoint!PowerPoint.Slide#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    isPreview: true
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: PowerPoint.Interfaces.SlideLoadOptions): PowerPoint.Slide;'
      return:
        type:
          - 'powerpoint!PowerPoint.Slide:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'powerpoint!PowerPoint.Interfaces.SlideLoadOptions:interface'
  - uid: 'powerpoint!PowerPoint.Slide#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): PowerPoint.Slide;'
      return:
        type:
          - 'powerpoint!PowerPoint.Slide:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'powerpoint!PowerPoint.Slide#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): PowerPoint.Slide;
      return:
        type:
          - 'powerpoint!PowerPoint.Slide:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'powerpoint!PowerPoint.Slide#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) 而原始的 PowerPoint。 Slide 对象是一个 API 对象，该 `toJSON` 方法返回一个简单的 JavaScript 对象 (类型为 `PowerPoint.Interfaces.SlideData`<!-- -->) ，其中包含原始对象中任何已加载的子属性的浅表副本。
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): PowerPoint.Interfaces.SlideData;'
      return:
        type:
          - 'powerpoint!PowerPoint.Interfaces.SlideData:interface'
        description: ''
references:
  - uid: 'powerpoint!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'powerpoint!PowerPoint.RequestContext:class'
    name: RequestContext
  - uid: 'powerpoint!PowerPoint.Slide:class'
    name: PowerPoint.Slide
  - uid: 'powerpoint!PowerPoint.Interfaces.SlideLoadOptions:interface'
    name: PowerPoint.Interfaces.SlideLoadOptions
  - uid: 'powerpoint!PowerPoint.Interfaces.SlideData:interface'
    name: PowerPoint.Interfaces.SlideData