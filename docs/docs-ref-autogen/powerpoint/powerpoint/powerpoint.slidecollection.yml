### YamlMime:TSType
name: PowerPoint.SlideCollection
uid: powerpoint!PowerPoint.SlideCollection:class
package: powerpoint!
fullName: PowerPoint.SlideCollection
summary: >-
  代表演示文稿中幻灯片的集合。


  \[[API 集： POWERPOINTAPI BETA (仅预览) ](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: powerpoint!PowerPoint.SlideCollection#context:member
  package: powerpoint!
  fullName: context
  summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="powerpoint!PowerPoint.RequestContext:class" />
- name: items
  uid: powerpoint!PowerPoint.SlideCollection#items:member
  package: powerpoint!
  fullName: items
  summary: 获取此集合中已加载的子项。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly items: PowerPoint.Slide[];'
    return:
      type: <xref uid="powerpoint!PowerPoint.Slide:class" />[]
methods:
- name: getCount()
  uid: powerpoint!PowerPoint.SlideCollection#getCount:member(1)
  package: powerpoint!
  fullName: getCount()
  summary: >-
    获取集合中的幻灯片数。


    \[[API 集： POWERPOINTAPI BETA (仅预览) ](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="powerpoint!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: 集合中的幻灯片数。
- name: getItem(key)
  uid: powerpoint!PowerPoint.SlideCollection#getItem:member(1)
  package: powerpoint!
  fullName: getItem(key)
  summary: >-
    使用其唯一 ID 获取幻灯片。 如果幻灯片不存在，则会引发异常。


    \[[API 集： POWERPOINTAPI BETA (仅预览) ](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): PowerPoint.Slide;'
    parameters:
    - id: key
      description: 幻灯片的 ID。
      type: string
    return:
      type: <xref uid="powerpoint!PowerPoint.Slide:class" />
      description: 具有唯一 ID 的幻灯片。 如果不存在这样的幻灯片，则会引发异常。
- name: getItemAt(index)
  uid: powerpoint!PowerPoint.SlideCollection#getItemAt:member(1)
  package: powerpoint!
  fullName: getItemAt(index)
  summary: >-
    使用集合中的从零开始的索引获取幻灯片。 幻灯片的存储顺序与演示文稿中显示的顺序相同。 如果 index 超出范围，则会引发异常。


    \[[API 集： POWERPOINTAPI BETA (仅预览) ](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemAt(index: number): PowerPoint.Slide;'
    parameters:
    - id: index
      description: 集合中的幻灯片的索引。
      type: number
    return:
      type: <xref uid="powerpoint!PowerPoint.Slide:class" />
      description: 给定索引处的幻灯片。 如果 index 超出范围，则会引发异常。
- name: getItemOrNullObject(id)
  uid: powerpoint!PowerPoint.SlideCollection#getItemOrNullObject:member(1)
  package: powerpoint!
  fullName: getItemOrNullObject(id)
  summary: >-
    使用其唯一 ID 获取幻灯片。 返回一个对象，其 `isNullObject` 属性设置为 `true` 如果幻灯片不存在。


    \[[API 集： POWERPOINTAPI BETA (仅预览) ](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(id: string): PowerPoint.Slide;'
    parameters:
    - id: id
      description: 幻灯片的 ID。
      type: string
    return:
      type: <xref uid="powerpoint!PowerPoint.Slide:class" />
      description: 具有唯一 ID 的幻灯片。 如果不存在这样的幻灯片，则 `isNullObject` 返回其属性设置为的对象 `true` 。
- name: load(options)
  uid: powerpoint!PowerPoint.SlideCollection#load:member(1)
  package: powerpoint!
  fullName: load(options)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: PowerPoint.Interfaces.SlideCollectionLoadOptions & PowerPoint.Interfaces.CollectionLoadOptions): PowerPoint.SlideCollection;'
    parameters:
    - id: options
      description: 提供要加载的对象的属性的选项。
      type: <xref uid="powerpoint!PowerPoint.Interfaces.SlideCollectionLoadOptions:interface" /> & <xref uid="powerpoint!PowerPoint.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.SlideCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: powerpoint!PowerPoint.SlideCollection#load:member(2)
  package: powerpoint!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): PowerPoint.SlideCollection;'
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="powerpoint!PowerPoint.SlideCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: powerpoint!PowerPoint.SlideCollection#load:member(3)
  package: powerpoint!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): PowerPoint.SlideCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
      type: <xref uid="powerpoint!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.SlideCollection:class" />
      description: ''
- name: toJSON()
  uid: powerpoint!PowerPoint.SlideCollection#toJSON:member(1)
  package: powerpoint!
  fullName: toJSON()
  summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) 而原始 `PowerPoint.SlideCollection` 对象是 API 对象，则该 `toJSON` 方法返回一个纯 JavaScript 对象 (类型为 `PowerPoint.Interfaces.SlideCollectionData`<!-- -->包含集合项中任何已加载属性的浅表的 "items" 数组 ) 。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): PowerPoint.Interfaces.SlideCollectionData;'
    return:
      type: <xref uid="powerpoint!PowerPoint.Interfaces.SlideCollectionData:interface" />
      description: ''
extends: <xref uid="powerpoint!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 479e73e5674f261f2f0b06e8dbe2c69318195ddd
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49181975"
