### YamlMime:TSType
name: Word.CustomXmlPart
uid: word!Word.CustomXmlPart:class
package: word!
fullName: Word.CustomXmlPart
summary: >-
  表示自定义 XML 部件。


  \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: word!Word.CustomXmlPart#context:member
  package: word!
  fullName: context
  summary: 与对象关联的请求上下文。 这会将外接程序的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: id
  uid: word!Word.CustomXmlPart#id:member
  package: word!
  fullName: id
  summary: >-
    获取自定义 XML 部分的 ID。 只读。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: namespaceUri
  uid: word!Word.CustomXmlPart#namespaceUri:member
  package: word!
  fullName: namespaceUri
  summary: >-
    获取自定义 XML 部分的命名空间 URI。 只读。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly namespaceUri: string;'
    return:
      type: string
methods:
- name: delete()
  uid: word!Word.CustomXmlPart#delete:member(1)
  package: word!
  fullName: delete()
  summary: >-
    删除自定义 XML 部件。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: ''
- name: deleteAttribute(xpath, namespaceMappings, name)
  uid: word!Word.CustomXmlPart#deleteAttribute:member(1)
  package: word!
  fullName: deleteAttribute(xpath, namespaceMappings, name)
  summary: >-
    从 xpath 标识的元素中删除具有给定名称的属性。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 如果树中的任一元素具有 xmlns 属性 (其值通常是（但并不总是）URI) ，则该属性值的别名必须在 xpath 参数中作为元素名称的前缀。 例如，假设树如下所示<Day><Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"><Week>：xpath</Week> </Month> </Day> <Week> 必须是 /<!-- -->Day<!-- -->/<!-- -->greg：Month<!-- -->/<!-- -->Week，其中 greg 是映射到"http：<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->namespaceMappings 参数中的 GregorianCalendar"。
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteAttribute(xpath: string, namespaceMappings: any, name: string): void;'
    parameters:
    - id: xpath
      description: 必需。 XPath 表示法中单个元素的绝对路径。
      type: string
    - id: namespaceMappings
      description: '必需。 其属性值为命名空间名称且其属性名称为相应命名空间的别名的对象。 例如，`{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. 属性名称 ("greg") 可以是任何没有使用保留 XPath 字符的字符串，例如正斜杠"/"。'
      type: any
    - id: name
      description: 必需。 属性的名称。
      type: string
    return:
      type: void
      description: ''
- name: deleteElement(xpath, namespaceMappings)
  uid: word!Word.CustomXmlPart#deleteElement:member(1)
  package: word!
  fullName: deleteElement(xpath, namespaceMappings)
  summary: >-
    删除由 xpath 标识的元素。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 如果树中的任一元素具有 xmlns 属性 (其值通常是（但并不总是）URI) ，则该属性值的别名必须在 xpath 参数中作为元素名称的前缀。 例如，假设树如下所示<Day><Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"><Week>：xpath</Week> </Month> </Day> <Week> 必须是 /<!-- -->Day<!-- -->/<!-- -->greg：Month<!-- -->/<!-- -->Week，其中 greg 是映射到"http：<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->namespaceMappings 参数中的 GregorianCalendar"。
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteElement(xpath: string, namespaceMappings: any): void;'
    parameters:
    - id: xpath
      description: 必需。 XPath 表示法中单个元素的绝对路径。
      type: string
    - id: namespaceMappings
      description: '必需。 其属性值为命名空间名称且其属性名称为相应命名空间的别名的对象。 例如，`{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. 属性名称 ("greg") 可以是任何没有使用保留 XPath 字符的字符串，例如正斜杠"/"。'
      type: any
    return:
      type: void
      description: ''
- name: getXml()
  uid: word!Word.CustomXmlPart#getXml:member(1)
  package: word!
  fullName: getXml()
  summary: >-
    获取自定义 XML 部件的完整 XML 内容。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getXml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: ''
- name: insertAttribute(xpath, namespaceMappings, name, value)
  uid: word!Word.CustomXmlPart#insertAttribute:member(1)
  package: word!
  fullName: insertAttribute(xpath, namespaceMappings, name, value)
  summary: >-
    将具有给定名称和值的属性插入 xpath 标识的元素。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 如果树中的任一元素具有 xmlns 属性 (其值通常是（但并不总是）URI) ，则该属性值的别名必须在 xpath 参数中作为元素名称的前缀。 例如，假设树如下所示<Day><Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"><Week>：xpath</Week> </Month> </Day> <Week> 必须是 /<!-- -->Day<!-- -->/<!-- -->greg：Month<!-- -->/<!-- -->Week，其中 greg 是映射到"http：<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->namespaceMappings 参数中的 GregorianCalendar"。
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'insertAttribute(xpath: string, namespaceMappings: any, name: string, value: string): void;'
    parameters:
    - id: xpath
      description: 必需。 XPath 表示法中单个元素的绝对路径。
      type: string
    - id: namespaceMappings
      description: '必需。 其属性值为命名空间名称且其属性名称为相应命名空间的别名的对象。 例如，`{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. 属性名称 ("greg") 可以是任何没有使用保留 XPath 字符的字符串，例如正斜杠"/"。'
      type: any
    - id: name
      description: 必需。 属性的名称。
      type: string
    - id: value
      description: 必需。 属性的值。
      type: string
    return:
      type: void
      description: ''
- name: insertElement(xpath, xml, namespaceMappings, index)
  uid: word!Word.CustomXmlPart#insertElement:member(1)
  package: word!
  fullName: insertElement(xpath, xml, namespaceMappings, index)
  summary: >-
    在子位置索引的 xpath 标识的父元素下插入给定的 XML。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 如果树中的任一元素具有 xmlns 属性 (其值通常是（但并不总是）URI) ，则该属性值的别名必须在 xpath 参数中作为元素名称的前缀。 例如，假设树如下所示<Day><Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"><Week>：xpath</Week> </Month> </Day> <Week> 必须是 /<!-- -->Day<!-- -->/<!-- -->greg：Month<!-- -->/<!-- -->Week，其中 greg 是映射到"http：<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->namespaceMappings 参数中的 GregorianCalendar"。
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'insertElement(xpath: string, xml: string, namespaceMappings: any, index?: number): void;'
    parameters:
    - id: xpath
      description: 必需。 XPath 表示法中单个父元素的绝对路径。
      type: string
    - id: xml
      description: 必需。 要插入的 XML 内容。
      type: string
    - id: namespaceMappings
      description: '必需。 其属性值为命名空间名称且其属性名称为相应命名空间的别名的对象。 例如，`{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. 属性名称 ("greg") 可以是任何没有使用保留 XPath 字符的字符串，例如正斜杠"/"。'
      type: any
    - id: index
      description: 可选。 要插入新 XML 的位置，从零开始。 如果省略，则 XML 将追加为此父级的最后一个子级。
      type: number
    return:
      type: void
      description: ''
- name: load(options)
  uid: word!Word.CustomXmlPart#load:member(1)
  package: word!
  fullName: load(options)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.CustomXmlPartLoadOptions): Word.CustomXmlPart;'
    parameters:
    - id: options
      description: 提供要加载的对象的属性的选项。
      type: <xref uid="word!Word.Interfaces.CustomXmlPartLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.CustomXmlPart#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.CustomXmlPart;'
    parameters:
    - id: propertyNames
      description: 用逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.CustomXmlPart#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.CustomXmlPart;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，它是一个以逗号分隔的字符串，用于指定要加载的 `propertyNamesAndPaths.expand` 导航属性。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: query(xpath, namespaceMappings)
  uid: word!Word.CustomXmlPart#query:member(1)
  package: word!
  fullName: query(xpath, namespaceMappings)
  summary: >-
    查询自定义 XML 部分的 XML 内容。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 如果树中的任一元素具有 xmlns 属性 (其值通常是（但并不总是）URI) ，则该属性值的别名必须在 xpath 参数中作为元素名称的前缀。 例如，假设树如下所示<Day><Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"><Week>：xpath</Week> </Month> </Day> <Week> 必须是 /<!-- -->Day<!-- -->/<!-- -->greg：Month<!-- -->/<!-- -->Week，其中 greg 是映射到"http：<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->namespaceMappings 参数中的 GregorianCalendar"。
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'query(xpath: string, namespaceMappings: any): OfficeExtension.ClientResult<string[]>;'
    parameters:
    - id: xpath
      description: 必需。 XPath 查询。
      type: string
    - id: namespaceMappings
      description: '必需。 其属性值为命名空间名称且其属性名称为相应命名空间的别名的对象。 例如，`{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. 属性名称 ("greg") 可以是任何没有使用保留 XPath 字符的字符串，例如正斜杠"/"。'
      type: any
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;
      description: 一个数组，其中每个项目表示与 XPath 查询匹配的条目。
- name: setXml(xml)
  uid: word!Word.CustomXmlPart#setXml:member(1)
  package: word!
  fullName: setXml(xml)
  summary: >-
    设置自定义 XML 部件的完整 XML 内容。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setXml(xml: string): void;'
    parameters:
    - id: xml
      description: 必需。 要设置的 XML 内容。
      type: string
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.CustomXmlPart#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: 重写 JavaScript 方法，以便向 API 对象传递 `toJSON()` 时提供更多有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->，反过来，调用传递给该对象的方法。) 而原始 Word.CustomXmlPart 对象是一个 API 对象，该方法返回一个类型为 (`toJSON` `toJSON` JavaScript 对象 `Word.Interfaces.CustomXmlPartData`<!-- -->) 包含原始对象中任何加载的子属性的浅表副本。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.CustomXmlPartData;'
    return:
      type: <xref uid="word!Word.Interfaces.CustomXmlPartData:interface" />
      description: ''
- name: track()
  uid: word!Word.CustomXmlPart#track:member(1)
  package: word!
  fullName: track()
  summary: 根据文档中的相应更改来跟踪对象，以便进行自动调整。 此调用是 `context.trackedObjects.add(thisObject)`<!-- -->. 如果在调用期间和顺序执行".run"批处理之外使用此对象，如果在对象上设置属性或调用方法时收到"InvalidObjectPath"错误，则首次创建对象时，需要将该对象添加到跟踪的对象集合中。 `.sync`
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'track(): Word.CustomXmlPart;'
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: untrack()
  uid: word!Word.CustomXmlPart#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: 释放与此对象关联的内存（如果先前已跟踪过）。 此调用是 `context.trackedObjects.remove(thisObject)`<!-- -->. 拥有许多跟踪对象会降低主机应用程序的速度，因此请在使用完毕后释放所添加的任何对象。 你需要在内存释放 `context.sync()` 生效之前调用。
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.CustomXmlPart;'
    return:
      type: <xref uid="word!Word.CustomXmlPart:class" />
      description: ''
- name: updateAttribute(xpath, namespaceMappings, name, value)
  uid: word!Word.CustomXmlPart#updateAttribute:member(1)
  package: word!
  fullName: updateAttribute(xpath, namespaceMappings, name, value)
  summary: >-
    使用 xpath 标识的元素的给定名称更新属性的值。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 如果树中的任一元素具有 xmlns 属性 (其值通常是（但并不总是）URI) ，则该属性值的别名必须在 xpath 参数中作为元素名称的前缀。 例如，假设树如下所示<Day><Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"><Week>：xpath</Week> </Month> </Day> <Week> 必须是 /<!-- -->Day<!-- -->/<!-- -->greg：Month<!-- -->/<!-- -->Week，其中 greg 是映射到"http：<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->namespaceMappings 参数中的 GregorianCalendar"。
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'updateAttribute(xpath: string, namespaceMappings: any, name: string, value: string): void;'
    parameters:
    - id: xpath
      description: 必需。 XPath 表示法中单个元素的绝对路径。
      type: string
    - id: namespaceMappings
      description: '必需。 其属性值为命名空间名称且其属性名称为相应命名空间的别名的对象。 例如，`{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. 属性名称 ("greg") 可以是任何没有使用保留 XPath 字符的字符串，例如正斜杠"/"。'
      type: any
    - id: name
      description: 必需。 属性的名称。
      type: string
    - id: value
      description: 必需。 属性的新值。
      type: string
    return:
      type: void
      description: ''
- name: updateElement(xpath, xml, namespaceMappings)
  uid: word!Word.CustomXmlPart#updateElement:member(1)
  package: word!
  fullName: updateElement(xpath, xml, namespaceMappings)
  summary: >-
    更新 xpath 标识的元素的 XML。


    \[[API 集：WordApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: 如果树中的任一元素具有 xmlns 属性 (其值通常是（但并不总是）URI) ，则该属性值的别名必须在 xpath 参数中作为元素名称的前缀。 例如，假设树如下所示<Day><Month xmlns="http:\/\/calendartypes.org\/xsds\/GregorianCalendar"><Week>：xpath</Week> </Month> </Day> <Week> 必须是 /<!-- -->Day<!-- -->/<!-- -->greg：Month<!-- -->/<!-- -->Week，其中 greg 是映射到"http：<!-- -->/<!-- -->/<!-- -->calendartypes.org<!-- -->/<!-- -->xsds<!-- -->/<!-- -->namespaceMappings 参数中的 GregorianCalendar"。
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'updateElement(xpath: string, xml: string, namespaceMappings: any): void;'
    parameters:
    - id: xpath
      description: 必需。 XPath 表示法中单个元素的绝对路径。
      type: string
    - id: xml
      description: 必需。 要存储的新 XML 内容。
      type: string
    - id: namespaceMappings
      description: '必需。 其属性值为命名空间名称且其属性名称为相应命名空间的别名的对象。 例如，`{greg: "http://calendartypes.org/xsds/GregorianCalendar"}`<!-- -->. 属性名称 ("greg") 可以是任何没有使用保留 XPath 字符的字符串，例如正斜杠"/"。'
      type: any
    return:
      type: void
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: b6d0a86c68a4c9fe5c8876bef881283f306aff90
  ms.sourcegitcommit: f229afdd4c2bc820ac799394a77b637fc66e87b4
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 01/27/2021
  ms.locfileid: "49992253"
