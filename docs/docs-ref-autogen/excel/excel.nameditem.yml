### YamlMime:UniversalReference
ms.openlocfilehash: e87c660e1b41ad1a0112dc93abc1df6a29de8925
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976129"
items:
- uid: excel.Excel.NamedItem
  summary: >-
    <span data-ttu-id="71411-101">代表单元格区域或值的定义的名称。</span><span class="sxs-lookup"><span data-stu-id="71411-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="71411-102">名称可以很基元命名对象 （如下面的类型中所示），range 对象或对区域引用。</span><span class="sxs-lookup"><span data-stu-id="71411-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="71411-103">此对象可用于获取名称相关联的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="71411-103">This object can be used to obtain range object associated with names.</span></span>


    <span data-ttu-id="71411-104">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItem
  fullName: Excel.NamedItem
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItem.arrayValues
  - excel.Excel.NamedItem.comment
  - excel.Excel.NamedItem.context
  - excel.Excel.NamedItem.delete
  - excel.Excel.NamedItem.formula
  - excel.Excel.NamedItem.getRange
  - excel.Excel.NamedItem.getRangeOrNullObject
  - excel.Excel.NamedItem.load
  - excel.Excel.NamedItem.load_1
  - excel.Excel.NamedItem.load_2
  - excel.Excel.NamedItem.name
  - excel.Excel.NamedItem.scope
  - excel.Excel.NamedItem.set
  - excel.Excel.NamedItem.set_1
  - excel.Excel.NamedItem.toJSON
  - excel.Excel.NamedItem.type
  - excel.Excel.NamedItem.value
  - excel.Excel.NamedItem.visible
  - excel.Excel.NamedItem.worksheet
  - excel.Excel.NamedItem.worksheetOrNullObject
- uid: excel.Excel.NamedItem.arrayValues
  summary: >-
    <span data-ttu-id="71411-105">返回包含已命名项目的值和类型的对象。</span><span class="sxs-lookup"><span data-stu-id="71411-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="71411-106">只读。</span><span class="sxs-lookup"><span data-stu-id="71411-106">Read-only.</span></span>


    <span data-ttu-id="71411-107">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: arrayValues
  fullName: arrayValues
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
    return:
      type:
      - excel.Excel.NamedItemArrayValues
- uid: excel.Excel.NamedItem.comment
  summary: >-
    <span data-ttu-id="71411-108">表示与此名称相关联的注释。</span><span class="sxs-lookup"><span data-stu-id="71411-108">Represents the comment associated with this name.</span></span>


    <span data-ttu-id="71411-109">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: comment
  fullName: comment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'comment: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.context
  summary: <span data-ttu-id="71411-110">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="71411-110">The request context associated with the object.</span></span> <span data-ttu-id="71411-111">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="71411-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.NamedItem.delete
  summary: >-
    <span data-ttu-id="71411-112">删除给定的名称。</span><span class="sxs-lookup"><span data-stu-id="71411-112">Deletes the given name.</span></span>


    <span data-ttu-id="71411-113">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"71411-114\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"71411-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.NamedItem.formula
  summary: >-
    <span data-ttu-id="71411-115">获取或设置的已命名项目的公式。</span><span class="sxs-lookup"><span data-stu-id="71411-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="71411-116">公式始终以等号 (=) 开头。</span><span class="sxs-lookup"><span data-stu-id="71411-116">Formula always starts with a '=' sign.</span></span>


    <span data-ttu-id="71411-117">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: any;'
    return:
      type:
      - any
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"71411-118\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"71411-118\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    const myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        OfficeHelpers.UI.notify(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRange
  summary: >-
    <span data-ttu-id="71411-p105">返回与名称相关联的 Range 对象。如果已命名项的类型不是 Range，将引发错误。</span><span class="sxs-lookup"><span data-stu-id="71411-p105">Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.</span></span>


    <span data-ttu-id="71411-121">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"71411-122\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"71411-122\">Examples</span></span>\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="71411-p106">返回与名称相关联的 Range 对象。如果已命名项的类型不是 Range，将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="71411-p106">Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.</span></span>


    <span data-ttu-id="71411-125">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.NamedItem.load
  summary: <span data-ttu-id="71411-126">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="71411-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="71411-127">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="71411-127">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="71411-128">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="71411-128">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="71411-129">`load(option?: string | string[]): Excel.NamedItem`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="71411-129">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="71411-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="71411-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="71411-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="71411-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="71411-132">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="71411-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="71411-133">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="71411-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="71411-134">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="71411-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="71411-135">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="71411-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.NamedItemLoadOptions
- uid: excel.Excel.NamedItem.load_1
  summary: <span data-ttu-id="71411-136">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="71411-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="71411-137">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="71411-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"71411-138\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"71411-138\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="71411-139">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="71411-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItem.load_2
  summary: <span data-ttu-id="71411-140">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="71411-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="71411-141">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="71411-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="71411-142">其中 propertyNamesAndPaths.select 是一个以逗号分隔的字符串，指定要加载的属性，propertyNamesAndPaths.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="71411-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.NamedItem.name
  summary: >-
    <span data-ttu-id="71411-p111">对象的名称。只读。</span><span class="sxs-lookup"><span data-stu-id="71411-p111">The name of the object. Read-only.</span></span>


    <span data-ttu-id="71411-145">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.scope
  summary: >-
    <span data-ttu-id="71411-146">指示名称是否范围的工作簿或向特定工作表。</span><span class="sxs-lookup"><span data-stu-id="71411-146">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="71411-147">可能的值为： 工作表、 工作簿。</span><span class="sxs-lookup"><span data-stu-id="71411-147">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="71411-148">只读。</span><span class="sxs-lookup"><span data-stu-id="71411-148">Read-only.</span></span>


    <span data-ttu-id="71411-149">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: scope
  fullName: scope
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type:
      - Excel.NamedItemScope | "Worksheet" | "Workbook"
- uid: excel.Excel.NamedItem.set
  summary: <span data-ttu-id="71411-150">在同一时间设置对象的多个的属性。</span><span class="sxs-lookup"><span data-stu-id="71411-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="71411-151">您可以传递具有的相应属性的普通对象或相同类型的另一个 API 对象。</span><span class="sxs-lookup"><span data-stu-id="71411-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="71411-152">此方法具有以下其他签名：</span><span class="sxs-lookup"><span data-stu-id="71411-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.NamedItem): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="71411-153">具有对属性的对象调用 isomorphically 结构化的属性的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="71411-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.NamedItemUpdateData
    - id: options
      description: <span data-ttu-id="71411-154">提供一个选项以取消显示错误，如果属性对象会尝试设置任何只读属性。</span><span class="sxs-lookup"><span data-stu-id="71411-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.NamedItem.set_1
  summary: <span data-ttu-id="71411-155">在基于现有加载对象的同一时间对象上设置多个属性。</span><span class="sxs-lookup"><span data-stu-id="71411-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.NamedItem): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.NamedItem
- uid: excel.Excel.NamedItem.toJSON
  summary: <span data-ttu-id="71411-156">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="71411-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="71411-157">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)原始 Excel.NamedItem 对象是 API 对象，而`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.NamedItemData` <!-- -->)，其中包含原始对象中的任何加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="71411-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemData
      description: ''
- uid: excel.Excel.NamedItem.type
  summary: >-
    <span data-ttu-id="71411-158">指示由该名称的公式返回值的类型。</span><span class="sxs-lookup"><span data-stu-id="71411-158">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="71411-159">有关详细信息，请参阅 Excel.NamedItemType。</span><span class="sxs-lookup"><span data-stu-id="71411-159">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="71411-160">只读。</span><span class="sxs-lookup"><span data-stu-id="71411-160">Read-only.</span></span>


    <span data-ttu-id="71411-161">\[[API 集： ExcelApi 1.1 字符串，Integer、 Double、 Boolean、 范围、 错误; 数组 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-161">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type:
      - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- uid: excel.Excel.NamedItem.value
  summary: >-
    <span data-ttu-id="71411-p116">表示 name 公式计算出的值。对于已命名区域，将返回区域地址。只读。</span><span class="sxs-lookup"><span data-stu-id="71411-p116">Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.</span></span>


    <span data-ttu-id="71411-165">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-165">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: any;'
    return:
      type:
      - any
- uid: excel.Excel.NamedItem.visible
  summary: >-
    <span data-ttu-id="71411-166">指定对象是否可见。</span><span class="sxs-lookup"><span data-stu-id="71411-166">Specifies whether the object is visible or not.</span></span>


    <span data-ttu-id="71411-167">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-167">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.NamedItem.worksheet
  summary: >-
    <span data-ttu-id="71411-168">返回在其已命名的项目范围限定为工作表。</span><span class="sxs-lookup"><span data-stu-id="71411-168">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="71411-169">如果项目而是范围的工作簿，则将引发错误。</span><span class="sxs-lookup"><span data-stu-id="71411-169">Throws an error if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="71411-170">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-170">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
- uid: excel.Excel.NamedItem.worksheetOrNullObject
  summary: >-
    <span data-ttu-id="71411-171">返回在其已命名的项目范围限定为工作表。</span><span class="sxs-lookup"><span data-stu-id="71411-171">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="71411-172">如果项目范围的工作簿改为，返回 null 对象。</span><span class="sxs-lookup"><span data-stu-id="71411-172">Returns a null object if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="71411-173">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="71411-173">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheetOrNullObject
  fullName: worksheetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
