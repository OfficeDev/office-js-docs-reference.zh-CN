### YamlMime:UniversalReference
ms.openlocfilehash: 1deceae5b229608acf7622ca244e832a153fe1fe
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29975051"
items:
- uid: excel.Excel.WorkbookCreated
  summary: >-
    <span data-ttu-id="379c7-101">WorkbookCreated 对象是由 Application.CreateWorkbook 的顶级对象。</span><span class="sxs-lookup"><span data-stu-id="379c7-101">The WorkbookCreated object is the top level object created by Application.CreateWorkbook.</span></span> <span data-ttu-id="379c7-102">WorkbookCreated 对象是一个特殊的工作簿对象。</span><span class="sxs-lookup"><span data-stu-id="379c7-102">A WorkbookCreated object is a special Workbook object.</span></span>


    <span data-ttu-id="379c7-103">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="379c7-103">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorkbookCreated
  fullName: Excel.WorkbookCreated
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorkbookCreated.context
  - excel.Excel.WorkbookCreated.load
  - excel.Excel.WorkbookCreated.load_1
  - excel.Excel.WorkbookCreated.toJSON
- uid: excel.Excel.WorkbookCreated.context
  summary: <span data-ttu-id="379c7-104">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="379c7-104">The request context associated with the object.</span></span> <span data-ttu-id="379c7-105">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="379c7-105">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.WorkbookCreated.load
  summary: <span data-ttu-id="379c7-106">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="379c7-106">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="379c7-107">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="379c7-107">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookCreated;'
    return:
      type:
      - excel.Excel.WorkbookCreated
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="379c7-108">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="379c7-108">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.WorkbookCreated.load_1
  summary: <span data-ttu-id="379c7-109">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="379c7-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="379c7-110">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="379c7-110">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookCreated;'
    return:
      type:
      - excel.Excel.WorkbookCreated
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="379c7-111">其中 propertyNamesAndPaths.select 是一个以逗号分隔的字符串，指定要加载的属性，propertyNamesAndPaths.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="379c7-111">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.WorkbookCreated.toJSON
  summary: <span data-ttu-id="379c7-112">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="379c7-112">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="379c7-113">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)原始 Excel.WorkbookCreated 对象是 API 对象，而`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.WorkbookCreatedData` <!-- -->)，其中包含原始对象中的任何加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="379c7-113">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookCreated object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookCreatedData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookCreatedData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookCreatedData
      description: ''
