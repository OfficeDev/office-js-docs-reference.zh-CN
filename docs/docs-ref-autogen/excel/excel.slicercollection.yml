### YamlMime:UniversalReference
ms.openlocfilehash: 3f1eb34fd6274b5bcbf9e3a7700cbe5671c17331
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110989"
items:
- uid: excel.Excel.SlicerCollection
  summary: >-
    <span data-ttu-id="8822c-101">代表工作簿或工作表上所有切片器对象的集合。</span><span class="sxs-lookup"><span data-stu-id="8822c-101">Represents a collection of all the slicer objects on the workbook or a worksheet.</span></span>


    <span data-ttu-id="8822c-102">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8822c-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.SlicerCollection
  fullName: Excel.SlicerCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SlicerCollection.add
  - excel.Excel.SlicerCollection.context
  - excel.Excel.SlicerCollection.getCount
  - excel.Excel.SlicerCollection.getItem
  - excel.Excel.SlicerCollection.getItemAt
  - excel.Excel.SlicerCollection.getItemOrNullObject
  - excel.Excel.SlicerCollection.items
  - excel.Excel.SlicerCollection.load
  - excel.Excel.SlicerCollection.load_1
  - excel.Excel.SlicerCollection.load_2
  - excel.Excel.SlicerCollection.toJSON
- uid: excel.Excel.SlicerCollection.add
  summary: >-
    <span data-ttu-id="8822c-103">将新的切片器添加到工作簿中。</span><span class="sxs-lookup"><span data-stu-id="8822c-103">Adds a new slicer to the workbook.</span></span>


    <span data-ttu-id="8822c-104">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8822c-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: add(slicerSource, sourceField, slicerDestination)
  fullName: add(slicerSource, sourceField, slicerDestination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: <span data-ttu-id="8822c-105">新的切片器。</span><span class="sxs-lookup"><span data-stu-id="8822c-105">The new slicer.</span></span>
    parameters:
    - id: slicerSource
      description: <span data-ttu-id="8822c-106">新切片器将基于的数据源。</span><span class="sxs-lookup"><span data-stu-id="8822c-106">The data source that the new slicer will be based on.</span></span> <span data-ttu-id="8822c-107">它可以是一个数据透视表对象、一个 Table 对象或一个字符串。</span><span class="sxs-lookup"><span data-stu-id="8822c-107">It can be a PivotTable object, a Table object or a string.</span></span> <span data-ttu-id="8822c-108">传递数据透视表对象时, 数据源是数据透视表对象的源。</span><span class="sxs-lookup"><span data-stu-id="8822c-108">When a PivotTable object is passed, the data source is the source of the PivotTable object.</span></span> <span data-ttu-id="8822c-109">当传递 table 对象时, 数据源是 Table 对象。</span><span class="sxs-lookup"><span data-stu-id="8822c-109">When a Table object is passed, the data source is the Table object.</span></span> <span data-ttu-id="8822c-110">传递字符串时, 它被解释为数据透视表/表的名称/id。</span><span class="sxs-lookup"><span data-stu-id="8822c-110">When a string is passed, it is interpreted as the name/id of a PivotTable/Table.</span></span>
      type:
      - string | PivotTable | Table
    - id: sourceField
      description: <span data-ttu-id="8822c-111">要作为筛选依据的数据源中的字段。</span><span class="sxs-lookup"><span data-stu-id="8822c-111">The field in the data source to filter by.</span></span> <span data-ttu-id="8822c-112">它可以是一个透视字段对象、一个 TableColumn 对象、透视字段的 id 或 TableColumn 的 id/名称。</span><span class="sxs-lookup"><span data-stu-id="8822c-112">It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.</span></span>
      type:
      - string | PivotField | number | TableColumn
    - id: slicerDestination
      description: <span data-ttu-id="8822c-113">可选。</span><span class="sxs-lookup"><span data-stu-id="8822c-113">Optional.</span></span> <span data-ttu-id="8822c-114">将在其中创建新切片器的工作表。</span><span class="sxs-lookup"><span data-stu-id="8822c-114">The worksheet where the new slicer will be created in.</span></span> <span data-ttu-id="8822c-115">它可以是工作表对象或工作表的名称/id。</span><span class="sxs-lookup"><span data-stu-id="8822c-115">It can be a Worksheet object or the name/id of a worksheet.</span></span> <span data-ttu-id="8822c-116">如果从工作表中检索切片器集合, 则可以忽略此参数。</span><span class="sxs-lookup"><span data-stu-id="8822c-116">This parameter can be omitted if the slicer collection is retrieved from worksheet.</span></span>
      type:
      - string | Worksheet
- uid: excel.Excel.SlicerCollection.context
  summary: <span data-ttu-id="8822c-117">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="8822c-117">The request context associated with the object.</span></span> <span data-ttu-id="8822c-118">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="8822c-118">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SlicerCollection.getCount
  summary: >-
    <span data-ttu-id="8822c-119">返回集合中的切片器数。</span><span class="sxs-lookup"><span data-stu-id="8822c-119">Returns the number of slicers in the collection.</span></span>


    <span data-ttu-id="8822c-120">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8822c-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.SlicerCollection.getItem
  summary: >-
    <span data-ttu-id="8822c-121">使用其名称或 id 获取切片器对象。</span><span class="sxs-lookup"><span data-stu-id="8822c-121">Gets a slicer object using its name or id.</span></span>


    <span data-ttu-id="8822c-122">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8822c-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="8822c-123">切片器的名称或 id。</span><span class="sxs-lookup"><span data-stu-id="8822c-123">The name or id of the slicer.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerCollection.getItemAt
  summary: >-
    <span data-ttu-id="8822c-124">根据其在集合中的位置获取切片器。</span><span class="sxs-lookup"><span data-stu-id="8822c-124">Gets a slicer based on its position in the collection.</span></span>


    <span data-ttu-id="8822c-125">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8822c-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="8822c-p105">要检索的对象的索引值。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="8822c-p105">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.SlicerCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="8822c-128">使用其名称或 id 获取切片器。如果切片器不存在, 则将返回 null 对象。</span><span class="sxs-lookup"><span data-stu-id="8822c-128">Gets a slicer using its name or id. If the slicer does not exist, will return a null object.</span></span>


    <span data-ttu-id="8822c-129">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8822c-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.Slicer;'
    return:
      type:
      - excel.Excel.Slicer
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="8822c-130">要检索的切片器的名称或 Id。</span><span class="sxs-lookup"><span data-stu-id="8822c-130">Name or Id of the slicer to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerCollection.items
  summary: <span data-ttu-id="8822c-131">获取此集合中的已加载子项目。</span><span class="sxs-lookup"><span data-stu-id="8822c-131">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Slicer[];'
    return:
      type:
      - Excel.Slicer[]
- uid: excel.Excel.SlicerCollection.load
  summary: <span data-ttu-id="8822c-132">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="8822c-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8822c-133">在读取属性之前, 必须先调用 "context, sync ()"。</span><span class="sxs-lookup"><span data-stu-id="8822c-133">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="8822c-134">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="8822c-134">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="8822c-135">`load(option?: string | string[]): Excel.SlicerCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="8822c-135">`load(option?: string | string[]): Excel.SlicerCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="8822c-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="8822c-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="8822c-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="8822c-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection` - Only available on collection types.</span></span> <span data-ttu-id="8822c-138">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="8822c-138">It is similar to the preceding signature.</span></span> <span data-ttu-id="8822c-139">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="8822c-139">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8822c-140">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="8822c-140">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8822c-141">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="8822c-141">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.SlicerCollection.load_1
  summary: <span data-ttu-id="8822c-142">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="8822c-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8822c-143">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="8822c-143">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="8822c-144">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="8822c-144">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.SlicerCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
    return:
      type:
      - excel.Excel.SlicerCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.SlicerCollection.toJSON
  summary: <span data-ttu-id="8822c-145">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。</span><span class="sxs-lookup"><span data-stu-id="8822c-145">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="8822c-146">(`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)虽然原始`Excel.SlicerCollection`对象是 API 对象, 但该`toJSON`方法返回一个纯 JavaScript 对象 (类型为`Excel.Interfaces.SlicerCollectionData` <!-- -->), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="8822c-146">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerCollectionData
      description: ''
