### YamlMime:UniversalReference
ms.openlocfilehash: acc3683113cf6b700ecd6451fbe471e230d35bde
ms.sourcegitcommit: 5e31602ed9cbddfcff2768b7ed69dd4821440b90
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 03/14/2019
ms.locfileid: "30632168"
items:
- uid: excel.Excel.SlicerStyleCollection
  summary: >-
    <span data-ttu-id="d8817-101">表示 SlicerStyle 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="d8817-101">Represents a collection of SlicerStyle objects.</span></span>


    <span data-ttu-id="d8817-102">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8817-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.SlicerStyleCollection
  fullName: Excel.SlicerStyleCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SlicerStyleCollection.add
  - excel.Excel.SlicerStyleCollection.context
  - excel.Excel.SlicerStyleCollection.getCount
  - excel.Excel.SlicerStyleCollection.getDefault
  - excel.Excel.SlicerStyleCollection.getItem
  - excel.Excel.SlicerStyleCollection.getItemOrNullObject
  - excel.Excel.SlicerStyleCollection.items
  - excel.Excel.SlicerStyleCollection.load
  - excel.Excel.SlicerStyleCollection.load_1
  - excel.Excel.SlicerStyleCollection.load_2
  - excel.Excel.SlicerStyleCollection.setDefault
  - excel.Excel.SlicerStyleCollection.toJSON
- uid: excel.Excel.SlicerStyleCollection.add
  summary: >-
    <span data-ttu-id="d8817-103">创建具有指定名称的空白 SlicerStyle。</span><span class="sxs-lookup"><span data-stu-id="d8817-103">Creates a blank SlicerStyle with the specified name.</span></span>


    <span data-ttu-id="d8817-104">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8817-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: add(name, makeUniqueName)
  fullName: add(name, makeUniqueName)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, makeUniqueName?: boolean): Excel.SlicerStyle;'
    return:
      type:
      - excel.Excel.SlicerStyle
      description: <span data-ttu-id="d8817-105">新创建的 SlicerStyle。</span><span class="sxs-lookup"><span data-stu-id="d8817-105">The newly created SlicerStyle.</span></span>
    parameters:
    - id: name
      description: <span data-ttu-id="d8817-106">新 SlicerStyle 的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="d8817-106">The unique name for the new SlicerStyle.</span></span> <span data-ttu-id="d8817-107">如果名称已在使用中, 则将引发无效参数异常。</span><span class="sxs-lookup"><span data-stu-id="d8817-107">Will throw an invalid argument exception if the name is already in use.</span></span>
      type:
      - string
    - id: makeUniqueName
      description: <span data-ttu-id="d8817-108">可选, 默认值为 false。</span><span class="sxs-lookup"><span data-stu-id="d8817-108">Optional, defaults to false.</span></span> <span data-ttu-id="d8817-109">如果为 true, 则将数字追加到名称, 以便根据需要使其唯一。</span><span class="sxs-lookup"><span data-stu-id="d8817-109">If true, will append numbers to the name in order to make it unique, if needed.</span></span>
      type:
      - boolean
- uid: excel.Excel.SlicerStyleCollection.context
  summary: <span data-ttu-id="d8817-110">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="d8817-110">The request context associated with the object.</span></span> <span data-ttu-id="d8817-111">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="d8817-111">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SlicerStyleCollection.getCount
  summary: >-
    <span data-ttu-id="d8817-112">获取集合中切片器样式的数目。</span><span class="sxs-lookup"><span data-stu-id="d8817-112">Gets the number of slicer styles in the collection.</span></span>


    <span data-ttu-id="d8817-113">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8817-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.SlicerStyleCollection.getDefault
  summary: >-
    <span data-ttu-id="d8817-114">获取父对象的作用域的默认 SlicerStyle。</span><span class="sxs-lookup"><span data-stu-id="d8817-114">Gets the default SlicerStyle for the parent object's scope.</span></span>


    <span data-ttu-id="d8817-115">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8817-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getDefault()
  fullName: getDefault()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDefault(): Excel.SlicerStyle;'
    return:
      type:
      - excel.Excel.SlicerStyle
      description: <span data-ttu-id="d8817-116">作为当前默认 SlicerStyle 的 SlicerStyle 对象。</span><span class="sxs-lookup"><span data-stu-id="d8817-116">The SlicerStyle object that is the current default SlicerStyle.</span></span>
- uid: excel.Excel.SlicerStyleCollection.getItem
  summary: >-
    <span data-ttu-id="d8817-117">按名称获取 SlicerStyle。</span><span class="sxs-lookup"><span data-stu-id="d8817-117">Gets a SlicerStyle by name.</span></span>


    <span data-ttu-id="d8817-118">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8817-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.SlicerStyle;'
    return:
      type:
      - excel.Excel.SlicerStyle
      description: <span data-ttu-id="d8817-119">其名称与输入匹配的 SlicerStyle 对象。</span><span class="sxs-lookup"><span data-stu-id="d8817-119">The SlicerStyle object whose name matches the input.</span></span>
    parameters:
    - id: name
      description: <span data-ttu-id="d8817-120">要检索的 SlicerStyle 的名称。</span><span class="sxs-lookup"><span data-stu-id="d8817-120">Name of the SlicerStyle to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerStyleCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="d8817-121">按名称获取 SlicerStyle。</span><span class="sxs-lookup"><span data-stu-id="d8817-121">Gets a SlicerStyle by name.</span></span> <span data-ttu-id="d8817-122">如果 SlicerStyle 不存在, 则将返回一个 null 对象。</span><span class="sxs-lookup"><span data-stu-id="d8817-122">If the SlicerStyle does not exist, will return a null object.</span></span>


    <span data-ttu-id="d8817-123">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8817-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.SlicerStyle;'
    return:
      type:
      - excel.Excel.SlicerStyle
      description: <span data-ttu-id="d8817-124">其名称与输入匹配的 SlicerStyle 对象。</span><span class="sxs-lookup"><span data-stu-id="d8817-124">The SlicerStyle object whose name matches the input.</span></span>
    parameters:
    - id: name
      description: <span data-ttu-id="d8817-125">要检索的 SlicerStyle 的名称。</span><span class="sxs-lookup"><span data-stu-id="d8817-125">Name of the SlicerStyle to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerStyleCollection.items
  summary: <span data-ttu-id="d8817-126">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="d8817-126">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.SlicerStyle[];'
    return:
      type:
      - Excel.SlicerStyle[]
- uid: excel.Excel.SlicerStyleCollection.load
  summary: <span data-ttu-id="d8817-127">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="d8817-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d8817-128">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="d8817-128">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d8817-129">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="d8817-129">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d8817-130">`load(option?: string | string[]): Excel.SlicerStyleCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="d8817-130">`load(option?: string | string[]): Excel.SlicerStyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d8817-131">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyleCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="d8817-131">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d8817-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyleCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="d8817-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="d8817-133">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="d8817-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="d8817-134">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="d8817-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d8817-135">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="d8817-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d8817-136">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="d8817-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerStyleCollection;'
    return:
      type:
      - excel.Excel.SlicerStyleCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.SlicerStyleCollection.load_1
  summary: <span data-ttu-id="d8817-137">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="d8817-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d8817-138">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="d8817-138">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerStyleCollection;'
    return:
      type:
      - excel.Excel.SlicerStyleCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d8817-139">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="d8817-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.SlicerStyleCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerStyleCollection;'
    return:
      type:
      - excel.Excel.SlicerStyleCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.SlicerStyleCollection.setDefault
  summary: >-
    <span data-ttu-id="d8817-140">设置要在父对象的范围中使用的默认 SlicerStyle。</span><span class="sxs-lookup"><span data-stu-id="d8817-140">Sets the default SlicerStyle for use in the parent object's scope.</span></span>


    <span data-ttu-id="d8817-141">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d8817-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setDefault(newDefaultStyle)
  fullName: setDefault(newDefaultStyle)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setDefault(newDefaultStyle: SlicerStyle | string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: newDefaultStyle
      description: <span data-ttu-id="d8817-142">应为新的默认值的 SlicerStyle 对象的 SlicerStyle 对象或名称。</span><span class="sxs-lookup"><span data-stu-id="d8817-142">The SlicerStyle object or name of the SlicerStyle object that should be the new default.</span></span>
      type:
      - SlicerStyle | string
- uid: excel.Excel.SlicerStyleCollection.toJSON
  summary: <span data-ttu-id="d8817-143">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d8817-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d8817-144">.</span><span class="sxs-lookup"><span data-stu-id="d8817-144"></span></span> <span data-ttu-id="d8817-145">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d8817-145"></span></span><!-- --><span data-ttu-id="d8817-146">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.SlicerStyleCollection`对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.SlicerStyleCollectionData`</span><span class="sxs-lookup"><span data-stu-id="d8817-146">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerStyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerStyleCollectionData`</span></span><!-- --><span data-ttu-id="d8817-147">), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="d8817-147">) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerStyleCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerStyleCollectionData
      description: ''
