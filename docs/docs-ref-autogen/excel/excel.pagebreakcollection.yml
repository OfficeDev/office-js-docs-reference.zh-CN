### YamlMime:UniversalReference
ms.openlocfilehash: 0a959631640c698f70c4d3206191246b64a32d6a
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303023"
items:
- uid: excel.Excel.PageBreakCollection
  summary: '<span data-ttu-id="06bf3-101">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06bf3-101">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
  isPreview: true
  name: Excel.PageBreakCollection
  fullName: Excel.PageBreakCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PageBreakCollection.add
  - excel.Excel.PageBreakCollection.context
  - excel.Excel.PageBreakCollection.getCount
  - excel.Excel.PageBreakCollection.getItem
  - excel.Excel.PageBreakCollection.items
  - excel.Excel.PageBreakCollection.load
  - excel.Excel.PageBreakCollection.load_1
  - excel.Excel.PageBreakCollection.load_2
  - excel.Excel.PageBreakCollection.removePageBreaks
  - excel.Excel.PageBreakCollection.toJSON
- uid: excel.Excel.PageBreakCollection.add
  summary: >-
    <span data-ttu-id="06bf3-102">在指定区域左上角的单元格之前添加一个分页符。</span><span class="sxs-lookup"><span data-stu-id="06bf3-102">Adds a page break before the top-left cell of the range specified.</span></span>


    <span data-ttu-id="06bf3-103">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06bf3-103">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: add(pageBreakRange)
  fullName: add(pageBreakRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(pageBreakRange: Range | string): Excel.PageBreak;'
    return:
      type:
      - excel.Excel.PageBreak
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"06bf3-104\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"06bf3-104\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const farmSheet = context.workbook.worksheets.getItem(\"Print\");\n    farmSheet.horizontalPageBreaks.add(\"A21:E21\");\n    await context.sync();\n});\n```"
    parameters:
    - id: pageBreakRange
      description: <span data-ttu-id="06bf3-105">紧跟在要添加的分页符之后的区域。</span><span class="sxs-lookup"><span data-stu-id="06bf3-105">The range immediately after the page break to be added.</span></span>
      type:
      - Range | string
- uid: excel.Excel.PageBreakCollection.context
  summary: <span data-ttu-id="06bf3-106">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="06bf3-106">The request context associated with the object.</span></span> <span data-ttu-id="06bf3-107">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="06bf3-107">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PageBreakCollection.getCount
  summary: >-
    <span data-ttu-id="06bf3-108">获取集合中分页符的数目。</span><span class="sxs-lookup"><span data-stu-id="06bf3-108">Gets the number of page breaks in the collection.</span></span>


    <span data-ttu-id="06bf3-109">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06bf3-109">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.PageBreakCollection.getItem
  summary: >-
    <span data-ttu-id="06bf3-110">通过索引获取分页符对象。</span><span class="sxs-lookup"><span data-stu-id="06bf3-110">Gets a page break object via the index.</span></span>


    <span data-ttu-id="06bf3-111">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06bf3-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(index)
  fullName: getItem(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number): Excel.PageBreak;'
    return:
      type:
      - excel.Excel.PageBreak
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="06bf3-112">分页符的索引。</span><span class="sxs-lookup"><span data-stu-id="06bf3-112">Index of the page break.</span></span>
      type:
      - number
- uid: excel.Excel.PageBreakCollection.items
  summary: <span data-ttu-id="06bf3-113">获取此集合中的已加载子项目。</span><span class="sxs-lookup"><span data-stu-id="06bf3-113">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PageBreak[];'
    return:
      type:
      - Excel.PageBreak[]
- uid: excel.Excel.PageBreakCollection.load
  summary: <span data-ttu-id="06bf3-114">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="06bf3-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="06bf3-115">在读取属性之前, 必须先调用 "context, sync ()"。</span><span class="sxs-lookup"><span data-stu-id="06bf3-115">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="06bf3-116">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="06bf3-116">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="06bf3-117">`load(option?: string | string[]): Excel.PageBreakCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="06bf3-117">`load(option?: string | string[]): Excel.PageBreakCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="06bf3-118">`load(option?: { select?: string; expand?: string; }): Excel.PageBreakCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="06bf3-118">`load(option?: { select?: string; expand?: string; }): Excel.PageBreakCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="06bf3-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PageBreakCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="06bf3-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PageBreakCollection` - Only available on collection types.</span></span> <span data-ttu-id="06bf3-120">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="06bf3-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="06bf3-121">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="06bf3-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="06bf3-122">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="06bf3-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="06bf3-123">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="06bf3-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PageBreakCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PageBreakCollection;'
    return:
      type:
      - excel.Excel.PageBreakCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.PageBreakCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.PageBreakCollection.load_1
  summary: <span data-ttu-id="06bf3-124">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="06bf3-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="06bf3-125">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="06bf3-125">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PageBreakCollection;'
    return:
      type:
      - excel.Excel.PageBreakCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="06bf3-126">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="06bf3-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PageBreakCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.PageBreakCollection;'
    return:
      type:
      - excel.Excel.PageBreakCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.PageBreakCollection.removePageBreaks
  summary: >-
    <span data-ttu-id="06bf3-127">重置集合中的所有手动分页符。</span><span class="sxs-lookup"><span data-stu-id="06bf3-127">Resets all manual page breaks in the collection.</span></span>


    <span data-ttu-id="06bf3-128">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="06bf3-128">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: removePageBreaks()
  fullName: removePageBreaks()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removePageBreaks(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PageBreakCollection.toJSON
  summary: <span data-ttu-id="06bf3-129">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。</span><span class="sxs-lookup"><span data-stu-id="06bf3-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="06bf3-130">(`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)虽然原始`Excel.PageBreakCollection`对象是 API 对象, 但该`toJSON`方法返回一个纯 JavaScript 对象 (类型为`Excel.Interfaces.PageBreakCollectionData` <!-- -->), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="06bf3-130">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PageBreakCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PageBreakCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PageBreakCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.PageBreakCollectionData
      description: ''
