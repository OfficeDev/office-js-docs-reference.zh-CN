### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SlicerStyle
    summary: |-
      <span data-ttu-id="c695d-101">表示一个切片器样式, 该样式按切片器区域定义样式元素。</span><span class="sxs-lookup"><span data-stu-id="c695d-101">Represents a Slicer Style, which defines style elements by region of the slicer.</span></span>

      <span data-ttu-id="c695d-102">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c695d-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerStyle
    fullName: Excel.SlicerStyle
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.SlicerStyle.context
      - excel.Excel.SlicerStyle.delete
      - excel.Excel.SlicerStyle.duplicate
      - excel.Excel.SlicerStyle.load
      - excel.Excel.SlicerStyle.load_1
      - excel.Excel.SlicerStyle.load_2
      - excel.Excel.SlicerStyle.name
      - excel.Excel.SlicerStyle.readOnly
      - excel.Excel.SlicerStyle.set
      - excel.Excel.SlicerStyle.set_1
      - excel.Excel.SlicerStyle.toJSON
  - uid: excel.Excel.SlicerStyle.context
    summary: <span data-ttu-id="c695d-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="c695d-103">The request context associated with the object.</span></span> <span data-ttu-id="c695d-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="c695d-104">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.SlicerStyle.delete
    summary: |-
      <span data-ttu-id="c695d-105">删除 SlicerStyle。</span><span class="sxs-lookup"><span data-stu-id="c695d-105">Deletes the SlicerStyle.</span></span>

      <span data-ttu-id="c695d-106">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c695d-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.SlicerStyle.duplicate
    summary: |-
      <span data-ttu-id="c695d-107">使用所有样式元素的副本创建此 SlicerStyle 的副本。</span><span class="sxs-lookup"><span data-stu-id="c695d-107">Creates a duplicate of this SlicerStyle with copies of all the style elements.</span></span>

      <span data-ttu-id="c695d-108">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c695d-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: duplicate()
    fullName: duplicate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'duplicate(): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: <span data-ttu-id="c695d-109">与此 SlicerStyle 重复的新 SlicerStyle 对象。</span><span class="sxs-lookup"><span data-stu-id="c695d-109">The new SlicerStyle object that has been duplicated from this SlicerStyle.</span></span>
  - uid: excel.Excel.SlicerStyle.load
    summary: <span data-ttu-id="c695d-110">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c695d-111">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="c695d-111">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c695d-112">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="c695d-112">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c695d-113">`load(option?: string | string[]): Excel.SlicerStyle`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-113">`load(option?: string | string[]): Excel.SlicerStyle` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c695d-114">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyle`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-114">`load(option?: { select?: string; expand?: string; }): Excel.SlicerStyle` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c695d-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyle`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="c695d-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerStyle` - Only available on collection types.</span></span> <span data-ttu-id="c695d-116">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="c695d-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="c695d-117">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c695d-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c695d-118">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="c695d-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c695d-119">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="c695d-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerStyleLoadOptions): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.SlicerStyleLoadOptions
  - uid: excel.Excel.SlicerStyle.load_1
    summary: '<span data-ttu-id="c695d-120">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c695d-121">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="c695d-121">You must call `context.sync()` before reading the properties.</span></span>'
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="c695d-122">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.SlicerStyle.load_2
    summary: '<span data-ttu-id="c695d-123">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c695d-124">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="c695d-124">You must call `context.sync()` before reading the properties.</span></span>'
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.SlicerStyle;'
      return:
        type:
          - excel.Excel.SlicerStyle
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c695d-125">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-125">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.SlicerStyle.name
    summary: |-
      <span data-ttu-id="c695d-126">获取 SlicerStyle 的名称。</span><span class="sxs-lookup"><span data-stu-id="c695d-126">Gets the name of the SlicerStyle.</span></span>

      <span data-ttu-id="c695d-127">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c695d-127">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.SlicerStyle.readOnly
    summary: |-
      <span data-ttu-id="c695d-128">指定此 SlicerStyle 对象是否为只读。</span><span class="sxs-lookup"><span data-stu-id="c695d-128">Specifies if this SlicerStyle object is read-only.</span></span> <span data-ttu-id="c695d-129">只读。</span><span class="sxs-lookup"><span data-stu-id="c695d-129">Read-only.</span></span>

      <span data-ttu-id="c695d-130">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c695d-130">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: readOnly
    fullName: readOnly
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly readOnly: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.SlicerStyle.set
    summary: '<span data-ttu-id="c695d-131">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-131">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c695d-132">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="c695d-132">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c695d-133">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="c695d-133">This method has the following additional signature:</span></span>

      `set(properties: Excel.SlicerStyle): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerStyleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="c695d-134">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-134">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.SlicerStyleUpdateData
        - id: options
          description: '<span data-ttu-id="c695d-135">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="c695d-135">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.SlicerStyle.set_1
    summary: '<span data-ttu-id="c695d-136">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="c695d-136">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.SlicerStyle): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.SlicerStyle
  - uid: excel.Excel.SlicerStyle.toJSON
    summary: '<span data-ttu-id="c695d-137">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c695d-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c695d-138">.</span><span class="sxs-lookup"><span data-stu-id="c695d-138"></span></span> <span data-ttu-id="c695d-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c695d-139"></span></span><!-- --><span data-ttu-id="c695d-140">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 SlicerStyle 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.SlicerStyleData`</span><span class="sxs-lookup"><span data-stu-id="c695d-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.SlicerStyle object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerStyleData`</span></span><!-- --><span data-ttu-id="c695d-141">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="c695d-141">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerStyleData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerStyleData
        description: ''