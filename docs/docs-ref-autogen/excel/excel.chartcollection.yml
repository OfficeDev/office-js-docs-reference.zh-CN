### YamlMime:UniversalReference
ms.openlocfilehash: a125d56d35ff65d0de1b12f91361965bc2f045f5
ms.sourcegitcommit: 2dcedf6deec4167dca476a42dad411e28cc92a97
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 01/23/2019
ms.locfileid: "29385691"
items:
- uid: excel.Excel.ChartCollection
  summary: >-
    <span data-ttu-id="c7145-101">工作表中所有 Chart 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c7145-101">A collection of all the chart objects on a worksheet.</span></span>


    <span data-ttu-id="c7145-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartCollection
  fullName: Excel.ChartCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartCollection.add
  - excel.Excel.ChartCollection.context
  - excel.Excel.ChartCollection.count
  - excel.Excel.ChartCollection.getCount
  - excel.Excel.ChartCollection.getItem
  - excel.Excel.ChartCollection.getItemAt
  - excel.Excel.ChartCollection.getItemOrNullObject
  - excel.Excel.ChartCollection.items
  - excel.Excel.ChartCollection.load
  - excel.Excel.ChartCollection.onActivated
  - excel.Excel.ChartCollection.onAdded
  - excel.Excel.ChartCollection.onDeactivated
  - excel.Excel.ChartCollection.onDeleted
  - excel.Excel.ChartCollection.toJSON
- uid: excel.Excel.ChartCollection.add
  summary: >-
    <span data-ttu-id="c7145-103">创建新图表。</span><span class="sxs-lookup"><span data-stu-id="c7145-103">Creates a new chart.</span></span>


    <span data-ttu-id="c7145-104">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(type, sourceData, seriesBy)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(type: Excel.ChartType, sourceData: Range, seriesBy?: Excel.ChartSeriesBy): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7145-105\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-105\">Examples</span></span>\n\n```javascript\n// Add a chart of chartType \"ColumnClustered\" on worksheet \"Charts\" \n// with sourceData from Range \"A1:B4\" and seriresBy is set to be \"auto\".\nExcel.run(function (ctx) { \n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName)\n        .getRange(rangeSelection);\n    var chart = ctx.workbook.worksheets.getItem(sheetName)\n        .charts.add(\"ColumnClustered\", range, \"auto\");    return ctx.sync().then(function() {\n            console.log(\"New Chart Added\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: type
      description: <span data-ttu-id="c7145-106">代表图表的类型。</span><span class="sxs-lookup"><span data-stu-id="c7145-106">Represents the type of a chart.</span></span> <span data-ttu-id="c7145-107">有关详细信息，请参阅 Excel.ChartType。</span><span class="sxs-lookup"><span data-stu-id="c7145-107">See Excel.ChartType for details.</span></span>
      type:
      - excel.Excel.ChartType
    - id: sourceData
      description: <span data-ttu-id="c7145-108">对应于源数据的 Range 对象。</span><span class="sxs-lookup"><span data-stu-id="c7145-108">The Range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesBy
      description: <span data-ttu-id="c7145-109">可选。</span><span class="sxs-lookup"><span data-stu-id="c7145-109">Optional.</span></span> <span data-ttu-id="c7145-110">指定的方式列或行用作图表上的数据系列。</span><span class="sxs-lookup"><span data-stu-id="c7145-110">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="c7145-111">有关详细信息，请参阅 Excel.ChartSeriesBy。</span><span class="sxs-lookup"><span data-stu-id="c7145-111">See Excel.ChartSeriesBy for details.</span></span>
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel.Excel.ChartCollection.context
  summary: <span data-ttu-id="c7145-112">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="c7145-112">The request context associated with the object.</span></span> <span data-ttu-id="c7145-113">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="c7145-113">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartCollection.count
  summary: >-
    <span data-ttu-id="c7145-p104">返回工作表中的图表数。只读。</span><span class="sxs-lookup"><span data-stu-id="c7145-p104">Returns the number of charts in the worksheet. Read-only.</span></span>


    <span data-ttu-id="c7145-116">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.ChartCollection.getCount
  summary: >-
    <span data-ttu-id="c7145-117">返回工作表中的图表数。</span><span class="sxs-lookup"><span data-stu-id="c7145-117">Returns the number of charts in the worksheet.</span></span>


    <span data-ttu-id="c7145-118">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.ChartCollection.getItem
  summary: >-
    <span data-ttu-id="c7145-p105">使用图表名称获取图表。如果存在多个名称相同的图表，将返回第一个图表。</span><span class="sxs-lookup"><span data-stu-id="c7145-p105">Gets a chart using its name. If there are multiple charts with the same name, the first one will be returned.</span></span>


    <span data-ttu-id="c7145-121">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7145-122\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chartname = 'Chart1';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartname);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var chartId = 'SamplChartId';\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(chartId);\n    return ctx.sync().then(function() {\n            console.log(chart.height);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="c7145-123">要检索的图表的名称。</span><span class="sxs-lookup"><span data-stu-id="c7145-123">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.ChartCollection.getItemAt
  summary: >-
    <span data-ttu-id="c7145-124">根据其在集合中的位置获取图表。</span><span class="sxs-lookup"><span data-stu-id="c7145-124">Gets a chart based on its position in the collection.</span></span>


    <span data-ttu-id="c7145-125">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7145-126\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-126\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var lastPosition = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.count - 1;\n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItemAt(lastPosition);\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="c7145-p106">要检索的对象的索引值。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="c7145-p106">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.ChartCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="c7145-129">获取使用其名称的图表。</span><span class="sxs-lookup"><span data-stu-id="c7145-129">Gets a chart using its name.</span></span> <span data-ttu-id="c7145-130">如果具有相同名称的多个图表，则将返回第一个。</span><span class="sxs-lookup"><span data-stu-id="c7145-130">If there are multiple charts with the same name, the first one will be returned.</span></span> <span data-ttu-id="c7145-131">如果图表不存在，将返回 null 对象。</span><span class="sxs-lookup"><span data-stu-id="c7145-131">If the chart does not exist, will return a null object.</span></span>


    <span data-ttu-id="c7145-132">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-132">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="c7145-133">要检索的图表的名称。</span><span class="sxs-lookup"><span data-stu-id="c7145-133">Name of the chart to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.ChartCollection.items
  summary: <span data-ttu-id="c7145-134">获取此集合中的加载的子项目。</span><span class="sxs-lookup"><span data-stu-id="c7145-134">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Chart[];'
    return:
      type:
      - Excel.Chart[]
- uid: excel.Excel.ChartCollection.load
  summary: <span data-ttu-id="c7145-135">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="c7145-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c7145-136">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="c7145-136">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"c7145-137\">除了此签名，此方法具有以下签名：</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-137\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"c7145-138\">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-138\">`load(option?: { select?: string; expand?: string; }): Excel.ChartCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"c7145-139\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection`-仅可对集合的类型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-139\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"c7145-140\">它是类似于前一个签名。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-140\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"c7145-141\">Option.top 指定集合项可在结果中包含的最大数目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-141\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"c7145-142\">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-142\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"c7145-143\">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-143\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7145-144\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-144\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < charts.items.length; i++)\n        {\n            console.log(charts.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of charts\nExcel.run(function (ctx) { \n    var charts = ctx.workbook.worksheets.getItem(\"Sheet1\").charts;\n    charts.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"charts: Count= \" + charts.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartCollection;'
    return:
      type:
      - excel.Excel.ChartCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="c7145-145">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="c7145-145">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartCollection.onActivated
  summary: >-
    <span data-ttu-id="c7145-146">激活图表时发生。</span><span class="sxs-lookup"><span data-stu-id="c7145-146">Occurs when a chart is activated.</span></span>


    <span data-ttu-id="c7145-147">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-147">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onActivated
  fullName: onActivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7145-148\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-148\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onActivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The ID of the active chart is: \" + event.chartId)\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.ChartCollection.onAdded
  summary: >-
    <span data-ttu-id="c7145-149">向工作表添加一个新图表时发生。</span><span class="sxs-lookup"><span data-stu-id="c7145-149">Occurs when a new chart is added to the worksheet.</span></span>


    <span data-ttu-id="c7145-150">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-150">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onAdded
  fullName: onAdded
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartAddedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7145-151\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-151\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onAdded.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"A chart has been added with ID: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.ChartCollection.onDeactivated
  summary: >-
    <span data-ttu-id="c7145-152">停用图表时发生此事件。</span><span class="sxs-lookup"><span data-stu-id="c7145-152">Occurs when a chart is deactivated.</span></span>


    <span data-ttu-id="c7145-153">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-153">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeactivated
  fullName: onDeactivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7145-154\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-154\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onDeactivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The chart with this ID was deactivated: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.ChartCollection.onDeleted
  summary: >-
    <span data-ttu-id="c7145-155">删除图表时发生。</span><span class="sxs-lookup"><span data-stu-id="c7145-155">Occurs when a chart is deleted.</span></span>


    <span data-ttu-id="c7145-156">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c7145-156">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeleted
  fullName: onDeleted
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeletedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c7145-157\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"c7145-157\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    context.workbook.worksheets.getActiveWorksheet()\n        .charts.onDeleted.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The chart with this ID was deleted: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.ChartCollection.toJSON
  summary: <span data-ttu-id="c7145-158">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="c7145-158">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="c7145-159">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)而原始`Excel.ChartCollection`对象是 API 对象，`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.ChartCollectionData` <!-- -->)，其中包含数组"项目"的任何加载属性集的项目的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="c7145-159">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartCollectionData
      description: ''
