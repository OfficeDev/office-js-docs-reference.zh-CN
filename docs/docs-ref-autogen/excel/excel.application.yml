### YamlMime:UniversalReference
ms.openlocfilehash: 7e0343beef42d8949e87a83a9f4f5d4ae2877883
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30096029"
items:
- uid: excel.Excel.Application
  summary: >-
    <span data-ttu-id="63bd5-101">表示用于管理工作簿的 Excel 应用程序。</span><span class="sxs-lookup"><span data-stu-id="63bd5-101">Represents the Excel application that manages the workbook.</span></span>


    <span data-ttu-id="63bd5-102">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63bd5-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Application
  fullName: Excel.Application
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Application.calculate
  - excel.Excel.Application.calculate_1
  - excel.Excel.Application.calculationEngineVersion
  - excel.Excel.Application.calculationMode
  - excel.Excel.Application.calculationState
  - excel.Excel.Application.context
  - excel.Excel.Application.iterativeCalculation
  - excel.Excel.Application.load
  - excel.Excel.Application.load_1
  - excel.Excel.Application.load_2
  - excel.Excel.Application.set
  - excel.Excel.Application.set_1
  - excel.Excel.Application.suspendApiCalculationUntilNextSync
  - excel.Excel.Application.suspendScreenUpdatingUntilNextSync
  - excel.Excel.Application.toJSON
- uid: excel.Excel.Application.calculate
  summary: >-
    <span data-ttu-id="63bd5-103">重新计算 Excel 中当前打开的所有工作簿。</span><span class="sxs-lookup"><span data-stu-id="63bd5-103">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="63bd5-104">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63bd5-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationType)
  fullName: calculate(calculationType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: calculationType
      description: <span data-ttu-id="63bd5-105">指定要使用的计算类型。</span><span class="sxs-lookup"><span data-stu-id="63bd5-105">Specifies the calculation type to use.</span></span> <span data-ttu-id="63bd5-106">有关详细信息, 请参阅 CalculationType。</span><span class="sxs-lookup"><span data-stu-id="63bd5-106">See Excel.CalculationType for details.</span></span>
      type:
      - excel.Excel.CalculationType
- uid: excel.Excel.Application.calculate_1
  summary: >-
    <span data-ttu-id="63bd5-107">重新计算 Excel 中当前打开的所有工作簿。</span><span class="sxs-lookup"><span data-stu-id="63bd5-107">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="63bd5-108">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63bd5-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationTypeString)
  fullName: calculate(calculationTypeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"63bd5-109\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"63bd5-109\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: calculationTypeString
      description: <span data-ttu-id="63bd5-110">指定要使用的计算类型。</span><span class="sxs-lookup"><span data-stu-id="63bd5-110">Specifies the calculation type to use.</span></span> <span data-ttu-id="63bd5-111">有关详细信息, 请参阅 CalculationType。</span><span class="sxs-lookup"><span data-stu-id="63bd5-111">See Excel.CalculationType for details.</span></span>
      type:
      - "\"Recalculate\" | \"Full\" | \"FullRebuild\""
- uid: excel.Excel.Application.calculationEngineVersion
  summary: >-
    <span data-ttu-id="63bd5-112">返回有关上次对工作簿进行完全重新计算的 Excel 计算引擎版本的数字。</span><span class="sxs-lookup"><span data-stu-id="63bd5-112">Returns a number about the version of Excel Calculation Engine that the workbook was last fully recalculated by.</span></span> <span data-ttu-id="63bd5-113">只读。</span><span class="sxs-lookup"><span data-stu-id="63bd5-113">Read-only.</span></span>


    <span data-ttu-id="63bd5-114">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63bd5-114">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: calculationEngineVersion
  fullName: calculationEngineVersion
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly calculationEngineVersion: number;'
    return:
      type:
      - number
- uid: excel.Excel.Application.calculationMode
  summary: >-
    <span data-ttu-id="63bd5-115">返回工作簿中使用的计算模式, 如 CalculationMode 中的常量所定义。</span><span class="sxs-lookup"><span data-stu-id="63bd5-115">Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode.</span></span> <span data-ttu-id="63bd5-116">可能的值为`Automatic` <!-- -->:, Excel 控制重新计算的位置。`AutomaticExceptTables`, Excel 在其中控制重新计算, 但忽略表中的<!-- -->更改。`Manual`, 在用户请求计算时完成<!-- -->计算。</span><span class="sxs-lookup"><span data-stu-id="63bd5-116">Possible values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user requests it.</span></span>


    <span data-ttu-id="63bd5-117">\[[API 集: ExcelApi 1.1 for get, 1.8 (用于设置)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63bd5-117">\[ [API set: ExcelApi 1.1 for get, 1.8 for set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculationMode
  fullName: calculationMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type:
      - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
- uid: excel.Excel.Application.calculationState
  summary: >-
    <span data-ttu-id="63bd5-118">返回一个指示应用程序的计算状态的 CalculationState。</span><span class="sxs-lookup"><span data-stu-id="63bd5-118">Returns a CalculationState that indicates the calculation state of the application.</span></span> <span data-ttu-id="63bd5-119">有关详细信息, 请参阅 CalculationState。</span><span class="sxs-lookup"><span data-stu-id="63bd5-119">See Excel.CalculationState for details.</span></span> <span data-ttu-id="63bd5-120">只读。</span><span class="sxs-lookup"><span data-stu-id="63bd5-120">Read-only.</span></span>


    <span data-ttu-id="63bd5-121">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63bd5-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: calculationState
  fullName: calculationState
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly calculationState: Excel.CalculationState | "Done" | "Calculating" | "Pending";'
    return:
      type:
      - Excel.CalculationState | "Done" | "Calculating" | "Pending"
- uid: excel.Excel.Application.context
  summary: <span data-ttu-id="63bd5-122">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="63bd5-122">The request context associated with the object.</span></span> <span data-ttu-id="63bd5-123">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="63bd5-123">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Application.iterativeCalculation
  summary: >-
    <span data-ttu-id="63bd5-124">返回迭代计算设置。</span><span class="sxs-lookup"><span data-stu-id="63bd5-124">Returns the Iterative Calculation settings.</span></span> <span data-ttu-id="63bd5-125">在 excel for Windows 和 excel for Mac 上, 这些设置将应用于 excel 应用程序。</span><span class="sxs-lookup"><span data-stu-id="63bd5-125">On Excel for Windows and Excel for Mac, the settings will apply to the Excel Application.</span></span> <span data-ttu-id="63bd5-126">在 excel Online 和 excel 中, 对于其他平台, 这些设置将应用于活动工作簿。</span><span class="sxs-lookup"><span data-stu-id="63bd5-126">On Excel Online and Excel for other platforms, the settings will apply to the active workbook.</span></span>


    <span data-ttu-id="63bd5-127">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63bd5-127">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: iterativeCalculation
  fullName: iterativeCalculation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iterativeCalculation: Excel.IterativeCalculation;'
    return:
      type:
      - excel.Excel.IterativeCalculation
- uid: excel.Excel.Application.load
  summary: <span data-ttu-id="63bd5-128">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="63bd5-129">在读取属性之前, 必须先调用 "context, sync ()"。</span><span class="sxs-lookup"><span data-stu-id="63bd5-129">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="63bd5-130">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="63bd5-130">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="63bd5-131">`load(option?: string | string[]): Excel.Application`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-131">`load(option?: string | string[]): Excel.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="63bd5-132">`load(option?: { select?: string; expand?: string; }): Excel.Application`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-132">`load(option?: { select?: string; expand?: string; }): Excel.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="63bd5-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="63bd5-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application` - Only available on collection types.</span></span> <span data-ttu-id="63bd5-134">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="63bd5-134">It is similar to the preceding signature.</span></span> <span data-ttu-id="63bd5-135">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="63bd5-135">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="63bd5-136">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="63bd5-136">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="63bd5-137">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="63bd5-137">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ApplicationLoadOptions
- uid: excel.Excel.Application.load_1
  summary: <span data-ttu-id="63bd5-138">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="63bd5-139">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="63bd5-139">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"63bd5-140\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"63bd5-140\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    var application = ctx.workbook.application;\n    application.load('calculationMode');\n    return ctx.sync().then(function() {\n        console.log(application.calculationMode);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="63bd5-141">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-141">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Application.load_2
  summary: <span data-ttu-id="63bd5-142">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="63bd5-143">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="63bd5-143">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="63bd5-144">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-144">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Application.set
  summary: <span data-ttu-id="63bd5-145">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-145">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="63bd5-146">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="63bd5-146">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="63bd5-147">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="63bd5-147">This method has the following additional signature:</span></span>


    `set(properties: Excel.Application): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="63bd5-148">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-148">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ApplicationUpdateData
    - id: options
      description: <span data-ttu-id="63bd5-149">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="63bd5-149">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Application.set_1
  summary: <span data-ttu-id="63bd5-150">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="63bd5-150">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Application): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Application
- uid: excel.Excel.Application.suspendApiCalculationUntilNextSync
  summary: >-
    <span data-ttu-id="63bd5-p113">在下一次调用“context.sync()”前暂停计算。设置后，开发者负责重新计算工作簿，以确保传播所有依赖项。</span><span class="sxs-lookup"><span data-stu-id="63bd5-p113">Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.</span></span>


    <span data-ttu-id="63bd5-153">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63bd5-153">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: suspendApiCalculationUntilNextSync()
  fullName: suspendApiCalculationUntilNextSync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Application.suspendScreenUpdatingUntilNextSync
  summary: >-
    <span data-ttu-id="63bd5-154">在调用下一个 "context. sync ()" 之前暂停 sceen 更新。</span><span class="sxs-lookup"><span data-stu-id="63bd5-154">Suspends sceen updating until the next "context.sync()" is called.</span></span>


    <span data-ttu-id="63bd5-155">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="63bd5-155">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: suspendScreenUpdatingUntilNextSync()
  fullName: suspendScreenUpdatingUntilNextSync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendScreenUpdatingUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Application.toJSON
  summary: <span data-ttu-id="63bd5-156">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。</span><span class="sxs-lookup"><span data-stu-id="63bd5-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="63bd5-157">(`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)尽管原始的 Excel 应用程序对象是 API 对象, 但该`toJSON`方法将返回一个纯 JavaScript 对象 (类型`Excel.Interfaces.ApplicationData` <!-- -->为), 其中包含原始对象中任何已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="63bd5-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ApplicationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type:
      - excel.Excel.Interfaces.ApplicationData
      description: ''
