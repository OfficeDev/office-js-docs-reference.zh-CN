### YamlMime:UniversalReference
ms.openlocfilehash: 03af886840e9b3df7d3796ba913e024ba07753f9
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303121"
items:
- uid: excel.Excel.Image
  summary: >-
    <span data-ttu-id="d1363-101">代表工作表中的图像对象。</span><span class="sxs-lookup"><span data-stu-id="d1363-101">Represents an image object in the worksheet.</span></span>


    <span data-ttu-id="d1363-102">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1363-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.Image
  fullName: Excel.Image
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Image.context
  - excel.Excel.Image.format
  - excel.Excel.Image.id
  - excel.Excel.Image.load
  - excel.Excel.Image.load_1
  - excel.Excel.Image.load_2
  - excel.Excel.Image.shape
  - excel.Excel.Image.toJSON
- uid: excel.Excel.Image.context
  summary: <span data-ttu-id="d1363-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="d1363-103">The request context associated with the object.</span></span> <span data-ttu-id="d1363-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="d1363-104">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Image.format
  summary: >-
    <span data-ttu-id="d1363-105">返回图像的格式。</span><span class="sxs-lookup"><span data-stu-id="d1363-105">Returns the format for the image.</span></span> <span data-ttu-id="d1363-106">只读。</span><span class="sxs-lookup"><span data-stu-id="d1363-106">Read-only.</span></span>


    <span data-ttu-id="d1363-107">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1363-107">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
    return:
      type:
      - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d1363-108\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"d1363-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const image = sheet.shapes.getItem(\"Image\").image;\n    image.load(\"format\");\n    await context.sync();\n\n    console.log(\"The image's format is: \" + image.format);\n    await context.sync();\n});\n```"
- uid: excel.Excel.Image.id
  summary: >-
    <span data-ttu-id="d1363-109">代表 image 对象的形状标识符。</span><span class="sxs-lookup"><span data-stu-id="d1363-109">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="d1363-110">只读。</span><span class="sxs-lookup"><span data-stu-id="d1363-110">Read-only.</span></span>


    <span data-ttu-id="d1363-111">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1363-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Image.load
  summary: <span data-ttu-id="d1363-112">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="d1363-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1363-113">在读取属性之前, 必须先调用 "context, sync ()"。</span><span class="sxs-lookup"><span data-stu-id="d1363-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d1363-114">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="d1363-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d1363-115">`load(option?: string | string[]): Excel.Image`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="d1363-115">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d1363-116">`load(option?: { select?: string; expand?: string; }): Excel.Image`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="d1363-116">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d1363-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="d1363-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="d1363-118">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="d1363-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="d1363-119">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="d1363-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d1363-120">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="d1363-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d1363-121">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="d1363-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ImageLoadOptions
- uid: excel.Excel.Image.load_1
  summary: <span data-ttu-id="d1363-122">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="d1363-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1363-123">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="d1363-123">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d1363-124">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="d1363-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Image.load_2
  summary: <span data-ttu-id="d1363-125">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="d1363-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d1363-126">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="d1363-126">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="d1363-127">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="d1363-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Image.shape
  summary: >-
    <span data-ttu-id="d1363-128">返回图像的 shape 对象。</span><span class="sxs-lookup"><span data-stu-id="d1363-128">Returns the shape object for the image.</span></span> <span data-ttu-id="d1363-129">只读。</span><span class="sxs-lookup"><span data-stu-id="d1363-129">Read-only.</span></span>


    <span data-ttu-id="d1363-130">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d1363-130">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: shape
  fullName: shape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Image.toJSON
  summary: <span data-ttu-id="d1363-131">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。</span><span class="sxs-lookup"><span data-stu-id="d1363-131">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d1363-132">(`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)尽管原始的 Excel 图像对象是 API 对象, 但该`toJSON`方法将返回一个纯 JavaScript 对象 (类型为`Excel.Interfaces.ImageData` <!-- -->), 其中包含原始对象中任何已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="d1363-132">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ImageData;'
    return:
      type:
      - excel.Excel.Interfaces.ImageData
      description: ''
