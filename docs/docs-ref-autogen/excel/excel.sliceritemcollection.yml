### YamlMime:UniversalReference
ms.openlocfilehash: 67240d48283b5962ba4b24f7cacbb3ed805d8d07
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110226"
items:
- uid: excel.Excel.SlicerItemCollection
  summary: >-
    <span data-ttu-id="1f4be-101">表示切片器上所有切片器项目对象的集合。</span><span class="sxs-lookup"><span data-stu-id="1f4be-101">Represents a collection of all the slicer item objects on the slicer.</span></span>


    <span data-ttu-id="1f4be-102">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1f4be-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.SlicerItemCollection
  fullName: Excel.SlicerItemCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.SlicerItemCollection.context
  - excel.Excel.SlicerItemCollection.getCount
  - excel.Excel.SlicerItemCollection.getItem
  - excel.Excel.SlicerItemCollection.getItemAt
  - excel.Excel.SlicerItemCollection.getItemOrNullObject
  - excel.Excel.SlicerItemCollection.items
  - excel.Excel.SlicerItemCollection.load
  - excel.Excel.SlicerItemCollection.load_1
  - excel.Excel.SlicerItemCollection.load_2
  - excel.Excel.SlicerItemCollection.toJSON
- uid: excel.Excel.SlicerItemCollection.context
  summary: <span data-ttu-id="1f4be-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="1f4be-103">The request context associated with the object.</span></span> <span data-ttu-id="1f4be-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="1f4be-104">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.SlicerItemCollection.getCount
  summary: >-
    <span data-ttu-id="1f4be-105">返回切片器中的切片器项目数。</span><span class="sxs-lookup"><span data-stu-id="1f4be-105">Returns the number of slicer items in the slicer.</span></span>


    <span data-ttu-id="1f4be-106">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1f4be-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.SlicerItemCollection.getItem
  summary: >-
    <span data-ttu-id="1f4be-107">使用其键或名称获取切片器项目对象。</span><span class="sxs-lookup"><span data-stu-id="1f4be-107">Gets a slicer item object using its key or name.</span></span>


    <span data-ttu-id="1f4be-108">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1f4be-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="1f4be-109">切片器项的键或名称。</span><span class="sxs-lookup"><span data-stu-id="1f4be-109">The key or name of the slicer item.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerItemCollection.getItemAt
  summary: >-
    <span data-ttu-id="1f4be-110">根据其在集合中的位置获取切片器项。</span><span class="sxs-lookup"><span data-stu-id="1f4be-110">Gets a slicer item based on its position in the collection.</span></span>


    <span data-ttu-id="1f4be-111">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1f4be-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="1f4be-p102">要检索的对象的索引值。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="1f4be-p102">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.SlicerItemCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="1f4be-114">使用其键或名称获取切片器项。</span><span class="sxs-lookup"><span data-stu-id="1f4be-114">Gets a slicer item using its key or name.</span></span> <span data-ttu-id="1f4be-115">如果切片器项目不存在, 则将返回一个 null 对象。</span><span class="sxs-lookup"><span data-stu-id="1f4be-115">If the slicer item does not exist, will return a null object.</span></span>


    <span data-ttu-id="1f4be-116">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1f4be-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.SlicerItem;'
    return:
      type:
      - excel.Excel.SlicerItem
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="1f4be-117">要检索的切片器的键或名称。</span><span class="sxs-lookup"><span data-stu-id="1f4be-117">Key or name of the slicer to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.SlicerItemCollection.items
  summary: <span data-ttu-id="1f4be-118">获取此集合中的已加载子项目。</span><span class="sxs-lookup"><span data-stu-id="1f4be-118">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.SlicerItem[];'
    return:
      type:
      - Excel.SlicerItem[]
- uid: excel.Excel.SlicerItemCollection.load
  summary: <span data-ttu-id="1f4be-119">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="1f4be-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1f4be-120">在读取属性之前, 必须先调用 "context, sync ()"。</span><span class="sxs-lookup"><span data-stu-id="1f4be-120">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1f4be-121">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="1f4be-121">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1f4be-122">`load(option?: string | string[]): Excel.SlicerItemCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="1f4be-122">`load(option?: string | string[]): Excel.SlicerItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="1f4be-123">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItemCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="1f4be-123">`load(option?: { select?: string; expand?: string; }): Excel.SlicerItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1f4be-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItemCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="1f4be-124">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="1f4be-125">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="1f4be-125">It is similar to the preceding signature.</span></span> <span data-ttu-id="1f4be-126">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="1f4be-126">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1f4be-127">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="1f4be-127">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1f4be-128">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="1f4be-128">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SlicerItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.SlicerItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.SlicerItemCollection.load_1
  summary: <span data-ttu-id="1f4be-129">对命令进行排队, 以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="1f4be-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1f4be-130">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="1f4be-130">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="1f4be-131">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="1f4be-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.SlicerItemCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerItemCollection;'
    return:
      type:
      - excel.Excel.SlicerItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.SlicerItemCollection.toJSON
  summary: <span data-ttu-id="1f4be-132">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到`JSON.stringify()` <!-- -->时提供更有用的输出。</span><span class="sxs-lookup"><span data-stu-id="1f4be-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="1f4be-133">(`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。)虽然原始`Excel.SlicerItemCollection`对象是 API 对象, 但该`toJSON`方法返回一个纯 JavaScript 对象 (类型为`Excel.Interfaces.SlicerItemCollectionData` <!-- -->), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="1f4be-133">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerItemCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerItemCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.SlicerItemCollectionData
      description: ''
