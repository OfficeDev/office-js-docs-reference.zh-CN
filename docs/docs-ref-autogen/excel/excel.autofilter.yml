### YamlMime:UniversalReference
items:
  - uid: excel.Excel.AutoFilter
    summary: |-
      <span data-ttu-id="fbd48-101">代表自动筛选对象。</span><span class="sxs-lookup"><span data-stu-id="fbd48-101">Represents the AutoFilter object.</span></span> <span data-ttu-id="fbd48-102">"自动筛选" 将 Excel 列中的值转换为基于单元格内容的特定筛选器。</span><span class="sxs-lookup"><span data-stu-id="fbd48-102">AutoFilter turns the values in Excel column into specific filters based on the cell contents.</span></span>

      <span data-ttu-id="fbd48-103">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-103">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.AutoFilter
    fullName: Excel.AutoFilter
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.AutoFilter.apply
      - excel.Excel.AutoFilter.clearCriteria
      - excel.Excel.AutoFilter.context
      - excel.Excel.AutoFilter.criteria
      - excel.Excel.AutoFilter.enabled
      - excel.Excel.AutoFilter.getRange
      - excel.Excel.AutoFilter.getRangeOrNullObject
      - excel.Excel.AutoFilter.isDataFiltered
      - excel.Excel.AutoFilter.load
      - excel.Excel.AutoFilter.load_1
      - excel.Excel.AutoFilter.load_2
      - excel.Excel.AutoFilter.reapply
      - excel.Excel.AutoFilter.remove
      - excel.Excel.AutoFilter.toJSON
  - uid: excel.Excel.AutoFilter.apply
    summary: |-
      <span data-ttu-id="fbd48-104">将自动筛选应用于某一区域。</span><span class="sxs-lookup"><span data-stu-id="fbd48-104">Applies the AutoFilter to a range.</span></span> <span data-ttu-id="fbd48-105">如果指定了列索引和筛选条件, 这将筛选列。</span><span class="sxs-lookup"><span data-stu-id="fbd48-105">This filters the column if column index and filter criteria are specified.</span></span>

      <span data-ttu-id="fbd48-106">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'apply(range, columnIndex, criteria)'
    fullName: 'apply(range, columnIndex, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(range: Range | string, columnIndex?: number, criteria?: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fbd48-107">示例</span><span class="sxs-lookup"><span data-stu-id="fbd48-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const farmData = sheet.getUsedRange();

              // This filter will only show the rows with the top 25% of values in column 3.
              sheet.autoFilter.apply(farmData, 3, { criterion1: "25", filterOn: Excel.FilterOn.topPercent });
              await context.sync();
          });
          ```
      parameters:
        - id: range
          description: <span data-ttu-id="fbd48-108">将应用自动筛选的范围。</span><span class="sxs-lookup"><span data-stu-id="fbd48-108">The range over which the AutoFilter will apply on.</span></span>
          type:
            - Range | string
        - id: columnIndex
          description: <span data-ttu-id="fbd48-109">将自动筛选应用于的从零开始的列索引。</span><span class="sxs-lookup"><span data-stu-id="fbd48-109">The zero-based column index to which the AutoFilter is applied.</span></span>
          type:
            - number
        - id: criteria
          description: <span data-ttu-id="fbd48-110">筛选条件。</span><span class="sxs-lookup"><span data-stu-id="fbd48-110">The filter criteria.</span></span>
          type:
            - excel.Excel.FilterCriteria
  - uid: excel.Excel.AutoFilter.clearCriteria
    summary: |-
      <span data-ttu-id="fbd48-111">清除自动筛选的筛选条件。</span><span class="sxs-lookup"><span data-stu-id="fbd48-111">Clears the filter criteria of the AutoFilter.</span></span>

      <span data-ttu-id="fbd48-112">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearCriteria()
    fullName: clearCriteria()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearCriteria(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.context
    summary: <span data-ttu-id="fbd48-113">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="fbd48-113">The request context associated with the object.</span></span> <span data-ttu-id="fbd48-114">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="fbd48-114">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.AutoFilter.criteria
    summary: |-
      <span data-ttu-id="fbd48-115">一个包含自动筛选区域中的所有筛选条件的数组。</span><span class="sxs-lookup"><span data-stu-id="fbd48-115">An array that holds all the filter criteria in the autofiltered range.</span></span> <span data-ttu-id="fbd48-116">只读。</span><span class="sxs-lookup"><span data-stu-id="fbd48-116">Read-Only.</span></span>

      <span data-ttu-id="fbd48-117">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-117">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria[];'
      return:
        type:
          - 'Excel.FilterCriteria[]'
  - uid: excel.Excel.AutoFilter.enabled
    summary: |-
      <span data-ttu-id="fbd48-118">指示是否启用了自动筛选。</span><span class="sxs-lookup"><span data-stu-id="fbd48-118">Indicates if the AutoFilter is enabled or not.</span></span> <span data-ttu-id="fbd48-119">只读。</span><span class="sxs-lookup"><span data-stu-id="fbd48-119">Read-Only.</span></span>

      <span data-ttu-id="fbd48-120">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enabled
    fullName: enabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly enabled: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.AutoFilter.getRange
    summary: |-
      <span data-ttu-id="fbd48-121">返回 Range 对象，该对象表示“自动筛选”应用的区域。</span><span class="sxs-lookup"><span data-stu-id="fbd48-121">Returns the Range object that represents the range to which the AutoFilter applies.</span></span>

      <span data-ttu-id="fbd48-122">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.AutoFilter.getRangeOrNullObject
    summary: |-
      <span data-ttu-id="fbd48-123">返回 Range 对象，该对象表示“自动筛选”应用的区域。</span><span class="sxs-lookup"><span data-stu-id="fbd48-123">Returns the Range object that represents the range to which the AutoFilter applies.</span></span> <span data-ttu-id="fbd48-124">如果没有与自动筛选器关联的 Range 对象, 则此方法返回 null 对象。</span><span class="sxs-lookup"><span data-stu-id="fbd48-124">If there is no Range object associated with the AutoFilter, this method returns a null object.</span></span>

      <span data-ttu-id="fbd48-125">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.AutoFilter.isDataFiltered
    summary: |-
      <span data-ttu-id="fbd48-126">指示自动筛选是否具有筛选条件。</span><span class="sxs-lookup"><span data-stu-id="fbd48-126">Indicates if the AutoFilter has filter criteria.</span></span> <span data-ttu-id="fbd48-127">只读。</span><span class="sxs-lookup"><span data-stu-id="fbd48-127">Read-Only.</span></span>

      <span data-ttu-id="fbd48-128">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-128">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isDataFiltered
    fullName: isDataFiltered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isDataFiltered: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.AutoFilter.load
    summary: <span data-ttu-id="fbd48-129">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="fbd48-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fbd48-130">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="fbd48-130">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="fbd48-131">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="fbd48-131">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="fbd48-132">`load(option?: string | string[]): Excel.AutoFilter`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="fbd48-132">`load(option?: string | string[]): Excel.AutoFilter` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="fbd48-133">`load(option?: { select?: string; expand?: string; }): Excel.AutoFilter`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="fbd48-133">`load(option?: { select?: string; expand?: string; }): Excel.AutoFilter` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="fbd48-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.AutoFilter`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="fbd48-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.AutoFilter` - Only available on collection types.</span></span> <span data-ttu-id="fbd48-135">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="fbd48-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="fbd48-136">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="fbd48-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="fbd48-137">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="fbd48-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="fbd48-138">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="fbd48-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.AutoFilterLoadOptions): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.AutoFilterLoadOptions
  - uid: excel.Excel.AutoFilter.load_1
    summary: '<span data-ttu-id="fbd48-139">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="fbd48-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fbd48-140">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="fbd48-140">You must call `context.sync()` before reading the properties.</span></span>'
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="fbd48-141">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="fbd48-141">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.AutoFilter.load_2
    summary: '<span data-ttu-id="fbd48-142">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="fbd48-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fbd48-143">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="fbd48-143">You must call `context.sync()` before reading the properties.</span></span>'
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="fbd48-144">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="fbd48-144">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.AutoFilter.reapply
    summary: |-
      <span data-ttu-id="fbd48-145">应用当前位于区域上的指定 Autofilter 对象。</span><span class="sxs-lookup"><span data-stu-id="fbd48-145">Applies the specified Autofilter object currently on the range.</span></span>

      <span data-ttu-id="fbd48-146">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.remove
    summary: |-
      <span data-ttu-id="fbd48-147">删除区域的自动筛选。</span><span class="sxs-lookup"><span data-stu-id="fbd48-147">Removes the AutoFilter for the range.</span></span>

      <span data-ttu-id="fbd48-148">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fbd48-148">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: remove()
    fullName: remove()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.toJSON
    summary: '<span data-ttu-id="fbd48-149">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="fbd48-149">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="fbd48-150">.</span><span class="sxs-lookup"><span data-stu-id="fbd48-150"></span></span> <span data-ttu-id="fbd48-151">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="fbd48-151"></span></span><!-- --><span data-ttu-id="fbd48-152">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel. 自动筛选对象是一个 API 对象, `toJSON`但该方法返回一个简单的 JavaScript 对象 (类型为`Excel.Interfaces.AutoFilterData`</span><span class="sxs-lookup"><span data-stu-id="fbd48-152">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.AutoFilter object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.AutoFilterData`</span></span><!-- --><span data-ttu-id="fbd48-153">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="fbd48-153">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.AutoFilterData;'
      return:
        type:
          - excel.Excel.Interfaces.AutoFilterData
        description: ''