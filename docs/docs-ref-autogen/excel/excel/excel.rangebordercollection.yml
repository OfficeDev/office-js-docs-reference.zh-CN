### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeBorderCollection:class'
    summary: |-
      表示构成区域边框的 Border 对象。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeBorderCollection
    fullName: Excel.RangeBorderCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeBorderCollection#context:member'
      - 'excel!Excel.RangeBorderCollection#count:member'
      - 'excel!Excel.RangeBorderCollection#getItem:member(1)'
      - 'excel!Excel.RangeBorderCollection#getItem:member(2)'
      - 'excel!Excel.RangeBorderCollection#getItemAt:member(1)'
      - 'excel!Excel.RangeBorderCollection#items:member'
      - 'excel!Excel.RangeBorderCollection#load:member(1)'
      - 'excel!Excel.RangeBorderCollection#load:member(2)'
      - 'excel!Excel.RangeBorderCollection#load:member(3)'
      - 'excel!Excel.RangeBorderCollection#tintAndShade:member'
      - 'excel!Excel.RangeBorderCollection#toJSON:member(1)'
  - uid: 'excel!Excel.RangeBorderCollection#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeBorderCollection#count:member'
    summary: |-
      集合中的 border 对象数量。 只读。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeBorderCollection#getItem:member(1)'
    summary: |-
      使用其名称获取 border 对象

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borderName = 'EdgeTop';
              var border = range.format.borders.getItem(borderName);
              border.load('style');
              return ctx.sync().then(function() {
                      console.log(border.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: 要检索的 border 对象的索引值。 有关详细信息，请参阅 BorderIndex。
          type:
            - 'excel!Excel.BorderIndex:enum'
  - uid: 'excel!Excel.RangeBorderCollection#getItem:member(2)'
    summary: |-
      使用其名称获取 border 对象

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(indexString)
    fullName: getItem(indexString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: ''
      parameters:
        - id: indexString
          description: 要检索的 border 对象的索引值。 有关详细信息，请参阅 BorderIndex。
          type:
            - '"EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"'
  - uid: 'excel!Excel.RangeBorderCollection#getItemAt:member(1)'
    summary: |-
      使用其索引获取 border 对象

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var border = range.format.borders.getItemAt(0);
              border.load('sideIndex');
              return ctx.sync().then(function() {
                  console.log(border.sideIndex);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: 要检索的对象的索引值。 从零开始编制索引。
          type:
            - number
  - uid: 'excel!Excel.RangeBorderCollection#items:member'
    summary: 获取此集合中已加载的子项。
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.RangeBorder[];'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection#items~0:complex'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
    remarks: |-
      除了此签名之外，此方法还具有以下签名：

      `load(option?: string | string[]): Excel.RangeBorderCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。

      `load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection`-仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.RangeBorderCollection#load~0:complex'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borders = range.format.borders;
              border.load('items');
              return ctx.sync().then(function() {
                  console.log(borders.count);
                  for (var i = 0; i < borders.items.length; i++)
                  {
                      console.log(borders.items[i].sideIndex);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.RangeBorderCollection#tintAndShade:member'
    summary: |-
      返回或设置一个使区域边框的颜色变亮或变暗的双精度数值，该值介于 -1（最暗）与 1（最亮）之间，初始颜色为 0。 空值表示整个边框集合没有统一的 tintAndShade 设置。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: tintAndShade
    fullName: tintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tintAndShade: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeBorderCollection#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.RangeBorderCollection`对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.RangeBorderCollectionData`<!-- -->），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RangeBorderCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeBorder:class'
    name: Excel.RangeBorder
  - uid: 'excel!Excel.BorderIndex:enum'
    name: Excel.BorderIndex
  - uid: 'excel!Excel.RangeBorderCollection#items~0:complex'
    name: 'Excel.RangeBorder[]'
    fullName: 'Excel.RangeBorder[]'
    spec.typeScript:
      - uid: 'excel!Excel.RangeBorder:class'
        name: Excel.RangeBorder
        fullName: Excel.RangeBorder
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RangeBorderCollection:class'
    name: Excel.RangeBorderCollection
  - uid: 'excel!Excel.RangeBorderCollection#load~0:complex'
    name: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.RangeBorderCollectionLoadOptions:interface'
        name: Excel.Interfaces.RangeBorderCollectionLoadOptions
        fullName: Excel.Interfaces.RangeBorderCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.RangeBorderCollectionData:interface'
    name: Excel.Interfaces.RangeBorderCollectionData