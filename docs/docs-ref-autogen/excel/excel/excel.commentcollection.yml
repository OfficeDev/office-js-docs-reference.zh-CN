### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CommentCollection:class'
    summary: |-
      表示属于工作簿的注释对象的集合。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.CommentCollection
    fullName: Excel.CommentCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.CommentCollection#add:member(1)'
      - 'excel!Excel.CommentCollection#add:member(2)'
      - 'excel!Excel.CommentCollection#context:member'
      - 'excel!Excel.CommentCollection#getCount:member(1)'
      - 'excel!Excel.CommentCollection#getItem:member(1)'
      - 'excel!Excel.CommentCollection#getItemAt:member(1)'
      - 'excel!Excel.CommentCollection#getItemByCell:member(1)'
      - 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
      - 'excel!Excel.CommentCollection#items:member'
      - 'excel!Excel.CommentCollection#load:member(1)'
      - 'excel!Excel.CommentCollection#load:member(2)'
      - 'excel!Excel.CommentCollection#load:member(3)'
      - 'excel!Excel.CommentCollection#onAdded:member'
      - 'excel!Excel.CommentCollection#onChanged:member'
      - 'excel!Excel.CommentCollection#onDeleted:member'
      - 'excel!Excel.CommentCollection#toJSON:member(1)'
  - uid: 'excel!Excel.CommentCollection#add:member(1)'
    summary: |-
      使用给定单元格上的给定内容创建新批注。 `InvalidArgument`如果提供的范围大于一个单元格，则会引发错误。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'add(cellAddress, content, contentType)'
    fullName: 'add(cellAddress, content, contentType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(cellAddress: Range | string, content: CommentRichContent | string, contentType?: Excel.ContentType): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/12-comment/comment-basics.yaml
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Comments");

              // Note that an InvalidArgument error will be thrown if multiple cells passed to `comment.add`.
              sheet.comments.add("A2", "TODO: add data.");
              await context.sync();
          });
          ```
      parameters:
        - id: cellAddress
          description: 向其中添加批注的单元格。 它可以是一个 Range 对象或一个字符串。 如果是字符串，则必须包含完整的地址，包括工作表名称。 `InvalidArgument`如果提供的范围大于一个单元格，则会引发错误。
          type:
            - 'excel!Excel.CommentCollection#add~0:complex'
        - id: content
          description: '批注的内容。 它可以是 string 或 CommentRichContent 对象。 字符串用于纯文本。 CommentRichContent 对象允许其他注释功能，如提到。 \[Api 集： ExcelApi 1.10 for string，1.11 （针对 CommentRichContent 对象）\]'
          type:
            - 'excel!Excel.CommentCollection#add~1:complex'
        - id: contentType
          description: '可选。 包含在注释中的内容类型。 默认值为枚举 `ContentType.Plain`<!-- -->. \[Api 集：枚举 ContentType 的 ExcelApi 1.10。纯，1.11 用于枚举 ContentType。提及\]'
          type:
            - 'excel!Excel.ContentType:enum'
  - uid: 'excel!Excel.CommentCollection#add:member(2)'
    summary: |-
      使用给定单元格上的给定内容创建新批注。 `InvalidArgument`如果提供的范围大于一个单元格，则会引发错误。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'add(cellAddress, content, contentTypeString)'
    fullName: 'add(cellAddress, content, contentTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(cellAddress: Range | string, content: CommentRichContent | string, contentTypeString?: "Plain" | "Mention"): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: cellAddress
          description: 向其中添加批注的单元格。 它可以是一个 Range 对象或一个字符串。 如果是字符串，则必须包含完整的地址，包括工作表名称。 `InvalidArgument`如果提供的范围大于一个单元格，则会引发错误。
          type:
            - 'excel!Excel.CommentCollection#add~2:complex'
        - id: content
          description: '批注的内容。 它可以是 string 或 CommentRichContent 对象。 字符串用于纯文本。 CommentRichContent 对象允许其他注释功能，如提到。 \[Api 集： ExcelApi 1.10 for string，1.11 （针对 CommentRichContent 对象）\]'
          type:
            - 'excel!Excel.CommentCollection#add~3:complex'
        - id: contentTypeString
          description: '可选。 包含在注释中的内容类型。 默认值为枚举 `ContentType.Plain`<!-- -->. \[Api 集：枚举 ContentType 的 ExcelApi 1.10。纯，1.11 用于枚举 ContentType。提及\]'
          type:
            - '"Plain" | "Mention"'
  - uid: 'excel!Excel.CommentCollection#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.CommentCollection#getCount:member(1)'
    summary: |-
      获取集合中的批注数量。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.CommentCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.CommentCollection#getItem:member(1)'
    summary: |-
      根据其 ID 从集合中获取批注。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(commentId)
    fullName: getItem(commentId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(commentId: string): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: commentId
          description: 注释的标识符。
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#getItemAt:member(1)'
    summary: |-
      根据其位置从集合中获取批注。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: index
          description: 要检索的对象的索引值。 从零开始编制索引。
          type:
            - number
  - uid: 'excel!Excel.CommentCollection#getItemByCell:member(1)'
    summary: |-
      从指定单元格获取的批注。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemByCell(cellAddress)
    fullName: getItemByCell(cellAddress)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByCell(cellAddress: Range | string): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: cellAddress
          description: 批注所在的单元格。 它可以是一个 Range 对象或一个字符串。 如果是字符串，则必须包含完整的地址，包括工作表名称。 `InvalidArgument`如果提供的范围大于一个单元格，则会引发错误。
          type:
            - 'excel!Excel.CommentCollection#getItemByCell~0:complex'
  - uid: 'excel!Excel.CommentCollection#getItemByReplyId:member(1)'
    summary: |-
      获取给定答复连接到的注释。

      \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemByReplyId(replyId)
    fullName: getItemByReplyId(replyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemByReplyId(replyId: string): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: replyId
          description: 批注答复的标识符。
          type:
            - string
  - uid: 'excel!Excel.CommentCollection#items:member'
    summary: 获取此集合中已加载的子项。
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Comment[];'
      return:
        type:
          - 'excel!Excel.CommentCollection#items~0:complex'
  - uid: 'excel!Excel.CommentCollection#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.CommentCollection#load~0:complex'
  - uid: 'excel!Excel.CommentCollection#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.CommentCollection#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.CommentCollection;'
      return:
        type:
          - 'excel!Excel.CommentCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.CommentCollection#onAdded:member'
    summary: |-
      添加注释时发生。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.CommentAddedEventArgs>;'
      return:
        type:
          - 'excel!Excel.CommentCollection#onAdded~0:complex'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/30-events/events-comment-event-handler.yaml
          await Excel.run(async (context) => {
              const comments = context.workbook.worksheets.getActiveWorksheet().comments;

              // Register the onAdded, onChanged, and onDeleted comment event handlers.
              comments.onAdded.add(commentAdded);
              comments.onChanged.add(commentChanged);
              comments.onDeleted.add(commentDeleted);

              await context.sync();

              console.log("Added event handlers for when comments are added, changed, or deleted.");
          });
          ```
          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/30-events/events-comment-event-handler.yaml
          async function commentAdded(event: Excel.CommentAddedEventArgs) {
              await Excel.run(async (context) => {
                  // Retrieve the added comment using the comment ID.
                  // Note: This method assumes only a single comment is added at a time. 
                  const addedComment = context.workbook.comments.getItem(event.commentDetails[0].commentId);

                  // Load the added comment's data.
                  addedComment.load(["content", "authorName", "creationDate"]);

                  await context.sync();

                  // Print out the added comment's data.
                  console.log(`A comment was added:`);
                  console.log(`    ID: ${event.commentDetails[0].commentId}`);
                  console.log(`    Comment content:${addedComment.content}`);
                  console.log(`    Comment author:${addedComment.authorName}`);
                  console.log(`    Creation date:${addedComment.creationDate}`);
              });
          }
          ```
  - uid: 'excel!Excel.CommentCollection#onChanged:member'
    summary: |-
      当注释集合中的批注或答复发生更改时发生，包括答复被删除的时间。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.CommentChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.CommentCollection#onChanged~0:complex'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/30-events/events-comment-event-handler.yaml
          await Excel.run(async (context) => {
              const comments = context.workbook.worksheets.getActiveWorksheet().comments;

              // Register the onAdded, onChanged, and onDeleted comment event handlers.
              comments.onAdded.add(commentAdded);
              comments.onChanged.add(commentChanged);
              comments.onDeleted.add(commentDeleted);

              await context.sync();

              console.log("Added event handlers for when comments are added, changed, or deleted.");
          });
          ```
          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/30-events/events-comment-event-handler.yaml
          async function commentChanged(event: Excel.CommentChangedEventArgs) {
              await Excel.run(async (context) => {
                  // Retrieve the changed comment using the comment ID.
                  // Note: This method assumes only a single comment is changed at a time. 
                  const changedComment = context.workbook.comments.getItem(event.commentDetails[0].commentId);

                  // Load the changed comment's data.
                  changedComment.load(["content", "authorName", "creationDate"]);

                  await context.sync();

                  // Print out the changed comment's data.
                  console.log(`A comment was changed:`);
                  console.log(`    ID: ${event.commentDetails[0].commentId}`);
                  console.log(`    Updated comment content: ${changedComment.content}`);
                  console.log(`    Comment author: ${changedComment.authorName}`);
                  console.log(`    Creation date: ${changedComment.creationDate}`);
              });
          }
          ```
  - uid: 'excel!Excel.CommentCollection#onDeleted:member'
    summary: |-
      在注释集合中删除批注时发生。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.CommentDeletedEventArgs>;'
      return:
        type:
          - 'excel!Excel.CommentCollection#onDeleted~0:complex'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/30-events/events-comment-event-handler.yaml
          await Excel.run(async (context) => {
              const comments = context.workbook.worksheets.getActiveWorksheet().comments;

              // Register the onAdded, onChanged, and onDeleted comment event handlers.
              comments.onAdded.add(commentAdded);
              comments.onChanged.add(commentChanged);
              comments.onDeleted.add(commentDeleted);

              await context.sync();

              console.log("Added event handlers for when comments are added, changed, or deleted.");
          });
          ```
          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/30-events/events-comment-event-handler.yaml
          async function commentDeleted(event: Excel.CommentDeletedEventArgs) {
              await Excel.run(async (context) => {
                  // Print out the deleted comment's ID.
                  // Note: This method assumes only a single comment is deleted at a time. 
                  console.log(`A comment was deleted:`);
                  console.log(`    ID: ${event.commentDetails[0].commentId}`);
              });
          }
          ```
  - uid: 'excel!Excel.CommentCollection#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) 而原始 `Excel.CommentCollection` 对象是 API 对象，则该 `toJSON` 方法返回一个纯 JavaScript 对象 (类型为 `Excel.Interfaces.CommentCollectionData`<!-- -->包含集合项中任何已加载属性的浅表的 "items" 数组 ) 。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.CommentCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.Comment:class'
    name: Excel.Comment
  - uid: 'excel!Excel.CommentCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.CommentCollection#add~1:complex'
    name: CommentRichContent | string
    fullName: Excel.CommentRichContent | string
    spec.typeScript:
      - uid: 'excel!Excel.CommentRichContent:interface'
        name: CommentRichContent
        fullName: Excel.CommentRichContent
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.ContentType:enum'
    name: Excel.ContentType
  - uid: 'excel!Excel.CommentCollection#add~2:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.CommentCollection#add~3:complex'
    name: CommentRichContent | string
    fullName: Excel.CommentRichContent | string
    spec.typeScript:
      - uid: 'excel!Excel.CommentRichContent:interface'
        name: CommentRichContent
        fullName: Excel.CommentRichContent
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.CommentCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.CommentCollection#getItemByCell~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.CommentCollection#items~0:complex'
    name: 'Excel.Comment[]'
    fullName: 'Excel.Comment[]'
    spec.typeScript:
      - uid: 'excel!Excel.Comment:class'
        name: Excel.Comment
        fullName: Excel.Comment
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentCollection:class'
    name: Excel.CommentCollection
  - uid: 'excel!Excel.CommentCollection#load~0:complex'
    name: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.CommentCollectionLoadOptions:interface'
        name: Excel.Interfaces.CommentCollectionLoadOptions
        fullName: Excel.Interfaces.CommentCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.CommentCollection#onAdded~0:complex'
    name: OfficeExtension.EventHandlers<Excel.CommentAddedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.CommentAddedEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.CommentAddedEventArgs:interface'
        name: Excel.CommentAddedEventArgs
        fullName: Excel.CommentAddedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.CommentCollection#onChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.CommentChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.CommentChangedEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.CommentChangedEventArgs:interface'
        name: Excel.CommentChangedEventArgs
        fullName: Excel.CommentChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.CommentCollection#onDeleted~0:complex'
    name: OfficeExtension.EventHandlers<Excel.CommentDeletedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.CommentDeletedEventArgs>
    spec.typeScript:
      - uid: 'office!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.CommentDeletedEventArgs:interface'
        name: Excel.CommentDeletedEventArgs
        fullName: Excel.CommentDeletedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.CommentCollectionData:interface'
    name: Excel.Interfaces.CommentCollectionData