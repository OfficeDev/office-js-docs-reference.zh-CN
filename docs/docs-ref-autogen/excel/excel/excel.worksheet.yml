### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Worksheet
    summary: |-
      <span data-ttu-id="707ec-101">Excel 工作表是由单元格组成的网格。</span><span class="sxs-lookup"><span data-stu-id="707ec-101">An Excel worksheet is a grid of cells.</span></span> <span data-ttu-id="707ec-102">它可以包含数据、表、图表等。若要了解有关工作表对象模型的详细信息, 请参阅[使用 Excel JAVASCRIPT API 处理工作表](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets)</span><span class="sxs-lookup"><span data-stu-id="707ec-102">It can contain data, tables, charts, etc. To learn more about the worksheet object model, read [Work with worksheets using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-worksheets)</span></span><!-- --><span data-ttu-id="707ec-103">.</span><span class="sxs-lookup"><span data-stu-id="707ec-103"></span></span>

      <span data-ttu-id="707ec-104">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Worksheet
    fullName: Excel.Worksheet
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Worksheet.activate
      - excel.Excel.Worksheet.autoFilter
      - excel.Excel.Worksheet.calculate
      - excel.Excel.Worksheet.charts
      - excel.Excel.Worksheet.comments
      - excel.Excel.Worksheet.context
      - excel.Excel.Worksheet.copy
      - excel.Excel.Worksheet.copy_1
      - excel.Excel.Worksheet.delete
      - excel.Excel.Worksheet.enableCalculation
      - excel.Excel.Worksheet.findAll
      - excel.Excel.Worksheet.findAllOrNullObject
      - excel.Excel.Worksheet.freezePanes
      - excel.Excel.Worksheet.getCell
      - excel.Excel.Worksheet.getNext
      - excel.Excel.Worksheet.getNextOrNullObject
      - excel.Excel.Worksheet.getPrevious
      - excel.Excel.Worksheet.getPreviousOrNullObject
      - excel.Excel.Worksheet.getRange
      - excel.Excel.Worksheet.getRangeByIndexes
      - excel.Excel.Worksheet.getRanges
      - excel.Excel.Worksheet.getUsedRange
      - excel.Excel.Worksheet.getUsedRangeOrNullObject
      - excel.Excel.Worksheet.horizontalPageBreaks
      - excel.Excel.Worksheet.id
      - excel.Excel.Worksheet.load
      - excel.Excel.Worksheet.load_1
      - excel.Excel.Worksheet.load_2
      - excel.Excel.Worksheet.name
      - excel.Excel.Worksheet.names
      - excel.Excel.Worksheet.onActivated
      - excel.Excel.Worksheet.onCalculated
      - excel.Excel.Worksheet.onChanged
      - excel.Excel.Worksheet.onColumnSorted
      - excel.Excel.Worksheet.onDeactivated
      - excel.Excel.Worksheet.onFiltered
      - excel.Excel.Worksheet.onFormatChanged
      - excel.Excel.Worksheet.onRowHiddenChanged
      - excel.Excel.Worksheet.onRowSorted
      - excel.Excel.Worksheet.onSelectionChanged
      - excel.Excel.Worksheet.onSingleClicked
      - excel.Excel.Worksheet.pageLayout
      - excel.Excel.Worksheet.pivotTables
      - excel.Excel.Worksheet.position
      - excel.Excel.Worksheet.protection
      - excel.Excel.Worksheet.replaceAll
      - excel.Excel.Worksheet.set
      - excel.Excel.Worksheet.set_1
      - excel.Excel.Worksheet.shapes
      - excel.Excel.Worksheet.showGridlines
      - excel.Excel.Worksheet.showHeadings
      - excel.Excel.Worksheet.showOutlineLevels
      - excel.Excel.Worksheet.slicers
      - excel.Excel.Worksheet.standardHeight
      - excel.Excel.Worksheet.standardWidth
      - excel.Excel.Worksheet.tabColor
      - excel.Excel.Worksheet.tables
      - excel.Excel.Worksheet.toJSON
      - excel.Excel.Worksheet.verticalPageBreaks
      - excel.Excel.Worksheet.visibility
  - uid: excel.Excel.Worksheet.activate
    summary: |-
      <span data-ttu-id="707ec-105">在 Excel UI 中激活工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-105">Activate the worksheet in the Excel UI.</span></span>

      <span data-ttu-id="707ec-106">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: activate()
    fullName: activate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'activate(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-107">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.activate();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Worksheet.autoFilter
    summary: |-
      <span data-ttu-id="707ec-108">表示工作表的 AutoFilter 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-108">Represents the AutoFilter object of the worksheet.</span></span> <span data-ttu-id="707ec-109">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-109">Read-Only.</span></span>

      <span data-ttu-id="707ec-110">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoFilter
    fullName: autoFilter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoFilter: Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-111">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-111">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const farmData = sheet.getUsedRange();

              // This filter will only show the rows with the top 25% of values in column 3.
              sheet.autoFilter.apply(farmData, 3, { criterion1: "25", filterOn: Excel.FilterOn.topPercent });
              await context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.calculate
    summary: |-
      <span data-ttu-id="707ec-112">计算工作表上的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="707ec-112">Calculates all cells on a worksheet.</span></span>

      <span data-ttu-id="707ec-113">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-113">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: calculate(markAllDirty)
    fullName: calculate(markAllDirty)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'calculate(markAllDirty: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: markAllDirty
          description: '<span data-ttu-id="707ec-114">如果为 True, 则将全部标记为已更新。</span><span class="sxs-lookup"><span data-stu-id="707ec-114">True, to mark all as dirty.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.charts
    summary: |-
      <span data-ttu-id="707ec-115">返回属于工作表的图表的集合。</span><span class="sxs-lookup"><span data-stu-id="707ec-115">Returns collection of charts that are part of the worksheet.</span></span> <span data-ttu-id="707ec-116">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-116">Read-only.</span></span>

      <span data-ttu-id="707ec-117">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: charts
    fullName: charts
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly charts: Excel.ChartCollection;'
      return:
        type:
          - excel.Excel.ChartCollection
  - uid: excel.Excel.Worksheet.comments
    summary: |-
      <span data-ttu-id="707ec-118">返回工作表上的所有 Comments 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="707ec-118">Returns a collection of all the Comments objects on the worksheet.</span></span> <span data-ttu-id="707ec-119">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-119">Read-only.</span></span>

      <span data-ttu-id="707ec-120">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: comments
    fullName: comments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly comments: Excel.CommentCollection;'
      return:
        type:
          - excel.Excel.CommentCollection
  - uid: excel.Excel.Worksheet.context
    summary: <span data-ttu-id="707ec-121">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="707ec-121">The request context associated with the object.</span></span> <span data-ttu-id="707ec-122">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="707ec-122">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Worksheet.copy
    summary: |-
      <span data-ttu-id="707ec-123">复制工作表并将其置于指定位置。</span><span class="sxs-lookup"><span data-stu-id="707ec-123">Copy a worksheet and place it at the specified position.</span></span> <span data-ttu-id="707ec-124">返回复制的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-124">Return the copied worksheet.</span></span>

      <span data-ttu-id="707ec-125">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-125">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'copy(positionType, relativeTo)'
    fullName: 'copy(positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copy(positionType?: Excel.WorksheetPositionType, relativeTo?: Excel.Worksheet): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-126">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-126">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              let myWorkbook = context.workbook;
              let sampleSheet = myWorkbook.worksheets.getActiveWorksheet();
              let copiedSheet = sampleSheet.copy("End")

              sampleSheet.load("name");
              copiedSheet.load("name");

              await context.sync();

              console.log("'" + sampleSheet.name + "' was copied to '" + copiedSheet.name + "'")
          });
          ```
      parameters:
        - id: positionType
          description: <span data-ttu-id="707ec-127">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-127">Optional.</span></span>
          type:
            - excel.Excel.WorksheetPositionType
        - id: relativeTo
          description: <span data-ttu-id="707ec-128">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-128">Optional.</span></span>
          type:
            - excel.Excel.Worksheet
  - uid: excel.Excel.Worksheet.copy_1
    summary: |-
      <span data-ttu-id="707ec-129">复制工作表并将其置于指定位置。</span><span class="sxs-lookup"><span data-stu-id="707ec-129">Copy a worksheet and place it at the specified position.</span></span> <span data-ttu-id="707ec-130">返回复制的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-130">Return the copied worksheet.</span></span>

      <span data-ttu-id="707ec-131">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-131">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'copy(positionTypeString, relativeTo)'
    fullName: 'copy(positionTypeString, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copy(positionTypeString?: "None" | "Before" | "After" | "Beginning" | "End", relativeTo?: Excel.Worksheet): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: positionTypeString
          description: <span data-ttu-id="707ec-132">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-132">Optional.</span></span>
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: <span data-ttu-id="707ec-133">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-133">Optional.</span></span>
          type:
            - excel.Excel.Worksheet
  - uid: excel.Excel.Worksheet.delete
    summary: |-
      <span data-ttu-id="707ec-134">从工作簿中删除工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-134">Deletes the worksheet from the workbook.</span></span> <span data-ttu-id="707ec-135">请注意, 如果工作表的可见性设置为 "VeryHidden", 则删除操作将失败, `InvalidOperation`并出现异常。</span><span class="sxs-lookup"><span data-stu-id="707ec-135">Note that if the worksheet's visibility is set to "VeryHidden", the delete operation will fail with an `InvalidOperation` exception.</span></span> <span data-ttu-id="707ec-136">应首先将其可见性更改为隐藏或可见, 然后再将其删除。</span><span class="sxs-lookup"><span data-stu-id="707ec-136">You should first change its visibility to hidden or visible before deleting it.</span></span>

      <span data-ttu-id="707ec-137">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-137">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-138">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-138">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Worksheet.enableCalculation
    summary: |-
      <span data-ttu-id="707ec-139">获取或设置工作表的 enableCalculation 属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-139">Gets or sets the enableCalculation property of the worksheet.</span></span> <span data-ttu-id="707ec-140">如此如果 Excel 根据需要重新计算工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-140">True if Excel recalculates the worksheet when necessary.</span></span> <span data-ttu-id="707ec-141">如果 Excel 不重新计算工作表，则该值为 False。</span><span class="sxs-lookup"><span data-stu-id="707ec-141">False if Excel doesn't recalculate the sheet.</span></span>

      <span data-ttu-id="707ec-142">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-142">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: enableCalculation
    fullName: enableCalculation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableCalculation: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Worksheet.findAll
    summary: |-
      <span data-ttu-id="707ec-143">根据指定的条件查找给定字符串的所有匹配项，并将它们作为包含一个或多个矩形区域的 RangeAreas 对象返回。</span><span class="sxs-lookup"><span data-stu-id="707ec-143">Finds all occurrences of the given string based on the criteria specified and returns them as a RangeAreas object, comprising one or more rectangular ranges.</span></span>

      <span data-ttu-id="707ec-144">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-144">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'findAll(text, criteria)'
    fullName: 'findAll(text, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'findAll(text: string, criteria: Excel.WorksheetSearchCriteria): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: '<span data-ttu-id="707ec-145">一个 RangeArea 对象, 其中包含一个或多个与搜索条件相匹配的矩形区域。</span><span class="sxs-lookup"><span data-stu-id="707ec-145">A RangeArea object, comprising one or more rectangular ranges, that matches the search criteria.</span></span> <span data-ttu-id="707ec-146">如果没有满足此条件的单元格, 则将引发 ItemNotFound 错误。</span><span class="sxs-lookup"><span data-stu-id="707ec-146">If no cells meet this criteria, an ItemNotFound error will be thrown.</span></span>'
      parameters:
        - id: text
          description: <span data-ttu-id="707ec-147">要查找的字符串。</span><span class="sxs-lookup"><span data-stu-id="707ec-147">The string to find.</span></span>
          type:
            - string
        - id: criteria
          description: '<span data-ttu-id="707ec-148">其他搜索条件, 包括搜索是否需要匹配整个单元格或是否区分大小写。</span><span class="sxs-lookup"><span data-stu-id="707ec-148">Additional search criteria, including whether the search needs to match the entire cell or be case sensitive.</span></span>'
          type:
            - excel.Excel.WorksheetSearchCriteria
  - uid: excel.Excel.Worksheet.findAllOrNullObject
    summary: |-
      <span data-ttu-id="707ec-149">根据指定的条件查找给定字符串的所有匹配项，并将它们作为包含一个或多个矩形区域的 RangeAreas 对象返回。</span><span class="sxs-lookup"><span data-stu-id="707ec-149">Finds all occurrences of the given string based on the criteria specified and returns them as a RangeAreas object, comprising one or more rectangular ranges.</span></span>

      <span data-ttu-id="707ec-150">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-150">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'findAllOrNullObject(text, criteria)'
    fullName: 'findAllOrNullObject(text, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'findAllOrNullObject(text: string, criteria: Excel.WorksheetSearchCriteria): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: |-
          <span data-ttu-id="707ec-151">一个 RangeArea 对象, 其中包含一个或多个与搜索条件相匹配的矩形区域。</span><span class="sxs-lookup"><span data-stu-id="707ec-151">A RangeArea object, comprising one or more rectangular ranges, that matches the search criteria.</span></span> <span data-ttu-id="707ec-152">如果没有匹配项, 则此函数将返回一个 null 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-152">If there are no matches, this function will return a null object.</span></span>

          #### <a name="examples"></a><span data-ttu-id="707ec-153">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-153">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const foundRanges = sheet.findAllOrNullObject("Complete", {
                  completeMatch: true,
                  matchCase: false
              });

              await context.sync();

              if (foundRanges.isNullObject) {
                  console.log("No complete projects");
              } else {
                  foundRanges.format.fill.color = "green"
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="707ec-154">要查找的字符串。</span><span class="sxs-lookup"><span data-stu-id="707ec-154">The string to find.</span></span>
          type:
            - string
        - id: criteria
          description: '<span data-ttu-id="707ec-155">其他搜索条件, 包括搜索是否需要匹配整个单元格或是否区分大小写。</span><span class="sxs-lookup"><span data-stu-id="707ec-155">Additional search criteria, including whether the search needs to match the entire cell or be case sensitive.</span></span>'
          type:
            - excel.Excel.WorksheetSearchCriteria
  - uid: excel.Excel.Worksheet.freezePanes
    summary: |-
      <span data-ttu-id="707ec-156">获取一个对象, 该对象可用于操作工作表上的冻结窗格。</span><span class="sxs-lookup"><span data-stu-id="707ec-156">Gets an object that can be used to manipulate frozen panes on the worksheet.</span></span> <span data-ttu-id="707ec-157">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-157">Read-only.</span></span>

      <span data-ttu-id="707ec-158">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-158">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: freezePanes
    fullName: freezePanes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly freezePanes: Excel.WorksheetFreezePanes;'
      return:
        type:
          - excel.Excel.WorksheetFreezePanes
  - uid: excel.Excel.Worksheet.getCell
    summary: |-
      <span data-ttu-id="707ec-159">根据行和列编号获取包含单个单元格的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-159">Gets the range object containing the single cell based on row and column numbers.</span></span> <span data-ttu-id="707ec-160">单元格可以位于其父区域的边界之外, 但前提是它停留在工作表网格中。</span><span class="sxs-lookup"><span data-stu-id="707ec-160">The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span>

      <span data-ttu-id="707ec-161">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-161">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getCell(row, column)'
    fullName: 'getCell(row, column)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(row: number, column: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-162">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-162">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var cell = worksheet.getCell(0,0);
              cell.load('address');
              return ctx.sync().then(function() {
                  console.log(cell.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: row
          description: <span data-ttu-id="707ec-163">要检索的单元格的行号。</span><span class="sxs-lookup"><span data-stu-id="707ec-163">The row number of the cell to be retrieved.</span></span> <span data-ttu-id="707ec-164">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="707ec-164">Zero-indexed.</span></span>
          type:
            - number
        - id: column
          description: <span data-ttu-id="707ec-165">要检索的单元格的列号。</span><span class="sxs-lookup"><span data-stu-id="707ec-165">the column number of the cell to be retrieved.</span></span> <span data-ttu-id="707ec-166">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="707ec-166">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.Worksheet.getNext
    summary: |-
      <span data-ttu-id="707ec-167">获取此工作表的后面的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-167">Gets the worksheet that follows this one.</span></span> <span data-ttu-id="707ec-168">如果此方法后面没有任何工作表, 则此方法将引发错误。</span><span class="sxs-lookup"><span data-stu-id="707ec-168">If there are no worksheets following this one, this method will throw an error.</span></span>

      <span data-ttu-id="707ec-169">\[[API 集: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-169">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getNext(visibleOnly)
    fullName: getNext(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNext(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-170">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-170">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="707ec-171">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-171">Optional.</span></span> <span data-ttu-id="707ec-172">如果为 true, 则只考虑可见的工作表, 跳过任何隐藏的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-172">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getNextOrNullObject
    summary: |-
      <span data-ttu-id="707ec-173">获取此工作表的后面的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-173">Gets the worksheet that follows this one.</span></span> <span data-ttu-id="707ec-174">如果此方法后面没有任何工作表, 则此方法将返回一个 null 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-174">If there are no worksheets following this one, this method will return a null object.</span></span>

      <span data-ttu-id="707ec-175">\[[API 集: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-175">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getNextOrNullObject(visibleOnly)
    fullName: getNextOrNullObject(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="707ec-176">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-176">Optional.</span></span> <span data-ttu-id="707ec-177">如果为 true, 则只考虑可见的工作表, 跳过任何隐藏的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-177">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getPrevious
    summary: |-
      <span data-ttu-id="707ec-178">获取此项之前的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-178">Gets the worksheet that precedes this one.</span></span> <span data-ttu-id="707ec-179">如果没有以前的工作表, 此方法将引发错误。</span><span class="sxs-lookup"><span data-stu-id="707ec-179">If there are no previous worksheets, this method will throw an error.</span></span>

      <span data-ttu-id="707ec-180">\[[API 集: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-180">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPrevious(visibleOnly)
    fullName: getPrevious(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrevious(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-181">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-181">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;
              const currentSheet = sheets.getActiveWorksheet();
              const previousYearSheet = currentSheet.getPrevious();
              const currentTaxDueRange = currentSheet.getRange("C2");
              const previousTaxDueRange = previousYearSheet.getRange("C2");

              currentSheet.load("name");
              previousYearSheet.load("name");
              currentTaxDueRange.load("text");
              previousTaxDueRange.load("text");

              await context.sync();

              let currentYear = currentSheet.name.substr(5, 4);
              let previousYear = previousYearSheet.name.substr(5, 4);
              console.log("Two Year Tax Due Comparison", `Tax due for ${currentYear} was ${currentTaxDueRange.text[0][0]}\nTax due for ${previousYear} was ${previousTaxDueRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="707ec-182">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-182">Optional.</span></span> <span data-ttu-id="707ec-183">如果为 true, 则只考虑可见的工作表, 跳过任何隐藏的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-183">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getPreviousOrNullObject
    summary: |-
      <span data-ttu-id="707ec-184">获取此项之前的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-184">Gets the worksheet that precedes this one.</span></span> <span data-ttu-id="707ec-185">如果没有以前的工作表, 则此方法将返回一个空的 objet。</span><span class="sxs-lookup"><span data-stu-id="707ec-185">If there are no previous worksheets, this method will return a null objet.</span></span>

      <span data-ttu-id="707ec-186">\[[API 集: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-186">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getPreviousOrNullObject(visibleOnly)
    fullName: getPreviousOrNullObject(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreviousOrNullObject(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="707ec-187">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-187">Optional.</span></span> <span data-ttu-id="707ec-188">如果为 true, 则只考虑可见的工作表, 跳过任何隐藏的工作表。</span><span class="sxs-lookup"><span data-stu-id="707ec-188">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getRange
    summary: |-
      <span data-ttu-id="707ec-189">获取一个 range 对象, 该对象代表由地址或名称指定的单个矩形单元格块。</span><span class="sxs-lookup"><span data-stu-id="707ec-189">Gets the range object, representing a single rectangular block of cells, specified by the address or name.</span></span>

      <span data-ttu-id="707ec-190">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-190">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange(address)
    fullName: getRange(address)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(address?: string): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-191">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-191">Examples</span></span>

          ```javascript
          // Below example uses range address to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Below example uses a named-range to get the range object.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeName = 'MyRange';
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeName);
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="707ec-192">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-192">Optional.</span></span> <span data-ttu-id="707ec-193">表示地址或范围名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="707ec-193">The string representing the address or name of the range.</span></span> <span data-ttu-id="707ec-194">例如, "A1: B2"。</span><span class="sxs-lookup"><span data-stu-id="707ec-194">For example, "A1:B2".</span></span> <span data-ttu-id="707ec-195">如果未指定，则返回整个工作表区域。</span><span class="sxs-lookup"><span data-stu-id="707ec-195">If not specified, the entire worksheet range is returned.</span></span>'
          type:
            - string
  - uid: excel.Excel.Worksheet.getRangeByIndexes
    summary: |-
      <span data-ttu-id="707ec-196">获取以特定行索引和列索引开始并跨越了一定数量的行和列的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-196">Gets the range object beginning at a particular row index and column index, and spanning a certain number of rows and columns.</span></span>

      <span data-ttu-id="707ec-197">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-197">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getRangeByIndexes(startRow, startColumn, rowCount, columnCount)'
    fullName: 'getRangeByIndexes(startRow, startColumn, rowCount, columnCount)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeByIndexes(startRow: number, startColumn: number, rowCount: number, columnCount: number): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: startRow
          description: <span data-ttu-id="707ec-198">起始行 (零编制索引)。</span><span class="sxs-lookup"><span data-stu-id="707ec-198">Start row (zero-indexed).</span></span>
          type:
            - number
        - id: startColumn
          description: <span data-ttu-id="707ec-199">Start 列 (零个索引)。</span><span class="sxs-lookup"><span data-stu-id="707ec-199">Start column (zero-indexed).</span></span>
          type:
            - number
        - id: rowCount
          description: <span data-ttu-id="707ec-200">要包含在范围中的行数。</span><span class="sxs-lookup"><span data-stu-id="707ec-200">Number of rows to include in the range.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="707ec-201">要包含在范围中的列数。</span><span class="sxs-lookup"><span data-stu-id="707ec-201">Number of columns to include in the range.</span></span>
          type:
            - number
  - uid: excel.Excel.Worksheet.getRanges
    summary: |-
      <span data-ttu-id="707ec-202">获取按地址或名称指定的 RangeAreas 对象，它表示一个或多个矩形区域块。</span><span class="sxs-lookup"><span data-stu-id="707ec-202">Gets the RangeAreas object, representing one or more blocks of rectangular ranges, specified by the address or name.</span></span>

      <span data-ttu-id="707ec-203">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-203">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRanges(address)
    fullName: getRanges(address)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRanges(address?: string): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-204">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-204">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {

              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const specifiedRanges = sheet.getRanges("D3:D5, G3:G5");
              specifiedRanges.format.fill.color = "pink";

              await context.sync();
          })
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="707ec-205">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-205">Optional.</span></span> <span data-ttu-id="707ec-206">一个包含以逗号分隔的地址或各个区域的名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="707ec-206">A string containing the comma-separated addresses or names of the individual ranges.</span></span> <span data-ttu-id="707ec-207">例如, "A1: B2, A5: B5"。</span><span class="sxs-lookup"><span data-stu-id="707ec-207">For example, "A1:B2, A5:B5".</span></span> <span data-ttu-id="707ec-208">如果未指定, 则返回整个工作表的 RangeArea 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-208">If not specified, an RangeArea object for the entire worksheet is returned.</span></span>'
          type:
            - string
  - uid: excel.Excel.Worksheet.getUsedRange
    summary: |-
      <span data-ttu-id="707ec-209">使用的区域是包含分配了值或格式化的任何单元格的最小区域。</span><span class="sxs-lookup"><span data-stu-id="707ec-209">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them.</span></span> <span data-ttu-id="707ec-210">如果整个工作表为空, 则此函数将返回左上角单元格 (即, 它*不*会引发错误)。</span><span class="sxs-lookup"><span data-stu-id="707ec-210">If the entire worksheet is blank, this function will return the top left cell (i.e. it will *not* throw an error).</span></span>

      <span data-ttu-id="707ec-211">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-211">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRange(valuesOnly)
    fullName: getUsedRange(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRange(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-212">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-212">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              var usedRange = worksheet.getUsedRange();
              usedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(usedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: valuesOnly
          description: '<span data-ttu-id="707ec-213">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-213">Optional.</span></span> <span data-ttu-id="707ec-214">如果为 true, 则仅考虑值为已使用单元格的单元格 (忽略格式设置)。</span><span class="sxs-lookup"><span data-stu-id="707ec-214">If true, considers only cells with values as used cells (ignoring formatting).</span></span> <span data-ttu-id="707ec-215">\[Api 集: ExcelApi 1。2\]</span><span class="sxs-lookup"><span data-stu-id="707ec-215">\[Api set: ExcelApi 1.2\]</span></span>'
          type:
            - boolean
  - uid: excel.Excel.Worksheet.getUsedRangeOrNullObject
    summary: |-
      <span data-ttu-id="707ec-p128">使用的区域是包含分配了值或格式的任意单元格的最小区域。如果整个工作表为空，此函数将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-p128">The used range is the smallest range that encompasses any cells that have a value or formatting assigned to them. If the entire worksheet is blank, this function will return a null object.</span></span>

      <span data-ttu-id="707ec-218">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-218">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getUsedRangeOrNullObject(valuesOnly)
    fullName: getUsedRangeOrNullObject(valuesOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
      parameters:
        - id: valuesOnly
          description: <span data-ttu-id="707ec-219">可选。</span><span class="sxs-lookup"><span data-stu-id="707ec-219">Optional.</span></span> <span data-ttu-id="707ec-220">仅将有值的单元格视为已使用的单元格。</span><span class="sxs-lookup"><span data-stu-id="707ec-220">Considers only cells with values as used cells.</span></span>
          type:
            - boolean
  - uid: excel.Excel.Worksheet.horizontalPageBreaks
    summary: |-
      <span data-ttu-id="707ec-221">获取工作表的水平分页符集合。</span><span class="sxs-lookup"><span data-stu-id="707ec-221">Gets the horizontal page break collection for the worksheet.</span></span> <span data-ttu-id="707ec-222">此集合仅包含手动分页符。</span><span class="sxs-lookup"><span data-stu-id="707ec-222">This collection only contains manual page breaks.</span></span>

      <span data-ttu-id="707ec-223">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-223">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: horizontalPageBreaks
    fullName: horizontalPageBreaks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly horizontalPageBreaks: Excel.PageBreakCollection;'
      return:
        type:
          - excel.Excel.PageBreakCollection
  - uid: excel.Excel.Worksheet.id
    summary: |-
      <span data-ttu-id="707ec-p131">返回用于唯一标识指定工作簿中工作表的值。即使工作表被重命名或移动，标识符的值仍然相同。只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-p131">Returns a value that uniquely identifies the worksheet in a given workbook. The value of the identifier remains the same even when the worksheet is renamed or moved. Read-only.</span></span>

      <span data-ttu-id="707ec-227">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-227">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Worksheet.load
    summary: <span data-ttu-id="707ec-228">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-228">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="707ec-229">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="707ec-229">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="707ec-230">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="707ec-230">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="707ec-231">`load(option?: string | string[]): Excel.Worksheet`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-231">`load(option?: string | string[]): Excel.Worksheet` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="707ec-232">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-232">`load(option?: { select?: string; expand?: string; }): Excel.Worksheet` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="707ec-233">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="707ec-233">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Worksheet` - Only available on collection types.</span></span> <span data-ttu-id="707ec-234">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="707ec-234">It is similar to the preceding signature.</span></span> <span data-ttu-id="707ec-235">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="707ec-235">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="707ec-236">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="707ec-236">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="707ec-237">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="707ec-237">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetLoadOptions): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorksheetLoadOptions
  - uid: excel.Excel.Worksheet.load_1
    summary: '<span data-ttu-id="707ec-238">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-238">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="707ec-239">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="707ec-239">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-240">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-240">Examples</span></span>

          ```javascript
          // Get worksheet properties based on sheet name.
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.load('position')
              return ctx.sync().then(function() {
                      console.log(worksheet.position);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set worksheet position. 
          Excel.run(function (ctx) { 
              var wSheetName = 'Sheet1';
              var worksheet = ctx.workbook.worksheets.getItem(wSheetName);
              worksheet.position = 2;
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="707ec-241">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-241">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Worksheet.load_2
    summary: '<span data-ttu-id="707ec-242">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-242">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="707ec-243">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="707ec-243">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="707ec-244">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-244">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Worksheet.name
    summary: |-
      <span data-ttu-id="707ec-245">工作表的显示名称。</span><span class="sxs-lookup"><span data-stu-id="707ec-245">The display name of the worksheet.</span></span>

      <span data-ttu-id="707ec-246">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-246">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Worksheet.names
    summary: |-
      <span data-ttu-id="707ec-247">一组范围限定到当前工作表的名称。</span><span class="sxs-lookup"><span data-stu-id="707ec-247">Collection of names scoped to the current worksheet.</span></span> <span data-ttu-id="707ec-248">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-248">Read-only.</span></span>

      <span data-ttu-id="707ec-249">\[[API 集: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-249">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
  - uid: excel.Excel.Worksheet.onActivated
    summary: |-
      <span data-ttu-id="707ec-250">当激活工作表时发生此事件。</span><span class="sxs-lookup"><span data-stu-id="707ec-250">Occurs when the worksheet is activated.</span></span>

      <span data-ttu-id="707ec-251">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-251">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-252">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-252">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onActivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The activated worksheet ID is: " + event.worksheetId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.onCalculated
    summary: |-
      <span data-ttu-id="707ec-253">在计算工作表时发生。</span><span class="sxs-lookup"><span data-stu-id="707ec-253">Occurs when the worksheet is calculated.</span></span>

      <span data-ttu-id="707ec-254">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-254">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-255">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-255">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onCalculated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The worksheet has recalculated.");
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.onChanged
    summary: |-
      <span data-ttu-id="707ec-256">当指定的工作表上的数据发生更改时发生。</span><span class="sxs-lookup"><span data-stu-id="707ec-256">Occurs when data changed on a specific worksheet.</span></span>

      <span data-ttu-id="707ec-257">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-257">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-258">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-258">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the onChanged event.");
          });
          ```
  - uid: excel.Excel.Worksheet.onColumnSorted
    summary: |-
      <span data-ttu-id="707ec-259">在列上排序时发生。</span><span class="sxs-lookup"><span data-stu-id="707ec-259">Occurs when sorting on columns.</span></span>

      <span data-ttu-id="707ec-260">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-260">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onColumnSorted
    fullName: onColumnSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onColumnSorted: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>
  - uid: excel.Excel.Worksheet.onDeactivated
    summary: |-
      <span data-ttu-id="707ec-261">停用工作表时发生此事件。</span><span class="sxs-lookup"><span data-stu-id="707ec-261">Occurs when the worksheet is deactivated.</span></span>

      <span data-ttu-id="707ec-262">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-262">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-263">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-263">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onDeactivated.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The deactivated worksheet is: " + event.worksheetId);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.onFiltered
    summary: |-
      <span data-ttu-id="707ec-264">在特定工作表上应用筛选器时发生。</span><span class="sxs-lookup"><span data-stu-id="707ec-264">Occurs when filter is applied on a specific worksheet.</span></span>

      <span data-ttu-id="707ec-265">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-265">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
  - uid: excel.Excel.Worksheet.onFormatChanged
    summary: |-
      <span data-ttu-id="707ec-266">在特定工作表上更改格式时发生。</span><span class="sxs-lookup"><span data-stu-id="707ec-266">Occurs when format changed on a specific worksheet.</span></span>

      <span data-ttu-id="707ec-267">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-267">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onFormatChanged
    fullName: onFormatChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFormatChanged: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
  - uid: excel.Excel.Worksheet.onRowHiddenChanged
    summary: |-
      <span data-ttu-id="707ec-268">当特定工作表上的行隐藏状态更改时发生。</span><span class="sxs-lookup"><span data-stu-id="707ec-268">Occurs when row hidden state changed on a specific worksheet.</span></span>

      <span data-ttu-id="707ec-269">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-269">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onRowHiddenChanged
    fullName: onRowHiddenChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowHiddenChanged: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>
  - uid: excel.Excel.Worksheet.onRowSorted
    summary: |-
      <span data-ttu-id="707ec-270">在行上排序时发生。</span><span class="sxs-lookup"><span data-stu-id="707ec-270">Occurs when sorting on rows.</span></span>

      <span data-ttu-id="707ec-271">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-271">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onRowSorted
    fullName: onRowSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowSorted: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>
  - uid: excel.Excel.Worksheet.onSelectionChanged
    summary: |-
      <span data-ttu-id="707ec-272">当指定的工作表上的所选内容更改时发生。</span><span class="sxs-lookup"><span data-stu-id="707ec-272">Occurs when the selection changes on a specific worksheet.</span></span>

      <span data-ttu-id="707ec-273">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-273">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-274">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-274">Examples</span></span>

          ```javascript
          Excel.run(function (context) {
              var sheet = context.workbook.worksheets.getItem("Sample");
              sheet.onSelectionChanged.add(function (event) {
                  return Excel.run((context) => {
                      console.log("The selected range has changed to: " + event.address);
                      return context.sync();
                  });
              });
              return context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.onSingleClicked
    summary: |-
      <span data-ttu-id="707ec-275">在工作表中进行左键单击/点击操作时发生。</span><span class="sxs-lookup"><span data-stu-id="707ec-275">Occurs when left-clicked/tapped operation happens in the worksheet.</span></span> <span data-ttu-id="707ec-276">当在以下情况下单击时, 将不会触发此事件:-用户拖动鼠标进行多选。</span><span class="sxs-lookup"><span data-stu-id="707ec-276">This event will not be fired when clicking in the following cases: - The user drags the mouse for multi-selection.</span></span> <span data-ttu-id="707ec-277">-当为公式引用选择单元格参数时, 用户将选择模式中的单元格。</span><span class="sxs-lookup"><span data-stu-id="707ec-277">- The user selects a cell in the mode when cell arguments are selected for formula references.</span></span>

      <span data-ttu-id="707ec-278">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-278">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onSingleClicked
    fullName: onSingleClicked
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSingleClicked: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-279">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-279">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.onSingleClicked.add((event) => {
                  return Excel.run((context) => {
                      console.log(`Click detected at ${event.address} (pixel offset from upper-left cell corner: ${event.offsetX}, ${event.offsetY})`);
                      return context.sync();
                  });
              });

              console.log("The worksheet click handler is registered.");

              await context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.pageLayout
    summary: |-
      <span data-ttu-id="707ec-280">获取工作表的 PageLayout 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-280">Gets the PageLayout object of the worksheet.</span></span>

      <span data-ttu-id="707ec-281">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-281">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pageLayout
    fullName: pageLayout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pageLayout: Excel.PageLayout;'
      return:
        type:
          - excel.Excel.PageLayout
  - uid: excel.Excel.Worksheet.pivotTables
    summary: |-
      <span data-ttu-id="707ec-282">一组属于 worksheet 的 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-282">Collection of PivotTables that are part of the worksheet.</span></span> <span data-ttu-id="707ec-283">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-283">Read-only.</span></span>

      <span data-ttu-id="707ec-284">\[[API 集: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-284">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: pivotTables
    fullName: pivotTables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly pivotTables: Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
  - uid: excel.Excel.Worksheet.position
    summary: |-
      <span data-ttu-id="707ec-285">工作表在工作簿中的位置，从零开始。</span><span class="sxs-lookup"><span data-stu-id="707ec-285">The zero-based position of the worksheet within the workbook.</span></span>

      <span data-ttu-id="707ec-286">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-286">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: position
    fullName: position
    langs:
      - typeScript
    type: property
    syntax:
      content: 'position: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Worksheet.protection
    summary: |-
      <span data-ttu-id="707ec-287">返回表工作表的工作表保护对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-287">Returns sheet protection object for a worksheet.</span></span> <span data-ttu-id="707ec-288">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-288">Read-only.</span></span>

      <span data-ttu-id="707ec-289">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-289">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.WorksheetProtection;'
      return:
        type:
          - excel.Excel.WorksheetProtection
  - uid: excel.Excel.Worksheet.replaceAll
    summary: |-
      <span data-ttu-id="707ec-290">根据当前工作表中指定的条件查找并替换给定的字符串。</span><span class="sxs-lookup"><span data-stu-id="707ec-290">Finds and replaces the given string based on the criteria specified within the current worksheet.</span></span>

      <span data-ttu-id="707ec-291">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-291">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'replaceAll(text, replacement, criteria)'
    fullName: 'replaceAll(text, replacement, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'replaceAll(text: string, replacement: string, criteria: Excel.ReplaceCriteria): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: <span data-ttu-id="707ec-292">执行的替换的次数。</span><span class="sxs-lookup"><span data-stu-id="707ec-292">The number of replacements performed.</span></span>
      parameters:
        - id: text
          description: <span data-ttu-id="707ec-293">要查找的字符串。</span><span class="sxs-lookup"><span data-stu-id="707ec-293">String to find.</span></span>
          type:
            - string
        - id: replacement
          description: <span data-ttu-id="707ec-294">要将原始替换为的字符串。</span><span class="sxs-lookup"><span data-stu-id="707ec-294">String to replace the original with.</span></span>
          type:
            - string
        - id: criteria
          description: <span data-ttu-id="707ec-295">其他替换条件。</span><span class="sxs-lookup"><span data-stu-id="707ec-295">Additional Replace Criteria.</span></span>
          type:
            - excel.Excel.ReplaceCriteria
  - uid: excel.Excel.Worksheet.set
    summary: '<span data-ttu-id="707ec-296">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-296">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="707ec-297">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="707ec-297">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="707ec-298">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="707ec-298">This method has the following additional signature:</span></span>

      `set(properties: Excel.Worksheet): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorksheetUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="707ec-299">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-299">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.WorksheetUpdateData
        - id: options
          description: '<span data-ttu-id="707ec-300">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="707ec-300">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Worksheet.set_1
    summary: '<span data-ttu-id="707ec-301">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="707ec-301">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Worksheet): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Worksheet
  - uid: excel.Excel.Worksheet.shapes
    summary: |-
      <span data-ttu-id="707ec-302">返回工作表上的所有 Shape 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="707ec-302">Returns the collection of all the Shape objects on the worksheet.</span></span> <span data-ttu-id="707ec-303">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-303">Read-only.</span></span>

      <span data-ttu-id="707ec-304">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-304">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shapes
    fullName: shapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shapes: Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
  - uid: excel.Excel.Worksheet.showGridlines
    summary: |-
      <span data-ttu-id="707ec-305">获取或设置工作表的网格线标志。</span><span class="sxs-lookup"><span data-stu-id="707ec-305">Gets or sets the worksheet's gridlines flag.</span></span> <span data-ttu-id="707ec-306">此标志确定是否对用户显示网格线。</span><span class="sxs-lookup"><span data-stu-id="707ec-306">This flag determines whether gridlines are visible to the user.</span></span>

      <span data-ttu-id="707ec-307">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-307">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showGridlines
    fullName: showGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showGridlines: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-308">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-308">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.showGridlines = true;

              await context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.showHeadings
    summary: |-
      <span data-ttu-id="707ec-309">获取或设置工作表的标题标志。</span><span class="sxs-lookup"><span data-stu-id="707ec-309">Gets or sets the worksheet's headings flag.</span></span> <span data-ttu-id="707ec-310">此标志确定是否对用户显示标题。</span><span class="sxs-lookup"><span data-stu-id="707ec-310">This flag determines whether headings are visible to the user.</span></span>

      <span data-ttu-id="707ec-311">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-311">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeadings
    fullName: showHeadings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeadings: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Worksheet.showOutlineLevels
    summary: |-
      <span data-ttu-id="707ec-312">按行或列的大纲级别显示组。</span><span class="sxs-lookup"><span data-stu-id="707ec-312">Shows row or column groups by their outline levels.</span></span> <span data-ttu-id="707ec-313">勾勒出组合并汇总工作表中的数据列表。</span><span class="sxs-lookup"><span data-stu-id="707ec-313">Outlines group and summarize a list of data in the worksheet.</span></span> <span data-ttu-id="707ec-314">`rowLevels`和`columnLevels`参数指定将显示的大纲的级别数。</span><span class="sxs-lookup"><span data-stu-id="707ec-314">The `rowLevels` and `columnLevels` parameters specify how many levels of the outline will be displayed.</span></span> <span data-ttu-id="707ec-315">可接受的参数范围介于0和8之间。</span><span class="sxs-lookup"><span data-stu-id="707ec-315">The acceptable argument range is between 0 and 8.</span></span> <span data-ttu-id="707ec-316">值0不会更改当前显示。</span><span class="sxs-lookup"><span data-stu-id="707ec-316">A value of 0 does not change the current display.</span></span> <span data-ttu-id="707ec-317">大于当前级别数的值将显示所有级别。</span><span class="sxs-lookup"><span data-stu-id="707ec-317">A value greater than the current number of levels displays all the levels.</span></span>

      <span data-ttu-id="707ec-318">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-318">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'showOutlineLevels(rowLevels, columnLevels)'
    fullName: 'showOutlineLevels(rowLevels, columnLevels)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showOutlineLevels(rowLevels: number, columnLevels: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rowLevels
          description: <span data-ttu-id="707ec-319">要显示的分级显示的行级别数。</span><span class="sxs-lookup"><span data-stu-id="707ec-319">The number of row levels of an outline to display.</span></span>
          type:
            - number
        - id: columnLevels
          description: <span data-ttu-id="707ec-320">要显示的分级显示的列级别数。</span><span class="sxs-lookup"><span data-stu-id="707ec-320">The number of column levels of an outline to display.</span></span>
          type:
            - number
  - uid: excel.Excel.Worksheet.slicers
    summary: |-
      <span data-ttu-id="707ec-321">返回作为工作表一部分的切片器集合。</span><span class="sxs-lookup"><span data-stu-id="707ec-321">Returns collection of slicers that are part of the worksheet.</span></span> <span data-ttu-id="707ec-322">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-322">Read-only.</span></span>

      <span data-ttu-id="707ec-323">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-323">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicers
    fullName: slicers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicers: Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-324">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-324">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Pivot");
              const slicer = sheet.slicers.add(
                  "Farm Sales", /* The slicer data source. For PivotTables, this can be the PivotTable object reference or name. */
                  "Type" /* The field in the data source to filter by. For PivotTables, this can be a PivotField object reference or ID. */
              );
              slicer.name = "Fruit Slicer";
              await context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.standardHeight
    summary: |-
      <span data-ttu-id="707ec-325">返回工作表中所有行的标准（默认）行高，以磅为单位。</span><span class="sxs-lookup"><span data-stu-id="707ec-325">Returns the standard (default) height of all the rows in the worksheet, in points.</span></span> <span data-ttu-id="707ec-326">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-326">Read-only.</span></span>

      <span data-ttu-id="707ec-327">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-327">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: standardHeight
    fullName: standardHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly standardHeight: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Worksheet.standardWidth
    summary: |-
      <span data-ttu-id="707ec-328">返回或设置工作表中所有列的标准（默认）列宽。</span><span class="sxs-lookup"><span data-stu-id="707ec-328">Returns or sets the standard (default) width of all the columns in the worksheet.</span></span> <span data-ttu-id="707ec-329">一个列宽单位等于“常规”样式中一个字符的宽度。</span><span class="sxs-lookup"><span data-stu-id="707ec-329">One unit of column width is equal to the width of one character in the Normal style.</span></span> <span data-ttu-id="707ec-330">对于比例字体，则使用字符 0（零）的宽度。</span><span class="sxs-lookup"><span data-stu-id="707ec-330">For proportional fonts, the width of the character 0 (zero) is used.</span></span>

      <span data-ttu-id="707ec-331">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-331">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: standardWidth
    fullName: standardWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'standardWidth: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Worksheet.tabColor
    summary: |-
      <span data-ttu-id="707ec-332">获取或设置工作表标签颜色。</span><span class="sxs-lookup"><span data-stu-id="707ec-332">Gets or sets the worksheet tab color.</span></span> <span data-ttu-id="707ec-333">检索选项卡颜色时, 如果工作表不可见, 则值将为 null。</span><span class="sxs-lookup"><span data-stu-id="707ec-333">When retrieving the tab color, if the worksheet is invisible, the value will be null.</span></span> <span data-ttu-id="707ec-334">如果工作表可见但选项卡颜色设置为自动, 将返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="707ec-334">If the worksheet is visible but the tab color is set to auto, an empty string will be returned.</span></span> <span data-ttu-id="707ec-335">否则, 在设置颜色时, 属性将设置为颜色, 格式为\#"123456", 则使用空字符串设置 "自动" 颜色, 或使用实际颜色。</span><span class="sxs-lookup"><span data-stu-id="707ec-335">Otherwise, the property will be set to a color, in the form "\#123456" When setting the color, use an empty-string to set an "auto" color, or a real color otherwise.</span></span>

      <span data-ttu-id="707ec-336">\[[API 集: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-336">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tabColor
    fullName: tabColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tabColor: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="707ec-337">示例</span><span class="sxs-lookup"><span data-stu-id="707ec-337">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.tabColor = "#FF0000";

              await context.sync();
          });
          ```
  - uid: excel.Excel.Worksheet.tables
    summary: |-
      <span data-ttu-id="707ec-338">属于工作表的表的集合。</span><span class="sxs-lookup"><span data-stu-id="707ec-338">Collection of tables that are part of the worksheet.</span></span> <span data-ttu-id="707ec-339">只读。</span><span class="sxs-lookup"><span data-stu-id="707ec-339">Read-only.</span></span>

      <span data-ttu-id="707ec-340">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-340">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
  - uid: excel.Excel.Worksheet.toJSON
    summary: '<span data-ttu-id="707ec-341">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="707ec-341">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="707ec-342">.</span><span class="sxs-lookup"><span data-stu-id="707ec-342"></span></span> <span data-ttu-id="707ec-343">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="707ec-343"></span></span><!-- --><span data-ttu-id="707ec-344">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel 工作表对象是 API 对象, 但`toJSON`方法返回一个简单的 JavaScript 对象 (类型为`Excel.Interfaces.WorksheetData`</span><span class="sxs-lookup"><span data-stu-id="707ec-344">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Worksheet object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetData`</span></span><!-- --><span data-ttu-id="707ec-345">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="707ec-345">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetData
        description: ''
  - uid: excel.Excel.Worksheet.verticalPageBreaks
    summary: |-
      <span data-ttu-id="707ec-346">获取工作表的垂直分页符集合。</span><span class="sxs-lookup"><span data-stu-id="707ec-346">Gets the vertical page break collection for the worksheet.</span></span> <span data-ttu-id="707ec-347">此集合仅包含手动分页符。</span><span class="sxs-lookup"><span data-stu-id="707ec-347">This collection only contains manual page breaks.</span></span>

      <span data-ttu-id="707ec-348">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="707ec-348">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: verticalPageBreaks
    fullName: verticalPageBreaks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly verticalPageBreaks: Excel.PageBreakCollection;'
      return:
        type:
          - excel.Excel.PageBreakCollection
  - uid: excel.Excel.Worksheet.visibility
    summary: |-
      <span data-ttu-id="707ec-349">工作表的可见性。</span><span class="sxs-lookup"><span data-stu-id="707ec-349">The Visibility of the worksheet.</span></span>

      <span data-ttu-id="707ec-350">\[[API 集: ExcelApi 1.1 用于读取可见性; 1.2 用于设置。](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="707ec-350">\[ [API set: ExcelApi 1.1 for reading visibility; 1.2 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="707ec-351">\]</span><span class="sxs-lookup"><span data-stu-id="707ec-351"></span></span>
    name: visibility
    fullName: visibility
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visibility: Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden";'
      return:
        type:
          - Excel.SheetVisibility | "Visible" | "Hidden" | "VeryHidden"