### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.NamedSheetView:class'
    summary: |-
      代表工作表的命名工作表视图。 工作表视图存储特定工作表的排序和筛选规则。 每个工作表视图（甚至是临时工作表视图）都具有唯一的工作表范围的名称，用于访问视图。

      \[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: Excel.NamedSheetView
    fullName: Excel.NamedSheetView
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.NamedSheetView#activate:member(1)'
      - 'excel!Excel.NamedSheetView#context:member'
      - 'excel!Excel.NamedSheetView#delete:member(1)'
      - 'excel!Excel.NamedSheetView#duplicate:member(1)'
      - 'excel!Excel.NamedSheetView#load:member(1)'
      - 'excel!Excel.NamedSheetView#load:member(2)'
      - 'excel!Excel.NamedSheetView#load:member(3)'
      - 'excel!Excel.NamedSheetView#name:member'
      - 'excel!Excel.NamedSheetView#toJSON:member(1)'
  - uid: 'excel!Excel.NamedSheetView#activate:member(1)'
    summary: |-
      激活此工作表视图。 这等效于在 Excel UI 中使用 "切换到"。

      \[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: activate()
    fullName: activate()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'activate(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.NamedSheetView#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.NamedSheetView#delete:member(1)'
    summary: |-
      将工作表视图从工作表中删除。

      \[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.NamedSheetView#duplicate:member(1)'
    summary: |-
      创建此工作表视图的副本。

      \[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: duplicate(name)
    fullName: duplicate(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'duplicate(name?: string): Excel.NamedSheetView;'
      return:
        type:
          - 'excel!Excel.NamedSheetView:class'
        description: 新的重复工作表视图。
      parameters:
        - id: name
          description: 复制的工作表视图的名称。 如果未提供任何名称，将生成一个名称。
          type:
            - string
  - uid: 'excel!Excel.NamedSheetView#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    isPreview: true
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.NamedSheetViewLoadOptions): Excel.NamedSheetView;'
      return:
        type:
          - 'excel!Excel.NamedSheetView:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.Interfaces.NamedSheetViewLoadOptions:interface'
  - uid: 'excel!Excel.NamedSheetView#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedSheetView;'
      return:
        type:
          - 'excel!Excel.NamedSheetView:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.NamedSheetView#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.NamedSheetView;
      return:
        type:
          - 'excel!Excel.NamedSheetView:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.NamedSheetView#name:member'
    summary: |-
      获取或设置工作表视图的名称。 临时工作表视图名称为空字符串（""）。 使用 name 属性命名视图将导致工作表视图被保存。

      \[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.NamedSheetView#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，也 `toJSON` 会调用传递给它的对象的方法。尽管原始 NamedSheetView 对象是 API 对象，但 `toJSON` 方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.NamedSheetViewData`<!-- -->），其中包含原始对象中所有已加载的子属性的浅表副本。
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedSheetViewData;'
      return:
        type:
          - 'excel!Excel.Interfaces.NamedSheetViewData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.NamedSheetView:class'
    name: Excel.NamedSheetView
  - uid: 'excel!Excel.Interfaces.NamedSheetViewLoadOptions:interface'
    name: Excel.Interfaces.NamedSheetViewLoadOptions
  - uid: 'excel!Excel.Interfaces.NamedSheetViewData:interface'
    name: Excel.Interfaces.NamedSheetViewData