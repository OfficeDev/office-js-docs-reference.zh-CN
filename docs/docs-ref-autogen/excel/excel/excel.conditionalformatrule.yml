### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalFormatRule:class'
    summary: |-
      <span data-ttu-id="3ffb5-101">表示适用于所有传统规则/格式配对的规则。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-101">Represents a rule, for all traditional rule/format pairings.</span></span>

      <span data-ttu-id="3ffb5-102">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3ffb5-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalFormatRule
    fullName: Excel.ConditionalFormatRule
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalFormatRule#context:member'
      - 'excel!Excel.ConditionalFormatRule#formula:member'
      - 'excel!Excel.ConditionalFormatRule#formulaLocal:member'
      - 'excel!Excel.ConditionalFormatRule#formulaR1C1:member'
      - 'excel!Excel.ConditionalFormatRule#load:member(1)'
      - 'excel!Excel.ConditionalFormatRule#load:member(2)'
      - 'excel!Excel.ConditionalFormatRule#load:member(3)'
      - 'excel!Excel.ConditionalFormatRule#set:member(1)'
      - 'excel!Excel.ConditionalFormatRule#set:member(2)'
      - 'excel!Excel.ConditionalFormatRule#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalFormatRule#context:member'
    summary: <span data-ttu-id="3ffb5-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-103">The request context associated with the object.</span></span> <span data-ttu-id="3ffb5-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalFormatRule#formula:member'
    summary: |-
      <span data-ttu-id="3ffb5-105">如果需要，公式可对条件格式规则进行求值。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-105">The formula, if required, to evaluate the conditional format rule on.</span></span>

      <span data-ttu-id="3ffb5-106">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3ffb5-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formula
    fullName: formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3ffb5-107">示例</span><span class="sxs-lookup"><span data-stu-id="3ffb5-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.ConditionalFormatRule#formulaLocal:member'
    summary: |-
      <span data-ttu-id="3ffb5-108">如果需要，公式可采用用户的语言对条件格式规则进行求值。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-108">The formula, if required, to evaluate the conditional format rule on in the user's language.</span></span>

      <span data-ttu-id="3ffb5-109">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3ffb5-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formulaLocal
    fullName: formulaLocal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaLocal: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormatRule#formulaR1C1:member'
    summary: |-
      <span data-ttu-id="3ffb5-110">如果需要，公式可采用 R1C1 表示法对条件格式规则进行求值。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-110">The formula, if required, to evaluate the conditional format rule on in R1C1-style notation.</span></span>

      <span data-ttu-id="3ffb5-111">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3ffb5-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formulaR1C1
    fullName: formulaR1C1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formulaR1C1: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(1)'
    summary: <span data-ttu-id="3ffb5-112">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3ffb5-113">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-113">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalFormatRuleLoadOptions): Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="3ffb5-114">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-114">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatRuleLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(2)'
    summary: <span data-ttu-id="3ffb5-115">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3ffb5-116">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormatRule;'
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3ffb5-117">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalFormatRule#load:member(3)'
    summary: <span data-ttu-id="3ffb5-118">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3ffb5-119">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalFormatRule;
      return:
        type:
          - 'excel!Excel.ConditionalFormatRule:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="3ffb5-120">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-120">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalFormatRule#set:member(1)'
    summary: '<span data-ttu-id="3ffb5-121">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-121">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="3ffb5-122">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-122">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="3ffb5-123">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="3ffb5-123">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalFormatRule): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="3ffb5-124">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-124">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalFormatRuleUpdateData:interface'
        - id: options
          description: <span data-ttu-id="3ffb5-125">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-125">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalFormatRule#set:member(2)'
    summary: '<span data-ttu-id="3ffb5-126">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-126">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalFormatRule): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalFormatRule:class'
  - uid: 'excel!Excel.ConditionalFormatRule#toJSON:member(1)'
    summary: '<span data-ttu-id="3ffb5-127">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3ffb5-127">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3ffb5-128">.</span><span class="sxs-lookup"><span data-stu-id="3ffb5-128"></span></span> <span data-ttu-id="3ffb5-129">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3ffb5-129"></span></span><!-- --><span data-ttu-id="3ffb5-130">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 ConditionalFormatRule 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.ConditionalFormatRuleData`</span><span class="sxs-lookup"><span data-stu-id="3ffb5-130">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormatRule object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatRuleData`</span></span><!-- --><span data-ttu-id="3ffb5-131">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="3ffb5-131">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalFormatRuleData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalFormatRule:class'
    name: Excel.ConditionalFormatRule
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleLoadOptions:interface'
    name: Excel.Interfaces.ConditionalFormatRuleLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleUpdateData:interface'
    name: Interfaces.ConditionalFormatRuleUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalFormatRuleData:interface'
    name: Excel.Interfaces.ConditionalFormatRuleData