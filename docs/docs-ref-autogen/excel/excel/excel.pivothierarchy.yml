### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotHierarchy:class'
    summary: |-
      表示 Excel PivotHierarchy。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotHierarchy
    fullName: Excel.PivotHierarchy
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotHierarchy#context:member'
      - 'excel!Excel.PivotHierarchy#fields:member'
      - 'excel!Excel.PivotHierarchy#id:member'
      - 'excel!Excel.PivotHierarchy#load:member(1)'
      - 'excel!Excel.PivotHierarchy#load:member(2)'
      - 'excel!Excel.PivotHierarchy#load:member(3)'
      - 'excel!Excel.PivotHierarchy#name:member'
      - 'excel!Excel.PivotHierarchy#set:member(1)'
      - 'excel!Excel.PivotHierarchy#set:member(2)'
      - 'excel!Excel.PivotHierarchy#toJSON:member(1)'
  - uid: 'excel!Excel.PivotHierarchy#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotHierarchy#fields:member'
    summary: |-
      返回与 PivotHierarchy 相关联的 PivotFields。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: fields
    fullName: fields
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fields: Excel.PivotFieldCollection;'
      return:
        type:
          - 'excel!Excel.PivotFieldCollection:class'
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-pivotfilters.yaml
          await Excel.run(async (context) => {
            // Add a PivotFilter to filter on the values correlated with a row.

            // Get the PivotTable.
            const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

            // Get the "Farm" field.
            const field = pivotTable.hierarchies.getItem("Farm").fields.getItem("Farm");

            // Filter to only include rows with more than 500 wholesale crates sold.
            const filter: Excel.PivotValueFilter = {
              condition: Excel.ValueFilterCondition.greaterThan,
              comparator: 500,
              value: "Sum of Crates Sold Wholesale"
            };

            // Apply the value filter to the field.
            field.applyFilter({ valueFilter: filter });

            await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotHierarchy#id:member'
    summary: |-
      PivotHierarchy 的 ID。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotHierarchy#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotHierarchyLoadOptions): Excel.PivotHierarchy;'
      return:
        type:
          - 'excel!Excel.PivotHierarchy:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.Interfaces.PivotHierarchyLoadOptions:interface'
  - uid: 'excel!Excel.PivotHierarchy#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotHierarchy;'
      return:
        type:
          - 'excel!Excel.PivotHierarchy:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotHierarchy#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotHierarchy;
      return:
        type:
          - 'excel!Excel.PivotHierarchy:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.PivotHierarchy#name:member'
    summary: |-
      PivotHierarchy 的名称。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotHierarchy#set:member(1)'
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名：

      `set(properties: Excel.PivotHierarchy): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotHierarchyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。
          type:
            - 'excel!Excel.Interfaces.PivotHierarchyUpdateData:interface'
        - id: options
          description: 提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotHierarchy#set:member(2)'
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotHierarchy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotHierarchy:class'
  - uid: 'excel!Excel.PivotHierarchy#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) ，而原始 PivotHierarchy 对象是 API 对象，则该 `toJSON` 方法返回一个 (类型为的纯 JavaScript 对象。 `Excel.Interfaces.PivotHierarchyData`<!-- -->) ，其中包含原始对象中任何已加载的子属性的浅表副本。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotHierarchyData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotHierarchyData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotFieldCollection:class'
    name: Excel.PivotFieldCollection
  - uid: 'excel!Excel.PivotHierarchy:class'
    name: Excel.PivotHierarchy
  - uid: 'excel!Excel.Interfaces.PivotHierarchyLoadOptions:interface'
    name: Excel.Interfaces.PivotHierarchyLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotHierarchyUpdateData:interface'
    name: Interfaces.PivotHierarchyUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.PivotHierarchyData:interface'
    name: Excel.Interfaces.PivotHierarchyData