### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableScopedCollection:class'
    summary: |-
      <span data-ttu-id="bfbbf-101">表示已确定范围的表的集合。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-101">Represents a scoped collection of tables.</span></span> <span data-ttu-id="bfbbf-102">对于每个表，其左上角都被认为是其定位点位置，表按从上到下，然后从左到右进行排序。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-102">For each table its top-left corner is considered its anchor location and the tables are sorted top to bottom and then left to right.</span></span>

      <span data-ttu-id="bfbbf-103">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bfbbf-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableScopedCollection
    fullName: Excel.TableScopedCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableScopedCollection#context:member'
      - 'excel!Excel.TableScopedCollection#getCount:member(1)'
      - 'excel!Excel.TableScopedCollection#getFirst:member(1)'
      - 'excel!Excel.TableScopedCollection#getItem:member(1)'
      - 'excel!Excel.TableScopedCollection#items:member'
      - 'excel!Excel.TableScopedCollection#load:member(1)'
      - 'excel!Excel.TableScopedCollection#load:member(2)'
      - 'excel!Excel.TableScopedCollection#load:member(3)'
      - 'excel!Excel.TableScopedCollection#toJSON:member(1)'
  - uid: 'excel!Excel.TableScopedCollection#context:member'
    summary: <span data-ttu-id="bfbbf-104">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-104">The request context associated with the object.</span></span> <span data-ttu-id="bfbbf-105">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableScopedCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="bfbbf-106">获取集合中的表数量。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-106">Gets the number of tables in the collection.</span></span>

      <span data-ttu-id="bfbbf-107">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bfbbf-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableScopedCollection#getFirst:member(1)'
    summary: |-
      <span data-ttu-id="bfbbf-108">获取集合中的第一个表格。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-108">Gets the first table in the collection.</span></span> <span data-ttu-id="bfbbf-109">集合中的表格按照从上到下、从左到右的顺序排列，因此左上表格是集合中的第一个表格。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-109">The tables in the collection are sorted top to bottom and left to right, such that top left table is the first table in the collection.</span></span>

      <span data-ttu-id="bfbbf-110">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bfbbf-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
  - uid: 'excel!Excel.TableScopedCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="bfbbf-111">按名称或 ID 获取表。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-111">Gets a table by Name or ID.</span></span>

      <span data-ttu-id="bfbbf-112">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="bfbbf-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="bfbbf-113">要检索的表的名称或 ID。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-113">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.TableScopedCollection#items:member'
    summary: <span data-ttu-id="bfbbf-114">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-114">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Table[];'
      return:
        type:
          - 'excel!Excel.TableScopedCollection#items~0:complex'
  - uid: 'excel!Excel.TableScopedCollection#load:member(1)'
    summary: <span data-ttu-id="bfbbf-115">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bfbbf-116">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="bfbbf-117">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-117">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.TableScopedCollection#load~0:complex'
  - uid: 'excel!Excel.TableScopedCollection#load:member(2)'
    summary: <span data-ttu-id="bfbbf-118">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bfbbf-119">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="bfbbf-120">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableScopedCollection#load:member(3)'
    summary: <span data-ttu-id="bfbbf-121">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="bfbbf-122">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="bfbbf-123">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-123">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.TableScopedCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="bfbbf-124">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="bfbbf-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="bfbbf-125">.</span><span class="sxs-lookup"><span data-stu-id="bfbbf-125"></span></span> <span data-ttu-id="bfbbf-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="bfbbf-126"></span></span><!-- --><span data-ttu-id="bfbbf-127">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.TableScopedCollection`对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.TableScopedCollectionData`</span><span class="sxs-lookup"><span data-stu-id="bfbbf-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableScopedCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableScopedCollectionData`</span></span><!-- --><span data-ttu-id="bfbbf-128">），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="bfbbf-128">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableScopedCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableScopedCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableScopedCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.TableScopedCollection#items~0:complex'
    name: 'Excel.Table[]'
    fullName: 'Excel.Table[]'
    spec.typeScript:
      - uid: 'excel!Excel.Table:class'
        name: Excel.Table
        fullName: Excel.Table
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableScopedCollection:class'
    name: Excel.TableScopedCollection
  - uid: 'excel!Excel.TableScopedCollection#load~0:complex'
    name: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.TableScopedCollectionLoadOptions:interface'
        name: Excel.Interfaces.TableScopedCollectionLoadOptions
        fullName: Excel.Interfaces.TableScopedCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.TableScopedCollectionData:interface'
    name: Excel.Interfaces.TableScopedCollectionData