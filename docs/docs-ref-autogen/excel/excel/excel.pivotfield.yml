### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotField:class'
    summary: |-
      表示 Excel 透视字段。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotField
    fullName: Excel.PivotField
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotField#applyFilter:member(1)'
      - 'excel!Excel.PivotField#clearAllFilters:member(1)'
      - 'excel!Excel.PivotField#clearFilter:member(1)'
      - 'excel!Excel.PivotField#clearFilter:member(2)'
      - 'excel!Excel.PivotField#context:member'
      - 'excel!Excel.PivotField#getFilters:member(1)'
      - 'excel!Excel.PivotField#id:member'
      - 'excel!Excel.PivotField#isFiltered:member(1)'
      - 'excel!Excel.PivotField#isFiltered:member(2)'
      - 'excel!Excel.PivotField#items:member'
      - 'excel!Excel.PivotField#load:member(1)'
      - 'excel!Excel.PivotField#load:member(2)'
      - 'excel!Excel.PivotField#load:member(3)'
      - 'excel!Excel.PivotField#name:member'
      - 'excel!Excel.PivotField#set:member(1)'
      - 'excel!Excel.PivotField#set:member(2)'
      - 'excel!Excel.PivotField#showAllItems:member'
      - 'excel!Excel.PivotField#sortByLabels:member(1)'
      - 'excel!Excel.PivotField#sortByValues:member(1)'
      - 'excel!Excel.PivotField#sortByValues:member(2)'
      - 'excel!Excel.PivotField#subtotals:member'
      - 'excel!Excel.PivotField#toJSON:member(1)'
  - uid: 'excel!Excel.PivotField#applyFilter:member(1)'
    summary: |-
      设置一个或多个字段的当前 PivotFilters，并将其应用于字段。 如果提供的筛选器无效或无法应用，则会引发异常。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyFilter(filter)
    fullName: applyFilter(filter)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFilter(filter: Excel.PivotFilters): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filter
          description: 配置的特定 PivotFilter 或包含多个配置的筛选器的 PivotFilters 接口。
          type:
            - 'excel!Excel.PivotFilters:interface'
  - uid: 'excel!Excel.PivotField#clearAllFilters:member(1)'
    summary: |-
      从字段的所有筛选器中清除所有条件。 这将删除对字段的任何活动筛选。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clearAllFilters()
    fullName: clearAllFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearAllFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-pivotfilters.yaml
          await Excel.run(async (context) => {
            // Clear all the PivotFilters.

            // Get the PivotTable.
            const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
            pivotTable.hierarchies.load("name");
            await context.sync();

            // Clear the filters on each PivotField.
            pivotTable.hierarchies.items.forEach((hierarchy) => {
              hierarchy.fields.getItem(hierarchy.name).clearAllFilters();
            });
            await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotField#clearFilter:member(1)'
    summary: |-
      清除给定类型的字段筛选器中的所有现有条件 (如果当前已将其应用) 。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clearFilter(filterType)
    fullName: clearFilter(filterType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilter(filterType: Excel.PivotFilterType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filterType
          description: 要清除其所有条件的字段的筛选器类型。
          type:
            - 'excel!Excel.PivotFilterType:enum'
  - uid: 'excel!Excel.PivotField#clearFilter:member(2)'
    summary: |-
      清除给定类型的字段筛选器中的所有现有条件 (如果当前已将其应用) 。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clearFilter(filterTypeString)
    fullName: clearFilter(filterTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilter(filterTypeString: "Unknown" | "Value" | "Manual" | "Label" | "Date"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filterTypeString
          description: 要清除其所有条件的字段的筛选器类型。
          type:
            - '"Unknown" | "Value" | "Manual" | "Label" | "Date"'
  - uid: 'excel!Excel.PivotField#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotField#getFilters:member(1)'
    summary: |-
      获取当前应用于字段的所有筛选器。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getFilters()
    fullName: getFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilters(): OfficeExtension.ClientResult<Excel.PivotFilters>;'
      return:
        type:
          - 'excel!Excel.PivotField#getFilters~0:complex'
        description: 包含所有活动筛选器的 PivotFilters 接口。
  - uid: 'excel!Excel.PivotField#id:member'
    summary: |-
      PivotField 的 ID。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotField#isFiltered:member(1)'
    summary: |-
      检查字段上是否有任何已应用的筛选器。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isFiltered(filterType)
    fullName: isFiltered(filterType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isFiltered(filterType?: Excel.PivotFilterType): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'excel!Excel.PivotField#isFiltered~0:complex'
        description: 如果字段具有已应用类型的筛选器，则为 True `filterType` 。 如果未指定 filterType，则返回 true （如果该字段包含任何已应用的筛选器）。
      parameters:
        - id: filterType
          description: 要检查的筛选器类型。 如果未提供任何类型，此方法将检查是否应用了任何筛选器。
          type:
            - 'excel!Excel.PivotFilterType:enum'
  - uid: 'excel!Excel.PivotField#isFiltered:member(2)'
    summary: |-
      检查字段上是否有任何已应用的筛选器。

      \[[API 集： ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isFiltered(filterTypeString)
    fullName: isFiltered(filterTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isFiltered(filterTypeString?: "Unknown" | "Value" | "Manual" | "Label" | "Date"): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'excel!Excel.PivotField#isFiltered~1:complex'
        description: 如果字段具有已应用类型的筛选器，则为 True `filterType` 。 如果未指定 filterType，则返回 true （如果该字段包含任何已应用的筛选器）。
      parameters:
        - id: filterTypeString
          description: 要检查的筛选器类型。 如果未提供任何类型，此方法将检查是否应用了任何筛选器。
          type:
            - '"Unknown" | "Value" | "Manual" | "Label" | "Date"'
  - uid: 'excel!Excel.PivotField#items:member'
    summary: |-
      返回与 PivotField 相关联的 PivotFields。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotItemCollection;'
      return:
        type:
          - 'excel!Excel.PivotItemCollection:class'
  - uid: 'excel!Excel.PivotField#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotFieldLoadOptions): Excel.PivotField;'
      return:
        type:
          - 'excel!Excel.PivotField:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.Interfaces.PivotFieldLoadOptions:interface'
  - uid: 'excel!Excel.PivotField#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotField;'
      return:
        type:
          - 'excel!Excel.PivotField:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotField#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotField;
      return:
        type:
          - 'excel!Excel.PivotField:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.PivotField#name:member'
    summary: |-
      PivotField 的名称。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotField#set:member(1)'
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名：

      `set(properties: Excel.PivotField): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotFieldUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。
          type:
            - 'excel!Excel.Interfaces.PivotFieldUpdateData:interface'
        - id: options
          description: 提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotField#set:member(2)'
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotField): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotField:class'
  - uid: 'excel!Excel.PivotField#showAllItems:member'
    summary: |-
      确定是否显示 PivotField 的所有项。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showAllItems
    fullName: showAllItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAllItems: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotField#sortByLabels:member(1)'
    summary: |-
      PivotField 排序。 如果指定 DataPivotHierarchy，则会基于它进行排序，如果未指定，则会基于 PivotField 本身进行排序。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: sortByLabels(sortBy)
    fullName: sortByLabels(sortBy)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByLabels(sortBy: SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: 指定是按升序还是降序进行排序。
          type:
            - 'excel!Excel.SortBy:enum'
  - uid: 'excel!Excel.PivotField#sortByValues:member(1)'
    summary: |-
      按给定范围中的指定值对 PivotField 进行排序。 作用域定义在具有相同 DataPivotHierarchy 中的多个值时，将使用哪些特定值进行排序。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByValues(sortBy: Excel.SortBy, valuesHierarchy: Excel.DataPivotHierarchy, pivotItemScope?: Array<PivotItem | string>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: 指定是按升序还是降序进行排序。
          type:
            - 'excel!Excel.SortBy:enum'
        - id: valuesHierarchy
          description: 指定要用于排序的数据轴上的值层次结构。
          type:
            - 'excel!Excel.DataPivotHierarchy:class'
        - id: pivotItemScope
          description: 应在排序范围中使用的项。 这些项目将构成要作为排序依据的行或列。 如果使用字符串而不是 PivotItem，则该字符串表示 PivotItem 的 ID。 如果您要对其进行排序的轴上没有数据层次结构以外的任何项目，则可以为空。
          type:
            - 'excel!Excel.PivotField#sortByValues~0:complex'
  - uid: 'excel!Excel.PivotField#sortByValues:member(2)'
    summary: |-
      按给定范围中的指定值对 PivotField 进行排序。 作用域定义在具有相同 DataPivotHierarchy 中的多个值时，将使用哪些特定值进行排序。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'sortByValues(sortByString, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortByString, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByValues(sortByString: "Ascending" | "Descending", valuesHierarchy: Excel.DataPivotHierarchy, pivotItemScope?: Array<PivotItem | string>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortByString
          description: 指定是按升序还是降序进行排序。
          type:
            - '"Ascending" | "Descending"'
        - id: valuesHierarchy
          description: 指定要用于排序的数据轴上的值层次结构。
          type:
            - 'excel!Excel.DataPivotHierarchy:class'
        - id: pivotItemScope
          description: 应在排序范围中使用的项。 这些项目将构成要作为排序依据的行或列。 如果使用字符串而不是 PivotItem，则该字符串表示 PivotItem 的 ID。 如果您要对其进行排序的轴上没有数据层次结构以外的任何项目，则可以为空。
          type:
            - 'excel!Excel.PivotField#sortByValues~1:complex'
  - uid: 'excel!Excel.PivotField#subtotals:member'
    summary: |-
      PivotField 小计。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: subtotals
    fullName: subtotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotals: Excel.Subtotals;'
      return:
        type:
          - 'excel!Excel.Subtotals:interface'
  - uid: 'excel!Excel.PivotField#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) ，而原始的 Excel. 透视字段对象是 API 对象，则该 `toJSON` 方法返回一个简单的 JavaScript 对象 (类型化为 `Excel.Interfaces.PivotFieldData`<!-- -->) ，其中包含原始对象中任何已加载的子属性的浅表副本。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotFieldData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotFieldData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.PivotFilters:interface'
    name: Excel.PivotFilters
  - uid: 'excel!Excel.PivotFilterType:enum'
    name: Excel.PivotFilterType
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotField#getFilters~0:complex'
    name: OfficeExtension.ClientResult<Excel.PivotFilters>
    fullName: OfficeExtension.ClientResult<Excel.PivotFilters>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotFilters:interface'
        name: Excel.PivotFilters
        fullName: Excel.PivotFilters
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.PivotField#isFiltered~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'excel!Excel.PivotField#isFiltered~1:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'excel!Excel.PivotItemCollection:class'
    name: Excel.PivotItemCollection
  - uid: 'excel!Excel.PivotField:class'
    name: Excel.PivotField
  - uid: 'excel!Excel.Interfaces.PivotFieldLoadOptions:interface'
    name: Excel.Interfaces.PivotFieldLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotFieldUpdateData:interface'
    name: Interfaces.PivotFieldUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SortBy:enum'
    name: SortBy
  - uid: 'excel!Excel.DataPivotHierarchy:class'
    name: Excel.DataPivotHierarchy
  - uid: 'excel!Excel.PivotField#sortByValues~0:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.PivotField#sortByValues~1:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.Subtotals:interface'
    name: Excel.Subtotals
  - uid: 'excel!Excel.Interfaces.PivotFieldData:interface'
    name: Excel.Interfaces.PivotFieldData