### YamlMime:TSType
name: Excel.RangeFill
uid: excel!Excel.RangeFill:class
package: excel!
fullName: Excel.RangeFill
summary: >-
  表示 range 对象的背景。


  \[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: color
  uid: excel!Excel.RangeFill#color:member
  package: excel!
  fullName: color
  summary: "表示背景颜色的 HTML 颜色代码，格式为 \\# RRGGBB (例如\"FFA500\") ，或作为已命名的 HTML 颜色 (例如\"orange\") \n\n\\[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]"
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'color: string;'
    return:
      type: string
- name: context
  uid: excel!Excel.RangeFill#context:member
  package: excel!
  fullName: context
  summary: 与对象关联的请求上下文。 这会将外接程序的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: pattern
  uid: excel!Excel.RangeFill#pattern:member
  package: excel!
  fullName: pattern
  summary: >-
    范围的图案。 有关详细信息，请参阅 `Excel.FillPattern`。 不支持 LinearGradient 和 RectangularGradient。 值 `null` 指示整个区域没有统一的模式设置。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'pattern: Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient";'
    return:
      type: <xref uid="excel!Excel.FillPattern:enum" /> | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"
- name: patternColor
  uid: excel!Excel.RangeFill#patternColor:member
  package: excel!
  fullName: patternColor
  summary: >-
    表示区域模式的颜色的 HTML 颜色代码，格式为 \# RRGGBB (例如"FFA500") ，或作为已命名的 HTML 颜色 (例如"orange") 。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'patternColor: string;'
    return:
      type: string
- name: patternTintAndShade
  uid: excel!Excel.RangeFill#patternTintAndShade:member
  package: excel!
  fullName: patternTintAndShade
  summary: >-
    指定使区域填充的图案颜色变亮或变暗的双精度型。 该值介于 -1 (最) 和 1 (最亮) ，原始颜色为 0。 `null`值指示区域没有统一 `patternTintAndShade` 设置。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'patternTintAndShade: number;'
    return:
      type: number
- name: tintAndShade
  uid: excel!Excel.RangeFill#tintAndShade:member
  package: excel!
  fullName: tintAndShade
  summary: >-
    指定使区域填充的颜色变亮或变暗的双精度值。 该值介于 -1 (最) 和 1 (最亮) ，原始颜色为 0。 `null`值指示区域没有统一 `tintAndShade` 设置。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'tintAndShade: number;'
    return:
      type: number
methods:
- name: clear()
  uid: excel!Excel.RangeFill#clear:member(1)
  package: excel!
  fullName: clear()
  summary: >-
    重置区域背景。


    \[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.clear();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: excel!Excel.RangeFill#load:member(1)
  package: excel!
  fullName: load(options)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.RangeFillLoadOptions): Excel.RangeFill;'
    parameters:
    - id: options
      description: 提供要加载的对象的属性的选项。
      type: <xref uid="excel!Excel.Interfaces.RangeFillLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.RangeFill#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeFill;'
    parameters:
    - id: propertyNames
      description: 以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.load('color');\n    return ctx.sync().then(function() {\n        console.log(rangeFill.color);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets fill color. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.fill.color = '0000FF';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.RangeFill#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.RangeFill;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，它是一个以逗号分隔的字符串，用于指定要加载的 `propertyNamesAndPaths.expand` 导航属性。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.RangeFill:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.RangeFill#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 同时设置对象的多个属性。 可以使用相应的属性传递普通对象，也可以传递同一类型的另一个 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: Excel.RangeFill): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.RangeFillUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性按等态结构构造到调用该方法的对象的属性。
      type: <xref uid="excel!Excel.Interfaces.RangeFillUpdateData:interface" />
    - id: options
      description: 提供在属性对象尝试设置任何只读属性时禁止错误的选项。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.RangeFill#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 基于现有的已加载对象，同时设置对象上的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.RangeFill): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.RangeFill:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.RangeFill#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: 重写 JavaScript 方法，以便向 API 对象 `toJSON()` 传递时提供更多有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->，反过来，调用传递给该对象的对象的方法。) 而原始 Excel.RangeFill 对象是一个 API 对象，该方法返回一个纯 `toJSON` JavaScript 对象， (类型为 `toJSON``Excel.Interfaces.RangeFillData`<!-- -->) 原始对象中任何加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFillData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.RangeFillData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: bb3a8beec0a23bf85fadecd4371a34ee59caf5e3
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50541752"
