### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Filter:class'
    summary: |-
      管理表格列的筛选。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Filter
    fullName: Excel.Filter
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Filter#apply:member(1)'
      - 'excel!Excel.Filter#applyBottomItemsFilter:member(1)'
      - 'excel!Excel.Filter#applyBottomPercentFilter:member(1)'
      - 'excel!Excel.Filter#applyCellColorFilter:member(1)'
      - 'excel!Excel.Filter#applyCustomFilter:member(1)'
      - 'excel!Excel.Filter#applyCustomFilter:member(2)'
      - 'excel!Excel.Filter#applyDynamicFilter:member(1)'
      - 'excel!Excel.Filter#applyDynamicFilter:member(2)'
      - 'excel!Excel.Filter#applyFontColorFilter:member(1)'
      - 'excel!Excel.Filter#applyIconFilter:member(1)'
      - 'excel!Excel.Filter#applyTopItemsFilter:member(1)'
      - 'excel!Excel.Filter#applyTopPercentFilter:member(1)'
      - 'excel!Excel.Filter#applyValuesFilter:member(1)'
      - 'excel!Excel.Filter#clear:member(1)'
      - 'excel!Excel.Filter#context:member'
      - 'excel!Excel.Filter#criteria:member'
      - 'excel!Excel.Filter#load:member(1)'
      - 'excel!Excel.Filter#load:member(2)'
      - 'excel!Excel.Filter#load:member(3)'
      - 'excel!Excel.Filter#toJSON:member(1)'
  - uid: 'excel!Excel.Filter#apply:member(1)'
    summary: |-
      在给定列中应用给定的筛选条件。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: apply(criteria)
    fullName: apply(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(criteria: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: 要应用的条件。
          type:
            - 'excel!Excel.FilterCriteria:interface'
  - uid: 'excel!Excel.Filter#applyBottomItemsFilter:member(1)'
    summary: |-
      将“Bottom Item”筛选器应用于列，以获取给定数量的元素。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyBottomItemsFilter(count)
    fullName: applyBottomItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: 要显示的底部元素的数量。
          type:
            - number
  - uid: 'excel!Excel.Filter#applyBottomPercentFilter:member(1)'
    summary: |-
      将“Bottom Percent”筛选器应用于列，以获取给定比例的元素。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyBottomPercentFilter(percent)
    fullName: applyBottomPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: 要显示的底部元素的百分比。
          type:
            - number
  - uid: 'excel!Excel.Filter#applyCellColorFilter:member(1)'
    summary: |-
      将“Cell Color”筛选器应用于列，以获取给定颜色。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyCellColorFilter(color)
    fullName: applyCellColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCellColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: 要显示的单元格的背景颜色。
          type:
            - string
  - uid: 'excel!Excel.Filter#applyCustomFilter:member(1)'
    summary: |-
      将 "Icon" 筛选器应用于列，以查找给定的条件字符串。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'applyCustomFilter(criteria1, criteria2, oper)'
    fullName: 'applyCustomFilter(criteria1, criteria2, oper)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, oper?: Excel.FilterOperator): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: 第一个条件字符串。
          type:
            - string
        - id: criteria2
          description: 可选。 第二个条件字符串。
          type:
            - string
        - id: oper
          description: 可选。 说明这两个条件如何联接的运算符。
          type:
            - 'excel!Excel.FilterOperator:enum'
  - uid: 'excel!Excel.Filter#applyCustomFilter:member(2)'
    summary: |-
      将 "Icon" 筛选器应用于列，以查找给定的条件字符串。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'applyCustomFilter(criteria1, criteria2, operString)'
    fullName: 'applyCustomFilter(criteria1, criteria2, operString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, operString?: "And" | "Or"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: 第一个条件字符串。
          type:
            - string
        - id: criteria2
          description: 可选。 第二个条件字符串。
          type:
            - string
        - id: operString
          description: 可选。 说明这两个条件如何联接的运算符。
          type:
            - '"And" | "Or"'
  - uid: 'excel!Excel.Filter#applyDynamicFilter:member(1)'
    summary: |-
      将“Dynamic”筛选器应用于列。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyDynamicFilter(criteria)
    fullName: applyDynamicFilter(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteria: Excel.DynamicFilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: 要应用的动态条件。
          type:
            - 'excel!Excel.DynamicFilterCriteria:enum'
  - uid: 'excel!Excel.Filter#applyDynamicFilter:member(2)'
    summary: |-
      将“Dynamic”筛选器应用于列。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyDynamicFilter(criteriaString)
    fullName: applyDynamicFilter(criteriaString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteriaString: "Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteriaString
          description: 要应用的动态条件。
          type:
            - '"Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"'
  - uid: 'excel!Excel.Filter#applyFontColorFilter:member(1)'
    summary: |-
      将“Font Color”筛选器应用于列，以获取给定颜色。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyFontColorFilter(color)
    fullName: applyFontColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFontColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: 要显示的单元格的字体颜色。
          type:
            - string
  - uid: 'excel!Excel.Filter#applyIconFilter:member(1)'
    summary: |-
      将 "Icon" 筛选器应用于列，以获取给定图标。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyIconFilter(icon)
    fullName: applyIconFilter(icon)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyIconFilter(icon: Excel.Icon): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: icon
          description: 要显示的单元格图标。
          type:
            - 'excel!Excel.Icon:interface'
  - uid: 'excel!Excel.Filter#applyTopItemsFilter:member(1)'
    summary: |-
      将“Top Item”筛选器应用于列，以获取给定数量的元素。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyTopItemsFilter(count)
    fullName: applyTopItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: 要显示的顶部元素的数量。
          type:
            - number
  - uid: 'excel!Excel.Filter#applyTopPercentFilter:member(1)'
    summary: |-
      将“Top Percent”筛选器应用于列，以获取给定比例的元素。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyTopPercentFilter(percent)
    fullName: applyTopPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: 要显示的顶部元素的百分比。
          type:
            - number
  - uid: 'excel!Excel.Filter#applyValuesFilter:member(1)'
    summary: |-
      将“Values”筛选器应用于列，获取给定值。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyValuesFilter(values)
    fullName: applyValuesFilter(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyValuesFilter(values: Array<string | FilterDatetime>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: values
          description: 要显示的值的列表。 这必须是一个字符串数组或 FilterDateTime 对象的数组。
          type:
            - 'excel!Excel.Filter#applyValuesFilter~0:complex'
  - uid: 'excel!Excel.Filter#clear:member(1)'
    summary: |-
      清除给定列上的 filter。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Filter#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Filter#criteria:member'
    summary: |-
      给定列上当前应用的筛选器。 只读。

      \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria;'
      return:
        type:
          - 'excel!Excel.FilterCriteria:interface'
  - uid: 'excel!Excel.Filter#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
    remarks: |-
      除了此签名之外，此方法还具有以下签名：

      `load(option?: string | string[]): Excel.Filter`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。

      `load(option?: { select?: string; expand?: string; }): Excel.Filter`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Filter`-仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.FilterLoadOptions): Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.FilterLoadOptions:interface'
  - uid: 'excel!Excel.Filter#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Filter#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.Filter#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel. Filter 对象是 API 对象，但`toJSON`方法返回一个简单的 JavaScript 对象（类型为`Excel.Interfaces.FilterData`<!-- -->），其中包含原始对象中所有已加载的子属性的浅表副本。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.FilterData;'
      return:
        type:
          - 'excel!Excel.Interfaces.FilterData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.FilterCriteria:interface'
    name: Excel.FilterCriteria
  - uid: 'excel!Excel.FilterOperator:enum'
    name: Excel.FilterOperator
  - uid: 'excel!Excel.DynamicFilterCriteria:enum'
    name: Excel.DynamicFilterCriteria
  - uid: 'excel!Excel.Icon:interface'
    name: Excel.Icon
  - uid: 'excel!Excel.Filter#applyValuesFilter~0:complex'
    name: Array<string | FilterDatetime>
    fullName: Array<string | Excel.FilterDatetime>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: '<string | '
        fullName: '<string | '
      - uid: 'excel!Excel.FilterDatetime:interface'
        name: FilterDatetime
        fullName: Excel.FilterDatetime
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Filter:class'
    name: Excel.Filter
  - uid: 'excel!Excel.Interfaces.FilterLoadOptions:interface'
    name: Excel.Interfaces.FilterLoadOptions
  - uid: 'excel!Excel.Interfaces.FilterData:interface'
    name: Excel.Interfaces.FilterData