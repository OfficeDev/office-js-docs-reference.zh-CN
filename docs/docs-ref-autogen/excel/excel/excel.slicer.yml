### YamlMime:TSType
name: Excel.Slicer
uid: excel!Excel.Slicer:class
package: excel!
fullName: Excel.Slicer
summary: >-
  表示 `Slicer` 工作簿中的对象。


  \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: caption
  uid: excel!Excel.Slicer#caption:member
  package: excel!
  fullName: caption
  summary: >-
    表示切片器的标题。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'caption: string;'
    return:
      type: string
- name: context
  uid: excel!Excel.Slicer#context:member
  package: excel!
  fullName: context
  summary: 与对象关联的请求上下文。 这会将外接程序的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: height
  uid: excel!Excel.Slicer#height:member
  package: excel!
  fullName: height
  summary: >-
    表示切片器的高度（以磅为单位）。 当设置为负值或零作为输入时 `InvalidArgument` 引发异常。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'height: number;'
    return:
      type: number
- name: id
  uid: excel!Excel.Slicer#id:member
  package: excel!
  fullName: id
  summary: >-
    表示切片器的唯一 ID。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: isFilterCleared
  uid: excel!Excel.Slicer#isFilterCleared:member
  package: excel!
  fullName: isFilterCleared
  summary: >-
    值 `true` 是当前应用于切片器的所有筛选器均被清除。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isFilterCleared: boolean;'
    return:
      type: boolean
- name: left
  uid: excel!Excel.Slicer#left:member
  package: excel!
  fullName: left
  summary: >-
    表示从切片器左侧到工作表左侧的距离（以磅为单位）。 当将负 `InvalidArgument` 值设置为输入时引发错误。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'left: number;'
    return:
      type: number
- name: name
  uid: excel!Excel.Slicer#name:member
  package: excel!
  fullName: name
  summary: >-
    表示切片器的名称。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
- name: nameInFormula
  uid: excel!Excel.Slicer#nameInFormula:member
  package: excel!
  fullName: nameInFormula
  summary: >-
    表示公式中使用切片器名称。


    \[[API 集：ExcelApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'nameInFormula: string;'
    return:
      type: string
- name: slicerItems
  uid: excel!Excel.Slicer#slicerItems:member
  package: excel!
  fullName: slicerItems
  summary: >-
    表示作为切片器一部分的切片器项的集合。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicerItems: Excel.SlicerItemCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerItemCollection:class" />
- name: slicerStyle
  uid: excel!Excel.Slicer#slicerStyle:member
  package: excel!
  fullName: slicerStyle
  summary: >-
    应用于切片器的样式。


    \[[API 集：ExcelApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly slicerStyle: Excel.SlicerStyle;'
    return:
      type: <xref uid="excel!Excel.SlicerStyle:class" />
- name: sortBy
  uid: excel!Excel.Slicer#sortBy:member
  package: excel!
  fullName: sortBy
  summary: >-
    表示切片器中的项目的排序顺序。 可能的值是："DataSourceOrder"、"Ascending"、"Descending"。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
    return:
      type: <xref uid="excel!Excel.SlicerSortType:enum" /> | "DataSourceOrder" | "Ascending" | "Descending"
- name: style
  uid: excel!Excel.Slicer#style:member
  package: excel!
  fullName: style
  summary: >-
    代表切片器样式的常量值。 可能的值包括："SlicerStyleLight1"到"SlicerStyleLight6"，"TableStyleOther1"到"TableStyleOther2"，"SlicerStyleDark1"到"SlicerStyleDark6"。 还可以指定工作簿中显示的用户定义的自定义样式。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-slicer.yaml\nawait Excel.run(async (context) => {\n    const slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.style = \"SlicerStyleLight6\";\n    await context.sync();\n});\n```"
- name: top
  uid: excel!Excel.Slicer#top:member
  package: excel!
  fullName: top
  summary: >-
    表示从切片器上边缘到工作表顶部的距离（以磅为单位）。 当将负 `InvalidArgument` 值设置为输入时引发错误。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'top: number;'
    return:
      type: number
- name: width
  uid: excel!Excel.Slicer#width:member
  package: excel!
  fullName: width
  summary: >-
    表示切片器的宽度（以磅为单位）。 当设置为负值或零作为输入时 `InvalidArgument` 引发错误。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'width: number;'
    return:
      type: number
- name: worksheet
  uid: excel!Excel.Slicer#worksheet:member
  package: excel!
  fullName: worksheet
  summary: >-
    表示包含切片器的工作表。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:class" />
methods:
- name: clearFilters()
  uid: excel!Excel.Slicer#clearFilters:member(1)
  package: excel!
  fullName: clearFilters()
  summary: >-
    清除当前切片器上应用的所有筛选器。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clearFilters(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-slicer.yaml\nawait Excel.run(async (context) => {\n    const slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.clearFilters();\n    await context.sync();\n});\n```"
- name: delete()
  uid: excel!Excel.Slicer#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    删除切片器。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-slicer.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    sheet.slicers.getItemAt(0).delete();\n    await context.sync();\n});\n```"
- name: getSelectedItems()
  uid: excel!Excel.Slicer#getSelectedItems:member(1)
  package: excel!
  fullName: getSelectedItems()
  summary: >-
    返回所选项目密钥的数组。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;
      description: ''
- name: load(options)
  uid: excel!Excel.Slicer#load:member(1)
  package: excel!
  fullName: load(options)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
    parameters:
    - id: options
      description: 提供要加载的对象的属性的选项。
      type: <xref uid="excel!Excel.Interfaces.SlicerLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Slicer#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
    parameters:
    - id: propertyNames
      description: 以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Slicer#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Slicer;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，它是一个以逗号分隔的字符串，用于指定要加载的 `propertyNamesAndPaths.expand` 导航属性。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: selectItems(items)
  uid: excel!Excel.Slicer#selectItems:member(1)
  package: excel!
  fullName: selectItems(items)
  summary: >-
    根据切片器项的键选择切片器项。 清除前面的选定内容。 如果数组为空，则默认情况下将选择所有项目。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'selectItems(items?: string[]): void;'
    parameters:
    - id: items
      description: 可选。 要选择的指定切片器项名称。
      type: string[]
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-slicer.yaml\nawait Excel.run(async (context) => {\n    const slicer = context.workbook.slicers.getItem(\"Fruit Slicer\");\n    slicer.selectItems([\"Lemon\", \"Lime\", \"Orange\"]);\n    await context.sync();\n});\n```"
- name: set(properties, options)
  uid: excel!Excel.Slicer#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 同时设置对象的多个属性。 可以使用相应的属性传递普通对象，也可以传递同一类型的另一个 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: Excel.Slicer): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性按等态结构构造到调用该方法的对象的属性。
      type: <xref uid="excel!Excel.Interfaces.SlicerUpdateData:interface" />
    - id: options
      description: 提供在属性对象尝试设置任何只读属性时禁止错误的选项。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Slicer#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 基于现有的已加载对象，同时设置对象上的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Slicer): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Slicer:class" />
    return:
      type: void
      description: ''
- name: setStyle(style)
  uid: excel!Excel.Slicer#setStyle:member(1)
  package: excel!
  fullName: setStyle(style)
  summary: >-
    设置应用于切片器的样式。


    \[[API 集：ExcelApi BETA (预览版) ](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setStyle(style: string | SlicerStyle | BuiltInSlicerStyle): void;'
    parameters:
    - id: style
      description: 应用于切片器的样式。 如果提供的字符串与任何样式的名称不匹配， `InvalidArgument` 则会引发错误。
      type: string | <xref uid="excel!Excel.SlicerStyle:class" /> | <xref uid="excel!Excel.BuiltInSlicerStyle:enum" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Slicer#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: 重写 JavaScript 方法，以便向 API 对象 `toJSON()` 传递时提供更多有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->，反过来，调用传递给它的对象的方法。) 而原始 Excel.Slicer 对象是一个 API 对象，该方法返回一个纯 `toJSON` JavaScript 对象， (类型为 `toJSON``Excel.Interfaces.SlicerData`<!-- -->) 原始对象中任何加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.SlicerData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: b81f2141b698cd3873dbac5435f202e238ecae06
  ms.sourcegitcommit: 276e655472f82435a4b1227fbbb2feb687b659c0
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 03/08/2021
  ms.locfileid: "50541368"
