### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Slicer
    summary: |-
      <span data-ttu-id="e693a-101">表示工作簿中的切片器对象。</span><span class="sxs-lookup"><span data-stu-id="e693a-101">Represents a slicer object in the workbook.</span></span>

      <span data-ttu-id="e693a-102">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Slicer.caption
      - excel.Excel.Slicer.clearFilters
      - excel.Excel.Slicer.context
      - excel.Excel.Slicer.delete
      - excel.Excel.Slicer.getSelectedItems
      - excel.Excel.Slicer.height
      - excel.Excel.Slicer.id
      - excel.Excel.Slicer.isFilterCleared
      - excel.Excel.Slicer.left
      - excel.Excel.Slicer.load
      - excel.Excel.Slicer.load_1
      - excel.Excel.Slicer.load_2
      - excel.Excel.Slicer.name
      - excel.Excel.Slicer.nameInFormula
      - excel.Excel.Slicer.selectItems
      - excel.Excel.Slicer.set
      - excel.Excel.Slicer.set_1
      - excel.Excel.Slicer.slicerItems
      - excel.Excel.Slicer.sortBy
      - excel.Excel.Slicer.style
      - excel.Excel.Slicer.toJSON
      - excel.Excel.Slicer.top
      - excel.Excel.Slicer.width
      - excel.Excel.Slicer.worksheet
  - uid: excel.Excel.Slicer.caption
    summary: |-
      <span data-ttu-id="e693a-103">表示切片器的标题。</span><span class="sxs-lookup"><span data-stu-id="e693a-103">Represents the caption of slicer.</span></span>

      <span data-ttu-id="e693a-104">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.clearFilters
    summary: |-
      <span data-ttu-id="e693a-105">清除当前切片器上应用的所有筛选器。</span><span class="sxs-lookup"><span data-stu-id="e693a-105">Clears all the filters currently applied on the slicer.</span></span>

      <span data-ttu-id="e693a-106">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e693a-107">示例</span><span class="sxs-lookup"><span data-stu-id="e693a-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.clearFilters();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.context
    summary: <span data-ttu-id="e693a-108">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="e693a-108">The request context associated with the object.</span></span> <span data-ttu-id="e693a-109">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="e693a-109">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Slicer.delete
    summary: |-
      <span data-ttu-id="e693a-110">删除切片器。</span><span class="sxs-lookup"><span data-stu-id="e693a-110">Deletes the slicer.</span></span>

      <span data-ttu-id="e693a-111">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e693a-112">示例</span><span class="sxs-lookup"><span data-stu-id="e693a-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.slicers.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.getSelectedItems
    summary: |-
      <span data-ttu-id="e693a-113">返回所选项目密钥的数组。</span><span class="sxs-lookup"><span data-stu-id="e693a-113">Returns an array of selected items' keys.</span></span> <span data-ttu-id="e693a-114">只读。</span><span class="sxs-lookup"><span data-stu-id="e693a-114">Read-only.</span></span>

      <span data-ttu-id="e693a-115">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: ''
  - uid: excel.Excel.Slicer.height
    summary: |-
      <span data-ttu-id="e693a-116">表示切片器的高度（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="e693a-116">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id="e693a-117">当设置为负值或零作为输入时, 将引发无效参数异常。</span><span class="sxs-lookup"><span data-stu-id="e693a-117">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="e693a-118">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.id
    summary: |-
      <span data-ttu-id="e693a-119">表示切片器的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="e693a-119">Represents the unique id of slicer.</span></span> <span data-ttu-id="e693a-120">只读。</span><span class="sxs-lookup"><span data-stu-id="e693a-120">Read-only.</span></span>

      <span data-ttu-id="e693a-121">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.isFilterCleared
    summary: |-
      <span data-ttu-id="e693a-122">如果已清除当前切片器上应用的所有筛选器，则为 True。</span><span class="sxs-lookup"><span data-stu-id="e693a-122">True if all filters currently applied on the slicer are cleared.</span></span>

      <span data-ttu-id="e693a-123">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Slicer.left
    summary: |-
      <span data-ttu-id="e693a-124">表示从切片器左侧到工作表左侧的距离（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="e693a-124">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id="e693a-125">当设置为负值作为输入时引发无效参数异常。</span><span class="sxs-lookup"><span data-stu-id="e693a-125">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="e693a-126">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.load
    summary: <span data-ttu-id="e693a-127">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e693a-128">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="e693a-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e693a-129">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="e693a-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e693a-130">`load(option?: string | string[]): Excel.Slicer`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-130">`load(option?: string | string[]): Excel.Slicer` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e693a-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e693a-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="e693a-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer` - Only available on collection types.</span></span> <span data-ttu-id="e693a-133">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="e693a-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="e693a-134">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="e693a-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e693a-135">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="e693a-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e693a-136">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="e693a-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.SlicerLoadOptions
  - uid: excel.Excel.Slicer.load_1
    summary: '<span data-ttu-id="e693a-137">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e693a-138">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="e693a-138">You must call `context.sync()` before reading the properties.</span></span>'
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="e693a-139">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Slicer.load_2
    summary: '<span data-ttu-id="e693a-140">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e693a-141">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="e693a-141">You must call `context.sync()` before reading the properties.</span></span>'
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e693a-142">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Slicer.name
    summary: |-
      <span data-ttu-id="e693a-143">表示切片器的名称。</span><span class="sxs-lookup"><span data-stu-id="e693a-143">Represents the name of slicer.</span></span>

      <span data-ttu-id="e693a-144">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-144">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.nameInFormula
    summary: |-
      <span data-ttu-id="e693a-145">表示公式中使用切片器名称。</span><span class="sxs-lookup"><span data-stu-id="e693a-145">Represents the slicer name used in the formula.</span></span>

      <span data-ttu-id="e693a-146">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: nameInFormula
    fullName: nameInFormula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nameInFormula: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.selectItems
    summary: |-
      <span data-ttu-id="e693a-147">根据密钥选择切片器项目。</span><span class="sxs-lookup"><span data-stu-id="e693a-147">Select slicer items based on their keys.</span></span> <span data-ttu-id="e693a-148">之前的选择将被清除。</span><span class="sxs-lookup"><span data-stu-id="e693a-148">Previous selection will be cleared.</span></span> <span data-ttu-id="e693a-149">如果数组为空, 则默认情况下将选择所有项目。</span><span class="sxs-lookup"><span data-stu-id="e693a-149">All items will be selected by default if the array is empty.</span></span>

      <span data-ttu-id="e693a-150">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-150">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e693a-151">示例</span><span class="sxs-lookup"><span data-stu-id="e693a-151">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.selectItems(["Lemon", "Lime", "Orange"]);
              await context.sync();
          });
          ```
      parameters:
        - id: items
          description: <span data-ttu-id="e693a-152">可选。</span><span class="sxs-lookup"><span data-stu-id="e693a-152">Optional.</span></span> <span data-ttu-id="e693a-153">要选择的指定切片器项目名称。</span><span class="sxs-lookup"><span data-stu-id="e693a-153">The specified slicer item names to be selected.</span></span>
          type:
            - 'string[]'
  - uid: excel.Excel.Slicer.set
    summary: '<span data-ttu-id="e693a-154">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-154">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e693a-155">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="e693a-155">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e693a-156">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="e693a-156">This method has the following additional signature:</span></span>

      `set(properties: Excel.Slicer): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="e693a-157">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-157">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.SlicerUpdateData
        - id: options
          description: '<span data-ttu-id="e693a-158">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="e693a-158">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Slicer.set_1
    summary: '<span data-ttu-id="e693a-159">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="e693a-159">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Slicer
  - uid: excel.Excel.Slicer.slicerItems
    summary: |-
      <span data-ttu-id="e693a-160">表示作为切片器一部分的 SlicerItems 的集合。</span><span class="sxs-lookup"><span data-stu-id="e693a-160">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id="e693a-161">只读。</span><span class="sxs-lookup"><span data-stu-id="e693a-161">Read-only.</span></span>

      <span data-ttu-id="e693a-162">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-162">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - excel.Excel.SlicerItemCollection
  - uid: excel.Excel.Slicer.sortBy
    summary: |-
      <span data-ttu-id="e693a-163">表示切片器中的项目的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="e693a-163">Represents the sort order of the items in the slicer.</span></span> <span data-ttu-id="e693a-164">可能的值为：DataSourceOrder、Ascending、Descending。</span><span class="sxs-lookup"><span data-stu-id="e693a-164">Possible values are: DataSourceOrder, Ascending, Descending.</span></span>

      <span data-ttu-id="e693a-165">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-165">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
  - uid: excel.Excel.Slicer.style
    summary: |-
      <span data-ttu-id="e693a-166">表示切片器样式的常量值。</span><span class="sxs-lookup"><span data-stu-id="e693a-166">Constant value that represents the Slicer style.</span></span> <span data-ttu-id="e693a-167">可能的值为: "SlicerStyleLight1" 到 "SlicerStyleLight6"、"TableStyleOther1" 通过 "TableStyleOther2"、"SlicerStyleDark1" 到 "SlicerStyleDark6"。</span><span class="sxs-lookup"><span data-stu-id="e693a-167">Possible values are: "SlicerStyleLight1" through "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".</span></span> <span data-ttu-id="e693a-168">还可以指定工作簿中显示的用户定义的自定义样式。</span><span class="sxs-lookup"><span data-stu-id="e693a-168">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="e693a-169">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-169">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e693a-170">示例</span><span class="sxs-lookup"><span data-stu-id="e693a-170">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.style = "SlicerStyleLight6";
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.toJSON
    summary: '<span data-ttu-id="e693a-171">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e693a-171">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e693a-172">.</span><span class="sxs-lookup"><span data-stu-id="e693a-172"></span></span> <span data-ttu-id="e693a-173">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e693a-173"></span></span><!-- --><span data-ttu-id="e693a-174">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel 切片器对象是 API 对象, 但`toJSON`方法返回一个简单的 JavaScript 对象 (类型为`Excel.Interfaces.SlicerData`</span><span class="sxs-lookup"><span data-stu-id="e693a-174">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`</span></span><!-- --><span data-ttu-id="e693a-175">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="e693a-175">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerData
        description: ''
  - uid: excel.Excel.Slicer.top
    summary: |-
      <span data-ttu-id="e693a-176">表示从切片器上边缘到工作表顶部的距离（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="e693a-176">Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.</span></span> <span data-ttu-id="e693a-177">当设置为负值作为输入时引发无效参数异常。</span><span class="sxs-lookup"><span data-stu-id="e693a-177">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="e693a-178">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.width
    summary: |-
      <span data-ttu-id="e693a-179">表示切片器的宽度（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="e693a-179">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id="e693a-180">当设置为负值或零作为输入时, 将引发无效参数异常。</span><span class="sxs-lookup"><span data-stu-id="e693a-180">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="e693a-181">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-181">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.worksheet
    summary: |-
      <span data-ttu-id="e693a-182">表示包含切片器的工作表。</span><span class="sxs-lookup"><span data-stu-id="e693a-182">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id="e693a-183">只读。</span><span class="sxs-lookup"><span data-stu-id="e693a-183">Read-only.</span></span>

      <span data-ttu-id="e693a-184">\[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e693a-184">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet