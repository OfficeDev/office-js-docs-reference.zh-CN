### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Slicer:class'
    summary: |-
      <span data-ttu-id="6ea4d-101">表示工作簿中的切片器对象。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-101">Represents a slicer object in the workbook.</span></span>

      <span data-ttu-id="6ea4d-102">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Slicer#caption:member'
      - 'excel!Excel.Slicer#clearFilters:member(1)'
      - 'excel!Excel.Slicer#context:member'
      - 'excel!Excel.Slicer#delete:member(1)'
      - 'excel!Excel.Slicer#getSelectedItems:member(1)'
      - 'excel!Excel.Slicer#height:member'
      - 'excel!Excel.Slicer#id:member'
      - 'excel!Excel.Slicer#isFilterCleared:member'
      - 'excel!Excel.Slicer#left:member'
      - 'excel!Excel.Slicer#load:member(1)'
      - 'excel!Excel.Slicer#load:member(2)'
      - 'excel!Excel.Slicer#load:member(3)'
      - 'excel!Excel.Slicer#name:member'
      - 'excel!Excel.Slicer#nameInFormula:member'
      - 'excel!Excel.Slicer#selectItems:member(1)'
      - 'excel!Excel.Slicer#set:member(1)'
      - 'excel!Excel.Slicer#set:member(2)'
      - 'excel!Excel.Slicer#slicerItems:member'
      - 'excel!Excel.Slicer#sortBy:member'
      - 'excel!Excel.Slicer#style:member'
      - 'excel!Excel.Slicer#toJSON:member(1)'
      - 'excel!Excel.Slicer#top:member'
      - 'excel!Excel.Slicer#width:member'
      - 'excel!Excel.Slicer#worksheet:member'
  - uid: 'excel!Excel.Slicer#caption:member'
    summary: |-
      <span data-ttu-id="6ea4d-103">表示切片器的标题。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-103">Represents the caption of slicer.</span></span>

      <span data-ttu-id="6ea4d-104">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#clearFilters:member(1)'
    summary: |-
      <span data-ttu-id="6ea4d-105">清除当前切片器上应用的所有筛选器。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-105">Clears all the filters currently applied on the slicer.</span></span>

      <span data-ttu-id="6ea4d-106">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6ea4d-107">示例</span><span class="sxs-lookup"><span data-stu-id="6ea4d-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.clearFilters();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#context:member'
    summary: <span data-ttu-id="6ea4d-108">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-108">The request context associated with the object.</span></span> <span data-ttu-id="6ea4d-109">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-109">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Slicer#delete:member(1)'
    summary: |-
      <span data-ttu-id="6ea4d-110">删除切片器。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-110">Deletes the slicer.</span></span>

      <span data-ttu-id="6ea4d-111">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6ea4d-112">示例</span><span class="sxs-lookup"><span data-stu-id="6ea4d-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.slicers.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#getSelectedItems:member(1)'
    summary: |-
      <span data-ttu-id="6ea4d-113">返回所选项目密钥的数组。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-113">Returns an array of selected items' keys.</span></span> <span data-ttu-id="6ea4d-114">只读。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-114">Read-only.</span></span>

      <span data-ttu-id="6ea4d-115">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'excel!Excel.Slicer#getSelectedItems~0:complex'
        description: ''
  - uid: 'excel!Excel.Slicer#height:member'
    summary: |-
      <span data-ttu-id="6ea4d-116">表示切片器的高度（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-116">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id="6ea4d-117">引发 "参数无效或丢失或格式不正确"。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-117">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="6ea4d-118">在设置为负值或零作为输入时出现异常。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-118">exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="6ea4d-119">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-119">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#id:member'
    summary: |-
      <span data-ttu-id="6ea4d-120">表示切片器的唯一 ID。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-120">Represents the unique id of slicer.</span></span> <span data-ttu-id="6ea4d-121">只读。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-121">Read-only.</span></span>

      <span data-ttu-id="6ea4d-122">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#isFilterCleared:member'
    summary: |-
      <span data-ttu-id="6ea4d-123">如果已清除当前切片器上应用的所有筛选器，则为 True。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-123">True if all filters currently applied on the slicer are cleared.</span></span>

      <span data-ttu-id="6ea4d-124">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-124">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Slicer#left:member'
    summary: |-
      <span data-ttu-id="6ea4d-125">表示从切片器左侧到工作表左侧的距离（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-125">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id="6ea4d-126">引发 "参数无效或丢失或格式不正确"。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-126">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="6ea4d-127">将负值设置为 input 时出现异常。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-127">exception when set with negative value as input.</span></span>

      <span data-ttu-id="6ea4d-128">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-128">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#load:member(1)'
    summary: <span data-ttu-id="6ea4d-129">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6ea4d-130">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-130">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="6ea4d-131">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-131">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerLoadOptions:interface'
  - uid: 'excel!Excel.Slicer#load:member(2)'
    summary: <span data-ttu-id="6ea4d-132">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6ea4d-133">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-133">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="6ea4d-134">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Slicer#load:member(3)'
    summary: <span data-ttu-id="6ea4d-135">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6ea4d-136">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-136">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Slicer;
      return:
        type:
          - 'excel!Excel.Slicer:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6ea4d-137">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-137">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Slicer#name:member'
    summary: |-
      <span data-ttu-id="6ea4d-138">表示切片器的名称。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-138">Represents the name of slicer.</span></span>

      <span data-ttu-id="6ea4d-139">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-139">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#nameInFormula:member'
    summary: |-
      <span data-ttu-id="6ea4d-140">表示公式中使用切片器名称。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-140">Represents the slicer name used in the formula.</span></span>

      <span data-ttu-id="6ea4d-141">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: nameInFormula
    fullName: nameInFormula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nameInFormula: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Slicer#selectItems:member(1)'
    summary: |-
      <span data-ttu-id="6ea4d-142">根据它们的键选择切片器项目。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-142">Selects slicer items based on their keys.</span></span> <span data-ttu-id="6ea4d-143">将清除以前的选择。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-143">The previous selections are cleared.</span></span> <span data-ttu-id="6ea4d-144">如果数组为空，则默认情况下将选择所有项目。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-144">All items will be selected by default if the array is empty.</span></span>

      <span data-ttu-id="6ea4d-145">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-145">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6ea4d-146">示例</span><span class="sxs-lookup"><span data-stu-id="6ea4d-146">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.selectItems(["Lemon", "Lime", "Orange"]);
              await context.sync();
          });
          ```
      parameters:
        - id: items
          description: <span data-ttu-id="6ea4d-147">可选。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-147">Optional.</span></span> <span data-ttu-id="6ea4d-148">要选择的指定切片器项目名称。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-148">The specified slicer item names to be selected.</span></span>
          type:
            - 'string[]'
  - uid: 'excel!Excel.Slicer#set:member(1)'
    summary: '<span data-ttu-id="6ea4d-149">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-149">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6ea4d-150">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-150">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="6ea4d-151">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="6ea4d-151">This method has the following additional signature:</span></span>

      `set(properties: Excel.Slicer): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="6ea4d-152">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-152">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.SlicerUpdateData:interface'
        - id: options
          description: <span data-ttu-id="6ea4d-153">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-153">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Slicer#set:member(2)'
    summary: '<span data-ttu-id="6ea4d-154">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-154">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Slicer:class'
  - uid: 'excel!Excel.Slicer#slicerItems:member'
    summary: |-
      <span data-ttu-id="6ea4d-155">表示作为切片器一部分的 SlicerItems 的集合。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-155">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id="6ea4d-156">只读。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-156">Read-only.</span></span>

      <span data-ttu-id="6ea4d-157">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-157">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - 'excel!Excel.SlicerItemCollection:class'
  - uid: 'excel!Excel.Slicer#sortBy:member'
    summary: |-
      <span data-ttu-id="6ea4d-158">表示切片器中的项目的排序顺序。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-158">Represents the sort order of the items in the slicer.</span></span> <span data-ttu-id="6ea4d-159">可能的值为： "DataSourceOrder"、"升序"、"降序"。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-159">Possible values are: "DataSourceOrder", "Ascending", "Descending".</span></span>

      <span data-ttu-id="6ea4d-160">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-160">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - 'excel!Excel.Slicer#sortBy~0:complex'
  - uid: 'excel!Excel.Slicer#style:member'
    summary: |-
      <span data-ttu-id="6ea4d-161">表示切片器样式的常量值。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-161">Constant value that represents the Slicer style.</span></span> <span data-ttu-id="6ea4d-162">可能的值为： "SlicerStyleLight1" 到 "SlicerStyleLight6"、"TableStyleOther1" 通过 "TableStyleOther2"、"SlicerStyleDark1" 到 "SlicerStyleDark6"。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-162">Possible values are: "SlicerStyleLight1" through "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".</span></span> <span data-ttu-id="6ea4d-163">还可以指定工作簿中显示的用户定义的自定义样式。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-163">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="6ea4d-164">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-164">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6ea4d-165">示例</span><span class="sxs-lookup"><span data-stu-id="6ea4d-165">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.style = "SlicerStyleLight6";
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Slicer#toJSON:member(1)'
    summary: '<span data-ttu-id="6ea4d-166">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6ea4d-166">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6ea4d-167">.</span><span class="sxs-lookup"><span data-stu-id="6ea4d-167"></span></span> <span data-ttu-id="6ea4d-168">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6ea4d-168"></span></span><!-- --><span data-ttu-id="6ea4d-169">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel 切片器对象是 API 对象，但`toJSON`方法返回一个简单的 JavaScript 对象（类型为`Excel.Interfaces.SlicerData`</span><span class="sxs-lookup"><span data-stu-id="6ea4d-169">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`</span></span><!-- --><span data-ttu-id="6ea4d-170">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-170">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SlicerData:interface'
        description: ''
  - uid: 'excel!Excel.Slicer#top:member'
    summary: |-
      <span data-ttu-id="6ea4d-171">表示从切片器上边缘到工作表顶部的距离（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-171">Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.</span></span> <span data-ttu-id="6ea4d-172">引发 "参数无效或丢失或格式不正确"。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-172">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="6ea4d-173">将负值设置为 input 时出现异常。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-173">exception when set with negative value as input.</span></span>

      <span data-ttu-id="6ea4d-174">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-174">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#width:member'
    summary: |-
      <span data-ttu-id="6ea4d-175">表示切片器的宽度（以磅为单位）。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-175">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id="6ea4d-176">引发 "参数无效或丢失或格式不正确"。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-176">Throws an "The argument is invalid or missing or has an incorrect format."</span></span> <span data-ttu-id="6ea4d-177">在设置为负值或零作为输入时出现异常。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-177">exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="6ea4d-178">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Slicer#worksheet:member'
    summary: |-
      <span data-ttu-id="6ea4d-179">表示包含切片器的工作表。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-179">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id="6ea4d-180">只读。</span><span class="sxs-lookup"><span data-stu-id="6ea4d-180">Read-only.</span></span>

      <span data-ttu-id="6ea4d-181">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6ea4d-181">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Slicer#getSelectedItems~0:complex'
    name: 'OfficeExtension.ClientResult<string[]>'
    fullName: 'OfficeExtension.ClientResult<string[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'excel!Excel.Slicer:class'
    name: Excel.Slicer
  - uid: 'excel!Excel.Interfaces.SlicerLoadOptions:interface'
    name: Excel.Interfaces.SlicerLoadOptions
  - uid: 'excel!Excel.Interfaces.SlicerUpdateData:interface'
    name: Interfaces.SlicerUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SlicerItemCollection:class'
    name: Excel.SlicerItemCollection
  - uid: 'excel!Excel.Slicer#sortBy~0:complex'
    name: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    fullName: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
    spec.typeScript:
      - uid: 'excel!Excel.SlicerSortType:enum'
        name: Excel.SlicerSortType
        fullName: Excel.SlicerSortType
      - name: ' | "DataSourceOrder" | "Ascending" | "Descending"'
        fullName: ' | "DataSourceOrder" | "Ascending" | "Descending"'
  - uid: 'excel!Excel.Interfaces.SlicerData:interface'
    name: Excel.Interfaces.SlicerData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet