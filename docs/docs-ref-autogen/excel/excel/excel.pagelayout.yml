### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PageLayout
    summary: '\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]'
    name: Excel.PageLayout
    fullName: Excel.PageLayout
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.PageLayout.blackAndWhite
      - excel.Excel.PageLayout.bottomMargin
      - excel.Excel.PageLayout.centerHorizontally
      - excel.Excel.PageLayout.centerVertically
      - excel.Excel.PageLayout.context
      - excel.Excel.PageLayout.draftMode
      - excel.Excel.PageLayout.firstPageNumber
      - excel.Excel.PageLayout.footerMargin
      - excel.Excel.PageLayout.getPrintArea
      - excel.Excel.PageLayout.getPrintAreaOrNullObject
      - excel.Excel.PageLayout.getPrintTitleColumns
      - excel.Excel.PageLayout.getPrintTitleColumnsOrNullObject
      - excel.Excel.PageLayout.getPrintTitleRows
      - excel.Excel.PageLayout.getPrintTitleRowsOrNullObject
      - excel.Excel.PageLayout.headerMargin
      - excel.Excel.PageLayout.headersFooters
      - excel.Excel.PageLayout.leftMargin
      - excel.Excel.PageLayout.load
      - excel.Excel.PageLayout.load_1
      - excel.Excel.PageLayout.load_2
      - excel.Excel.PageLayout.orientation
      - excel.Excel.PageLayout.paperSize
      - excel.Excel.PageLayout.printComments
      - excel.Excel.PageLayout.printErrors
      - excel.Excel.PageLayout.printGridlines
      - excel.Excel.PageLayout.printHeadings
      - excel.Excel.PageLayout.printOrder
      - excel.Excel.PageLayout.rightMargin
      - excel.Excel.PageLayout.set
      - excel.Excel.PageLayout.set_1
      - excel.Excel.PageLayout.setPrintArea
      - excel.Excel.PageLayout.setPrintMargins
      - excel.Excel.PageLayout.setPrintMargins_1
      - excel.Excel.PageLayout.setPrintTitleColumns
      - excel.Excel.PageLayout.setPrintTitleRows
      - excel.Excel.PageLayout.toJSON
      - excel.Excel.PageLayout.topMargin
      - excel.Excel.PageLayout.zoom
  - uid: excel.Excel.PageLayout.blackAndWhite
    summary: |-
      获取或设置工作表的黑白打印选项。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: blackAndWhite
    fullName: blackAndWhite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'blackAndWhite: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PageLayout.bottomMargin
    summary: |-
      获取或设置要用于打印的工作表的底部页边距（以磅为单位）。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: bottomMargin
    fullName: bottomMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bottomMargin: number;'
      return:
        type:
          - number
  - uid: excel.Excel.PageLayout.centerHorizontally
    summary: |-
      获取或设置工作表的中心水平标记。 此标记确定在打印时是否水平居中工作表。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: centerHorizontally
    fullName: centerHorizontally
    langs:
      - typeScript
    type: property
    syntax:
      content: 'centerHorizontally: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.centerHorizontally = true;
              farmSheet.pageLayout.centerVertically = true;
              await context.sync();
          });
          ```
  - uid: excel.Excel.PageLayout.centerVertically
    summary: |-
      获取或设置工作表的中心垂直标记。 此标记确定在打印时是否垂直居中工作表。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: centerVertically
    fullName: centerVertically
    langs:
      - typeScript
    type: property
    syntax:
      content: 'centerVertically: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.centerHorizontally = true;
              farmSheet.pageLayout.centerVertically = true;
              await context.sync();
          });
          ```
  - uid: excel.Excel.PageLayout.context
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.PageLayout.draftMode
    summary: |-
      获取或设置工作表的草稿模式选项。 如果为 True，则将打印没有图形的工作表。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: draftMode
    fullName: draftMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'draftMode: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PageLayout.firstPageNumber
    summary: |-
      获取或设置要打印的工作表的首页页码。 Null 值表示“自动”页码编号。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: firstPageNumber
    fullName: firstPageNumber
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstPageNumber: number | "";'
      return:
        type:
          - number | ""
  - uid: excel.Excel.PageLayout.footerMargin
    summary: |-
      获取或设置在打印时使用的工作表的页脚边距（以磅为单位）。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: footerMargin
    fullName: footerMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'footerMargin: number;'
      return:
        type:
          - number
  - uid: excel.Excel.PageLayout.getPrintArea
    summary: |-
      获取包含一个或多个矩形区域的 RangeAreas 对象，它表示工作表的打印区域。 如果没有打印区域，则将引发 ItemNotFound 错误。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintArea()
    fullName: getPrintArea()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintArea(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.PageLayout.getPrintAreaOrNullObject
    summary: |-
      获取包含一个或多个矩形区域的 RangeAreas 对象，它表示工作表的打印区域。 如果没有打印区域，则将返回 null 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintAreaOrNullObject()
    fullName: getPrintAreaOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintAreaOrNullObject(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.PageLayout.getPrintTitleColumns
    summary: |-
      获取表示标题列的 Range 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintTitleColumns()
    fullName: getPrintTitleColumns()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleColumns(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PageLayout.getPrintTitleColumnsOrNullObject
    summary: |-
      获取表示标题列的 Range 对象。 如果未设置，则将返回 null 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintTitleColumnsOrNullObject()
    fullName: getPrintTitleColumnsOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleColumnsOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PageLayout.getPrintTitleRows
    summary: |-
      获取表示标题行的 Range 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintTitleRows()
    fullName: getPrintTitleRows()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleRows(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PageLayout.getPrintTitleRowsOrNullObject
    summary: |-
      获取表示标题行的 Range 对象。 如果未设置，则将返回 null 对象。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintTitleRowsOrNullObject()
    fullName: getPrintTitleRowsOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleRowsOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PageLayout.headerMargin
    summary: |-
      获取或设置在打印时使用的工作表的页眉边距（以磅为单位）。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: headerMargin
    fullName: headerMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headerMargin: number;'
      return:
        type:
          - number
  - uid: excel.Excel.PageLayout.headersFooters
    summary: |-
      工作表的页眉和页脚配置。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: headersFooters
    fullName: headersFooters
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly headersFooters: Excel.HeaderFooterGroup;'
      return:
        type:
          - excel.Excel.HeaderFooterGroup
  - uid: excel.Excel.PageLayout.leftMargin
    summary: |-
      获取或设置在打印时使用的工作表的左边距（以磅为单位）。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: leftMargin
    fullName: leftMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftMargin: number;'
      return:
        type:
          - number
  - uid: excel.Excel.PageLayout.load
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
    remarks: |-
      除了此签名之外, 此方法还具有以下签名:

      `load(option?: string | string[]): Excel.PageLayout`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。

      `load(option?: { select?: string; expand?: string; }): Excel.PageLayout`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PageLayout`-仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PageLayoutLoadOptions): Excel.PageLayout;'
      return:
        type:
          - excel.Excel.PageLayout
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PageLayoutLoadOptions
  - uid: excel.Excel.PageLayout.load_1
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PageLayout;'
      return:
        type:
          - excel.Excel.PageLayout
        description: ''
      parameters:
        - id: propertyNames
          description: '一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。'
          type:
            - 'string | string[]'
  - uid: excel.Excel.PageLayout.load_2
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PageLayout;'
      return:
        type:
          - excel.Excel.PageLayout
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.PageLayout.orientation
    summary: |-
      获取或设置工作表的页面方向。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: orientation
    fullName: orientation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'orientation: Excel.PageOrientation | "Portrait" | "Landscape";'
      return:
        type:
          - Excel.PageOrientation | "Portrait" | "Landscape"
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.orientation = Excel.PageOrientation.landscape;
              await context.sync();
          });
          ```
  - uid: excel.Excel.PageLayout.paperSize
    summary: |-
      获取或设置工作表的页面纸张大小。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: paperSize
    fullName: paperSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paperSize: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman";'
      return:
        type:
          - Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"
  - uid: excel.Excel.PageLayout.printComments
    summary: |-
      获取或设置在打印时是否应该显示工作表的批注。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printComments
    fullName: printComments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printComments: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace";'
      return:
        type:
          - Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace"
  - uid: excel.Excel.PageLayout.printErrors
    summary: |-
      获取或设置工作表的打印错误选项。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printErrors
    fullName: printErrors
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printErrors: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable";'
      return:
        type:
          - Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"
  - uid: excel.Excel.PageLayout.printGridlines
    summary: |-
      获取或设置工作表的打印网格线标记。 此标记确定是否打印网格线。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printGridlines
    fullName: printGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printGridlines: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PageLayout.printHeadings
    summary: |-
      获取或设置工作表的打印标题标记。 此标记确定是否打印标题。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printHeadings
    fullName: printHeadings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printHeadings: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PageLayout.printOrder
    summary: |-
      获取或设置工作表的页面打印顺序选项。 它指定用于处理打印页码的顺序。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printOrder
    fullName: printOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printOrder: Excel.PrintOrder | "DownThenOver" | "OverThenDown";'
      return:
        type:
          - Excel.PrintOrder | "DownThenOver" | "OverThenDown"
  - uid: excel.Excel.PageLayout.rightMargin
    summary: |-
      获取或设置在打印时使用的工作表的右边距（以磅为单位）。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: rightMargin
    fullName: rightMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightMargin: number;'
      return:
        type:
          - number
  - uid: excel.Excel.PageLayout.set
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名:

      `set(properties: Excel.PageLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PageLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。'
          type:
            - Interfaces.PageLayoutUpdateData
        - id: options
          description: '提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.PageLayout.set_1
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PageLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PageLayout
  - uid: excel.Excel.PageLayout.setPrintArea
    summary: |-
      设置工作表的打印区域。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setPrintArea(printArea)
    fullName: setPrintArea(printArea)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintArea(printArea: Range | RangeAreas | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.setPrintArea("A1:D41");
              await context.sync();
          });
          ```
      parameters:
        - id: printArea
          description: 要打印的内容的范围或 RangeAreas。
          type:
            - Range | RangeAreas | string
  - uid: excel.Excel.PageLayout.setPrintMargins
    summary: |-
      设置带单位的工作表的页边距。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setPrintMargins(unit, marginOptions)'
    fullName: 'setPrintMargins(unit, marginOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintMargins(unit: Excel.PrintMarginUnit, marginOptions: Excel.PageLayoutMarginOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: unit
          description: 提供的边距度量单位。
          type:
            - excel.Excel.PrintMarginUnit
        - id: marginOptions
          description: '要设置的边距值, 未提供边距将保持不变。'
          type:
            - excel.Excel.PageLayoutMarginOptions
  - uid: excel.Excel.PageLayout.setPrintMargins_1
    summary: |-
      设置带单位的工作表的页边距。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setPrintMargins(unitString, marginOptions)'
    fullName: 'setPrintMargins(unitString, marginOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintMargins(unitString: "Points" | "Inches" | "Centimeters", marginOptions: Excel.PageLayoutMarginOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: unitString
          description: 提供的边距度量单位。
          type:
            - '"Points" | "Inches" | "Centimeters"'
        - id: marginOptions
          description: '要设置的边距值, 未提供边距将保持不变。'
          type:
            - excel.Excel.PageLayoutMarginOptions
  - uid: excel.Excel.PageLayout.setPrintTitleColumns
    summary: |-
      设置列，这些列包含要在打印的工作表的每页左侧重复的单元格。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setPrintTitleColumns(printTitleColumns)
    fullName: setPrintTitleColumns(printTitleColumns)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintTitleColumns(printTitleColumns: Range | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: printTitleColumns
          description: '每页的左侧要重复的列, 区域必须跨越整个列才能有效。'
          type:
            - Range | string
  - uid: excel.Excel.PageLayout.setPrintTitleRows
    summary: |-
      设置行，这些行包含要在打印的工作表的每页顶部重复的单元格。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setPrintTitleRows(printTitleRows)
    fullName: setPrintTitleRows(printTitleRows)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintTitleRows(printTitleRows: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.setPrintTitleRows("$1:$1");
              await context.sync();
          });
          ```
      parameters:
        - id: printTitleRows
          description: '要在每个页面顶部重复的行, 范围必须跨整个行才能有效。'
          type:
            - Range | string
  - uid: excel.Excel.PageLayout.toJSON
    summary: '重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始页面布局对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.PageLayoutData`<!-- -->), 其中包含原始对象中所有已加载的子属性的浅表副本。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PageLayoutData;'
      return:
        type:
          - excel.Excel.Interfaces.PageLayoutData
        description: ''
  - uid: excel.Excel.PageLayout.topMargin
    summary: |-
      获取或设置在打印时使用的工作表的上边距（以磅为单位）。

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: topMargin
    fullName: topMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'topMargin: number;'
      return:
        type:
          - number
  - uid: excel.Excel.PageLayout.zoom
    summary: |-
      获取或设置工作表的打印缩放选项。 必须`PageLayoutZoomOptions`将该对象设置为 JSON 对象 (使用`x.zoom = {...}` , 而不是`x.zoom.scale = ...`<!-- -->).

      \[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: zoom
    fullName: zoom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zoom: Excel.PageLayoutZoomOptions;'
      return:
        type:
          - excel.Excel.PageLayoutZoomOptions
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.zoom = { scale: 200 };
              await context.sync();
          });
          ```