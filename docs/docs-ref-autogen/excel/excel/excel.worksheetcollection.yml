### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorksheetCollection
    summary: |-
      <span data-ttu-id="5f54d-101">表示属于工作簿的 worksheet 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="5f54d-101">Represents a collection of worksheet objects that are part of the workbook.</span></span>

      <span data-ttu-id="5f54d-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorksheetCollection
    fullName: Excel.WorksheetCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.WorksheetCollection.add
      - excel.Excel.WorksheetCollection.addFromBase64
      - excel.Excel.WorksheetCollection.addFromBase64_1
      - excel.Excel.WorksheetCollection.context
      - excel.Excel.WorksheetCollection.getActiveWorksheet
      - excel.Excel.WorksheetCollection.getCount
      - excel.Excel.WorksheetCollection.getFirst
      - excel.Excel.WorksheetCollection.getItem
      - excel.Excel.WorksheetCollection.getItemOrNullObject
      - excel.Excel.WorksheetCollection.getLast
      - excel.Excel.WorksheetCollection.items
      - excel.Excel.WorksheetCollection.load
      - excel.Excel.WorksheetCollection.load_1
      - excel.Excel.WorksheetCollection.load_2
      - excel.Excel.WorksheetCollection.onActivated
      - excel.Excel.WorksheetCollection.onAdded
      - excel.Excel.WorksheetCollection.onCalculated
      - excel.Excel.WorksheetCollection.onChanged
      - excel.Excel.WorksheetCollection.onColumnSorted
      - excel.Excel.WorksheetCollection.onDeactivated
      - excel.Excel.WorksheetCollection.onDeleted
      - excel.Excel.WorksheetCollection.onFiltered
      - excel.Excel.WorksheetCollection.onFormatChanged
      - excel.Excel.WorksheetCollection.onRowHiddenChanged
      - excel.Excel.WorksheetCollection.onRowSorted
      - excel.Excel.WorksheetCollection.onSelectionChanged
      - excel.Excel.WorksheetCollection.onSingleClicked
      - excel.Excel.WorksheetCollection.toJSON
  - uid: excel.Excel.WorksheetCollection.add
    summary: |-
      <span data-ttu-id="5f54d-p101">向工作簿添加新工作表。工作表将添加到现有工作表的末尾。如果您想要激活新添加的工作表，请对其调用 ".activate()。</span><span class="sxs-lookup"><span data-stu-id="5f54d-p101">Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call ".activate() on it.</span></span>

      <span data-ttu-id="5f54d-106">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5f54d-107">示例</span><span class="sxs-lookup"><span data-stu-id="5f54d-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sample Name';
              var worksheet = ctx.workbook.worksheets.add(wSheetName);
              worksheet.load('name');
              return ctx.sync().then(function() {
                  console.log(worksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: '<span data-ttu-id="5f54d-p102">可选。要添加的工作表的名称。如果指定，名称应唯一。如果未指定，Excel 将确定新工作表的名称。</span><span class="sxs-lookup"><span data-stu-id="5f54d-p102">Optional. The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel determines the name of the new worksheet.</span></span>'
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.addFromBase64
    summary: |-
      <span data-ttu-id="5f54d-112">将工作簿的指定工作表插入当前工作簿。</span><span class="sxs-lookup"><span data-stu-id="5f54d-112">Inserts the specified worksheets of a workbook into the current workbook.</span></span>

      <span data-ttu-id="5f54d-113">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-113">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionType, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionType?: Excel.WorksheetPositionType, relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: |-
          <span data-ttu-id="5f54d-114">与每个新插入的工作表对应的 id 的数组。</span><span class="sxs-lookup"><span data-stu-id="5f54d-114">An array of ids corresponding to each newly inserted worksheet.</span></span>

          #### <a name="examples"></a><span data-ttu-id="5f54d-115">示例</span><span class="sxs-lookup"><span data-stu-id="5f54d-115">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("file");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  // strip off the metadata before the base64-encoded string
                  const startIndex = reader.result.toString().indexOf("base64,");
                  const workbookContents = reader.result.toString().substr(startIndex + 7);

                  const sheets = context.workbook.worksheets;
                  sheets.addFromBase64(
                      workbookContents,
                      null, // get all the worksheets 
                      Excel.WorksheetPositionType.end // insert them after the current workbook's worksheets
                      );
                  return context.sync();
              });
          };

          // read in the file as a data URL so we can parse the base64-encoded string
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="5f54d-116">必需。</span><span class="sxs-lookup"><span data-stu-id="5f54d-116">Required.</span></span> <span data-ttu-id="5f54d-117">代表源工作簿文件的 base64 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="5f54d-117">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="5f54d-118">可选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-118">Optional.</span></span> <span data-ttu-id="5f54d-119">要插入的单个工作表的名称。</span><span class="sxs-lookup"><span data-stu-id="5f54d-119">The names of individual worksheets to insert.</span></span> <span data-ttu-id="5f54d-120">默认情况下，会插入源工作簿中的所有工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-120">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionType
          description: <span data-ttu-id="5f54d-121">可选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-121">Optional.</span></span> <span data-ttu-id="5f54d-122">将在当前工作簿中插入新工作表的位置。</span><span class="sxs-lookup"><span data-stu-id="5f54d-122">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id="5f54d-123">有关详细信息，请参阅 WorksheetPositionType。</span><span class="sxs-lookup"><span data-stu-id="5f54d-123">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id="5f54d-124">默认值为 "Start"。</span><span class="sxs-lookup"><span data-stu-id="5f54d-124">Default is "Start".</span></span>
          type:
            - excel.Excel.WorksheetPositionType
        - id: relativeTo
          description: '<span data-ttu-id="5f54d-125">可选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-125">Optional.</span></span> <span data-ttu-id="5f54d-126">为 positionType 参数引用的当前工作簿中的工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-126">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="5f54d-127">默认值为 null，并且基于 positionType，它将在当前工作簿的开始或末尾插入工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-127">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - Worksheet | string
  - uid: excel.Excel.WorksheetCollection.addFromBase64_1
    summary: |-
      <span data-ttu-id="5f54d-128">将工作簿的指定工作表插入当前工作簿。</span><span class="sxs-lookup"><span data-stu-id="5f54d-128">Inserts the specified worksheets of a workbook into the current workbook.</span></span>

      <span data-ttu-id="5f54d-129">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    fullName: 'addFromBase64(base64File, sheetNamesToInsert, positionTypeString, relativeTo)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromBase64(base64File: string, sheetNamesToInsert?: string[], positionTypeString?: "None" | "Before" | "After" | "Beginning" | "End", relativeTo?: Worksheet | string): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: <span data-ttu-id="5f54d-130">与每个新插入的工作表对应的 id 的数组。</span><span class="sxs-lookup"><span data-stu-id="5f54d-130">An array of ids corresponding to each newly inserted worksheet.</span></span>
      parameters:
        - id: base64File
          description: <span data-ttu-id="5f54d-131">必需。</span><span class="sxs-lookup"><span data-stu-id="5f54d-131">Required.</span></span> <span data-ttu-id="5f54d-132">代表源工作簿文件的 base64 编码的字符串。</span><span class="sxs-lookup"><span data-stu-id="5f54d-132">The base64-encoded string representing the source workbook file.</span></span>
          type:
            - string
        - id: sheetNamesToInsert
          description: '<span data-ttu-id="5f54d-133">可选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-133">Optional.</span></span> <span data-ttu-id="5f54d-134">要插入的单个工作表的名称。</span><span class="sxs-lookup"><span data-stu-id="5f54d-134">The names of individual worksheets to insert.</span></span> <span data-ttu-id="5f54d-135">默认情况下，会插入源工作簿中的所有工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-135">By default, all the worksheets from the source workbook are inserted.</span></span>'
          type:
            - 'string[]'
        - id: positionTypeString
          description: <span data-ttu-id="5f54d-136">可选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-136">Optional.</span></span> <span data-ttu-id="5f54d-137">将在当前工作簿中插入新工作表的位置。</span><span class="sxs-lookup"><span data-stu-id="5f54d-137">Where in the current workbook the new worksheets will be inserted.</span></span> <span data-ttu-id="5f54d-138">有关详细信息，请参阅 WorksheetPositionType。</span><span class="sxs-lookup"><span data-stu-id="5f54d-138">See Excel.WorksheetPositionType for details.</span></span> <span data-ttu-id="5f54d-139">默认值为 "Start"。</span><span class="sxs-lookup"><span data-stu-id="5f54d-139">Default is "Start".</span></span>
          type:
            - '"None" | "Before" | "After" | "Beginning" | "End"'
        - id: relativeTo
          description: '<span data-ttu-id="5f54d-140">可选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-140">Optional.</span></span> <span data-ttu-id="5f54d-141">为 positionType 参数引用的当前工作簿中的工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-141">The worksheet in the current workbook that is referenced for the positionType parameter.</span></span> <span data-ttu-id="5f54d-142">默认值为 null，并且基于 positionType，它将在当前工作簿的开始或末尾插入工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-142">Default is null and, based on positionType, it will insert worksheets at the start or end of the current workbook.</span></span>'
          type:
            - Worksheet | string
  - uid: excel.Excel.WorksheetCollection.context
    summary: <span data-ttu-id="5f54d-143">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="5f54d-143">The request context associated with the object.</span></span> <span data-ttu-id="5f54d-144">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="5f54d-144">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.WorksheetCollection.getActiveWorksheet
    summary: |-
      <span data-ttu-id="5f54d-145">获取工作簿中当前处于活动状态的工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-145">Gets the currently active worksheet in the workbook.</span></span>

      <span data-ttu-id="5f54d-146">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-146">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveWorksheet()
    fullName: getActiveWorksheet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveWorksheet(): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5f54d-147">示例</span><span class="sxs-lookup"><span data-stu-id="5f54d-147">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {  
              var activeWorksheet = ctx.workbook.worksheets.getActiveWorksheet();
              activeWorksheet.load('name');
              return ctx.sync().then(function() {
                      console.log(activeWorksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.WorksheetCollection.getCount
    summary: |-
      <span data-ttu-id="5f54d-148">获取集合中的工作表数量。</span><span class="sxs-lookup"><span data-stu-id="5f54d-148">Gets the number of worksheets in the collection.</span></span>

      <span data-ttu-id="5f54d-149">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount(visibleOnly)
    fullName: getCount(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(visibleOnly?: boolean): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="5f54d-150">可选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-150">Optional.</span></span> <span data-ttu-id="5f54d-151">如果为 true，则只考虑可见的工作表，跳过任何隐藏的工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-151">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.getFirst
    summary: |-
      <span data-ttu-id="5f54d-152">获取集合中的第一个工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-152">Gets the first worksheet in the collection.</span></span>

      <span data-ttu-id="5f54d-153">\[[API 集： ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-153">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFirst(visibleOnly)
    fullName: getFirst(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5f54d-154">示例</span><span class="sxs-lookup"><span data-stu-id="5f54d-154">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="5f54d-155">可选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-155">Optional.</span></span> <span data-ttu-id="5f54d-156">如果为 true，则只考虑可见的工作表，跳过任何隐藏的工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-156">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.getItem
    summary: |-
      <span data-ttu-id="5f54d-157">按 Worksheet 对象的名称或 ID 获取此对象。</span><span class="sxs-lookup"><span data-stu-id="5f54d-157">Gets a worksheet object using its Name or ID.</span></span>

      <span data-ttu-id="5f54d-158">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-158">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="5f54d-159">工作表的名称或 ID。</span><span class="sxs-lookup"><span data-stu-id="5f54d-159">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="5f54d-160">按 Worksheet 对象的名称或 ID 获取此对象。</span><span class="sxs-lookup"><span data-stu-id="5f54d-160">Gets a worksheet object using its Name or ID.</span></span> <span data-ttu-id="5f54d-161">如果没有 Worksheet 对象，将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="5f54d-161">If the worksheet does not exist, will return a null object.</span></span>

      <span data-ttu-id="5f54d-162">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-162">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="5f54d-163">工作表的名称或 ID。</span><span class="sxs-lookup"><span data-stu-id="5f54d-163">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.getLast
    summary: |-
      <span data-ttu-id="5f54d-164">获取集合中的最后一个工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-164">Gets the last worksheet in the collection.</span></span>

      <span data-ttu-id="5f54d-165">\[[API 集： ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-165">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getLast(visibleOnly)
    fullName: getLast(visibleOnly)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLast(visibleOnly?: boolean): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5f54d-166">示例</span><span class="sxs-lookup"><span data-stu-id="5f54d-166">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheets = context.workbook.worksheets;

              // We don't want to include the default worksheet that was created
              // when the workbook was created, so our "firstSheet" will be the one
              // after the literal first. Note chaining of navigation methods.
              const firstSheet = sheets.getFirst().getNext();
              const lastSheet = sheets.getLast();
              const firstTaxRateRange = firstSheet.getRange("B2");
              const lastTaxRateRange = lastSheet.getRange("B2");

              firstSheet.load("name");
              lastSheet.load("name");
              firstTaxRateRange.load("text");
              lastTaxRateRange.load("text");

              await context.sync();

              let firstYear = firstSheet.name.substr(5, 4);
              let lastYear = lastSheet.name.substr(5, 4);
              console.log(`Tax Rate change from ${firstYear} to ${lastYear}`, `Tax rate for ${firstYear}: ${firstTaxRateRange.text[0][0]}\nTax rate for ${lastYear}: ${lastTaxRateRange.text[0][0]}`)

              await context.sync();
          });
          ```
      parameters:
        - id: visibleOnly
          description: '<span data-ttu-id="5f54d-167">可选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-167">Optional.</span></span> <span data-ttu-id="5f54d-168">如果为 true，则只考虑可见的工作表，跳过任何隐藏的工作表。</span><span class="sxs-lookup"><span data-stu-id="5f54d-168">If true, considers only visible worksheets, skipping over any hidden ones.</span></span>'
          type:
            - boolean
  - uid: excel.Excel.WorksheetCollection.items
    summary: <span data-ttu-id="5f54d-169">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="5f54d-169">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Worksheet[];'
      return:
        type:
          - 'Excel.Worksheet[]'
  - uid: excel.Excel.WorksheetCollection.load
    summary: <span data-ttu-id="5f54d-170">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="5f54d-170">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5f54d-171">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="5f54d-171">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="5f54d-172">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="5f54d-172">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="5f54d-173">`load(option?: string | string[]): Excel.WorksheetCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="5f54d-173">`load(option?: string | string[]): Excel.WorksheetCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="5f54d-174">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetCollection`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="5f54d-174">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="5f54d-175">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="5f54d-175">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetCollection` - Only available on collection types.</span></span> <span data-ttu-id="5f54d-176">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="5f54d-176">It is similar to the preceding signature.</span></span> <span data-ttu-id="5f54d-177">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="5f54d-177">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5f54d-178">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="5f54d-178">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5f54d-179">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="5f54d-179">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.WorksheetCollection.load_1
    summary: <span data-ttu-id="5f54d-180">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="5f54d-180">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5f54d-181">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="5f54d-181">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5f54d-182">示例</span><span class="sxs-lookup"><span data-stu-id="5f54d-182">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var worksheets = ctx.workbook.worksheets;
              worksheets.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < worksheets.items.length; i++)
                  {
                      console.log(worksheets.items[i].name);
                      console.log(worksheets.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="5f54d-183">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="5f54d-183">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: excel.Excel.WorksheetCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.WorksheetCollection.onActivated
    summary: |-
      <span data-ttu-id="5f54d-184">当工作簿中的任何工作表激活时发生此事件。</span><span class="sxs-lookup"><span data-stu-id="5f54d-184">Occurs when any worksheet in the workbook is activated.</span></span>

      <span data-ttu-id="5f54d-185">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-185">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onActivated
    fullName: onActivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetActivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5f54d-186">示例</span><span class="sxs-lookup"><span data-stu-id="5f54d-186">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onActivated.add(onActivate);

              await context.sync();
              console.log("A handler has been registered for the OnActivate event.");
          });
          ```
  - uid: excel.Excel.WorksheetCollection.onAdded
    summary: |-
      <span data-ttu-id="5f54d-187">将新工作表添加到工作簿时发生此事件。</span><span class="sxs-lookup"><span data-stu-id="5f54d-187">Occurs when a new worksheet is added to the workbook.</span></span>

      <span data-ttu-id="5f54d-188">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-188">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onAdded
    fullName: onAdded
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onAdded: OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetAddedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5f54d-189">示例</span><span class="sxs-lookup"><span data-stu-id="5f54d-189">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheet = context.workbook.worksheets;
              sheet.onAdded.add(onWorksheetAdd);

              await context.sync();
              console.log("A handler has been registered for the OnAdded event.");
          });
          ```
  - uid: excel.Excel.WorksheetCollection.onCalculated
    summary: |-
      <span data-ttu-id="5f54d-190">计算工作簿中的任何工作表时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-190">Occurs when any worksheet in the workbook is calculated.</span></span>

      <span data-ttu-id="5f54d-191">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-191">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onCalculated
    fullName: onCalculated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onCalculated: OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetCalculatedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onChanged
    summary: |-
      <span data-ttu-id="5f54d-192">在更改工作簿中的任何工作表时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-192">Occurs when any worksheet in the workbook is changed.</span></span>

      <span data-ttu-id="5f54d-193">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-193">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onColumnSorted
    summary: |-
      <span data-ttu-id="5f54d-194">在列上排序时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-194">Occurs when sorting on columns.</span></span>

      <span data-ttu-id="5f54d-195">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-195">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onColumnSorted
    fullName: onColumnSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onColumnSorted: OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetColumnSortedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onDeactivated
    summary: |-
      <span data-ttu-id="5f54d-196">当工作簿中的任何工作表被停用时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-196">Occurs when any worksheet in the workbook is deactivated.</span></span>

      <span data-ttu-id="5f54d-197">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-197">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeactivated
    fullName: onDeactivated
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeactivatedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5f54d-198">示例</span><span class="sxs-lookup"><span data-stu-id="5f54d-198">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let sheets = context.workbook.worksheets;
              sheets.onDeactivated.add(onDeactivate);

              await context.sync();
              console.log("A handler has been registered for the OnDeactivate event.");
          });
          ```
  - uid: excel.Excel.WorksheetCollection.onDeleted
    summary: |-
      <span data-ttu-id="5f54d-199">当从工作簿中删除工作表时发生此事件。</span><span class="sxs-lookup"><span data-stu-id="5f54d-199">Occurs when a worksheet is deleted from the workbook.</span></span>

      <span data-ttu-id="5f54d-200">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-200">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDeleted
    fullName: onDeleted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDeleted: OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetDeletedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onFiltered
    summary: |-
      <span data-ttu-id="5f54d-201">在工作簿中应用任何工作表的筛选器时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-201">Occurs when any worksheet's filter is applied in the workbook.</span></span>

      <span data-ttu-id="5f54d-202">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-202">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onFiltered
    fullName: onFiltered
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFiltered: OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFilteredEventArgs>
  - uid: excel.Excel.WorksheetCollection.onFormatChanged
    summary: |-
      <span data-ttu-id="5f54d-203">在更改工作簿中的任何工作表的格式时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-203">Occurs when any worksheet in the workbook has format changed.</span></span>

      <span data-ttu-id="5f54d-204">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-204">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onFormatChanged
    fullName: onFormatChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onFormatChanged: OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetFormatChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onRowHiddenChanged
    summary: |-
      <span data-ttu-id="5f54d-205">当工作簿中的任何工作表的行隐藏状态更改时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-205">Occurs when any worksheet in the workbook has row hidden state changed.</span></span>

      <span data-ttu-id="5f54d-206">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-206">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onRowHiddenChanged
    fullName: onRowHiddenChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowHiddenChanged: OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetRowHiddenChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onRowSorted
    summary: |-
      <span data-ttu-id="5f54d-207">在行上排序时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-207">Occurs when sorting on rows.</span></span>

      <span data-ttu-id="5f54d-208">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-208">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onRowSorted
    fullName: onRowSorted
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onRowSorted: OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetRowSortedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onSelectionChanged
    summary: |-
      <span data-ttu-id="5f54d-209">在任何工作表上更改选择时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-209">Occurs when the selection changes on any worksheet.</span></span>

      <span data-ttu-id="5f54d-210">\[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-210">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSelectionChangedEventArgs>
  - uid: excel.Excel.WorksheetCollection.onSingleClicked
    summary: |-
      <span data-ttu-id="5f54d-211">在工作表集合中发生左击或螺纹操作时发生。</span><span class="sxs-lookup"><span data-stu-id="5f54d-211">Occurs when left-clicked/tapped operation happens in the worksheet collection.</span></span> <span data-ttu-id="5f54d-212">当在以下情况下单击时，将不会触发此事件：-用户拖动鼠标进行多选。</span><span class="sxs-lookup"><span data-stu-id="5f54d-212">This event will not be fired when clicking in the following cases: - The user drags the mouse for multi-selection.</span></span> <span data-ttu-id="5f54d-213">-当为公式引用选择单元格参数时，用户将选择模式中的单元格。</span><span class="sxs-lookup"><span data-stu-id="5f54d-213">- The user selects a cell in the mode when cell arguments are selected for formula references.</span></span>

      <span data-ttu-id="5f54d-214">\[[API 集： EXCELAPI BETA （仅限预览）](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5f54d-214">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: onSingleClicked
    fullName: onSingleClicked
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSingleClicked: OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.WorksheetSingleClickedEventArgs>
  - uid: excel.Excel.WorksheetCollection.toJSON
    summary: '<span data-ttu-id="5f54d-215">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="5f54d-215">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="5f54d-216">.</span><span class="sxs-lookup"><span data-stu-id="5f54d-216"></span></span> <span data-ttu-id="5f54d-217">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="5f54d-217"></span></span><!-- --><span data-ttu-id="5f54d-218">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.WorksheetCollection`对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.WorksheetCollectionData`</span><span class="sxs-lookup"><span data-stu-id="5f54d-218">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.WorksheetCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetCollectionData`</span></span><!-- --><span data-ttu-id="5f54d-219">），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="5f54d-219">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetCollectionData
        description: ''