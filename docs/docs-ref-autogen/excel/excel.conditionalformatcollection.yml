### YamlMime:UniversalReference
ms.openlocfilehash: a8495b34ef5711109c4bc5c37c76268f2ecc3924
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 10/17/2018
ms.locfileid: "25592812"
items:
- uid: excel.Excel.ConditionalFormatCollection
  summary: >-
    表示范围重叠的所有条件格式的集合。


    \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.ConditionalFormatCollection
  fullName: excel.Excel.ConditionalFormatCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalFormatCollection.add
  - excel.Excel.ConditionalFormatCollection.clearAll
  - excel.Excel.ConditionalFormatCollection.getCount
  - excel.Excel.ConditionalFormatCollection.getItem
  - excel.Excel.ConditionalFormatCollection.getItemAt
  - excel.Excel.ConditionalFormatCollection.items
  - excel.Excel.ConditionalFormatCollection.load
  - excel.Excel.ConditionalFormatCollection.toJSON
- uid: excel.Excel.ConditionalFormatCollection.add
  summary: >-
    将新的条件格式添加到集合中的第一个/top 优先级。


    \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: add(type)
  fullName: excel.Excel.ConditionalFormatCollection.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(type: Excel.ConditionalFormatType): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: "\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.iconSet);\n    conditionalFormat.iconOrNull.style = \"YellowThreeArrows\";\n    return ctx.sync().then(function () {\n        console.log(\"Added new yellow three arrow icon set.\");\n    });\n}).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
    parameters:
    - id: type
      description: 要添加的条件格式的类型。 有关详细信息，请参阅 Excel.ConditionalFormatType。
      type:
      - excel.Excel.ConditionalFormatType
- uid: excel.Excel.ConditionalFormatCollection.clearAll
  summary: >-
    清除当前指定范围中处于活动状态的所有条件格式。


    \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: clearAll()
  fullName: excel.Excel.ConditionalFormatCollection.clearAll
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearAll(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var conditionalFormats = range.conditionalFormats;\n    var conditionalFormat = conditionalFormats.clearAll();\n    return ctx.sync().then(function () {\n        console.log(\"Cleared all conditional formats from this range.\");\n    });\n}).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange();\n    range.conditionalFormats.clearAll();\n\n    await context.sync();\n\n    $(\".conditional-formats\").hide();\n});\n```"
- uid: excel.Excel.ConditionalFormatCollection.getCount
  summary: >-
    返回工作簿中的条件格式数。只读。


    \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getCount()
  fullName: excel.Excel.ConditionalFormatCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: "\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.iconSet);\n    conditionalFormat.iconOrNull.style = Excel.IconSet.fourTrafficLights;\n    var cfCount = range.conditionalFormats.getCount(); \n\n    return ctx.sync().then(function () {\n        console.log(\"Count: \" + cfCount.value);\n    });\n}).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.ConditionalFormatCollection.getItem
  summary: >-
    条件格式返回给定的 id。


    \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItem(id)
  fullName: excel.Excel.ConditionalFormatCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(id: string): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: >-
        条件格式对象。

        #### <a name="examples"></a>示例


        ```javascript

        Excel.run(function (ctx) {
            var sheetName = "Sheet1";
            var rangeAddress = "A1:C3";
            var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
            var conditionalFormats = range.conditionalFormats;
            var conditionalFormat = conditionalFormats.getItemAt(3);
            return ctx.sync().then(function () {
                console.log("Conditional Format at Item 3 Loaded");
            });
        }).catch(function (error) {
            console.log("Error: " + error);
            if (error instanceof OfficeExtension.Error) {
                console.log("Debug info: " + JSON.stringify(error.debugInfo));
            }
        });

        ```
    parameters:
    - id: id
      description: 条件格式的 id。
      type:
      - string
- uid: excel.Excel.ConditionalFormatCollection.getItemAt
  summary: >-
    返回给定索引处的条件格式。


    \[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getItemAt(index)
  fullName: excel.Excel.ConditionalFormatCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: "\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var conditionalFormats = range.conditionalFormats;\n    var conditionalFormat = conditionalFormats.getItemAt(3);\n    return ctx.sync().then(function () {\n        console.log(\"Conditional Format at Item 3 Loaded\");\n    });\n}).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    $(\"#conditional-formats li\").remove();\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            let $p = $(\"<p></p>\").text(\n                `${item.cf.type}`)\n            let $li = $(`<li></li>`);\n            $li.append($p);\n            $(\"#conditional-formats\").append($li);\n            $(\".conditional-formats\").show()[0].scrollIntoView();\n        })\n    }\n    else {\n        OfficeHelpers.UI.notify(\"None to display\", \"No conditional formats in workbook\", \"warning\");\n    }\n});\n```"
    parameters:
    - id: index
      description: 要检索的条件格式的索引。
      type:
      - number
- uid: excel.Excel.ConditionalFormatCollection.items
  summary: 获取此集合中的加载的子项目。
  name: items
  fullName: excel.Excel.ConditionalFormatCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.ConditionalFormat[];'
    return:
      type:
      - Excel.ConditionalFormat[]
- uid: excel.Excel.ConditionalFormatCollection.load
  summary: 队列设置命令加载指定的对象的属性。 读取属性之前，必须调用"context.sync()"。
  remarks: >-
    除了此签名，此方法具有以下签名：


    `load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatCollection`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatCollection`-仅可对集合的类型。 它是类似于前一个签名。 Option.top 指定集合项可在结果中包含的最大数目。 Option.skip 指定要跳过和结果中不包含的项的数目。 如果指定 option.top，则将跳过指定的数目的项后启动结果集。
  name: load(option)
  fullName: excel.Excel.ConditionalFormatCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ConditionalFormatCollection;'
    return:
      type:
      - excel.Excel.ConditionalFormatCollection
      description: ''
    parameters:
    - id: option
      description: 以逗号分隔字符串或一个指定要加载的属性的字符串数组。
      type:
      - string | string[]
- uid: excel.Excel.ConditionalFormatCollection.toJSON
  name: toJSON()
  fullName: excel.Excel.ConditionalFormatCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatCollectionData
      description: ''
