### YamlMime:UniversalReference
ms.openlocfilehash: d031d8f537c00fe152912c3d4c856d185de1ab0b
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29973070"
items:
- uid: excel.Excel.WorksheetProtection
  summary: >-
    <span data-ttu-id="e5498-101">表示对 Worksheet 对象的保护。</span><span class="sxs-lookup"><span data-stu-id="e5498-101">Represents the protection of a sheet object.</span></span>


    <span data-ttu-id="e5498-102">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5498-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorksheetProtection
  fullName: Excel.WorksheetProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorksheetProtection.context
  - excel.Excel.WorksheetProtection.load
  - excel.Excel.WorksheetProtection.load_1
  - excel.Excel.WorksheetProtection.load_2
  - excel.Excel.WorksheetProtection.options
  - excel.Excel.WorksheetProtection.protect
  - excel.Excel.WorksheetProtection.protected
  - excel.Excel.WorksheetProtection.toJSON
  - excel.Excel.WorksheetProtection.unprotect
- uid: excel.Excel.WorksheetProtection.context
  summary: <span data-ttu-id="e5498-103">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="e5498-103">The request context associated with the object.</span></span> <span data-ttu-id="e5498-104">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="e5498-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.WorksheetProtection.load
  summary: <span data-ttu-id="e5498-105">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="e5498-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5498-106">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="e5498-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="e5498-107">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="e5498-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="e5498-108">`load(option?: string | string[]): Excel.WorksheetProtection`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="e5498-108">`load(option?: string | string[]): Excel.WorksheetProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="e5498-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="e5498-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="e5498-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="e5498-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection` - Only available on collection types.</span></span> <span data-ttu-id="e5498-111">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="e5498-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="e5498-112">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="e5498-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e5498-113">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="e5498-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e5498-114">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="e5498-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorksheetProtectionLoadOptions
- uid: excel.Excel.WorksheetProtection.load_1
  summary: <span data-ttu-id="e5498-115">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="e5498-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5498-116">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="e5498-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="e5498-117">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="e5498-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.WorksheetProtection.load_2
  summary: <span data-ttu-id="e5498-118">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="e5498-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e5498-119">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="e5498-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorksheetProtection;'
    return:
      type:
      - excel.Excel.WorksheetProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="e5498-120">其中 propertyNamesAndPaths.select 是一个以逗号分隔的字符串，指定要加载的属性，propertyNamesAndPaths.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="e5498-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.WorksheetProtection.options
  summary: >-
    <span data-ttu-id="e5498-p106">工作表保护选项。只读。</span><span class="sxs-lookup"><span data-stu-id="e5498-p106">Sheet protection options. Read-only.</span></span>


    <span data-ttu-id="e5498-123">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5498-123">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: options
  fullName: options
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly options: Excel.WorksheetProtectionOptions;'
    return:
      type:
      - excel.Excel.WorksheetProtectionOptions
- uid: excel.Excel.WorksheetProtection.protect
  summary: >-
    <span data-ttu-id="e5498-124">保护工作表。</span><span class="sxs-lookup"><span data-stu-id="e5498-124">Protects a worksheet.</span></span> <span data-ttu-id="e5498-125">如果已受保护工作表将失败。</span><span class="sxs-lookup"><span data-stu-id="e5498-125">Fails if the worksheet has already been protected.</span></span>


    <span data-ttu-id="e5498-126">\[[API 集： ExcelApi 1.2 选项; 密码 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5498-126">\[ [API set: ExcelApi 1.2 for options; 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(options, password)
  fullName: protect(options, password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e5498-127\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"e5498-127\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Protect inserting or deleting rows in Sheet1\n  sheet.protection.protect({\n    allowInsertRows: false,\n    allowDeleteRows: false\n  });\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect(null, password);\n    }\n});\n```"
    parameters:
    - id: options
      description: <span data-ttu-id="e5498-128">可选。</span><span class="sxs-lookup"><span data-stu-id="e5498-128">Optional.</span></span> <span data-ttu-id="e5498-129">工作表保护选项。</span><span class="sxs-lookup"><span data-stu-id="e5498-129">Sheet protection options.</span></span>
      type:
      - excel.Excel.WorksheetProtectionOptions
    - id: password
      description: <span data-ttu-id="e5498-130">可选。</span><span class="sxs-lookup"><span data-stu-id="e5498-130">Optional.</span></span> <span data-ttu-id="e5498-131">工作表保护密码。</span><span class="sxs-lookup"><span data-stu-id="e5498-131">Sheet protection password.</span></span>
      type:
      - string
- uid: excel.Excel.WorksheetProtection.protected
  summary: >-
    <span data-ttu-id="e5498-132">指示是否工作表处于保护。</span><span class="sxs-lookup"><span data-stu-id="e5498-132">Indicates if the worksheet is protected.</span></span> <span data-ttu-id="e5498-133">只读。</span><span class="sxs-lookup"><span data-stu-id="e5498-133">Read-only.</span></span>


    <span data-ttu-id="e5498-134">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5498-134">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.WorksheetProtection.toJSON
  summary: <span data-ttu-id="e5498-135">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="e5498-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="e5498-136">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)原始 Excel.WorksheetProtection 对象是 API 对象，而`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.WorksheetProtectionData` <!-- -->)，其中包含原始对象中的任何加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="e5498-136">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorksheetProtectionData
      description: ''
- uid: excel.Excel.WorksheetProtection.unprotect
  summary: >-
    <span data-ttu-id="e5498-137">解除对 worksheet 的保护。</span><span class="sxs-lookup"><span data-stu-id="e5498-137">Unprotects a worksheet.</span></span>


    <span data-ttu-id="e5498-138">\[[API 集： ExcelApi 1.7 密码](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e5498-138">\[ [API set: ExcelApi 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e5498-139\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"e5498-139\">Examples</span></span>\n\n```javascript\nExcel.run(function(ctx) {\n  // get a reference to Sheet1\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n\n  // Remove all protects applied to Sheet1\n  sheet.protection.unprotect();\n\n  return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Unprotecting a worksheet with unprotect() will remove all \n// WorksheetProtectionOptions options applied to a worksheet.\n// To remove only a subset of WorksheetProtectionOptions use the \n// protect() method and set the options you wish to remove to true.\nExcel.run(function(ctx) {\n  var sheet = ctx.workbook.worksheets.getItem(\"Sheet1\");\n  sheet.protection.protect({\n    allowInsertRows: false, // Protect row insertion\n    allowDeleteRows: true // Unprotect row deletion\n  });\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n    activeSheet.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="e5498-140">工作表保护密码。</span><span class="sxs-lookup"><span data-stu-id="e5498-140">sheet protection password.</span></span>
      type:
      - string
