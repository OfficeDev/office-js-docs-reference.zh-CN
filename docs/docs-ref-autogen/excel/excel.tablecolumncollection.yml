### YamlMime:UniversalReference
ms.openlocfilehash: fd1fe7101ecdabc10e4fc8e689d8559a47086e96
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29973406"
items:
- uid: excel.Excel.TableColumnCollection
  summary: >-
    <span data-ttu-id="a9a80-101">表示属于表的所有列的集合。</span><span class="sxs-lookup"><span data-stu-id="a9a80-101">Represents a collection of all the columns that are part of the table.</span></span>


    <span data-ttu-id="a9a80-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a9a80-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableColumnCollection
  fullName: Excel.TableColumnCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableColumnCollection.add
  - excel.Excel.TableColumnCollection.context
  - excel.Excel.TableColumnCollection.count
  - excel.Excel.TableColumnCollection.getCount
  - excel.Excel.TableColumnCollection.getItem
  - excel.Excel.TableColumnCollection.getItemAt
  - excel.Excel.TableColumnCollection.getItemOrNullObject
  - excel.Excel.TableColumnCollection.items
  - excel.Excel.TableColumnCollection.load
  - excel.Excel.TableColumnCollection.load_1
  - excel.Excel.TableColumnCollection.load_2
  - excel.Excel.TableColumnCollection.toJSON
- uid: excel.Excel.TableColumnCollection.add
  summary: >-
    <span data-ttu-id="a9a80-103">向表中添加新列。</span><span class="sxs-lookup"><span data-stu-id="a9a80-103">Adds a new column to the table.</span></span>


    <span data-ttu-id="a9a80-104">\[[API 集： ExcelApi 1.1 需要索引的总列数小于; 1.4 允许为可选的索引 （为空或-1），并将追加的列末尾; 1.4 在创建时允许 name 参数。](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="a9a80-104">\[ [API set: ExcelApi 1.1 requires an index smaller than the total column count; 1.4 allows index to be optional (null or -1) and will append a column at the end; 1.4 allows name parameter at creation time.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="a9a80-105">\]</span><span class="sxs-lookup"><span data-stu-id="a9a80-105"></span></span>
  name: add(index, values, name)
  fullName: add(index, values, name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a9a80-106\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9a80-106\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = tables.getItem(\"Table1\").columns.add(null, values);\n    column.load('name');\n    return ctx.sync().then(function() {\n        console.log(column.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="a9a80-p102">可选。指定新列的相对位置。如果为 NULL 或 -1，将在末尾进行添加。索引更高的列将被移到一侧。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="a9a80-p102">Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="a9a80-p103">可选。未设置格式的表列值的二维数组。</span><span class="sxs-lookup"><span data-stu-id="a9a80-p103">Optional. A 2-dimensional array of unformatted values of the table column.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
    - id: name
      description: <span data-ttu-id="a9a80-p104">可选。指定新列的名称。如果为 Null，将使用默认名称。</span><span class="sxs-lookup"><span data-stu-id="a9a80-p104">Optional. Specifies the name of the new column. If null, the default name will be used.</span></span>
      type:
      - string
- uid: excel.Excel.TableColumnCollection.context
  summary: <span data-ttu-id="a9a80-117">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="a9a80-117">The request context associated with the object.</span></span> <span data-ttu-id="a9a80-118">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="a9a80-118">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableColumnCollection.count
  summary: >-
    <span data-ttu-id="a9a80-p106">返回表中的列数。只读。</span><span class="sxs-lookup"><span data-stu-id="a9a80-p106">Returns the number of columns in the table. Read-only.</span></span>


    <span data-ttu-id="a9a80-121">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a9a80-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumnCollection.getCount
  summary: >-
    <span data-ttu-id="a9a80-122">获取表中的列数。</span><span class="sxs-lookup"><span data-stu-id="a9a80-122">Gets the number of columns in the table.</span></span>


    <span data-ttu-id="a9a80-123">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a9a80-123">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableColumnCollection.getItem
  summary: >-
    <span data-ttu-id="a9a80-124">按名称或 ID 获取 column 对象。</span><span class="sxs-lookup"><span data-stu-id="a9a80-124">Gets a column object by Name or ID.</span></span>


    <span data-ttu-id="a9a80-125">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a9a80-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a9a80-126\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9a80-126\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem('Table1').columns.getItem(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="a9a80-127">列名称或 ID。</span><span class="sxs-lookup"><span data-stu-id="a9a80-127">Column Name or ID.</span></span>
      type:
      - number | string
- uid: excel.Excel.TableColumnCollection.getItemAt
  summary: >-
    <span data-ttu-id="a9a80-128">根据其在集合中的位置获取列。</span><span class="sxs-lookup"><span data-stu-id="a9a80-128">Gets a column based on its position in the collection.</span></span>


    <span data-ttu-id="a9a80-129">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a9a80-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a9a80-130\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9a80-130\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);\n    tablecolumn.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablecolumn.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="a9a80-p107">要检索的对象的索引值。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="a9a80-p107">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.TableColumnCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="a9a80-p108">按名称或 ID 获取 column 对象。如果没有 column 对象，将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="a9a80-p108">Gets a column object by Name or ID. If the column does not exist, will return a null object.</span></span>


    <span data-ttu-id="a9a80-135">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a9a80-135">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="a9a80-136">列名称或 ID。</span><span class="sxs-lookup"><span data-stu-id="a9a80-136">Column Name or ID.</span></span>
      type:
      - number | string
- uid: excel.Excel.TableColumnCollection.items
  summary: <span data-ttu-id="a9a80-137">获取此集合中的加载的子项目。</span><span class="sxs-lookup"><span data-stu-id="a9a80-137">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableColumn[];'
    return:
      type:
      - Excel.TableColumn[]
- uid: excel.Excel.TableColumnCollection.load
  summary: <span data-ttu-id="a9a80-138">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="a9a80-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a9a80-139">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="a9a80-139">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a9a80-140">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="a9a80-140">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a9a80-141">`load(option?: string | string[]): Excel.TableColumnCollection`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="a9a80-141">`load(option?: string | string[]): Excel.TableColumnCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="a9a80-142">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="a9a80-142">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a9a80-143">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="a9a80-143">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection` - Only available on collection types.</span></span> <span data-ttu-id="a9a80-144">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="a9a80-144">It is similar to the preceding signature.</span></span> <span data-ttu-id="a9a80-145">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="a9a80-145">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a9a80-146">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="a9a80-146">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a9a80-147">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="a9a80-147">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.TableColumnCollection.load_1
  summary: <span data-ttu-id="a9a80-148">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="a9a80-148">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a9a80-149">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="a9a80-149">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a9a80-150\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"a9a80-150\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablecolumns = ctx.workbook.tables.getItem('Table1').columns;\n    tablecolumns.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablecolumns Count: \" + tablecolumns.count);\n        for (var i = 0; i < tablecolumns.items.length; i++) {\n            console.log(tablecolumns.items[i].name);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="a9a80-151">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="a9a80-151">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableColumnCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.TableColumnCollection.toJSON
  summary: <span data-ttu-id="a9a80-152">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="a9a80-152">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="a9a80-153">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)而原始`Excel.TableColumnCollection`对象是 API 对象，`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.TableColumnCollectionData` <!-- -->)，其中包含数组"项目"的任何加载属性集的项目的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="a9a80-153">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableColumnCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnCollectionData
      description: ''
