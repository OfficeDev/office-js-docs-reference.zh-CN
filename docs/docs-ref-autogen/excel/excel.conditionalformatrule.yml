### YamlMime:UniversalReference
ms.openlocfilehash: ff8b8ffe07ff8c5b9f75817343695ed870374668
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976297"
items:
- uid: excel.Excel.ConditionalFormatRule
  summary: >-
    <span data-ttu-id="8e1ab-101">代表所有传统的规则格式配对的规则。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-101">Represents a rule, for all traditional rule/format pairings.</span></span>


    <span data-ttu-id="8e1ab-102">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8e1ab-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalFormatRule
  fullName: Excel.ConditionalFormatRule
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalFormatRule.context
  - excel.Excel.ConditionalFormatRule.formula
  - excel.Excel.ConditionalFormatRule.formulaLocal
  - excel.Excel.ConditionalFormatRule.formulaR1C1
  - excel.Excel.ConditionalFormatRule.load
  - excel.Excel.ConditionalFormatRule.load_1
  - excel.Excel.ConditionalFormatRule.load_2
  - excel.Excel.ConditionalFormatRule.set
  - excel.Excel.ConditionalFormatRule.set_1
  - excel.Excel.ConditionalFormatRule.toJSON
- uid: excel.Excel.ConditionalFormatRule.context
  summary: <span data-ttu-id="8e1ab-103">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-103">The request context associated with the object.</span></span> <span data-ttu-id="8e1ab-104">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalFormatRule.formula
  summary: >-
    <span data-ttu-id="8e1ab-105">如果需要，公式可对条件格式规则进行求值。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-105">The formula, if required, to evaluate the conditional format rule on.</span></span>


    <span data-ttu-id="8e1ab-106">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8e1ab-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"8e1ab-107\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"8e1ab-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormatRule.formulaLocal
  summary: >-
    <span data-ttu-id="8e1ab-108">如果需要，公式可采用用户的语言对条件格式规则进行求值。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-108">The formula, if required, to evaluate the conditional format rule on in the user's language.</span></span>


    <span data-ttu-id="8e1ab-109">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8e1ab-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulaLocal
  fullName: formulaLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaLocal: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormatRule.formulaR1C1
  summary: >-
    <span data-ttu-id="8e1ab-110">如果需要，公式可采用 R1C1 表示法对条件格式规则进行求值。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-110">The formula, if required, to evaluate the conditional format rule on in R1C1-style notation.</span></span>


    <span data-ttu-id="8e1ab-111">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8e1ab-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulaR1C1
  fullName: formulaR1C1
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaR1C1: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormatRule.load
  summary: <span data-ttu-id="8e1ab-112">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8e1ab-113">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="8e1ab-114">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="8e1ab-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="8e1ab-115">`load(option?: string | string[]): Excel.ConditionalFormatRule`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-115">`load(option?: string | string[]): Excel.ConditionalFormatRule` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="8e1ab-116">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-116">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="8e1ab-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormatRule` - Only available on collection types.</span></span> <span data-ttu-id="8e1ab-118">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="8e1ab-119">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8e1ab-120">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8e1ab-121">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ConditionalFormatRuleLoadOptions): Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ConditionalFormatRuleLoadOptions
- uid: excel.Excel.ConditionalFormatRule.load_1
  summary: <span data-ttu-id="8e1ab-122">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8e1ab-123">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="8e1ab-124">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalFormatRule.load_2
  summary: <span data-ttu-id="8e1ab-125">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8e1ab-126">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-126">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="8e1ab-127">其中 propertyNamesAndPaths.select 是一个以逗号分隔的字符串，指定要加载的属性，propertyNamesAndPaths.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ConditionalFormatRule.set
  summary: <span data-ttu-id="8e1ab-128">在同一时间设置对象的多个的属性。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-128">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="8e1ab-129">您可以传递具有的相应属性的普通对象或相同类型的另一个 API 对象。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-129">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="8e1ab-130">此方法具有以下其他签名：</span><span class="sxs-lookup"><span data-stu-id="8e1ab-130">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalFormatRule): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalFormatRuleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="8e1ab-131">具有对属性的对象调用 isomorphically 结构化的属性的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-131">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalFormatRuleUpdateData
    - id: options
      description: <span data-ttu-id="8e1ab-132">提供一个选项以取消显示错误，如果属性对象会尝试设置任何只读属性。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-132">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ConditionalFormatRule.set_1
  summary: <span data-ttu-id="8e1ab-133">在基于现有加载对象的同一时间对象上设置多个属性。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-133">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ConditionalFormatRule): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ConditionalFormatRule
- uid: excel.Excel.ConditionalFormatRule.toJSON
  summary: <span data-ttu-id="8e1ab-134">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="8e1ab-135">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)原始 Excel.ConditionalFormatRule 对象是 API 对象，而`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.ConditionalFormatRuleData` <!-- -->)，其中包含原始对象中的任何加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="8e1ab-135">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalFormatRule object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalFormatRuleData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatRuleData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatRuleData
      description: ''
