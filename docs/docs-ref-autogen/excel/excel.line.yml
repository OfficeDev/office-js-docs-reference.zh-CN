### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Line
    summary: |-
      <span data-ttu-id="19bab-101">代表工作表中的一条线。</span><span class="sxs-lookup"><span data-stu-id="19bab-101">Represents a line inside a worksheet.</span></span> <span data-ttu-id="19bab-102">若要获取相应的 Shape 对象, 请使用`Line.shape`</span><span class="sxs-lookup"><span data-stu-id="19bab-102">To get the corresponding Shape object, use `Line.shape`</span></span><!-- --><span data-ttu-id="19bab-103">.</span><span class="sxs-lookup"><span data-stu-id="19bab-103"></span></span>

      <span data-ttu-id="19bab-104">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-104">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Line
    fullName: Excel.Line
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Line.beginArrowheadLength
      - excel.Excel.Line.beginArrowheadStyle
      - excel.Excel.Line.beginArrowheadWidth
      - excel.Excel.Line.beginConnectedShape
      - excel.Excel.Line.beginConnectedSite
      - excel.Excel.Line.connectBeginShape
      - excel.Excel.Line.connectEndShape
      - excel.Excel.Line.connectorType
      - excel.Excel.Line.context
      - excel.Excel.Line.disconnectBeginShape
      - excel.Excel.Line.disconnectEndShape
      - excel.Excel.Line.endArrowheadLength
      - excel.Excel.Line.endArrowheadStyle
      - excel.Excel.Line.endArrowheadWidth
      - excel.Excel.Line.endConnectedShape
      - excel.Excel.Line.endConnectedSite
      - excel.Excel.Line.id
      - excel.Excel.Line.isBeginConnected
      - excel.Excel.Line.isEndConnected
      - excel.Excel.Line.load
      - excel.Excel.Line.load_1
      - excel.Excel.Line.load_2
      - excel.Excel.Line.set
      - excel.Excel.Line.set_1
      - excel.Excel.Line.shape
      - excel.Excel.Line.toJSON
  - uid: excel.Excel.Line.beginArrowheadLength
    summary: |-
      <span data-ttu-id="19bab-105">表示指定线条始端的箭头长度。</span><span class="sxs-lookup"><span data-stu-id="19bab-105">Represents the length of the arrowhead at the beginning of the specified line.</span></span>

      <span data-ttu-id="19bab-106">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-106">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: beginArrowheadLength
    fullName: beginArrowheadLength
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type:
          - Excel.ArrowheadLength | "Short" | "Medium" | "Long"
  - uid: excel.Excel.Line.beginArrowheadStyle
    summary: |-
      <span data-ttu-id="19bab-107">表示指定线条始端的箭头样式。</span><span class="sxs-lookup"><span data-stu-id="19bab-107">Represents the style of the arrowhead at the beginning of the specified line.</span></span>

      <span data-ttu-id="19bab-108">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: beginArrowheadStyle
    fullName: beginArrowheadStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
      return:
        type:
          - Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
  - uid: excel.Excel.Line.beginArrowheadWidth
    summary: |-
      <span data-ttu-id="19bab-109">表示指定线条始端的箭头宽度。</span><span class="sxs-lookup"><span data-stu-id="19bab-109">Represents the width of the arrowhead at the beginning of the specified line.</span></span>

      <span data-ttu-id="19bab-110">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: beginArrowheadWidth
    fullName: beginArrowheadWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type:
          - Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
  - uid: excel.Excel.Line.beginConnectedShape
    summary: |-
      <span data-ttu-id="19bab-111">表示指定线条始端所附加到的形状。</span><span class="sxs-lookup"><span data-stu-id="19bab-111">Represents the shape to which the beginning of the specified line is attached.</span></span> <span data-ttu-id="19bab-112">只读。</span><span class="sxs-lookup"><span data-stu-id="19bab-112">Read-only.</span></span>

      <span data-ttu-id="19bab-113">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-113">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: beginConnectedShape
    fullName: beginConnectedShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly beginConnectedShape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel.Excel.Line.beginConnectedSite
    summary: |-
      <span data-ttu-id="19bab-114">表示连接线始端所连接的连接站点。</span><span class="sxs-lookup"><span data-stu-id="19bab-114">Represents the connection site to which the beginning of a connector is connected.</span></span> <span data-ttu-id="19bab-115">只读。</span><span class="sxs-lookup"><span data-stu-id="19bab-115">Read-only.</span></span> <span data-ttu-id="19bab-116">当线条的始端没有附加到任何形状时，返回 null。</span><span class="sxs-lookup"><span data-stu-id="19bab-116">Returns null when the beginning of the line is not attached to any shape.</span></span>

      <span data-ttu-id="19bab-117">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-117">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: beginConnectedSite
    fullName: beginConnectedSite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly beginConnectedSite: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Line.connectBeginShape
    summary: |-
      <span data-ttu-id="19bab-118">将指定连接线的始端附加到指定形状。</span><span class="sxs-lookup"><span data-stu-id="19bab-118">Attaches the beginning of the specified connector to a specified shape.</span></span>

      <span data-ttu-id="19bab-119">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-119">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'connectBeginShape(shape, connectionSite)'
    fullName: 'connectBeginShape(shape, connectionSite)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'connectBeginShape(shape: Excel.Shape, connectionSite: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="19bab-120">示例</span><span class="sxs-lookup"><span data-stu-id="19bab-120">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          });
          ```
      parameters:
        - id: shape
          description: <span data-ttu-id="19bab-121">要连接的形状。</span><span class="sxs-lookup"><span data-stu-id="19bab-121">The shape to connect.</span></span>
          type:
            - excel.Excel.Shape
        - id: connectionSite
          description: <span data-ttu-id="19bab-122">连接符的起点所附加到的形状上的连接点。</span><span class="sxs-lookup"><span data-stu-id="19bab-122">The connection site on the shape to which the beginning of the connector is attached.</span></span> <span data-ttu-id="19bab-123">必须是介于 0 (含) 和指定形状的连接网站数 (独占) 之间的整数。</span><span class="sxs-lookup"><span data-stu-id="19bab-123">Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).</span></span>
          type:
            - number
  - uid: excel.Excel.Line.connectEndShape
    summary: |-
      <span data-ttu-id="19bab-124">将指定连接线的末端附加到指定形状。</span><span class="sxs-lookup"><span data-stu-id="19bab-124">Attaches the end of the specified connector to a specified shape.</span></span>

      <span data-ttu-id="19bab-125">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-125">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'connectEndShape(shape, connectionSite)'
    fullName: 'connectEndShape(shape, connectionSite)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'connectEndShape(shape: Excel.Shape, connectionSite: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="19bab-126">示例</span><span class="sxs-lookup"><span data-stu-id="19bab-126">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          });
          ```
      parameters:
        - id: shape
          description: <span data-ttu-id="19bab-127">要连接的形状。</span><span class="sxs-lookup"><span data-stu-id="19bab-127">The shape to connect.</span></span>
          type:
            - excel.Excel.Shape
        - id: connectionSite
          description: <span data-ttu-id="19bab-128">连接符的终点所连接的形状上的连接点。</span><span class="sxs-lookup"><span data-stu-id="19bab-128">The connection site on the shape to which the end of the connector is attached.</span></span> <span data-ttu-id="19bab-129">必须是介于 0 (含) 和指定形状的连接网站数 (独占) 之间的整数。</span><span class="sxs-lookup"><span data-stu-id="19bab-129">Must be an integer between 0 (inclusive) and the connection-site count of the specified shape (exclusive).</span></span>
          type:
            - number
  - uid: excel.Excel.Line.connectorType
    summary: |-
      <span data-ttu-id="19bab-130">表示线条的连接器类型。</span><span class="sxs-lookup"><span data-stu-id="19bab-130">Represents the connector type for the line.</span></span>

      <span data-ttu-id="19bab-131">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-131">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: connectorType
    fullName: connectorType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'connectorType: Excel.ConnectorType | "Straight" | "Elbow" | "Curve";'
      return:
        type:
          - Excel.ConnectorType | "Straight" | "Elbow" | "Curve"
  - uid: excel.Excel.Line.context
    summary: <span data-ttu-id="19bab-132">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="19bab-132">The request context associated with the object.</span></span> <span data-ttu-id="19bab-133">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="19bab-133">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.Line.disconnectBeginShape
    summary: |-
      <span data-ttu-id="19bab-134">使指定连接线的始端与形状脱离。</span><span class="sxs-lookup"><span data-stu-id="19bab-134">Detaches the beginning of the specified connector from a shape.</span></span>

      <span data-ttu-id="19bab-135">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-135">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: disconnectBeginShape()
    fullName: disconnectBeginShape()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'disconnectBeginShape(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="19bab-136">示例</span><span class="sxs-lookup"><span data-stu-id="19bab-136">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Line.disconnectEndShape
    summary: |-
      <span data-ttu-id="19bab-137">使指定连接线的末端与形状脱离。</span><span class="sxs-lookup"><span data-stu-id="19bab-137">Detaches the end of the specified connector from a shape.</span></span>

      <span data-ttu-id="19bab-138">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-138">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: disconnectEndShape()
    fullName: disconnectEndShape()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'disconnectEndShape(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="19bab-139">示例</span><span class="sxs-lookup"><span data-stu-id="19bab-139">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Line.endArrowheadLength
    summary: |-
      <span data-ttu-id="19bab-140">表示指定线条末端的箭头长度。</span><span class="sxs-lookup"><span data-stu-id="19bab-140">Represents the length of the arrowhead at the end of the specified line.</span></span>

      <span data-ttu-id="19bab-141">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-141">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: endArrowheadLength
    fullName: endArrowheadLength
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type:
          - Excel.ArrowheadLength | "Short" | "Medium" | "Long"
  - uid: excel.Excel.Line.endArrowheadStyle
    summary: |-
      <span data-ttu-id="19bab-142">表示指定线条末端的箭头样式。</span><span class="sxs-lookup"><span data-stu-id="19bab-142">Represents the style of the arrowhead at the end of the specified line.</span></span>

      <span data-ttu-id="19bab-143">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-143">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: endArrowheadStyle
    fullName: endArrowheadStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
      return:
        type:
          - Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
  - uid: excel.Excel.Line.endArrowheadWidth
    summary: |-
      <span data-ttu-id="19bab-144">表示指定线条末端的箭头宽度。</span><span class="sxs-lookup"><span data-stu-id="19bab-144">Represents the width of the arrowhead at the end of the specified line.</span></span>

      <span data-ttu-id="19bab-145">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-145">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: endArrowheadWidth
    fullName: endArrowheadWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type:
          - Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
  - uid: excel.Excel.Line.endConnectedShape
    summary: |-
      <span data-ttu-id="19bab-146">表示指定线条末端所附加到的形状。</span><span class="sxs-lookup"><span data-stu-id="19bab-146">Represents the shape to which the end of the specified line is attached.</span></span> <span data-ttu-id="19bab-147">只读。</span><span class="sxs-lookup"><span data-stu-id="19bab-147">Read-only.</span></span>

      <span data-ttu-id="19bab-148">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-148">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: endConnectedShape
    fullName: endConnectedShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly endConnectedShape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel.Excel.Line.endConnectedSite
    summary: |-
      <span data-ttu-id="19bab-149">表示连接线末端所连接的连接站点。</span><span class="sxs-lookup"><span data-stu-id="19bab-149">Represents the connection site to which the end of a connector is connected.</span></span> <span data-ttu-id="19bab-150">只读。</span><span class="sxs-lookup"><span data-stu-id="19bab-150">Read-only.</span></span> <span data-ttu-id="19bab-151">当线条的末端没有附加到任何形状时，返回 null。</span><span class="sxs-lookup"><span data-stu-id="19bab-151">Returns null when the end of the line is not attached to any shape.</span></span>

      <span data-ttu-id="19bab-152">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-152">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: endConnectedSite
    fullName: endConnectedSite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly endConnectedSite: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Line.id
    summary: |-
      <span data-ttu-id="19bab-153">表示形状标识符。</span><span class="sxs-lookup"><span data-stu-id="19bab-153">Represents the shape identifier.</span></span> <span data-ttu-id="19bab-154">只读。</span><span class="sxs-lookup"><span data-stu-id="19bab-154">Read-only.</span></span>

      <span data-ttu-id="19bab-155">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-155">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Line.isBeginConnected
    summary: |-
      <span data-ttu-id="19bab-156">指定指定线条的始端是否连接到形状。</span><span class="sxs-lookup"><span data-stu-id="19bab-156">Specifies whether or not the beginning of the specified line is connected to a shape.</span></span> <span data-ttu-id="19bab-157">只读。</span><span class="sxs-lookup"><span data-stu-id="19bab-157">Read-only.</span></span>

      <span data-ttu-id="19bab-158">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-158">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: isBeginConnected
    fullName: isBeginConnected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isBeginConnected: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Line.isEndConnected
    summary: |-
      <span data-ttu-id="19bab-159">指定指定线条的末端是否连接到形状。</span><span class="sxs-lookup"><span data-stu-id="19bab-159">Specifies whether or not the end of the specified line is connected to a shape.</span></span> <span data-ttu-id="19bab-160">只读。</span><span class="sxs-lookup"><span data-stu-id="19bab-160">Read-only.</span></span>

      <span data-ttu-id="19bab-161">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-161">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: isEndConnected
    fullName: isEndConnected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEndConnected: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Line.load
    summary: <span data-ttu-id="19bab-162">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-162">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="19bab-163">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="19bab-163">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="19bab-164">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="19bab-164">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="19bab-165">`load(option?: string | string[]): Excel.Line`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-165">`load(option?: string | string[]): Excel.Line` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="19bab-166">`load(option?: { select?: string; expand?: string; }): Excel.Line`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-166">`load(option?: { select?: string; expand?: string; }): Excel.Line` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="19bab-167">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Line`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="19bab-167">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Line` - Only available on collection types.</span></span> <span data-ttu-id="19bab-168">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="19bab-168">It is similar to the preceding signature.</span></span> <span data-ttu-id="19bab-169">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="19bab-169">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="19bab-170">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="19bab-170">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="19bab-171">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="19bab-171">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.LineLoadOptions): Excel.Line;'
      return:
        type:
          - excel.Excel.Line
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.LineLoadOptions
  - uid: excel.Excel.Line.load_1
    summary: '<span data-ttu-id="19bab-172">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-172">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="19bab-173">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="19bab-173">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Line;'
      return:
        type:
          - excel.Excel.Line
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="19bab-174">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-174">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Line.load_2
    summary: '<span data-ttu-id="19bab-175">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-175">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="19bab-176">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="19bab-176">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Line;'
      return:
        type:
          - excel.Excel.Line
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="19bab-177">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-177">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Line.set
    summary: '<span data-ttu-id="19bab-178">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-178">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="19bab-179">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="19bab-179">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="19bab-180">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="19bab-180">This method has the following additional signature:</span></span>

      `set(properties: Excel.Line): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.LineUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="19bab-181">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-181">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.LineUpdateData
        - id: options
          description: '<span data-ttu-id="19bab-182">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="19bab-182">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.Line.set_1
    summary: '<span data-ttu-id="19bab-183">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="19bab-183">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Line): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Line
  - uid: excel.Excel.Line.shape
    summary: |-
      <span data-ttu-id="19bab-184">返回与线条关联的形状对象。</span><span class="sxs-lookup"><span data-stu-id="19bab-184">Returns the Shape object associated with the line.</span></span> <span data-ttu-id="19bab-185">只读。</span><span class="sxs-lookup"><span data-stu-id="19bab-185">Read-only.</span></span>

      <span data-ttu-id="19bab-186">\[[API 集: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="19bab-186">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel.Excel.Line.toJSON
    summary: '<span data-ttu-id="19bab-187">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="19bab-187">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="19bab-188">.</span><span class="sxs-lookup"><span data-stu-id="19bab-188"></span></span> <span data-ttu-id="19bab-189">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="19bab-189"></span></span><!-- --><span data-ttu-id="19bab-190">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel Line 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.LineData`</span><span class="sxs-lookup"><span data-stu-id="19bab-190">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Line object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.LineData`</span></span><!-- --><span data-ttu-id="19bab-191">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="19bab-191">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.LineData;'
      return:
        type:
          - excel.Excel.Interfaces.LineData
        description: ''