### YamlMime:UniversalReference
ms.openlocfilehash: a87b42583512df979f9ae15b74358f8d3085dec1
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980511"
items:
- uid: excel.Excel.PivotTableCollection
  summary: >-
    <span data-ttu-id="76cf7-101">表示属于工作簿或工作表的所有 PivotTable 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="76cf7-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>


    <span data-ttu-id="76cf7-102">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="76cf7-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotTableCollection
  fullName: Excel.PivotTableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotTableCollection.add
  - excel.Excel.PivotTableCollection.context
  - excel.Excel.PivotTableCollection.getCount
  - excel.Excel.PivotTableCollection.getItem
  - excel.Excel.PivotTableCollection.getItemOrNullObject
  - excel.Excel.PivotTableCollection.items
  - excel.Excel.PivotTableCollection.load
  - excel.Excel.PivotTableCollection.load_1
  - excel.Excel.PivotTableCollection.load_2
  - excel.Excel.PivotTableCollection.refreshAll
  - excel.Excel.PivotTableCollection.toJSON
- uid: excel.Excel.PivotTableCollection.add
  summary: >-
    <span data-ttu-id="76cf7-103">基于指定的数据源添加数据透视表，并将其插入到目标区域的左上单元格。</span><span class="sxs-lookup"><span data-stu-id="76cf7-103">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>


    <span data-ttu-id="76cf7-104">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="76cf7-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name, source, destination)
  fullName: add(name, source, destination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: >-
        <span data-ttu-id="76cf7-105">返回新插入的数据透视表。</span><span class="sxs-lookup"><span data-stu-id="76cf7-105">Returns the newly inserted PivotTable.</span></span>

        #### <a name="examples"></a><span data-ttu-id="76cf7-106">示例</span><span class="sxs-lookup"><span data-stu-id="76cf7-106">Examples</span></span>


        ```typescript

        await Excel.run(async (context) => {
            const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
            const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
            context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

            await context.sync();
        });

        ```
    parameters:
    - id: name
      description: <span data-ttu-id="76cf7-107">新数据透视表的名称。</span><span class="sxs-lookup"><span data-stu-id="76cf7-107">The name of the new PivotTable.</span></span>
      type:
      - string
    - id: source
      description: <span data-ttu-id="76cf7-108">新数据透视表的源数据，这可以是范围 （也包括工作表名称的字符串地址） 或表。</span><span class="sxs-lookup"><span data-stu-id="76cf7-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>
      type:
      - Range | string | Table
    - id: destination
      description: <span data-ttu-id="76cf7-109">在数据透视表报表的目标区域 （生成的报表的放置位置工作表上的区域） 的左上角单元格。</span><span class="sxs-lookup"><span data-stu-id="76cf7-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
      type:
      - Range | string
- uid: excel.Excel.PivotTableCollection.context
  summary: <span data-ttu-id="76cf7-110">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="76cf7-110">The request context associated with the object.</span></span> <span data-ttu-id="76cf7-111">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="76cf7-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotTableCollection.getCount
  summary: >-
    <span data-ttu-id="76cf7-112">获取集合中的数据透视表的数量。</span><span class="sxs-lookup"><span data-stu-id="76cf7-112">Gets the number of pivot tables in the collection.</span></span>


    <span data-ttu-id="76cf7-113">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="76cf7-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.PivotTableCollection.getItem
  summary: >-
    <span data-ttu-id="76cf7-114">按名称获取 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="76cf7-114">Gets a PivotTable by name.</span></span>


    <span data-ttu-id="76cf7-115">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="76cf7-115">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="76cf7-116">要检索的数据透视表的名称。</span><span class="sxs-lookup"><span data-stu-id="76cf7-116">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.PivotTableCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="76cf7-p102">按 PivotTable 对象的名称获取此对象。如果没有 PivotTable 对象，将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="76cf7-p102">Gets a PivotTable by name. If the PivotTable does not exist, will return a null object.</span></span>


    <span data-ttu-id="76cf7-119">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="76cf7-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="76cf7-120">要检索的数据透视表的名称。</span><span class="sxs-lookup"><span data-stu-id="76cf7-120">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.PivotTableCollection.items
  summary: <span data-ttu-id="76cf7-121">获取此集合中的加载的子项目。</span><span class="sxs-lookup"><span data-stu-id="76cf7-121">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotTable[];'
    return:
      type:
      - Excel.PivotTable[]
- uid: excel.Excel.PivotTableCollection.load
  summary: <span data-ttu-id="76cf7-122">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="76cf7-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="76cf7-123">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="76cf7-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="76cf7-124">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="76cf7-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="76cf7-125">`load(option?: string | string[]): Excel.PivotTableCollection`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="76cf7-125">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="76cf7-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="76cf7-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="76cf7-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="76cf7-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="76cf7-128">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="76cf7-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="76cf7-129">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="76cf7-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="76cf7-130">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="76cf7-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="76cf7-131">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="76cf7-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.PivotTableCollection.load_1
  summary: <span data-ttu-id="76cf7-132">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="76cf7-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="76cf7-133">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="76cf7-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="76cf7-134">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="76cf7-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotTableCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.PivotTableCollection.refreshAll
  summary: >-
    <span data-ttu-id="76cf7-135">刷新集合中的所有数据透视表。</span><span class="sxs-lookup"><span data-stu-id="76cf7-135">Refreshes all the pivot tables in the collection.</span></span>


    <span data-ttu-id="76cf7-136">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="76cf7-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refreshAll()
  fullName: refreshAll()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAll(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PivotTableCollection.toJSON
  summary: <span data-ttu-id="76cf7-137">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="76cf7-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="76cf7-138">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)而原始`Excel.PivotTableCollection`对象是 API 对象，`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.PivotTableCollectionData` <!-- -->)，其中包含数组"项目"的任何加载属性集的项目的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="76cf7-138">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableCollectionData
      description: ''
