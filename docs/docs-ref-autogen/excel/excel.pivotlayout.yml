### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PivotLayout
    summary: |-
      <span data-ttu-id="e1bdb-101">表示数据透视表的可视化布局。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-101">Represents the visual layout of the PivotTable.</span></span>

      <span data-ttu-id="e1bdb-102">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.PivotLayout.autoFormat
      - excel.Excel.PivotLayout.context
      - excel.Excel.PivotLayout.enableFieldList
      - excel.Excel.PivotLayout.getCell
      - excel.Excel.PivotLayout.getColumnLabelRange
      - excel.Excel.PivotLayout.getDataBodyRange
      - excel.Excel.PivotLayout.getDataHierarchy
      - excel.Excel.PivotLayout.getFilterAxisRange
      - excel.Excel.PivotLayout.getPivotItems
      - excel.Excel.PivotLayout.getPivotItems_1
      - excel.Excel.PivotLayout.getRange
      - excel.Excel.PivotLayout.getRowLabelRange
      - excel.Excel.PivotLayout.layoutType
      - excel.Excel.PivotLayout.load
      - excel.Excel.PivotLayout.load_1
      - excel.Excel.PivotLayout.load_2
      - excel.Excel.PivotLayout.preserveFormatting
      - excel.Excel.PivotLayout.set
      - excel.Excel.PivotLayout.set_1
      - excel.Excel.PivotLayout.setAutoSortOnCell
      - excel.Excel.PivotLayout.setAutoSortOnCell_1
      - excel.Excel.PivotLayout.showColumnGrandTotals
      - excel.Excel.PivotLayout.showRowGrandTotals
      - excel.Excel.PivotLayout.subtotalLocation
      - excel.Excel.PivotLayout.toJSON
  - uid: excel.Excel.PivotLayout.autoFormat
    summary: |-
      <span data-ttu-id="e1bdb-103">指定在刷新或移动域时是否自动设置格式设置的格式</span><span class="sxs-lookup"><span data-stu-id="e1bdb-103">Specifies whether formatting will be automatically formatted when it’s refreshed or when fields are moved</span></span>

      <span data-ttu-id="e1bdb-104">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.context
    summary: <span data-ttu-id="e1bdb-105">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-105">The request context associated with the object.</span></span> <span data-ttu-id="e1bdb-106">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.PivotLayout.enableFieldList
    summary: |-
      <span data-ttu-id="e1bdb-107">指定字段列表是否可以显示在 UI 中。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-107">Specifies whether the field list can be shown in the UI.</span></span>

      <span data-ttu-id="e1bdb-108">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enableFieldList
    fullName: enableFieldList
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableFieldList: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.getCell
    summary: |-
      <span data-ttu-id="e1bdb-109">基于数据层次结构以及其各自的层次结构的行和列项, 获取数据透视表中的唯一单元格。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-109">Gets a unique cell in the PivotTable based on a data hierarchy and the row and column items of their respective hierarchies.</span></span> <span data-ttu-id="e1bdb-110">返回的单元格是给定的行和包含给定层次结构中的数据的列的交集。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-110">The returned cell is the intersection of the given row and column that contains the data from the given hierarchy.</span></span> <span data-ttu-id="e1bdb-111">此方法是对特定单元格调用 getPivotItems 和 getDataHierarchy 的反函数。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-111">This method is the inverse of calling getPivotItems and getDataHierarchy on a particular cell.</span></span>

      <span data-ttu-id="e1bdb-112">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getCell(dataHierarchy, rowItems, columnItems)'
    fullName: 'getCell(dataHierarchy, rowItems, columnItems)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(dataHierarchy: DataPivotHierarchy | string, rowItems: Array<PivotItem | string>, columnItems: Array<PivotItem | string>): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: <span data-ttu-id="e1bdb-113">指定包含指定值的单个单元格的范围。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-113">A range specifying a single cell that contains the value specified.</span></span>
      parameters:
        - id: dataHierarchy
          description: <span data-ttu-id="e1bdb-114">提供要查找的数据项的 dataHierarchy。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-114">The dataHierarchy that provides the data item to find.</span></span>
          type:
            - DataPivotHierarchy | string
        - id: rowItems
          description: '<span data-ttu-id="e1bdb-115">行轴中的 PivotItems, 这些行轴构成要查找的值。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-115">The PivotItems from the row axis that make up the value to find.</span></span>'
          type:
            - Array<PivotItem | string>
        - id: columnItems
          description: '<span data-ttu-id="e1bdb-116">由列坐标轴构成的 PivotItems, 这些值构成要查找的值。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-116">The PivotItems from the column axis that make up the value to find.</span></span>'
          type:
            - Array<PivotItem | string>
  - uid: excel.Excel.PivotLayout.getColumnLabelRange
    summary: |-
      <span data-ttu-id="e1bdb-117">返回数据透视表列标签所在位置的区域。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-117">Returns the range where the PivotTable's column labels reside.</span></span>

      <span data-ttu-id="e1bdb-118">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.getDataBodyRange
    summary: |-
      <span data-ttu-id="e1bdb-119">返回数据透视表数据值所在位置的区域。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-119">Returns the range where the PivotTable's data values reside.</span></span>

      <span data-ttu-id="e1bdb-120">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e1bdb-121">示例</span><span class="sxs-lookup"><span data-stu-id="e1bdb-121">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotLayout.getDataHierarchy
    summary: |-
      <span data-ttu-id="e1bdb-122">获取 DataHierarchy，它用于计算数据透视表中指定区域内的值。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-122">Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="e1bdb-123">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - excel.Excel.DataPivotHierarchy
        description: <span data-ttu-id="e1bdb-124">用于计算指定单元格中的值的 DataPivotHierarchy 对象。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-124">The DataPivotHierarchy object used to calculate the value in the specified cell.</span></span>
      parameters:
        - id: cell
          description: <span data-ttu-id="e1bdb-125">数据透视表数据正文中的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-125">A single cell within the PivotTable data body.</span></span>
          type:
            - Range | string
  - uid: excel.Excel.PivotLayout.getFilterAxisRange
    summary: |-
      <span data-ttu-id="e1bdb-126">返回数据透视表筛选区的区域。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-126">Returns the range of the PivotTable's filter area.</span></span>

      <span data-ttu-id="e1bdb-127">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-127">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.getPivotItems
    summary: |-
      <span data-ttu-id="e1bdb-128">从构成数据透视表中指定区域内的值的轴获取 PivotItems。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-128">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="e1bdb-129">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: <span data-ttu-id="e1bdb-130">用于计算指定行中的值的 PivotItems 的集合。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-130">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
      parameters:
        - id: axis
          description: <span data-ttu-id="e1bdb-131">要从其获取 PivotItems 的轴。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-131">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="e1bdb-132">必须是 "行" 或 "列"。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-132">Must be either "row" or "column."</span></span>
          type:
            - excel.Excel.PivotAxis
        - id: cell
          description: <span data-ttu-id="e1bdb-133">数据透视表的数据正文中的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-133">A single cell within the PivotTable's data body.</span></span>
          type:
            - Range | string
  - uid: excel.Excel.PivotLayout.getPivotItems_1
    summary: |-
      <span data-ttu-id="e1bdb-134">从构成数据透视表中指定区域内的值的轴获取 PivotItems。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-134">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="e1bdb-135">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-135">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: <span data-ttu-id="e1bdb-136">用于计算指定行中的值的 PivotItems 的集合。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-136">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
      parameters:
        - id: axisString
          description: <span data-ttu-id="e1bdb-137">要从其获取 PivotItems 的轴。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-137">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="e1bdb-138">必须是 "行" 或 "列"。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-138">Must be either "row" or "column."</span></span>
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: <span data-ttu-id="e1bdb-139">数据透视表的数据正文中的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-139">A single cell within the PivotTable's data body.</span></span>
          type:
            - Range | string
  - uid: excel.Excel.PivotLayout.getRange
    summary: |-
      <span data-ttu-id="e1bdb-140">返回存在数据透视表的区域，不包括筛选区。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-140">Returns the range the PivotTable exists on, excluding the filter area.</span></span>

      <span data-ttu-id="e1bdb-141">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.getRowLabelRange
    summary: |-
      <span data-ttu-id="e1bdb-142">返回数据透视表行标签所在位置的区域。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-142">Returns the range where the PivotTable's row labels reside.</span></span>

      <span data-ttu-id="e1bdb-143">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.layoutType
    summary: |-
      <span data-ttu-id="e1bdb-144">此属性指示数据透视表上的所有字段的 PivotLayoutType。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-144">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="e1bdb-145">如果字段状态不同，则为 null。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-145">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="e1bdb-146">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-146">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
  - uid: excel.Excel.PivotLayout.load
    summary: <span data-ttu-id="e1bdb-147">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e1bdb-148">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-148">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e1bdb-149">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="e1bdb-149">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e1bdb-150">`load(option?: string | string[]): Excel.PivotLayout`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-150">`load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e1bdb-151">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-151">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e1bdb-152">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-152">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only available on collection types.</span></span> <span data-ttu-id="e1bdb-153">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-153">It is similar to the preceding signature.</span></span> <span data-ttu-id="e1bdb-154">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-154">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e1bdb-155">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-155">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e1bdb-156">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-156">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotLayoutLoadOptions
  - uid: excel.Excel.PivotLayout.load_1
    summary: '<span data-ttu-id="e1bdb-157">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-157">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e1bdb-158">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-158">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="e1bdb-159">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-159">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.PivotLayout.load_2
    summary: '<span data-ttu-id="e1bdb-160">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-160">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e1bdb-161">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-161">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e1bdb-162">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-162">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.PivotLayout.preserveFormatting
    summary: |-
      <span data-ttu-id="e1bdb-163">指定当通过透视、排序或更改页字段项等操作刷新或重新计算报表时, 是否保留格式设置。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-163">Specifies whether formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.</span></span>

      <span data-ttu-id="e1bdb-164">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-164">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.set
    summary: '<span data-ttu-id="e1bdb-165">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-165">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e1bdb-166">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-166">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e1bdb-167">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="e1bdb-167">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="e1bdb-168">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-168">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.PivotLayoutUpdateData
        - id: options
          description: '<span data-ttu-id="e1bdb-169">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-169">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.PivotLayout.set_1
    summary: '<span data-ttu-id="e1bdb-170">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-170">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotLayout
  - uid: excel.Excel.PivotLayout.setAutoSortOnCell
    summary: |-
      <span data-ttu-id="e1bdb-171">将数据透视表设置为使用指定的单元格自动进行排序, 以自动选择所有必需的条件和上下文。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-171">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="e1bdb-172">这与从 UI 应用自动排序的行为相同。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-172">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="e1bdb-173">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-173">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="e1bdb-174">要使用的单个单元格获取应用自动排序的条件。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-174">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - Range | string
        - id: sortBy
          description: <span data-ttu-id="e1bdb-175">排序的方向。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-175">The direction of the sort.</span></span>
          type:
            - excel.Excel.SortBy
  - uid: excel.Excel.PivotLayout.setAutoSortOnCell_1
    summary: |-
      <span data-ttu-id="e1bdb-176">将数据透视表设置为使用指定的单元格自动进行排序, 以自动选择所有必需的条件和上下文。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-176">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="e1bdb-177">这与从 UI 应用自动排序的行为相同。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-177">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="e1bdb-178">\[[API 集: ExcelApi BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="e1bdb-179">要使用的单个单元格获取应用自动排序的条件。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-179">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - Range | string
        - id: sortByString
          description: <span data-ttu-id="e1bdb-180">排序的方向。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-180">The direction of the sort.</span></span>
          type:
            - '"Ascending" | "Descending"'
  - uid: excel.Excel.PivotLayout.showColumnGrandTotals
    summary: |-
      <span data-ttu-id="e1bdb-181">指定数据透视表报表是否显示列总计。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-181">Specifies whether the PivotTable report shows grand totals for columns.</span></span>

      <span data-ttu-id="e1bdb-182">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-182">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.showRowGrandTotals
    summary: |-
      <span data-ttu-id="e1bdb-183">指定数据透视表报表是否显示行总计。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-183">Specifies whether the PivotTable report shows grand totals for rows.</span></span>

      <span data-ttu-id="e1bdb-184">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-184">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.subtotalLocation
    summary: |-
      <span data-ttu-id="e1bdb-185">此属性指示数据透视表上的所有字段的 SubtotalLocationType。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-185">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="e1bdb-186">如果字段状态不同，则为 null。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-186">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="e1bdb-187">\[[API 集: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1bdb-187">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
  - uid: excel.Excel.PivotLayout.toJSON
    summary: '<span data-ttu-id="e1bdb-188">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e1bdb-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e1bdb-189">.</span><span class="sxs-lookup"><span data-stu-id="e1bdb-189"></span></span> <span data-ttu-id="e1bdb-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e1bdb-190"></span></span><!-- --><span data-ttu-id="e1bdb-191">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 PivotLayout 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.PivotLayoutData`</span><span class="sxs-lookup"><span data-stu-id="e1bdb-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`</span></span><!-- --><span data-ttu-id="e1bdb-192">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="e1bdb-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotLayoutData
        description: ''