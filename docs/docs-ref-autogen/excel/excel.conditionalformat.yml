### YamlMime:UniversalReference
ms.openlocfilehash: 0f978eecaa431539ca42923817eef15ddc3c2980
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 11/09/2018
ms.locfileid: "26223843"
items:
- uid: excel.Excel.ConditionalFormat
  summary: >-
    <span data-ttu-id="50999-101">一个对象，该对象封装一个条件格式的范围、格式、规则和其他属性。</span><span class="sxs-lookup"><span data-stu-id="50999-101">An object encapsulating a conditional format's range, format, rule, and other properties.</span></span>


    <span data-ttu-id="50999-102">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalFormat
  fullName: Excel.ConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalFormat.cellValue
  - excel.Excel.ConditionalFormat.cellValueOrNullObject
  - excel.Excel.ConditionalFormat.colorScale
  - excel.Excel.ConditionalFormat.colorScaleOrNullObject
  - excel.Excel.ConditionalFormat.custom
  - excel.Excel.ConditionalFormat.customOrNullObject
  - excel.Excel.ConditionalFormat.dataBar
  - excel.Excel.ConditionalFormat.dataBarOrNullObject
  - excel.Excel.ConditionalFormat.delete
  - excel.Excel.ConditionalFormat.getRange
  - excel.Excel.ConditionalFormat.getRangeOrNullObject
  - excel.Excel.ConditionalFormat.iconSet
  - excel.Excel.ConditionalFormat.iconSetOrNullObject
  - excel.Excel.ConditionalFormat.id
  - excel.Excel.ConditionalFormat.load
  - excel.Excel.ConditionalFormat.preset
  - excel.Excel.ConditionalFormat.presetOrNullObject
  - excel.Excel.ConditionalFormat.priority
  - excel.Excel.ConditionalFormat.stopIfTrue
  - excel.Excel.ConditionalFormat.textComparison
  - excel.Excel.ConditionalFormat.textComparisonOrNullObject
  - excel.Excel.ConditionalFormat.toJSON
  - excel.Excel.ConditionalFormat.topBottom
  - excel.Excel.ConditionalFormat.topBottomOrNullObject
  - excel.Excel.ConditionalFormat.type
- uid: excel.Excel.ConditionalFormat.cellValue
  summary: >-
    <span data-ttu-id="50999-103">如果当前的条件格式是 CellValue 类型，返回单元格值条件格式属性。</span><span class="sxs-lookup"><span data-stu-id="50999-103">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="50999-104">为使设置 5 和 10 之间的所有单元格格式示例。</span><span class="sxs-lookup"><span data-stu-id="50999-104">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="50999-105">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-105">Read-only.</span></span>


    <span data-ttu-id="50999-106">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellValue
  fullName: cellValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellValue: Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50999-107\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"50999-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.cellValueOrNullObject
  summary: >-
    <span data-ttu-id="50999-108">如果当前的条件格式是 CellValue 类型，返回单元格值条件格式属性。</span><span class="sxs-lookup"><span data-stu-id="50999-108">Returns the cell value conditional format properties if the current conditional format is a CellValue type.</span></span> <span data-ttu-id="50999-109">为使设置 5 和 10 之间的所有单元格格式示例。</span><span class="sxs-lookup"><span data-stu-id="50999-109">For example to format all cells between 5 and 10.</span></span> <span data-ttu-id="50999-110">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-110">Read-only.</span></span>


    <span data-ttu-id="50999-111">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellValueOrNullObject
  fullName: cellValueOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellValueOrNullObject: Excel.CellValueConditionalFormat;'
    return:
      type:
      - excel.Excel.CellValueConditionalFormat
- uid: excel.Excel.ConditionalFormat.colorScale
  summary: >-
    <span data-ttu-id="50999-p103">如果当前的条件格式为 ColorScale 类型，返回 ColorScale 条件格式属性。只读。</span><span class="sxs-lookup"><span data-stu-id="50999-p103">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type. Read-only.</span></span>


    <span data-ttu-id="50999-114">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-114">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: colorScale
  fullName: colorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly colorScale: Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50999-115\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"50999-115\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.colorScale);\n    const criteria = {\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"blue\" },\n        midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"red\" }\n    };\n    conditionalFormat.colorScale.criteria = criteria;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.colorScaleOrNullObject
  summary: >-
    <span data-ttu-id="50999-p104">如果当前的条件格式为 ColorScale 类型，返回 ColorScale 条件格式属性。只读。</span><span class="sxs-lookup"><span data-stu-id="50999-p104">Returns the ColorScale conditional format properties if the current conditional format is an ColorScale type. Read-only.</span></span>


    <span data-ttu-id="50999-118">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-118">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: colorScaleOrNullObject
  fullName: colorScaleOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly colorScaleOrNullObject: Excel.ColorScaleConditionalFormat;'
    return:
      type:
      - excel.Excel.ColorScaleConditionalFormat
- uid: excel.Excel.ConditionalFormat.custom
  summary: >-
    <span data-ttu-id="50999-p105">如果当前的条件格式是自定义类型，则返回自定义条件格式属性。只读。</span><span class="sxs-lookup"><span data-stu-id="50999-p105">Returns the custom conditional format properties if the current conditional format is a custom type. Read-only.</span></span>


    <span data-ttu-id="50999-121">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-121">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: custom
  fullName: custom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly custom: Excel.CustomConditionalFormat;'
    return:
      type:
      - excel.Excel.CustomConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50999-122\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"50999-122\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.customOrNullObject
  summary: >-
    <span data-ttu-id="50999-p106">如果当前的条件格式是自定义类型，则返回自定义条件格式属性。只读。</span><span class="sxs-lookup"><span data-stu-id="50999-p106">Returns the custom conditional format properties if the current conditional format is a custom type. Read-only.</span></span>


    <span data-ttu-id="50999-125">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-125">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: customOrNullObject
  fullName: customOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customOrNullObject: Excel.CustomConditionalFormat;'
    return:
      type:
      - excel.Excel.CustomConditionalFormat
- uid: excel.Excel.ConditionalFormat.dataBar
  summary: >-
    <span data-ttu-id="50999-p107">如果当前的条件格式是数据栏，则返回数据栏属性。只读。</span><span class="sxs-lookup"><span data-stu-id="50999-p107">Returns the data bar properties if the current conditional format is a data bar. Read-only.</span></span>


    <span data-ttu-id="50999-128">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-128">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataBar
  fullName: dataBar
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataBar: Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50999-129\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"50999-129\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.dataBar);\n    conditionalFormat.dataBar.barDirection = Excel.ConditionalDataBarDirection.leftToRight;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.dataBarOrNullObject
  summary: >-
    <span data-ttu-id="50999-p108">如果当前的条件格式是数据栏，则返回数据栏属性。只读。</span><span class="sxs-lookup"><span data-stu-id="50999-p108">Returns the data bar properties if the current conditional format is a data bar. Read-only.</span></span>


    <span data-ttu-id="50999-132">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataBarOrNullObject
  fullName: dataBarOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataBarOrNullObject: Excel.DataBarConditionalFormat;'
    return:
      type:
      - excel.Excel.DataBarConditionalFormat
- uid: excel.Excel.ConditionalFormat.delete
  summary: >-
    <span data-ttu-id="50999-133">删除此条件格式。</span><span class="sxs-lookup"><span data-stu-id="50999-133">Deletes this conditional format.</span></span>


    <span data-ttu-id="50999-134">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-134">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.ConditionalFormat.getRange
  summary: >-
    <span data-ttu-id="50999-135">返回应用条件格式的范围。</span><span class="sxs-lookup"><span data-stu-id="50999-135">Returns the range the conditonal format is applied to.</span></span> <span data-ttu-id="50999-136">如果条件格式应用于多个区域，将引发错误。</span><span class="sxs-lookup"><span data-stu-id="50999-136">Throws an error if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="50999-137">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-137">Read-only.</span></span>


    <span data-ttu-id="50999-138">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-138">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50999-139\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"50999-139\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    $(\"#conditional-formats li\").remove();\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            let $p = $(\"<p></p>\").text(\n                `${item.cf.type}`)\n            let $li = $(`<li></li>`);\n            $li.append($p);\n            $(\"#conditional-formats\").append($li);\n            $(\".conditional-formats\").show()[0].scrollIntoView();\n        })\n    }\n    else {\n        OfficeHelpers.UI.notify(\"None to display\", \"No conditional formats in workbook\", \"warning\");\n    }\n});\n```"
- uid: excel.Excel.ConditionalFormat.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="50999-140">如果条件格式应用于多个区域，返回 conditonal 格式应用到的区域或 null 对象。</span><span class="sxs-lookup"><span data-stu-id="50999-140">Returns the range the conditonal format is applied to, or a null object if the conditional format is applied to multiple ranges.</span></span> <span data-ttu-id="50999-141">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-141">Read-only.</span></span>


    <span data-ttu-id="50999-142">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-142">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.ConditionalFormat.iconSet
  summary: >-
    <span data-ttu-id="50999-p111">如果当前的条件格式是 IconSet 类型，则返回 IconSet 条件格式属性。只读。</span><span class="sxs-lookup"><span data-stu-id="50999-p111">Returns the IconSet conditional format properties if the current conditional format is an IconSet type. Read-only.</span></span>


    <span data-ttu-id="50999-145">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-145">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: iconSet
  fullName: iconSet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iconSet: Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50999-146\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"50999-146\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.iconSetOrNullObject
  summary: >-
    <span data-ttu-id="50999-p112">如果当前的条件格式是 IconSet 类型，则返回 IconSet 条件格式属性。只读。</span><span class="sxs-lookup"><span data-stu-id="50999-p112">Returns the IconSet conditional format properties if the current conditional format is an IconSet type. Read-only.</span></span>


    <span data-ttu-id="50999-149">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-149">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: iconSetOrNullObject
  fullName: iconSetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly iconSetOrNullObject: Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
- uid: excel.Excel.ConditionalFormat.id
  summary: >-
    <span data-ttu-id="50999-150">条件格式中当前 ConditionalFormatCollection 优先级。</span><span class="sxs-lookup"><span data-stu-id="50999-150">The Priority of the Conditional Format within the current ConditionalFormatCollection.</span></span> <span data-ttu-id="50999-151">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-151">Read-only.</span></span>


    <span data-ttu-id="50999-152">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-152">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalFormat.load
  summary: <span data-ttu-id="50999-153">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="50999-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="50999-154">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="50999-154">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="50999-155">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="50999-155">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="50999-156">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="50999-156">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="50999-157">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="50999-157">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="50999-158">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="50999-158">It is similar to the preceding signature.</span></span> <span data-ttu-id="50999-159">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="50999-159">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="50999-160">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="50999-160">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="50999-161">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="50999-161">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ConditionalFormat;'
    return:
      type:
      - excel.Excel.ConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="50999-162">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="50999-162">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalFormat.preset
  summary: >-
    <span data-ttu-id="50999-163">返回预设的条件条件格式。</span><span class="sxs-lookup"><span data-stu-id="50999-163">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="50999-164">有关详细信息，请参阅 Excel.PresetCriteriaConditionalFormat。</span><span class="sxs-lookup"><span data-stu-id="50999-164">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>


    <span data-ttu-id="50999-165">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-165">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: preset
  fullName: preset
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly preset: Excel.PresetCriteriaConditionalFormat;'
    return:
      type:
      - excel.Excel.PresetCriteriaConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50999-166\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"50999-166\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:M5\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.presetCriteria);\n    conditionalFormat.preset.format.font.color = \"white\";\n    conditionalFormat.preset.rule = { criterion: Excel.ConditionalFormatPresetCriterion.oneStdDevAboveAverage };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.presetOrNullObject
  summary: >-
    <span data-ttu-id="50999-167">返回预设的条件条件格式。</span><span class="sxs-lookup"><span data-stu-id="50999-167">Returns the preset criteria conditional format.</span></span> <span data-ttu-id="50999-168">有关详细信息，请参阅 Excel.PresetCriteriaConditionalFormat。</span><span class="sxs-lookup"><span data-stu-id="50999-168">See Excel.PresetCriteriaConditionalFormat for more details.</span></span>


    <span data-ttu-id="50999-169">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-169">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: presetOrNullObject
  fullName: presetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly presetOrNullObject: Excel.PresetCriteriaConditionalFormat;'
    return:
      type:
      - excel.Excel.PresetCriteriaConditionalFormat
- uid: excel.Excel.ConditionalFormat.priority
  summary: >-
    <span data-ttu-id="50999-170">此条件格式当前条件格式集合中的优先级 （或索引） 中存在。</span><span class="sxs-lookup"><span data-stu-id="50999-170">The priority (or index) within the conditional format collection that this conditional format currently exists in.</span></span> <span data-ttu-id="50999-171">更改这也会更改其他条件格式的优先级，以允许连续的优先级顺序。</span><span class="sxs-lookup"><span data-stu-id="50999-171">Changing this also changes other conditional formats' priorities, to allow for a contiguous priority order.</span></span> <span data-ttu-id="50999-172">使用负优先级从后开始。</span><span class="sxs-lookup"><span data-stu-id="50999-172">Use a negative priority to begin from the back.</span></span> <span data-ttu-id="50999-173">大于比边界将获取和设置的最大 （或最小，如果为负） 优先级的优先级。</span><span class="sxs-lookup"><span data-stu-id="50999-173">Priorities greater than than bounds will get and set to the maximum (or minimum if negative) priority.</span></span> <span data-ttu-id="50999-174">此外请注意，如果您更改优先级，您需要重取优先级位置的新对象的新副本，如果您想要进行进一步更改为它。</span><span class="sxs-lookup"><span data-stu-id="50999-174">Also note that if you change the priority, you have to re-fetch a new copy of the object at that new priority location if you want to make further changes to it.</span></span> <span data-ttu-id="50999-175">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-175">Read-only.</span></span>


    <span data-ttu-id="50999-176">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-176">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: priority
  fullName: priority
  langs:
  - typeScript
  type: property
  syntax:
    content: 'priority: number;'
    return:
      type:
      - number
- uid: excel.Excel.ConditionalFormat.stopIfTrue
  summary: >-
    <span data-ttu-id="50999-177">如果满足此条件格式的条件，则不会有任何低优先级格式应在此单元格上生效。</span><span class="sxs-lookup"><span data-stu-id="50999-177">If the conditions of this conditional format are met, no lower-priority formats shall take effect on that cell.</span></span> <span data-ttu-id="50999-178">对于这些 StopIfTrue 没有概念原样上数据栏、 图标集和 colorscales 为 null</span><span class="sxs-lookup"><span data-stu-id="50999-178">Null on databars, icon sets, and colorscales as there's no concept of StopIfTrue for these</span></span>


    <span data-ttu-id="50999-179">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-179">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: stopIfTrue
  fullName: stopIfTrue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'stopIfTrue: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ConditionalFormat.textComparison
  summary: >-
    <span data-ttu-id="50999-180">返回当前的条件格式的文本类型时的特定文本条件格式属性。</span><span class="sxs-lookup"><span data-stu-id="50999-180">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="50999-181">例如，若要设置单元格格式匹配的单词"Text"。</span><span class="sxs-lookup"><span data-stu-id="50999-181">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="50999-182">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-182">Read-only.</span></span>


    <span data-ttu-id="50999-183">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-183">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textComparison
  fullName: textComparison
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly textComparison: Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50999-184\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"50999-184\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalFormat.textComparisonOrNullObject
  summary: >-
    <span data-ttu-id="50999-185">返回当前的条件格式的文本类型时的特定文本条件格式属性。</span><span class="sxs-lookup"><span data-stu-id="50999-185">Returns the specific text conditional format properties if the current conditional format is a text type.</span></span> <span data-ttu-id="50999-186">例如，若要设置单元格格式匹配的单词"Text"。</span><span class="sxs-lookup"><span data-stu-id="50999-186">For example to format cells matching the word "Text".</span></span> <span data-ttu-id="50999-187">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-187">Read-only.</span></span>


    <span data-ttu-id="50999-188">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-188">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textComparisonOrNullObject
  fullName: textComparisonOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly textComparisonOrNullObject: Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
- uid: excel.Excel.ConditionalFormat.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalFormatData
      description: ''
- uid: excel.Excel.ConditionalFormat.topBottom
  summary: >-
    <span data-ttu-id="50999-189">如果当前的条件格式是从上到下类型，则返回如上/下条件格式属性。</span><span class="sxs-lookup"><span data-stu-id="50999-189">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="50999-190">若要设置格式的前 10%或后 10 项的示例。</span><span class="sxs-lookup"><span data-stu-id="50999-190">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="50999-191">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-191">Read-only.</span></span>


    <span data-ttu-id="50999-192">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-192">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: topBottom
  fullName: topBottom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly topBottom: Excel.TopBottomConditionalFormat;'
    return:
      type:
      - excel.Excel.TopBottomConditionalFormat
- uid: excel.Excel.ConditionalFormat.topBottomOrNullObject
  summary: >-
    <span data-ttu-id="50999-193">如果当前的条件格式是从上到下类型，则返回如上/下条件格式属性。</span><span class="sxs-lookup"><span data-stu-id="50999-193">Returns the Top/Bottom conditional format properties if the current conditional format is an TopBottom type.</span></span> <span data-ttu-id="50999-194">若要设置格式的前 10%或后 10 项的示例。</span><span class="sxs-lookup"><span data-stu-id="50999-194">For example to format the top 10% or bottom 10 items.</span></span> <span data-ttu-id="50999-195">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-195">Read-only.</span></span>


    <span data-ttu-id="50999-196">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-196">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: topBottomOrNullObject
  fullName: topBottomOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly topBottomOrNullObject: Excel.TopBottomConditionalFormat;'
    return:
      type:
      - excel.Excel.TopBottomConditionalFormat
- uid: excel.Excel.ConditionalFormat.type
  summary: >-
    <span data-ttu-id="50999-197">条件格式的类型。</span><span class="sxs-lookup"><span data-stu-id="50999-197">A type of conditional format.</span></span> <span data-ttu-id="50999-198">只有一个可以设置一次。</span><span class="sxs-lookup"><span data-stu-id="50999-198">Only one can be set at a time.</span></span> <span data-ttu-id="50999-199">只读。</span><span class="sxs-lookup"><span data-stu-id="50999-199">Read-only.</span></span>


    <span data-ttu-id="50999-200">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50999-200">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue";'
    return:
      type:
      - Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50999-201\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"50999-201\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const worksheetRange = sheet.getRange();\n    worksheetRange.conditionalFormats.load(\"type\");\n\n    await context.sync();\n\n    let cfRangePairs: { cf: Excel.ConditionalFormat, range: Excel.Range }[] = [];\n    worksheetRange.conditionalFormats.items.forEach(item => {\n        cfRangePairs.push({\n            cf: item,\n            range: item.getRange().load(\"address\")\n        });\n    });\n\n    await context.sync();\n\n    $(\"#conditional-formats li\").remove();\n    if (cfRangePairs.length > 0) {\n        cfRangePairs.forEach(item => {\n            let $p = $(\"<p></p>\").text(\n                `${item.cf.type}`)\n            let $li = $(`<li></li>`);\n            $li.append($p);\n            $(\"#conditional-formats\").append($li);\n            $(\".conditional-formats\").show()[0].scrollIntoView();\n        })\n    }\n    else {\n        OfficeHelpers.UI.notify(\"None to display\", \"No conditional formats in workbook\", \"warning\");\n    }\n});\n```"
