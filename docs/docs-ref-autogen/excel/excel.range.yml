### YamlMime:UniversalReference
ms.openlocfilehash: b9b109293b60a4688bd4970244df75ef9d06da2a
ms.sourcegitcommit: b05ee546d9dfbc914c8d1c594d9b206b04780bbc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 11/22/2018
ms.locfileid: "26647803"
items:
- uid: excel.Excel.Range
  summary: >-
    <span data-ttu-id="4d841-101">Range 表示一个或多个相邻的单元格，如单元格、行、列、单元格块等。</span><span class="sxs-lookup"><span data-stu-id="4d841-101">Range represents a set of one or more contiguous cells such as a cell, a row, a column, block of cells, etc.</span></span>


    <span data-ttu-id="4d841-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  remarks: <span data-ttu-id="4d841-103">我们[使用范围的操作方法指南](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges)提供了详细演练、 图像和代码示例。</span><span class="sxs-lookup"><span data-stu-id="4d841-103">Our [how-to guide on working with ranges](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges) has detailed walkthroughs, images, and code samples.</span></span>
  name: Excel.Range
  fullName: Excel.Range
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Range.address
  - excel.Excel.Range.addressLocal
  - excel.Excel.Range.calculate
  - excel.Excel.Range.cellCount
  - excel.Excel.Range.clear
  - excel.Excel.Range.columnCount
  - excel.Excel.Range.columnHidden
  - excel.Excel.Range.columnIndex
  - excel.Excel.Range.conditionalFormats
  - excel.Excel.Range.dataValidation
  - excel.Excel.Range.delete
  - excel.Excel.Range.format
  - excel.Excel.Range.formulas
  - excel.Excel.Range.formulasLocal
  - excel.Excel.Range.formulasR1C1
  - excel.Excel.Range.getAbsoluteResizedRange
  - excel.Excel.Range.getBoundingRect
  - excel.Excel.Range.getCell
  - excel.Excel.Range.getColumn
  - excel.Excel.Range.getColumnsAfter
  - excel.Excel.Range.getColumnsBefore
  - excel.Excel.Range.getEntireColumn
  - excel.Excel.Range.getEntireRow
  - excel.Excel.Range.getImage
  - excel.Excel.Range.getIntersection
  - excel.Excel.Range.getIntersectionOrNullObject
  - excel.Excel.Range.getLastCell
  - excel.Excel.Range.getLastColumn
  - excel.Excel.Range.getLastRow
  - excel.Excel.Range.getOffsetRange
  - excel.Excel.Range.getResizedRange
  - excel.Excel.Range.getRow
  - excel.Excel.Range.getRowsAbove
  - excel.Excel.Range.getRowsBelow
  - excel.Excel.Range.getSurroundingRegion
  - excel.Excel.Range.getUsedRange
  - excel.Excel.Range.getUsedRangeOrNullObject
  - excel.Excel.Range.getVisibleView
  - excel.Excel.Range.hidden
  - excel.Excel.Range.hyperlink
  - excel.Excel.Range.insert
  - excel.Excel.Range.isEntireColumn
  - excel.Excel.Range.isEntireRow
  - excel.Excel.Range.load
  - excel.Excel.Range.merge
  - excel.Excel.Range.numberFormat
  - excel.Excel.Range.numberFormatLocal
  - excel.Excel.Range.rowCount
  - excel.Excel.Range.rowHidden
  - excel.Excel.Range.rowIndex
  - excel.Excel.Range.select
  - excel.Excel.Range.showCard
  - excel.Excel.Range.sort
  - excel.Excel.Range.style
  - excel.Excel.Range.text
  - excel.Excel.Range.toJSON
  - excel.Excel.Range.track
  - excel.Excel.Range.unmerge
  - excel.Excel.Range.untrack
  - excel.Excel.Range.values
  - excel.Excel.Range.valueTypes
  - excel.Excel.Range.worksheet
- uid: excel.Excel.Range.address
  summary: >-
    <span data-ttu-id="4d841-104">代表 A1-样式区域引用。</span><span class="sxs-lookup"><span data-stu-id="4d841-104">Represents the range reference in A1-style.</span></span> <span data-ttu-id="4d841-105">地址值将包含工作表引用 (如"Sheet1 ！A1: B4")。</span><span class="sxs-lookup"><span data-stu-id="4d841-105">Address value will contain the Sheet reference (e.g. "Sheet1!A1:B4").</span></span> <span data-ttu-id="4d841-106">只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-106">Read-only.</span></span>


    <span data-ttu-id="4d841-107">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: address
  fullName: address
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly address: string;'
    return:
      type:
      - string
- uid: excel.Excel.Range.addressLocal
  summary: >-
    <span data-ttu-id="4d841-p102">以用户语言表示对指定区域的区域引用。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p102">Represents range reference for the specified range in the language of the user. Read-only.</span></span>


    <span data-ttu-id="4d841-110">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-110">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addressLocal
  fullName: addressLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly addressLocal: string;'
    return:
      type:
      - string
- uid: excel.Excel.Range.calculate
  summary: >-
    <span data-ttu-id="4d841-111">计算工作表上的单元格区域。</span><span class="sxs-lookup"><span data-stu-id="4d841-111">Calculates a range of cells on a worksheet.</span></span>


    <span data-ttu-id="4d841-112">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-112">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate()
  fullName: calculate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Range.cellCount
  summary: >-
    <span data-ttu-id="4d841-p103">范围中的单元格数。如果单元格数超过 2^31-1 (2,147,483,647)，此 API 返回 -1。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p103">Number of cells in the range. This API will return -1 if the cell count exceeds 2^31-1 (2,147,483,647). Read-only.</span></span>


    <span data-ttu-id="4d841-116">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: cellCount
  fullName: cellCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.clear
  summary: >-
    <span data-ttu-id="4d841-117">清除范围值、格式、填充、边框等。</span><span class="sxs-lookup"><span data-stu-id="4d841-117">Clear range values, format, fill, border, etc.</span></span>


    <span data-ttu-id="4d841-118">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear(applyTo)
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(applyTo?: Excel.ClearApplyTo): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-119\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-119\">Examples</span></span>\n\n```javascript\n// Below example clears format and contents of the range. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.clear();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: applyTo
      description: <span data-ttu-id="4d841-120">可选。</span><span class="sxs-lookup"><span data-stu-id="4d841-120">Optional.</span></span> <span data-ttu-id="4d841-121">确定清除操作的类型。</span><span class="sxs-lookup"><span data-stu-id="4d841-121">Determines the type of clear action.</span></span> <span data-ttu-id="4d841-122">有关详细信息，请参阅 Excel.ClearApplyTo。</span><span class="sxs-lookup"><span data-stu-id="4d841-122">See Excel.ClearApplyTo for details.</span></span>
      type:
      - excel.Excel.ClearApplyTo
- uid: excel.Excel.Range.columnCount
  summary: >-
    <span data-ttu-id="4d841-p105">表示区域中的列总数。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p105">Represents the total number of columns in the range. Read-only.</span></span>


    <span data-ttu-id="4d841-125">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnCount
  fullName: columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.columnHidden
  summary: >-
    <span data-ttu-id="4d841-126">表示当前区域中的所有列是否隐藏。</span><span class="sxs-lookup"><span data-stu-id="4d841-126">Represents if all columns of the current range are hidden.</span></span>


    <span data-ttu-id="4d841-127">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-127">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnHidden
  fullName: columnHidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'columnHidden: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.columnIndex
  summary: >-
    <span data-ttu-id="4d841-p106">表示区域中第一个单元格的列编号。从零开始编制索引。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p106">Represents the column number of the first cell in the range. Zero-indexed. Read-only.</span></span>


    <span data-ttu-id="4d841-131">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-131">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnIndex
  fullName: columnIndex
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnIndex: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.conditionalFormats
  summary: >-
    <span data-ttu-id="4d841-p107">范围交叉的 ConditionalFormats 的集合。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p107">Collection of ConditionalFormats that intersect the range. Read-only.</span></span>


    <span data-ttu-id="4d841-134">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-134">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: conditionalFormats
  fullName: conditionalFormats
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly conditionalFormats: Excel.ConditionalFormatCollection;'
    return:
      type:
      - excel.Excel.ConditionalFormatCollection
- uid: excel.Excel.Range.dataValidation
  summary: >-
    <span data-ttu-id="4d841-135">返回的数据验证对象。</span><span class="sxs-lookup"><span data-stu-id="4d841-135">Returns a data validation object.</span></span>


    <span data-ttu-id="4d841-136">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-136">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataValidation
  fullName: dataValidation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataValidation: Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
- uid: excel.Excel.Range.delete
  summary: >-
    <span data-ttu-id="4d841-137">删除与范围相关的单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-137">Deletes the cells associated with the range.</span></span>


    <span data-ttu-id="4d841-138">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-138">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete(shift)
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(shift: Excel.DeleteShiftDirection): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-139\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-139\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.delete(\"Left\");\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: shift
      description: <span data-ttu-id="4d841-140">指定移动单元格的方式。</span><span class="sxs-lookup"><span data-stu-id="4d841-140">Specifies which way to shift the cells.</span></span> <span data-ttu-id="4d841-141">有关详细信息，请参阅 Excel.DeleteShiftDirection。</span><span class="sxs-lookup"><span data-stu-id="4d841-141">See Excel.DeleteShiftDirection for details.</span></span>
      type:
      - excel.Excel.DeleteShiftDirection
- uid: excel.Excel.Range.format
  summary: >-
    <span data-ttu-id="4d841-p109">返回一个格式对象，其中封装了区域的字体、填充、边框、对齐方式和其他属性。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p109">Returns a format object, encapsulating the range's font, fill, borders, alignment, and other properties. Read-only.</span></span>


    <span data-ttu-id="4d841-144">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-144">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.RangeFormat;'
    return:
      type:
      - excel.Excel.RangeFormat
- uid: excel.Excel.Range.formulas
  summary: >-
    <span data-ttu-id="4d841-145">表示采用 A1 样式表示法的公式。</span><span class="sxs-lookup"><span data-stu-id="4d841-145">Represents the formula in A1-style notation.</span></span> <span data-ttu-id="4d841-146">对区域设置公式时, value 参数可以是单个值 （字符串） 或二维数组。</span><span class="sxs-lookup"><span data-stu-id="4d841-146">When setting formulas to a range, the value argument can be either a single value (a string) or a two-dimensional array.</span></span> <span data-ttu-id="4d841-147">如果参数是一个 single 值，它将应用于范围中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-147">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="4d841-148">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-148">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulas
  fullName: formulas
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulas: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.formulasLocal
  summary: >-
    <span data-ttu-id="4d841-149">代表 A1 样式表示法，在用户的语言和数字格式设置的区域设置公式。</span><span class="sxs-lookup"><span data-stu-id="4d841-149">Represents the formula in A1-style notation, in the user's language and number-formatting locale.</span></span> <span data-ttu-id="4d841-150">例如，"= SUM (A1，1.5)"的英语公式将变为"= SUMME(A1;1.5)"德语。</span><span class="sxs-lookup"><span data-stu-id="4d841-150">For example, the English "=SUM(A1, 1.5)" formula would become "=SUMME(A1; 1,5)" in German.</span></span> <span data-ttu-id="4d841-151">对区域设置公式时, value 参数可以是单个值 （字符串） 或二维数组。</span><span class="sxs-lookup"><span data-stu-id="4d841-151">When setting formulas to a range, the value argument can be either a single value (a string) or a two-dimensional array.</span></span> <span data-ttu-id="4d841-152">如果参数是一个 single 值，它将应用于范围中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-152">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="4d841-153">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulasLocal
  fullName: formulasLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulasLocal: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.formulasR1C1
  summary: >-
    <span data-ttu-id="4d841-154">表示采用 R1C1 样式表示法的公式。</span><span class="sxs-lookup"><span data-stu-id="4d841-154">Represents the formula in R1C1-style notation.</span></span> <span data-ttu-id="4d841-155">对区域设置公式时, value 参数可以是单个值 （字符串） 或二维数组。</span><span class="sxs-lookup"><span data-stu-id="4d841-155">When setting formulas to a range, the value argument can be either a single value (a string) or a two-dimensional array.</span></span> <span data-ttu-id="4d841-156">如果参数是一个 single 值，它将应用于范围中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-156">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="4d841-157">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-157">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formulasR1C1
  fullName: formulasR1C1
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulasR1C1: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.getAbsoluteResizedRange
  summary: >-
    <span data-ttu-id="4d841-158">获取一个 Range 对象，具有相同的左上角单元格作为当前的 Range 对象，但是的行和列的指定数字。</span><span class="sxs-lookup"><span data-stu-id="4d841-158">Gets a Range object with the same top-left cell as the current Range object, but with the specified numbers of rows and columns.</span></span>


    <span data-ttu-id="4d841-159">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-159">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getAbsoluteResizedRange(numRows, numColumns)
  fullName: getAbsoluteResizedRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAbsoluteResizedRange(numRows: number, numColumns: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: numRows
      description: <span data-ttu-id="4d841-160">新的区域大小的行数。</span><span class="sxs-lookup"><span data-stu-id="4d841-160">The number of rows of the new range size.</span></span>
      type:
      - number
    - id: numColumns
      description: <span data-ttu-id="4d841-161">新的区域大小的列数。</span><span class="sxs-lookup"><span data-stu-id="4d841-161">The number of columns of the new range size.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getBoundingRect
  summary: >-
    <span data-ttu-id="4d841-p113">获取包含指定区域的最小 range 对象。例如，“B2:C5”和“D10:E15”的 GetBoundingRect 为“B2:E15”。</span><span class="sxs-lookup"><span data-stu-id="4d841-p113">Gets the smallest range object that encompasses the given ranges. For example, the GetBoundingRect of "B2:C5" and "D10:E15" is "B2:E15".</span></span>


    <span data-ttu-id="4d841-164">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-164">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getBoundingRect(anotherRange)
  fullName: getBoundingRect
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getBoundingRect(anotherRange: Range | string): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-165\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-165\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D4:G6\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var range = range.getBoundingRect(\"G4:H8\");\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // Prints Sheet1!D4:H8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: anotherRange
      description: <span data-ttu-id="4d841-166">Range 对象或地址或区域名称。</span><span class="sxs-lookup"><span data-stu-id="4d841-166">The range object or address or range name.</span></span>
      type:
      - Range | string
- uid: excel.Excel.Range.getCell
  summary: >-
    <span data-ttu-id="4d841-167">获取包含基于行和列号的单个单元格的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="4d841-167">Gets the range object containing the single cell based on row and column numbers.</span></span> <span data-ttu-id="4d841-168">单元格可以是其父区域的边界以外，前提是它停留在表中的网格。</span><span class="sxs-lookup"><span data-stu-id="4d841-168">The cell can be outside the bounds of its parent range, so long as it stays within the worksheet grid.</span></span> <span data-ttu-id="4d841-169">返回单元格位于相对于该区域左上角单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-169">The returned cell is located relative to the top left cell of the range.</span></span>


    <span data-ttu-id="4d841-170">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-170">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCell(row, column)
  fullName: getCell
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCell(row: number, column: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-171\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-171\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var cell = range.cell(0,0);\n    cell.load('address');\n    return ctx.sync().then(function() {\n        console.log(cell.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: row
      description: <span data-ttu-id="4d841-p115">要检索的单元格的行号。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="4d841-p115">Row number of the cell to be retrieved. Zero-indexed.</span></span>
      type:
      - number
    - id: column
      description: <span data-ttu-id="4d841-p116">要检索的单元格的列号。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="4d841-p116">Column number of the cell to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getColumn
  summary: >-
    <span data-ttu-id="4d841-176">获取范围中包含的列。</span><span class="sxs-lookup"><span data-stu-id="4d841-176">Gets a column contained in the range.</span></span>


    <span data-ttu-id="4d841-177">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-177">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getColumn(column)
  fullName: getColumn
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumn(column: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-178\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-178\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet19\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getColumn(1);\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!B1:B8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: column
      description: <span data-ttu-id="4d841-p117">要检索的区域的列号。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="4d841-p117">Column number of the range to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getColumnsAfter
  summary: >-
    <span data-ttu-id="4d841-181">获取当前范围对象右侧的一定数量的列。</span><span class="sxs-lookup"><span data-stu-id="4d841-181">Gets a certain number of columns to the right of the current Range object.</span></span>


    <span data-ttu-id="4d841-182">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-182">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getColumnsAfter(count)
  fullName: getColumnsAfter
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumnsAfter(count?: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: count
      description: <span data-ttu-id="4d841-p118">可选。生成的范围中要包含的列数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="4d841-p118">Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getColumnsBefore
  summary: >-
    <span data-ttu-id="4d841-188">获取当前范围对象左侧的一定数量的列。</span><span class="sxs-lookup"><span data-stu-id="4d841-188">Gets a certain number of columns to the left of the current Range object.</span></span>


    <span data-ttu-id="4d841-189">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-189">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getColumnsBefore(count)
  fullName: getColumnsBefore
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumnsBefore(count?: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: count
      description: <span data-ttu-id="4d841-p119">可选。生成的范围中要包含的列数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="4d841-p119">Optional. The number of columns to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getEntireColumn
  summary: >-
    <span data-ttu-id="4d841-195">获取一个代表区域的整个列的对象 (例如，如果当前范围表示单元格"B4:E11"其`getEntireColumn`是一个范围值，该值代表列"B:E")。</span><span class="sxs-lookup"><span data-stu-id="4d841-195">Gets an object that represents the entire column of the range (for example, if the current range represents cells "B4:E11", its `getEntireColumn` is a range that represents columns "B:E").</span></span>


    <span data-ttu-id="4d841-196">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-196">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getEntireColumn()
  fullName: getEntireColumn
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntireColumn(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-197\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-197\">Examples</span></span>\n\n```javascript\n// Note: the grid properties of the Range (values, numberFormat, formulas) \n// contains null since the Range in question is unbounded.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var rangeEC = range.getEntireColumn();\n    rangeEC.load('address');\n    return ctx.sync().then(function() {\n        console.log(rangeEC.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getEntireRow
  summary: >-
    <span data-ttu-id="4d841-198">获取一个代表区域的整行的对象 (例如，如果当前区域代表单元格"B4:E11"其`GetEntireRow`是一个范围值，该值代表行"4:11")。</span><span class="sxs-lookup"><span data-stu-id="4d841-198">Gets an object that represents the entire row of the range (for example, if the current range represents cells "B4:E11", its `GetEntireRow` is a range that represents rows "4:11").</span></span>


    <span data-ttu-id="4d841-199">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-199">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getEntireRow()
  fullName: getEntireRow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntireRow(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-200\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-200\">Examples</span></span>\n\n```javascript\n// Gets an object that represents the entire row of the range \n// (for example, if the current range represents cells \"B4:E11\", \n// its GetEntireRow is a range that represents rows \"4:11\").\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\"; \n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var rangeER = range.getEntireRow();\n    rangeER.load('address');\n    return ctx.sync().then(function() {\n        console.log(rangeER.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getImage
  summary: >-
    <span data-ttu-id="4d841-201">将范围呈现为 base64 编码 png 图像。</span><span class="sxs-lookup"><span data-stu-id="4d841-201">Renders the range as a base64-encoded png image.</span></span>


    <span data-ttu-id="4d841-202">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-202">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getImage()
  fullName: getImage
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getImage(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: ''
- uid: excel.Excel.Range.getIntersection
  summary: >-
    <span data-ttu-id="4d841-203">获取表示给定范围的矩形交集的 range 对象。</span><span class="sxs-lookup"><span data-stu-id="4d841-203">Gets the range object that represents the rectangular intersection of the given ranges.</span></span>


    <span data-ttu-id="4d841-204">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-204">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getIntersection(anotherRange)
  fullName: getIntersection
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIntersection(anotherRange: Range | string): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-205\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-205\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = \n        ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getIntersection(\"D4:G6\");\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!D4:F6\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: anotherRange
      description: <span data-ttu-id="4d841-206">将用于确定区域交集的 range 对象或区域地址。</span><span class="sxs-lookup"><span data-stu-id="4d841-206">The range object or range address that will be used to determine the intersection of ranges.</span></span>
      type:
      - Range | string
- uid: excel.Excel.Range.getIntersectionOrNullObject
  summary: >-
    <span data-ttu-id="4d841-p120">获取表示指定区域的矩形交集的 range 对象。如果找不到任何交集，则此方法返回空对象。</span><span class="sxs-lookup"><span data-stu-id="4d841-p120">Gets the range object that represents the rectangular intersection of the given ranges. If no intersection is found, will return a null object.</span></span>


    <span data-ttu-id="4d841-209">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-209">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getIntersectionOrNullObject(anotherRange)
  fullName: getIntersectionOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getIntersectionOrNullObject(anotherRange: Range | string): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-210\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-210\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const dataRange = salesTable.getDataBodyRange();\n\n    // We want the most recent quarter that has data, so\n    // exclude quarters without data and get the last of\n    // the remaining columns.\n    const usedDataRange = dataRange.getUsedRange(true /* valuesOnly */);\n    const currentQuarterRange = usedDataRange.getLastColumn();\n\n    // Asian and European teams have separate contests.\n    const asianSalesRange = sheet.getRange(\"A2:E4\");\n    const europeanSalesRange = sheet.getRange(\"A5:E7\");\n\n    // The data for each chart is the intersection of the\n    // current quarter column and the rows for the continent.\n    const asianContestRange = asianSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n    const europeanContestRange = europeanSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n\n    // Must sync before you can test the output of *OrNullObject\n    // method/property.\n    await context.sync();\n\n    if (asianContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"Asian\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"Asian\",\n            asianContestRange,\n            \"A9\",\n            \"F24\"\n        );\n    }\n\n    if (europeanContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"European\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"European\",\n            europeanContestRange,\n            \"A25\",\n            \"F40\"\n        );\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: anotherRange
      description: <span data-ttu-id="4d841-211">将用于确定区域交集的 range 对象或区域地址。</span><span class="sxs-lookup"><span data-stu-id="4d841-211">The range object or range address that will be used to determine the intersection of ranges.</span></span>
      type:
      - Range | string
- uid: excel.Excel.Range.getLastCell
  summary: >-
    <span data-ttu-id="4d841-p121">获取区域内的最后一个单元格。例如，“B2:D5”的最后一个单元格是“D5”。</span><span class="sxs-lookup"><span data-stu-id="4d841-p121">Gets the last cell within the range. For example, the last cell of "B2:D5" is "D5".</span></span>


    <span data-ttu-id="4d841-214">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-214">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLastCell()
  fullName: getLastCell
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLastCell(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-215\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-215\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getLastCell();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!F8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getLastColumn
  summary: >-
    <span data-ttu-id="4d841-p122">获取区域内的最后一列。例如，“B2:D5”的最后一列是“D2:D5”。</span><span class="sxs-lookup"><span data-stu-id="4d841-p122">Gets the last column within the range. For example, the last column of "B2:D5" is "D2:D5".</span></span>


    <span data-ttu-id="4d841-218">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-218">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLastColumn()
  fullName: getLastColumn
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLastColumn(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-219\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-219\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getLastColumn();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!F1:F8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getLastRow
  summary: >-
    <span data-ttu-id="4d841-p123">获取区域内的最后一行。例如，“B2:D5”的最后一行是“B5:D5”。</span><span class="sxs-lookup"><span data-stu-id="4d841-p123">Gets the last row within the range. For example, the last row of "B2:D5" is "B5:D5".</span></span>


    <span data-ttu-id="4d841-222">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-222">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLastRow()
  fullName: getLastRow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLastRow(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-223\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-223\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getLastRow();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!A8:F8\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.getOffsetRange
  summary: >-
    <span data-ttu-id="4d841-p124">获取表示与指定区域偏移的区域的对象。返回的区域的尺寸将与此区域一致。如果强制在工作表网格的边界之外生成区域，将引发错误。</span><span class="sxs-lookup"><span data-stu-id="4d841-p124">Gets an object which represents a range that's offset from the specified range. The dimension of the returned range will match this range. If the resulting range is forced outside the bounds of the worksheet grid, an error will be thrown.</span></span>


    <span data-ttu-id="4d841-227">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-227">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getOffsetRange(rowOffset, columnOffset)
  fullName: getOffsetRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getOffsetRange(rowOffset: number, columnOffset: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-228\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-228\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D4:F6\";\n    var range = \n        ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getOffsetRange(-1,4);\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!H3:K5\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: rowOffset
      description: <span data-ttu-id="4d841-p125">区域偏移的行数（正数、负数或 0）。正数表示向下偏移，负数表示向上偏移。</span><span class="sxs-lookup"><span data-stu-id="4d841-p125">The number of rows (positive, negative, or 0) by which the range is to be offset. Positive values are offset downward, and negative values are offset upward.</span></span>
      type:
      - number
    - id: columnOffset
      description: <span data-ttu-id="4d841-p126">区域偏移的列数（正数、负数或 0）。正数表示向右偏移，负数表示向左偏移。</span><span class="sxs-lookup"><span data-stu-id="4d841-p126">The number of columns (positive, negative, or 0) by which the range is to be offset. Positive values are offset to the right, and negative values are offset to the left.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getResizedRange
  summary: >-
    <span data-ttu-id="4d841-233">获取与当前范围对象类似的范围对象，但其右下角可通过一定数量的行和列进行展开（或合拢）。</span><span class="sxs-lookup"><span data-stu-id="4d841-233">Gets a Range object similar to the current Range object, but with its bottom-right corner expanded (or contracted) by some number of rows and columns.</span></span>


    <span data-ttu-id="4d841-234">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-234">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getResizedRange(deltaRows, deltaColumns)
  fullName: getResizedRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getResizedRange(deltaRows: number, deltaColumns: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: deltaRows
      description: <span data-ttu-id="4d841-p127">相对于当前范围，展开右下角的行数。使用正数可展开范围，使用负数可合拢范围。</span><span class="sxs-lookup"><span data-stu-id="4d841-p127">The number of rows by which to expand the bottom-right corner, relative to the current range. Use a positive number to expand the range, or a negative number to decrease it.</span></span>
      type:
      - number
    - id: deltaColumns
      description: <span data-ttu-id="4d841-237">扩展的右下角，相对于当前范围的列数。</span><span class="sxs-lookup"><span data-stu-id="4d841-237">The number of columns by which to expand the bottom-right corner, relative to the current range.</span></span> <span data-ttu-id="4d841-238">使用扩展范围，为正数或负数降低它。</span><span class="sxs-lookup"><span data-stu-id="4d841-238">Use a positive number to expand the range, or a negative number to decrease it.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getRow
  summary: >-
    <span data-ttu-id="4d841-239">获取范围中包含的行。</span><span class="sxs-lookup"><span data-stu-id="4d841-239">Gets a row contained in the range.</span></span>


    <span data-ttu-id="4d841-240">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-240">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRow(row)
  fullName: getRow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRow(row: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-241\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-241\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress).getRow(1);\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address); // prints Sheet1!A2:F2\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: row
      description: <span data-ttu-id="4d841-p129">要检索的区域的行号。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="4d841-p129">Row number of the range to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getRowsAbove
  summary: >-
    <span data-ttu-id="4d841-244">获取当前范围对象上方的一定数量的行。</span><span class="sxs-lookup"><span data-stu-id="4d841-244">Gets a certain number of rows above the current Range object.</span></span>


    <span data-ttu-id="4d841-245">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-245">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRowsAbove(count)
  fullName: getRowsAbove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRowsAbove(count?: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: count
      description: <span data-ttu-id="4d841-p130">可选。生成的范围中要包含的行数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="4d841-p130">Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getRowsBelow
  summary: >-
    <span data-ttu-id="4d841-251">获取当前范围对象下方的一定数量的行。</span><span class="sxs-lookup"><span data-stu-id="4d841-251">Gets a certain number of rows below the current Range object.</span></span>


    <span data-ttu-id="4d841-252">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-252">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRowsBelow(count)
  fullName: getRowsBelow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRowsBelow(count?: number): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: count
      description: <span data-ttu-id="4d841-p131">可选。生成的范围中要包含的行数。一般来说，使用正数可以在当前范围之外创建一个范围。也可以使用负数在当前范围之内创建一个范围。默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="4d841-p131">Optional. The number of rows to include in the resulting range. In general, use a positive number to create a range outside the current range. You can also use a negative number to create a range within the current range. The default value is 1.</span></span>
      type:
      - number
- uid: excel.Excel.Range.getSurroundingRegion
  summary: >-
    <span data-ttu-id="4d841-258">返回一个 Range 对象，该对象表示的此区域的左上角单元格周围的区域。</span><span class="sxs-lookup"><span data-stu-id="4d841-258">Returns a Range object that represents the surrounding region for the top-left cell in this range.</span></span> <span data-ttu-id="4d841-259">周围的区域是受空行和空列相对于此范围的任意组合的范围。</span><span class="sxs-lookup"><span data-stu-id="4d841-259">A surrounding region is a range bounded by any combination of blank rows and blank columns relative to this range.</span></span>


    <span data-ttu-id="4d841-260">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-260">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getSurroundingRegion()
  fullName: getSurroundingRegion
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSurroundingRegion(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.Range.getUsedRange
  summary: >-
    <span data-ttu-id="4d841-p133">返回指定 Range 对象的所用区域。如果区域内没有使用单元格，此函数将引发 ItemNotFound 错误。</span><span class="sxs-lookup"><span data-stu-id="4d841-p133">Returns the used range of the given range object. If there are no used cells within the range, this function will throw an ItemNotFound error.</span></span>


    <span data-ttu-id="4d841-263">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-263">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getUsedRange(valuesOnly)
  fullName: getUsedRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRange(valuesOnly?: boolean): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-264\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-264\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"D:F\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    var rangeUR = range.getUsedRange();\n    rangeUR.load('address');\n    return ctx.sync().then(function() {\n        console.log(rangeUR.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const dataRange = salesTable.getDataBodyRange();\n\n    // We want the most recent quarter that has data, so\n    // exclude quarters without data and get the last of\n    // the remaining columns.\n    const usedDataRange = dataRange.getUsedRange(true /* valuesOnly */);\n    const currentQuarterRange = usedDataRange.getLastColumn();\n\n    // Asian and European teams have separate contests.\n    const asianSalesRange = sheet.getRange(\"A2:E4\");\n    const europeanSalesRange = sheet.getRange(\"A5:E7\");\n\n    // The data for each chart is the intersection of the\n    // current quarter column and the rows for the continent.\n    const asianContestRange = asianSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n    const europeanContestRange = europeanSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n\n    // Must sync before you can test the output of *OrNullObject\n    // method/property.\n    await context.sync();\n\n    if (asianContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"Asian\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"Asian\",\n            asianContestRange,\n            \"A9\",\n            \"F24\"\n        );\n    }\n\n    if (europeanContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"European\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"European\",\n            europeanContestRange,\n            \"A25\",\n            \"F40\"\n        );\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: valuesOnly
      description: '<span data-ttu-id="4d841-265">仅将有值的单元格视为已使用的单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-265">Considers only cells with values as used cells.</span></span> <span data-ttu-id="4d841-266">\[Api 集： ExcelApi 1.2\]</span><span class="sxs-lookup"><span data-stu-id="4d841-266">\[Api set: ExcelApi 1.2\]</span></span>'
      type:
      - boolean
- uid: excel.Excel.Range.getUsedRangeOrNullObject
  summary: >-
    <span data-ttu-id="4d841-p135">返回指定 Range 对象的所用区域。如果区域内没有使用单元格，此函数将返回 NULL 对象。</span><span class="sxs-lookup"><span data-stu-id="4d841-p135">Returns the used range of the given range object. If there are no used cells within the range, this function will return a null object.</span></span>


    <span data-ttu-id="4d841-269">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-269">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getUsedRangeOrNullObject(valuesOnly)
  fullName: getUsedRangeOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-270\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-270\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const dataRange = salesTable.getDataBodyRange();\n\n    // Pass true so only cells with values count as used\n    const usedDataRange = dataRange.getUsedRangeOrNullObject(\n        true /* valuesOnly */\n    );\n\n    //Must sync before reading value returned from *OrNullObject method/property.\n    await context.sync();\n\n    if (usedDataRange.isNullObject) {\n        OfficeHelpers.UI.notify(\n            \"Need Data to Make Chart\",\n            \"To create a meaningful chart, press 'Fill the table' (or add names to the Product column and numbers to some of the other cells). Then press 'Try to create chart' again.\"\n        );\n    } else {\n        const chart = sheet.charts.add(\n            Excel.ChartType.columnClustered,\n            dataRange,\n            \"Columns\"\n        );\n        chart.setPosition(\"A15\", \"F30\");\n        chart.title.text = \"Quarterly sales chart\";\n        chart.legend.position = \"Right\";\n        chart.legend.format.fill.setSolidColor(\"white\");\n        chart.dataLabels.format.font.size = 15;\n        chart.dataLabels.format.font.color = \"black\";\n    }\n\n    await context.sync();\n});\n```"
    parameters:
    - id: valuesOnly
      description: <span data-ttu-id="4d841-271">仅将有值的单元格视为已使用的单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-271">Considers only cells with values as used cells.</span></span>
      type:
      - boolean
- uid: excel.Excel.Range.getVisibleView
  summary: >-
    <span data-ttu-id="4d841-272">表示当前范围的可见行。</span><span class="sxs-lookup"><span data-stu-id="4d841-272">Represents the visible rows of the current range.</span></span>


    <span data-ttu-id="4d841-273">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-273">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getVisibleView()
  fullName: getVisibleView
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getVisibleView(): Excel.RangeView;'
    return:
      type:
      - excel.Excel.RangeView
      description: ''
- uid: excel.Excel.Range.hidden
  summary: >-
    <span data-ttu-id="4d841-p136">表示当前区域中的所有单元格是否隐藏。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p136">Represents if all cells of the current range are hidden. Read-only.</span></span>


    <span data-ttu-id="4d841-276">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-276">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hidden
  fullName: hidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hidden: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.hyperlink
  summary: >-
    <span data-ttu-id="4d841-277">代表当前区域的超链接。</span><span class="sxs-lookup"><span data-stu-id="4d841-277">Represents the hyperlink for the current range.</span></span>


    <span data-ttu-id="4d841-278">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-278">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hyperlink
  fullName: hyperlink
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hyperlink: Excel.RangeHyperlink;'
    return:
      type:
      - excel.Excel.RangeHyperlink
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-279\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-279\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Orders\");\n\n    let productsRange = sheet.getRange(\"A3:A5\");\n    productsRange.load(\"values\");\n\n    await context.sync();\n\n    // Create a hyperlink to a URL \n    // for each product name in the first table.\n    for (let i = 0; i < productsRange.values.length; i++) {\n        let cellRange = productsRange.getCell(i, 0);\n        let cellText = productsRange.values[i][0];\n\n        let hyperlink = {\n            textToDisplay: cellText,\n            screenTip: \"Search Bing for '\" + cellText + \"'\",\n            address: \"https://www.bing.com?q=\" + cellText\n        }\n        cellRange.hyperlink = hyperlink;\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Range.insert
  summary: >-
    <span data-ttu-id="4d841-p137">将单个单元格或一系列单元格插入到工作表中取代此区域，并移动其他单元格以留出空间。在现在空白的空间返回新的 Range 对象。</span><span class="sxs-lookup"><span data-stu-id="4d841-p137">Inserts a cell or a range of cells into the worksheet in place of this range, and shifts the other cells to make space. Returns a new Range object at the now blank space.</span></span>


    <span data-ttu-id="4d841-282">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-282">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: insert(shift)
  fullName: insert
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insert(shift: Excel.InsertShiftDirection): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-283\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-283\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F5:F10\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.insert();\n    return ctx.sync(); \n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: shift
      description: <span data-ttu-id="4d841-284">指定移动单元格的方式。</span><span class="sxs-lookup"><span data-stu-id="4d841-284">Specifies which way to shift the cells.</span></span> <span data-ttu-id="4d841-285">有关详细信息，请参阅 Excel.InsertShiftDirection。</span><span class="sxs-lookup"><span data-stu-id="4d841-285">See Excel.InsertShiftDirection for details.</span></span>
      type:
      - excel.Excel.InsertShiftDirection
- uid: excel.Excel.Range.isEntireColumn
  summary: >-
    <span data-ttu-id="4d841-286">代表当前范围是否整列。</span><span class="sxs-lookup"><span data-stu-id="4d841-286">Represents if the current range is an entire column.</span></span> <span data-ttu-id="4d841-287">只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-287">Read-only.</span></span>


    <span data-ttu-id="4d841-288">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-288">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: isEntireColumn
  fullName: isEntireColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEntireColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.isEntireRow
  summary: >-
    <span data-ttu-id="4d841-289">代表当前范围是否整行。</span><span class="sxs-lookup"><span data-stu-id="4d841-289">Represents if the current range is an entire row.</span></span> <span data-ttu-id="4d841-290">只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-290">Read-only.</span></span>


    <span data-ttu-id="4d841-291">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-291">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: isEntireRow
  fullName: isEntireRow
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEntireRow: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.load
  summary: <span data-ttu-id="4d841-292">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="4d841-292">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4d841-293">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="4d841-293">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"4d841-294\">除了此签名，此方法具有以下签名：</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-294\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"4d841-295\">`load(option?: { select?: string; expand?: string; }): Excel.Range`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-295\">`load(option?: { select?: string; expand?: string; }): Excel.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"4d841-296\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Range`-仅可对集合的类型。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-296\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Range` - Only available on collection types.</span></span> <span data-ttu-id=\"4d841-297\">它是类似于前一个签名。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-297\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"4d841-298\">Option.top 指定集合项可在结果中包含的最大数目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-298\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"4d841-299\">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-299\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"4d841-300\">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-300\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-301\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-301\">Examples</span></span>\n\n```javascript\n// Below example uses range address to get the range object.\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\"; \n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Below example uses a named-range to get the range object.\nExcel.run(function (ctx) { \n    var rangeName = 'MyRange';\n    var range = ctx.workbook.names.getItem(rangeName).range;\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets number-format, values and formulas on a grid that contains 2x3 grid.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F5:G7\";\n    var numberFormat = [[null, \"d-mmm\"], [null, \"d-mmm\"], [null, null]]\n    var values = [[\"Today\", 42147], [\"Tomorrow\", \"5/24\"], [\"Difference in days\", null]];\n    var formulas = [[null,null], [null,null], [null,\"=G6-G5\"]];\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.numberFormat = numberFormat;\n    range.values = values;\n    range.formulas= formulas;\n    range.load('text');\n    return ctx.sync().then(function() {\n        console.log(range.text);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="4d841-302">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4d841-302">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Range.merge
  summary: >-
    <span data-ttu-id="4d841-303">将范围单元格合并到工作表的一个区域中。</span><span class="sxs-lookup"><span data-stu-id="4d841-303">Merge the range cells into one region in the worksheet.</span></span>


    <span data-ttu-id="4d841-304">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-304">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: merge(across)
  fullName: merge
  langs:
  - typeScript
  type: method
  syntax:
    content: 'merge(across?: boolean): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-305\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-305\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.merge(true);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.unmerge();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: across
      description: <span data-ttu-id="4d841-p143">可选。如果为 True，则将指定区域中每一行的单元格合并为一个单独的合并单元格。默认值是 false。</span><span class="sxs-lookup"><span data-stu-id="4d841-p143">Optional. Set true to merge cells in each row of the specified range as separate merged cells. The default value is false.</span></span>
      type:
      - boolean
- uid: excel.Excel.Range.numberFormat
  summary: >-
    <span data-ttu-id="4d841-309">表示给定范围的 Excel 的数字格式代码。</span><span class="sxs-lookup"><span data-stu-id="4d841-309">Represents Excel's number format code for the given range.</span></span> <span data-ttu-id="4d841-310">当设置为一系列数字格式，值参数可以是单个值 （字符串） 或二维数组。</span><span class="sxs-lookup"><span data-stu-id="4d841-310">When setting number format to a range, the value argument can be either a single value (string) or a two-dimensional array.</span></span> <span data-ttu-id="4d841-311">如果参数是一个 single 值，它将应用于范围中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-311">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="4d841-312">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-312">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: numberFormat
  fullName: numberFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormat: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.numberFormatLocal
  summary: >-
    <span data-ttu-id="4d841-313">用户语言字符串形式表示给定范围的 Excel 的数字格式代码。</span><span class="sxs-lookup"><span data-stu-id="4d841-313">Represents Excel's number format code for the given range as a string in the language of the user.</span></span> <span data-ttu-id="4d841-314">时将本地号码的格式设置为区域，value 参数可以是单个值 （字符串） 或二维数组。</span><span class="sxs-lookup"><span data-stu-id="4d841-314">When setting number format local to a range, the value argument can be either a single value (string) or a two-dimensional array.</span></span> <span data-ttu-id="4d841-315">如果参数是一个 single 值，它将应用于范围中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-315">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="4d841-316">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-316">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: numberFormatLocal
  fullName: numberFormatLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormatLocal: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.rowCount
  summary: >-
    <span data-ttu-id="4d841-p146">返回区域中的总行数。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p146">Returns the total number of rows in the range. Read-only.</span></span>


    <span data-ttu-id="4d841-319">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-319">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowCount
  fullName: rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowCount: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.rowHidden
  summary: >-
    <span data-ttu-id="4d841-320">表示当前区域中的所有行是否隐藏。</span><span class="sxs-lookup"><span data-stu-id="4d841-320">Represents if all rows of the current range are hidden.</span></span>


    <span data-ttu-id="4d841-321">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-321">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowHidden
  fullName: rowHidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rowHidden: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Range.rowIndex
  summary: >-
    <span data-ttu-id="4d841-p147">返回区域中第一个单元格的行编号。从零开始编制索引。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p147">Returns the row number of the first cell in the range. Zero-indexed. Read-only.</span></span>


    <span data-ttu-id="4d841-325">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-325">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowIndex
  fullName: rowIndex
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowIndex: number;'
    return:
      type:
      - number
- uid: excel.Excel.Range.select
  summary: >-
    <span data-ttu-id="4d841-326">在 Excel UI 中选择指定的区域。</span><span class="sxs-lookup"><span data-stu-id="4d841-326">Selects the specified range in the Excel UI.</span></span>


    <span data-ttu-id="4d841-327">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-327">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: select()
  fullName: select
  langs:
  - typeScript
  type: method
  syntax:
    content: 'select(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-328\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-328\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F5:F10\"; \n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.select();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.showCard
  summary: >-
    <span data-ttu-id="4d841-329">如果它具有丰富的价值内容，显示为活动单元格卡片。</span><span class="sxs-lookup"><span data-stu-id="4d841-329">Displays the card for an active cell if it has rich value content.</span></span>


    <span data-ttu-id="4d841-330">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-330">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showCard()
  fullName: showCard
  langs:
  - typeScript
  type: method
  syntax:
    content: 'showCard(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Range.sort
  summary: >-
    <span data-ttu-id="4d841-p148">表示当前 range 的区域排序。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p148">Represents the range sort of the current range. Read-only.</span></span>


    <span data-ttu-id="4d841-333">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-333">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sort
  fullName: sort
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sort: Excel.RangeSort;'
    return:
      type:
      - excel.Excel.RangeSort
- uid: excel.Excel.Range.style
  summary: >-
    <span data-ttu-id="4d841-334">代表当前范围的样式。</span><span class="sxs-lookup"><span data-stu-id="4d841-334">Represents the style of the current range.</span></span> <span data-ttu-id="4d841-335">如果单元格的样式不一致，则将返回 null。</span><span class="sxs-lookup"><span data-stu-id="4d841-335">If the styles of the cells are inconsistent, null will be returned.</span></span> <span data-ttu-id="4d841-336">对于自定义样式，将返回样式名称。</span><span class="sxs-lookup"><span data-stu-id="4d841-336">For custom styles, the style name will be returned.</span></span> <span data-ttu-id="4d841-337">对于内置样式，将返回一个字符串，表示 BuiltInStyle 枚举中的值。</span><span class="sxs-lookup"><span data-stu-id="4d841-337">For built-in styles, a string representing a value in the BuiltInStyle enum will be returned.</span></span>


    <span data-ttu-id="4d841-338">\[[API 集： ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-338">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-339\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-339\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let worksheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = worksheet.getRange(\"A1:E1\");\n\n    // Apply built-in style. \n    // Styles are in the Home tab ribbon.\n    range.style = Excel.BuiltInStyle.neutral;\n    range.format.horizontalAlignment = \"Right\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Range.text
  summary: >-
    <span data-ttu-id="4d841-340">指定区域的文本值。</span><span class="sxs-lookup"><span data-stu-id="4d841-340">Text values of the specified range.</span></span> <span data-ttu-id="4d841-341">文本值不将取决于的单元格宽度。</span><span class="sxs-lookup"><span data-stu-id="4d841-341">The Text value will not depend on the cell width.</span></span> <span data-ttu-id="4d841-342">\#登录替换 Excel 用户界面中出现的不会影响 API 返回的文本值。</span><span class="sxs-lookup"><span data-stu-id="4d841-342">The \# sign substitution that happens in Excel UI will not affect the text value returned by the API.</span></span> <span data-ttu-id="4d841-343">只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-343">Read-only.</span></span>


    <span data-ttu-id="4d841-344">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-344">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string[][];'
    return:
      type:
      - string[][]
- uid: excel.Excel.Range.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeData
      description: ''
- uid: excel.Excel.Range.track
  summary: <span data-ttu-id="4d841-345">跟踪自动调整根据周围的文档中的更改的对象。</span><span class="sxs-lookup"><span data-stu-id="4d841-345">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="4d841-346">此呼叫是 context.trackedObjects.add(thisObject) 简写。</span><span class="sxs-lookup"><span data-stu-id="4d841-346">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="4d841-347">如果您正在使用此对象跨".sync"呼叫和外部".run"批处理和 get"InvalidObjectPath"错误的顺序执行设置属性时，或调用对象的方法，您需要具有将对象添加到跟踪对象首先创建对象集合。</span><span class="sxs-lookup"><span data-stu-id="4d841-347">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.Range.unmerge
  summary: >-
    <span data-ttu-id="4d841-348">将范围单元格取消合并为各个单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-348">Unmerge the range cells into separate cells.</span></span>


    <span data-ttu-id="4d841-349">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-349">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unmerge()
  fullName: unmerge
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unmerge(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d841-350\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d841-350\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:C3\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.unmerge();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Range.untrack
  summary: <span data-ttu-id="4d841-351">发行版与此对象，如果以前跟踪关联的内存。</span><span class="sxs-lookup"><span data-stu-id="4d841-351">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="4d841-352">此呼叫是简写 context.trackedObjects.remove(thisObject)。</span><span class="sxs-lookup"><span data-stu-id="4d841-352">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="4d841-353">具有许多跟踪的对象速度减慢主机应用程序，因此请记住以释放添加在完成后的任何对象使用它们。</span><span class="sxs-lookup"><span data-stu-id="4d841-353">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="4d841-354">您将需要的内存版本生效前调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="4d841-354">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.Range.values
  summary: >-
    <span data-ttu-id="4d841-355">表示指定区域的原始值。</span><span class="sxs-lookup"><span data-stu-id="4d841-355">Represents the raw values of the specified range.</span></span> <span data-ttu-id="4d841-356">返回的数据可能的字符串类型、 号码或一个布尔值。</span><span class="sxs-lookup"><span data-stu-id="4d841-356">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="4d841-357">包含错误的单元格将返回的错误字符串。</span><span class="sxs-lookup"><span data-stu-id="4d841-357">Cells that contain an error will return the error string.</span></span> <span data-ttu-id="4d841-358">时设置范围的值，value 参数可以是单个值 （字符串、 数字或布尔值） 或二维数组。</span><span class="sxs-lookup"><span data-stu-id="4d841-358">When setting values to a range, the value argument can be either a single value (string, number or boolean) or a two-dimensional array.</span></span> <span data-ttu-id="4d841-359">如果参数是一个 single 值，它将应用于范围中的所有单元格。</span><span class="sxs-lookup"><span data-stu-id="4d841-359">If the argument is a single value, it will be applied to all cells in the range.</span></span>


    <span data-ttu-id="4d841-360">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-360">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: values
  fullName: values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Range.valueTypes
  summary: >-
    <span data-ttu-id="4d841-361">表示每个单元格的数据的类型。</span><span class="sxs-lookup"><span data-stu-id="4d841-361">Represents the type of data of each cell.</span></span> <span data-ttu-id="4d841-362">只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-362">Read-only.</span></span>


    <span data-ttu-id="4d841-363">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-363">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: valueTypes
  fullName: valueTypes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly valueTypes: Excel.RangeValueType[][];'
    return:
      type:
      - Excel.RangeValueType[][]
- uid: excel.Excel.Range.worksheet
  summary: >-
    <span data-ttu-id="4d841-p155">包含当前区域的工作表。只读。</span><span class="sxs-lookup"><span data-stu-id="4d841-p155">The worksheet containing the current range. Read-only.</span></span>


    <span data-ttu-id="4d841-366">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d841-366">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
