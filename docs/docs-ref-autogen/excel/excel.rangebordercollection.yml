### YamlMime:UniversalReference
ms.openlocfilehash: 7153c94e1c02fdfaac2e4c09fa369ba8d6dd5304
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29981876"
items:
- uid: excel.Excel.RangeBorderCollection
  summary: >-
    <span data-ttu-id="ca03c-101">表示构成区域边框的 Border 对象。</span><span class="sxs-lookup"><span data-stu-id="ca03c-101">Represents the border objects that make up the range border.</span></span>


    <span data-ttu-id="ca03c-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ca03c-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeBorderCollection
  fullName: Excel.RangeBorderCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeBorderCollection.context
  - excel.Excel.RangeBorderCollection.count
  - excel.Excel.RangeBorderCollection.getItem
  - excel.Excel.RangeBorderCollection.getItem_1
  - excel.Excel.RangeBorderCollection.getItemAt
  - excel.Excel.RangeBorderCollection.items
  - excel.Excel.RangeBorderCollection.load
  - excel.Excel.RangeBorderCollection.load_1
  - excel.Excel.RangeBorderCollection.load_2
  - excel.Excel.RangeBorderCollection.toJSON
- uid: excel.Excel.RangeBorderCollection.context
  summary: <span data-ttu-id="ca03c-103">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="ca03c-103">The request context associated with the object.</span></span> <span data-ttu-id="ca03c-104">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="ca03c-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeBorderCollection.count
  summary: >-
    <span data-ttu-id="ca03c-p102">集合中的 border 对象数量。只读。</span><span class="sxs-lookup"><span data-stu-id="ca03c-p102">Number of border objects in the collection. Read-only.</span></span>


    <span data-ttu-id="ca03c-107">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ca03c-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.getItem
  summary: >-
    <span data-ttu-id="ca03c-108">使用其名称获取 border 对象</span><span class="sxs-lookup"><span data-stu-id="ca03c-108">Gets a border object using its name.</span></span>


    <span data-ttu-id="ca03c-109">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ca03c-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: getItem(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ca03c-110\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"ca03c-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borderName = 'EdgeTop';\n    var border = range.format.borders.getItem(borderName);\n    border.load('style');\n    return ctx.sync().then(function() {\n            console.log(border.style);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="ca03c-111">要检索的边框对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="ca03c-111">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="ca03c-112">有关详细信息，请参阅 Excel.BorderIndex。</span><span class="sxs-lookup"><span data-stu-id="ca03c-112">See Excel.BorderIndex for details.</span></span>
      type:
      - excel.Excel.BorderIndex
- uid: excel.Excel.RangeBorderCollection.getItem_1
  summary: >-
    <span data-ttu-id="ca03c-113">使用其名称获取 border 对象</span><span class="sxs-lookup"><span data-stu-id="ca03c-113">Gets a border object using its name.</span></span>


    <span data-ttu-id="ca03c-114">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ca03c-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(indexString)
  fullName: getItem(indexString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: ''
    parameters:
    - id: indexString
      description: <span data-ttu-id="ca03c-115">要检索的边框对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="ca03c-115">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="ca03c-116">有关详细信息，请参阅 Excel.BorderIndex。</span><span class="sxs-lookup"><span data-stu-id="ca03c-116">See Excel.BorderIndex for details.</span></span>
      type:
      - "\"EdgeTop\" | \"EdgeBottom\" | \"EdgeLeft\" | \"EdgeRight\" | \"InsideVertical\" | \"InsideHorizontal\" | \"DiagonalDown\" | \"DiagonalUp\""
- uid: excel.Excel.RangeBorderCollection.getItemAt
  summary: >-
    <span data-ttu-id="ca03c-117">使用其索引获取 border 对象</span><span class="sxs-lookup"><span data-stu-id="ca03c-117">Gets a border object using its index.</span></span>


    <span data-ttu-id="ca03c-118">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ca03c-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.RangeBorder;'
    return:
      type:
      - excel.Excel.RangeBorder
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ca03c-119\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"ca03c-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var border = range.format.borders.getItemAt(0);\n    border.load('sideIndex');\n    return ctx.sync().then(function() {\n        console.log(border.sideIndex);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="ca03c-p105">要检索的对象的索引值。从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="ca03c-p105">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.RangeBorderCollection.items
  summary: <span data-ttu-id="ca03c-122">获取此集合中的加载的子项目。</span><span class="sxs-lookup"><span data-stu-id="ca03c-122">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.RangeBorder[];'
    return:
      type:
      - Excel.RangeBorder[]
- uid: excel.Excel.RangeBorderCollection.load
  summary: <span data-ttu-id="ca03c-123">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="ca03c-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ca03c-124">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="ca03c-124">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="ca03c-125">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="ca03c-125">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="ca03c-126">`load(option?: string | string[]): Excel.RangeBorderCollection`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="ca03c-126">`load(option?: string | string[]): Excel.RangeBorderCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="ca03c-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="ca03c-127">`load(option?: { select?: string; expand?: string; }): Excel.RangeBorderCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="ca03c-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="ca03c-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeBorderCollection` - Only available on collection types.</span></span> <span data-ttu-id="ca03c-129">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="ca03c-129">It is similar to the preceding signature.</span></span> <span data-ttu-id="ca03c-130">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="ca03c-130">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ca03c-131">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="ca03c-131">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ca03c-132">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="ca03c-132">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.RangeBorderCollection.load_1
  summary: <span data-ttu-id="ca03c-133">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="ca03c-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ca03c-134">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="ca03c-134">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ca03c-135\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"ca03c-135\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var borders = range.format.borders;\n    border.load('items');\n    return ctx.sync().then(function() {\n        console.log(borders.count);\n        for (var i = 0; i < borders.items.length; i++)\n        {\n            console.log(borders.items[i].sideIndex);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below adds grid border around the range.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"A1:F8\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.borders.getItem('InsideHorizontal').style = 'Continuous';\n    range.format.borders.getItem('InsideVertical').style = 'Continuous';\n    range.format.borders.getItem('EdgeBottom').style = 'Continuous';\n    range.format.borders.getItem('EdgeLeft').style = 'Continuous';\n    range.format.borders.getItem('EdgeRight').style = 'Continuous';\n    range.format.borders.getItem('EdgeTop').style = 'Continuous';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="ca03c-136">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="ca03c-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeBorderCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.RangeBorderCollection.toJSON
  summary: <span data-ttu-id="ca03c-137">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="ca03c-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="ca03c-138">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)而原始`Excel.RangeBorderCollection`对象是 API 对象，`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.RangeBorderCollectionData` <!-- -->)，其中包含数组"项目"的任何加载属性集的项目的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="ca03c-138">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeBorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeBorderCollectionData
      description: ''
