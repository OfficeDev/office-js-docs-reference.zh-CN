### YamlMime:UniversalReference
ms.openlocfilehash: f22bf9036a775c7fc8c1cab73d62683ac58b0913
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980273"
items:
- uid: excel.Excel.Setting
  summary: >-
    设置的键 / 值对设置表示保持在文档 （每个每个加载项文件）。 可以使用这些自定义的键 / 值对存储所需的内容或任务窗格的状态或生命周期信息外接程序。 注意，设置保留文档中，因此，不存储任何敏感或受保护的信息，如用户信息和密码的位置。


    \[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Setting
  fullName: Excel.Setting
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Setting.context
  - excel.Excel.Setting.delete
  - excel.Excel.Setting.key
  - excel.Excel.Setting.load
  - excel.Excel.Setting.load_1
  - excel.Excel.Setting.load_2
  - excel.Excel.Setting.set
  - excel.Excel.Setting.set_1
  - excel.Excel.Setting.toJSON
  - excel.Excel.Setting.value
- uid: excel.Excel.Setting.context
  summary: 与对象关联的请求上下文。 这将连接到 Office 主机应用程序的过程外接程序的过程。
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Setting.delete
  summary: >-
    删除 Setting 对象。


    \[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>示例\n\n```typescript\nawait Excel.run(async (context) => {\n    const settings = context.workbook.settings;\n    let needsReview = settings.getItem(\"NeedsReview\");\n    needsReview.delete();\n    needsReview = settings.getItemOrNullObject(\"NeedsReview\");\n\n    await context.sync();\n\n    if (needsReview.isNullObject) {\n        console.log(\"The setting has been deleted\");\n    } else {\n        console.log(\"The setting was not deleted\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Setting.key
  summary: >-
    返回表示 setting 对象的 ID 的键。只读。


    \[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: key
  fullName: key
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly key: string;'
    return:
      type:
      - string
- uid: excel.Excel.Setting.load
  summary: 队列设置命令加载指定的对象的属性。 读取属性之前，必须调用"context.sync()"。
  remarks: >-
    除了此签名，此方法具有以下签名：


    `load(option?: string | string[]): Excel.Setting`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。


    `load(option?: { select?: string; expand?: string; }): Excel.Setting`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Setting`-仅可对集合的类型。 它是类似于前一个签名。 Option.top 指定集合项可在结果中包含的最大数目。 Option.skip 指定要跳过和结果中不包含的项的数目。 如果指定 option.top，则将跳过指定的数目的项后启动结果集。
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.SettingLoadOptions): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.SettingLoadOptions
- uid: excel.Excel.Setting.load_1
  summary: 队列设置命令加载指定的对象的属性。 您必须调用`context.sync()`阅读属性之前。
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: ''
    parameters:
    - id: propertyNames
      description: 以逗号分隔字符串或一个指定要加载的属性的字符串数组。
      type:
      - string | string[]
- uid: excel.Excel.Setting.load_2
  summary: 队列设置命令加载指定的对象的属性。 您必须调用`context.sync()`阅读属性之前。
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Setting;'
    return:
      type:
      - excel.Excel.Setting
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: 其中 propertyNamesAndPaths.select 是一个以逗号分隔的字符串，指定要加载的属性，propertyNamesAndPaths.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Setting.set
  summary: 在同一时间设置对象的多个的属性。 您可以传递具有的相应属性的普通对象或相同类型的另一个 API 对象。
  remarks: >-
    此方法具有以下其他签名：


    `set(properties: Excel.Setting): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.SettingUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: 具有对属性的对象调用 isomorphically 结构化的属性的 JavaScript 对象。
      type:
      - Interfaces.SettingUpdateData
    - id: options
      description: 提供一个选项以取消显示错误，如果属性对象会尝试设置任何只读属性。
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Setting.set_1
  summary: 在基于现有加载对象的同一时间对象上设置多个属性。
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Setting): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Setting
- uid: excel.Excel.Setting.toJSON
  summary: 重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。 (`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)原始 Excel.Setting 对象是 API 对象，而`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.SettingData` <!-- -->)，其中包含原始对象中的任何加载的子属性的浅表副本。
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.SettingData;'
    return:
      type:
      - excel.Excel.Interfaces.SettingData
      description: ''
- uid: excel.Excel.Setting.value
  summary: >-
    表示为此设置存储的值。


    \[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'value: any;'
    return:
      type:
      - any
