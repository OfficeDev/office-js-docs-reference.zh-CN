### YamlMime:UniversalReference
ms.openlocfilehash: 935e1e28d5ccb40e3097e38c352304b679150ea4
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 10/17/2018
ms.locfileid: "25583362"
items:
- uid: excel.Excel.TableSort
  summary: >-
    管理对 Table 对象的排序操作。


    \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.TableSort
  fullName: excel.Excel.TableSort
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableSort.apply
  - excel.Excel.TableSort.clear
  - excel.Excel.TableSort.fields
  - excel.Excel.TableSort.load
  - excel.Excel.TableSort.matchCase
  - excel.Excel.TableSort.method
  - excel.Excel.TableSort.reapply
  - excel.Excel.TableSort.toJSON
- uid: excel.Excel.TableSort.apply
  summary: >-
    执行排序操作。


    \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, method)
  fullName: excel.Excel.TableSort.apply
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.sort.apply([ \n            {\n                key: 2,\n                ascending: true\n            },\n        ], true);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: fields
      description: 作为排序依据的条件列表。
      type:
      - Excel.SortField[]
    - id: matchCase
      description: 可选。是否让大小写对字符串排序产生影响。
      type:
      - boolean
    - id: method
      description: 可选。 用于中文字符排序方法。
      type:
      - excel.Excel.SortMethod
- uid: excel.Excel.TableSort.clear
  summary: >-
    清除表上的当前排序。尽管这不能修改表的排序，但它会清除标题按钮的状态。


    \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: clear()
  fullName: excel.Excel.TableSort.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.TableSort.fields
  summary: >-
    表示最后一次对表排序所使用的当前条件。只读。


    \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: fields
  fullName: excel.Excel.TableSort.fields
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fields: Excel.SortField[];'
    return:
      type:
      - Excel.SortField[]
- uid: excel.Excel.TableSort.load
  summary: 队列设置命令加载指定的对象的属性。 读取属性之前，必须调用"context.sync()"。
  remarks: >-
    除了此签名，此方法具有以下签名：


    `load(option?: { select?: string; expand?: string; }): Excel.TableSort`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort`-仅可对集合的类型。 它是类似于前一个签名。 Option.top 指定集合项可在结果中包含的最大数目。 Option.skip 指定要跳过和结果中不包含的项的数目。 如果指定 option.top，则将跳过指定的数目的项后启动结果集。
  name: load(option)
  fullName: excel.Excel.TableSort.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
      description: ''
    parameters:
    - id: option
      description: 以逗号分隔字符串或一个指定要加载的属性的字符串数组。
      type:
      - string | string[]
- uid: excel.Excel.TableSort.matchCase
  summary: >-
    表示最后一次对表进行排序时大小写是否有影响。只读。


    \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: matchCase
  fullName: excel.Excel.TableSort.matchCase
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly matchCase: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.TableSort.method
  summary: >-
    代表中文排序方法上次使用的表进行排序的字符。 只读。


    \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: method
  fullName: excel.Excel.TableSort.method
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
    return:
      type:
      - Excel.SortMethod | "PinYin" | "StrokeCount"
- uid: excel.Excel.TableSort.reapply
  summary: >-
    对表重新应用当前的排序参数。


    \[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: reapply()
  fullName: excel.Excel.TableSort.reapply
  langs:
  - typeScript
  type: method
  syntax:
    content: 'reapply(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.TableSort.toJSON
  name: toJSON()
  fullName: excel.Excel.TableSort.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableSortData;'
    return:
      type:
      - excel.Excel.Interfaces.TableSortData
      description: ''
