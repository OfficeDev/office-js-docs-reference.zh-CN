### YamlMime:UniversalReference
ms.openlocfilehash: 81e324d2f0506211165c25dd7ccbd4f8d8d62171
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724897"
items:
- uid: excel.Excel.PivotField
  summary: >-
    <span data-ttu-id="b7b5b-101">代表 Excel 透视字段。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-101">Represents the Excel PivotField.</span></span>


    <span data-ttu-id="b7b5b-102">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b7b5b-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotField
  fullName: Excel.PivotField
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotField.context
  - excel.Excel.PivotField.id
  - excel.Excel.PivotField.items
  - excel.Excel.PivotField.load
  - excel.Excel.PivotField.name
  - excel.Excel.PivotField.showAllItems
  - excel.Excel.PivotField.sortByLabels
  - excel.Excel.PivotField.subtotals
  - excel.Excel.PivotField.toJSON
- uid: excel.Excel.PivotField.context
  summary: <span data-ttu-id="b7b5b-103">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-103">The request context associated with the object.</span></span> <span data-ttu-id="b7b5b-104">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotField.id
  summary: >-
    <span data-ttu-id="b7b5b-105">PivotField 的 ID。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-105">Id of the PivotField.</span></span>


    <span data-ttu-id="b7b5b-106">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b7b5b-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotField.items
  summary: >-
    <span data-ttu-id="b7b5b-107">返回与 PivotField 相关联的 PivotFields。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-107">Returns the PivotFields associated with the PivotField.</span></span>


    <span data-ttu-id="b7b5b-108">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b7b5b-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotItemCollection;'
    return:
      type:
      - excel.Excel.PivotItemCollection
- uid: excel.Excel.PivotField.load
  summary: <span data-ttu-id="b7b5b-109">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b7b5b-110">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b7b5b-111">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="b7b5b-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b7b5b-112">`load(option?: { select?: string; expand?: string; }): Excel.PivotField`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-112">`load(option?: { select?: string; expand?: string; }): Excel.PivotField` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b7b5b-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotField`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotField` - Only available on collection types.</span></span> <span data-ttu-id="b7b5b-114">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="b7b5b-115">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b7b5b-116">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b7b5b-117">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.PivotField;'
    return:
      type:
      - excel.Excel.PivotField
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="b7b5b-118">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotField.name
  summary: >-
    <span data-ttu-id="b7b5b-119">PivotField 的名称。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-119">Name of the PivotField.</span></span>


    <span data-ttu-id="b7b5b-120">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b7b5b-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotField.showAllItems
  summary: >-
    <span data-ttu-id="b7b5b-121">确定是否显示 PivotField 的所有项。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-121">Determines whether to show all items of the PivotField.</span></span>


    <span data-ttu-id="b7b5b-122">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b7b5b-122">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showAllItems
  fullName: showAllItems
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showAllItems: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotField.sortByLabels
  summary: >-
    <span data-ttu-id="b7b5b-123">PivotField 排序。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-123">Sorts the PivotField.</span></span> <span data-ttu-id="b7b5b-124">如果指定 DataPivotHierarchy，则会基于它进行排序，如果未指定，则会基于 PivotField 本身进行排序。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-124">If a DataPivotHierarchy is specified, then sort will be applied based on it, if not sort will be based on the PivotField itself.</span></span>


    <span data-ttu-id="b7b5b-125">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b7b5b-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sortByLabels(sortby)
  fullName: sortByLabels
  langs:
  - typeScript
  type: method
  syntax:
    content: 'sortByLabels(sortby: SortBy): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sortby
      description: <span data-ttu-id="b7b5b-126">表示是否按升序还是降序排序完成。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-126">Represents whether the sorting is done in an ascending or descending order.</span></span>
      type:
      - excel.Excel.SortBy
- uid: excel.Excel.PivotField.subtotals
  summary: >-
    <span data-ttu-id="b7b5b-127">PivotField 小计。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-127">Subtotals of the PivotField.</span></span>


    <span data-ttu-id="b7b5b-128">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b7b5b-128">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: subtotals
  fullName: subtotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subtotals: Excel.Subtotals;'
    return:
      type:
      - excel.Excel.Subtotals
- uid: excel.Excel.PivotField.toJSON
  summary: <span data-ttu-id="b7b5b-129">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="b7b5b-130">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)原始 Excel.PivotField 对象是 API 对象，而`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.PivotFieldData` <!-- -->)，其中包含原始对象中的任何加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="b7b5b-130">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotField object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotFieldData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotFieldData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotFieldData
      description: ''
