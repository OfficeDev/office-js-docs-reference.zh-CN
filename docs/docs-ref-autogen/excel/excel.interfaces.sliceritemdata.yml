### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Interfaces.SlicerItemData
    summary: 描述通过调用 "slicerItem ()" 返回的数据的接口。
    name: Excel.Interfaces.SlicerItemData
    fullName: Excel.Interfaces.SlicerItemData
    langs:
      - typeScript
    type: interface
    package: excel
    children:
      - excel.Excel.Interfaces.SlicerItemData.hasData
      - excel.Excel.Interfaces.SlicerItemData.isSelected
      - excel.Excel.Interfaces.SlicerItemData.key
      - excel.Excel.Interfaces.SlicerItemData.name
  - uid: excel.Excel.Interfaces.SlicerItemData.hasData
    summary: |-
      如果切片器项包含数据，则为 True。

      \[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: hasData
    fullName: hasData
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasData?: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Interfaces.SlicerItemData.isSelected
    summary: |-
      如果选择了切片器项，则为 True。 设置此值不会清除其他 SlicerItems 的选定状态。 默认情况下, 如果仅选择了切片器项目, 则取消选择该项目时, 将会选择所有项目。

      \[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: isSelected
    fullName: isSelected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'isSelected?: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Interfaces.SlicerItemData.key
    summary: |-
      表示代表切片器项的唯一值。

      \[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'key?: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Interfaces.SlicerItemData.name
    summary: |-
      代表 UI 中显示的标题。

      \[[API 集: EXCELAPI BETA (仅限预览)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name?: string;'
      return:
        type:
          - string