### YamlMime:UniversalReference
ms.openlocfilehash: 304d358c1d4c6cbeb86eec30e5f5500c432d82c9
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980763"
items:
- uid: excel.Excel.DataValidation
  summary: >-
    <span data-ttu-id="1382d-101">代表应用于当前区域的数据有效性。</span><span class="sxs-lookup"><span data-stu-id="1382d-101">Represents the data validation applied to the current range.</span></span>


    <span data-ttu-id="1382d-102">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1382d-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.DataValidation
  fullName: Excel.DataValidation
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.DataValidation.clear
  - excel.Excel.DataValidation.context
  - excel.Excel.DataValidation.errorAlert
  - excel.Excel.DataValidation.ignoreBlanks
  - excel.Excel.DataValidation.load
  - excel.Excel.DataValidation.load_1
  - excel.Excel.DataValidation.load_2
  - excel.Excel.DataValidation.prompt
  - excel.Excel.DataValidation.rule
  - excel.Excel.DataValidation.set
  - excel.Excel.DataValidation.set_1
  - excel.Excel.DataValidation.toJSON
  - excel.Excel.DataValidation.type
  - excel.Excel.DataValidation.valid
- uid: excel.Excel.DataValidation.clear
  summary: >-
    <span data-ttu-id="1382d-103">清除当前区域中的数据有效性。</span><span class="sxs-lookup"><span data-stu-id="1382d-103">Clears the data validation from the current range.</span></span>


    <span data-ttu-id="1382d-104">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1382d-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.DataValidation.context
  summary: <span data-ttu-id="1382d-105">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="1382d-105">The request context associated with the object.</span></span> <span data-ttu-id="1382d-106">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="1382d-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.DataValidation.errorAlert
  summary: >-
    <span data-ttu-id="1382d-107">用户输入无效数据时，出现错误警报。</span><span class="sxs-lookup"><span data-stu-id="1382d-107">Error alert when user enters invalid data.</span></span>


    <span data-ttu-id="1382d-108">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1382d-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: errorAlert
  fullName: errorAlert
  langs:
  - typeScript
  type: property
  syntax:
    content: 'errorAlert: Excel.DataValidationErrorAlert;'
    return:
      type:
      - excel.Excel.DataValidationErrorAlert
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1382d-109\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1382d-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const commentsRange = \n        sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Comments\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    commentsRange.dataValidation.clear();   \n\n    // If the value of A2 is contained in the value of C2, then \n    // SEARCH(A2,C2) returns the number where it begins. Otherwise,\n    // it does not return a number.\n    let redundantStringRule = {\n        custom: {\n            formula: \"=NOT(ISNUMBER(SEARCH(A2,C2)))\"\n        }\n    };\n    commentsRange.dataValidation.rule = redundantStringRule;\n    commentsRange.dataValidation.errorAlert = {\n        message: \"It is redundant to include the baby name in the comment.\",\n        showAlert: true,\n        style: \"Information\",\n        title: \"Baby Name in Comment\"\n    };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.DataValidation.ignoreBlanks
  summary: >-
    <span data-ttu-id="1382d-110">忽略空白：不会对空白单元格执行数据严重，默认为 true。</span><span class="sxs-lookup"><span data-stu-id="1382d-110">Ignore blanks: no data validation will be performed on blank cells, it defaults to true.</span></span>


    <span data-ttu-id="1382d-111">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1382d-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: ignoreBlanks
  fullName: ignoreBlanks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignoreBlanks: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.DataValidation.load
  summary: <span data-ttu-id="1382d-112">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="1382d-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1382d-113">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="1382d-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1382d-114">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="1382d-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1382d-115">`load(option?: string | string[]): Excel.DataValidation`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="1382d-115">`load(option?: string | string[]): Excel.DataValidation` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="1382d-116">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="1382d-116">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1382d-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="1382d-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation` - Only available on collection types.</span></span> <span data-ttu-id="1382d-118">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="1382d-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="1382d-119">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="1382d-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1382d-120">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="1382d-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1382d-121">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="1382d-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.DataValidationLoadOptions): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.DataValidationLoadOptions
- uid: excel.Excel.DataValidation.load_1
  summary: <span data-ttu-id="1382d-122">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="1382d-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1382d-123">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="1382d-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="1382d-124">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="1382d-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.DataValidation.load_2
  summary: <span data-ttu-id="1382d-125">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="1382d-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1382d-126">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="1382d-126">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="1382d-127">其中 propertyNamesAndPaths.select 是一个以逗号分隔的字符串，指定要加载的属性，propertyNamesAndPaths.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="1382d-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.DataValidation.prompt
  summary: >-
    <span data-ttu-id="1382d-128">在用户选择一个单元格时提示。</span><span class="sxs-lookup"><span data-stu-id="1382d-128">Prompt when users select a cell.</span></span>


    <span data-ttu-id="1382d-129">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1382d-129">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: prompt
  fullName: prompt
  langs:
  - typeScript
  type: property
  syntax:
    content: 'prompt: Excel.DataValidationPrompt;'
    return:
      type:
      - excel.Excel.DataValidationPrompt
- uid: excel.Excel.DataValidation.rule
  summary: >-
    <span data-ttu-id="1382d-130">包含不同类型的数据验证条件的数据有效性规则。</span><span class="sxs-lookup"><span data-stu-id="1382d-130">Data validation rule that contains different type of data validation criteria.</span></span>


    <span data-ttu-id="1382d-131">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1382d-131">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.DataValidationRule;'
    return:
      type:
      - excel.Excel.DataValidationRule
- uid: excel.Excel.DataValidation.set
  summary: <span data-ttu-id="1382d-132">在同一时间设置对象的多个的属性。</span><span class="sxs-lookup"><span data-stu-id="1382d-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1382d-133">您可以传递具有的相应属性的普通对象或相同类型的另一个 API 对象。</span><span class="sxs-lookup"><span data-stu-id="1382d-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="1382d-134">此方法具有以下其他签名：</span><span class="sxs-lookup"><span data-stu-id="1382d-134">This method has the following additional signature:</span></span>


    `set(properties: Excel.DataValidation): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.DataValidationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="1382d-135">具有对属性的对象调用 isomorphically 结构化的属性的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="1382d-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.DataValidationUpdateData
    - id: options
      description: <span data-ttu-id="1382d-136">提供一个选项以取消显示错误，如果属性对象会尝试设置任何只读属性。</span><span class="sxs-lookup"><span data-stu-id="1382d-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.DataValidation.set_1
  summary: <span data-ttu-id="1382d-137">在基于现有加载对象的同一时间对象上设置多个属性。</span><span class="sxs-lookup"><span data-stu-id="1382d-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.DataValidation): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.DataValidation
- uid: excel.Excel.DataValidation.toJSON
  summary: <span data-ttu-id="1382d-138">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="1382d-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="1382d-139">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)原始 Excel.DataValidation 对象是 API 对象，而`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.DataValidationData` <!-- -->)，其中包含原始对象中的任何加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="1382d-139">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.DataValidation object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.DataValidationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.DataValidationData;'
    return:
      type:
      - excel.Excel.Interfaces.DataValidationData
      description: ''
- uid: excel.Excel.DataValidation.type
  summary: >-
    <span data-ttu-id="1382d-140">数据有效性类型，有关详细信息，请参阅 Excel.DataValidationType。</span><span class="sxs-lookup"><span data-stu-id="1382d-140">Type of the data validation, see Excel.DataValidationType for details.</span></span>


    <span data-ttu-id="1382d-141">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1382d-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria";'
    return:
      type:
      - Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria"
- uid: excel.Excel.DataValidation.valid
  summary: >-
    <span data-ttu-id="1382d-142">表示所有单元格值根据数据有效性规则是否全部有效。</span><span class="sxs-lookup"><span data-stu-id="1382d-142">Represents if all cell values are valid according to the data validation rules.</span></span> <span data-ttu-id="1382d-143">如果所有单元格值都有效，或 false，如果所有单元格的值均无效，则返回 true。</span><span class="sxs-lookup"><span data-stu-id="1382d-143">Returns true if all cell values are valid, or false if all cell values are invalid.</span></span> <span data-ttu-id="1382d-144">如果有两个范围内的有效和无效的单元格值，返回 null。</span><span class="sxs-lookup"><span data-stu-id="1382d-144">Returns null if there are both valid and invalid cell values within the range.</span></span>


    <span data-ttu-id="1382d-145">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1382d-145">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: valid
  fullName: valid
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly valid: boolean;'
    return:
      type:
      - boolean
