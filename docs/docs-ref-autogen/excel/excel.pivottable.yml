### YamlMime:UniversalReference
ms.openlocfilehash: 5173d0256e173c7c3c3b1ecdd23fbd416aacdec2
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/07/2019
ms.locfileid: "29769552"
items:
- uid: excel.Excel.PivotTable
  summary: >-
    <span data-ttu-id="9b9d5-101">表示 Excel 数据透视表。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-101">Represents an Excel PivotTable.</span></span>


    <span data-ttu-id="9b9d5-102">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotTable
  fullName: Excel.PivotTable
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotTable.columnHierarchies
  - excel.Excel.PivotTable.context
  - excel.Excel.PivotTable.dataHierarchies
  - excel.Excel.PivotTable.delete
  - excel.Excel.PivotTable.filterHierarchies
  - excel.Excel.PivotTable.hierarchies
  - excel.Excel.PivotTable.id
  - excel.Excel.PivotTable.layout
  - excel.Excel.PivotTable.load
  - excel.Excel.PivotTable.name
  - excel.Excel.PivotTable.refresh
  - excel.Excel.PivotTable.rowHierarchies
  - excel.Excel.PivotTable.set
  - excel.Excel.PivotTable.toJSON
  - excel.Excel.PivotTable.worksheet
- uid: excel.Excel.PivotTable.columnHierarchies
  summary: >-
    <span data-ttu-id="9b9d5-103">数据透视表的列透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-103">The Column Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="9b9d5-104">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnHierarchies
  fullName: columnHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9b9d5-105\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b9d5-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");       \n\n    // check if the PivotTable already has a column\n    const column = pivotTable.columnHierarchies.getItemOrNullObject(\"Farm\");\n    column.load(\"id\");\n    await context.sync();\n\n    if (column.isNullObject) {\n        // ading the farm column to the column hierarchy automatically removes it from the row hierarchy\n        pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem(\"Farm\"));\n    } else {\n        pivotTable.columnHierarchies.remove(column);\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.context
  summary: <span data-ttu-id="9b9d5-106">与对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-106">The request context associated with the object.</span></span> <span data-ttu-id="9b9d5-107">这将连接到 Office 主机应用程序的过程外接程序的过程。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotTable.dataHierarchies
  summary: >-
    <span data-ttu-id="9b9d5-108">数据透视表的数据透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-108">The Data Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="9b9d5-109">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataHierarchies
  fullName: dataHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.DataPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9b9d5-110\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b9d5-110\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold at Farm\"));\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold Wholesale\"));\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.delete
  summary: >-
    <span data-ttu-id="9b9d5-111">删除 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-111">Deletes the PivotTable.</span></span>


    <span data-ttu-id="9b9d5-112">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9b9d5-113\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b9d5-113\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    context.workbook.worksheets.getItem(\"Pivot\").pivotTables.getItem(\"Farm Sales\").delete();\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.filterHierarchies
  summary: >-
    <span data-ttu-id="9b9d5-114">数据透视表的筛选器透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-114">The Filter Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="9b9d5-115">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-115">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filterHierarchies
  fullName: filterHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.FilterPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9b9d5-116\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b9d5-116\">Examples</span></span>\n\n```typescript\nasync function filter(functionType: Excel.AggregationFunction) {\n    await Excel.run(async (context) => {\n        const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n        const filters = pivotTable.filterHierarchies;\n        const filter = filters.getItemOrNullObject(\"Classification\");\n        filter.load();\n        await context.sync();\n\n        // add the Classification hierarchy to the filter, if it's not already there\n        if (filter.isNullObject) {\n            filters.add(pivotTable.hierarchies.getItem(\"Classification\"));\n            await context.sync();\n        }\n    });\n}\n```"
- uid: excel.Excel.PivotTable.hierarchies
  summary: >-
    <span data-ttu-id="9b9d5-117">数据透视表的透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-117">The Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="9b9d5-118">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hierarchies
  fullName: hierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.PivotHierarchyCollection
- uid: excel.Excel.PivotTable.id
  summary: >-
    <span data-ttu-id="9b9d5-p102">数据透视表的 ID。只读。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-p102">Id of the PivotTable. Read-only.</span></span>


    <span data-ttu-id="9b9d5-121">\[[API 集： ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-121">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotTable.layout
  summary: >-
    <span data-ttu-id="9b9d5-122">PivotLayout，用于说明数据透视表的布局和可视化结构。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-122">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>


    <span data-ttu-id="9b9d5-123">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: layout
  fullName: layout
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly layout: Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"9b9d5-124\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"9b9d5-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.layout.load(\"layoutType\");\n    await context.sync();\n\n    // cycle between the three layout types\n    if (pivotTable.layout.layoutType === \"Compact\") {\n        pivotTable.layout.layoutType = \"Outline\";\n    } else if (pivotTable.layout.layoutType === \"Outline\") {\n        pivotTable.layout.layoutType = \"Tabular\";\n    } else {\n        pivotTable.layout.layoutType = \"Compact\";\n    }\n    await context.sync();\n    console.log(\"Pivot layout is now \" + pivotTable.layout.layoutType);\n});\n```"
- uid: excel.Excel.PivotTable.load
  summary: <span data-ttu-id="9b9d5-125">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9b9d5-126">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-126">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="9b9d5-127">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="9b9d5-127">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="9b9d5-128">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-128">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="9b9d5-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="9b9d5-130">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-130">It is similar to the preceding signature.</span></span> <span data-ttu-id="9b9d5-131">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-131">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="9b9d5-132">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-132">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="9b9d5-133">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-133">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="9b9d5-134">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotTable.name
  summary: >-
    <span data-ttu-id="9b9d5-135">PivotTable 对象的名称。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-135">Name of the PivotTable.</span></span>


    <span data-ttu-id="9b9d5-136">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotTable.refresh
  summary: >-
    <span data-ttu-id="9b9d5-137">刷新 PivotTable 对象。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-137">Refreshes the PivotTable.</span></span>


    <span data-ttu-id="9b9d5-138">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-138">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refresh()
  fullName: refresh
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refresh(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PivotTable.rowHierarchies
  summary: >-
    <span data-ttu-id="9b9d5-139">数据透视表的行透视层级结构。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-139">The Row Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="9b9d5-140">\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-140">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowHierarchies
  fullName: rowHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
- uid: excel.Excel.PivotTable.set
  summary: <span data-ttu-id="9b9d5-141">在同一时间设置对象的多个的属性。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-141">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="9b9d5-142">您可以传递具有的相应属性的普通对象或相同类型的另一个 API 对象。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-142">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="9b9d5-143">此方法具有以下其他签名：</span><span class="sxs-lookup"><span data-stu-id="9b9d5-143">This method has the following additional signature:</span></span>


    `set(properties: Excel.PivotTable): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="9b9d5-144">具有对属性的对象调用 isomorphically 结构化的属性的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-144">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PivotTableUpdateData
    - id: options
      description: <span data-ttu-id="9b9d5-145">提供一个选项以取消显示错误，如果属性对象会尝试设置任何只读属性。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-145">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.PivotTable.toJSON
  summary: <span data-ttu-id="9b9d5-146">重写 JavaScript`toJSON()`方法，为了提供更多有用的输出时 API 对象传递给`JSON.stringify()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-146">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="9b9d5-147">(`JSON.stringify`<!-- -->，反过来，调用`toJSON`对象传递给它的方法。)原始 Excel.PivotTable 对象是 API 对象，而`toJSON`方法返回一个普通的 JavaScript 对象 (类型为`Excel.Interfaces.PivotTableData` <!-- -->)，其中包含原始对象中的任何加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-147">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableData
      description: ''
- uid: excel.Excel.PivotTable.worksheet
  summary: >-
    <span data-ttu-id="9b9d5-148">包含当前数据透视表的工作表。</span><span class="sxs-lookup"><span data-stu-id="9b9d5-148">The worksheet containing the current PivotTable.</span></span>


    <span data-ttu-id="9b9d5-149">\[[API 集： ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9b9d5-149">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
