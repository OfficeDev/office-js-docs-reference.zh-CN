### YamlMime:UniversalReference
ms.openlocfilehash: 0637c6237e2429964cf40bac46736b31dbc9671f
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 10/17/2018
ms.locfileid: "25582361"
items:
- uid: excel.Excel.ConditionalCellValueRule
  summary: >-
    <span data-ttu-id="6d028-101">代表单元格值条件格式规则。</span><span class="sxs-lookup"><span data-stu-id="6d028-101">Represents a cell value conditional format rule.</span></span>


    <span data-ttu-id="6d028-102">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6d028-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalCellValueRule
  fullName: excel.Excel.ConditionalCellValueRule
  langs:
  - typeScript
  type: interface
  package: excel
  children:
  - excel.Excel.ConditionalCellValueRule.formula1
  - excel.Excel.ConditionalCellValueRule.formula2
  - excel.Excel.ConditionalCellValueRule.operator
- uid: excel.Excel.ConditionalCellValueRule.formula1
  summary: >-
    <span data-ttu-id="6d028-103">如果需要，公式可对条件格式规则进行求值。</span><span class="sxs-lookup"><span data-stu-id="6d028-103">The formula, if required, to evaluate the conditional format rule on.</span></span>


    <span data-ttu-id="6d028-104">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6d028-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula1
  fullName: excel.Excel.ConditionalCellValueRule.formula1
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula1: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6d028-105\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"6d028-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.ConditionalCellValueRule.formula2
  summary: >-
    <span data-ttu-id="6d028-106">如果需要，公式可对条件格式规则进行求值。</span><span class="sxs-lookup"><span data-stu-id="6d028-106">The formula, if required, to evaluate the conditional format rule on.</span></span>


    <span data-ttu-id="6d028-107">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6d028-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula2
  fullName: excel.Excel.ConditionalCellValueRule.formula2
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula2?: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalCellValueRule.operator
  summary: >-
    <span data-ttu-id="6d028-108">文本条件格式的运算符。</span><span class="sxs-lookup"><span data-stu-id="6d028-108">The operator of the text conditional format.</span></span>


    <span data-ttu-id="6d028-109">\[[API 集： ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6d028-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: operator
  fullName: excel.Excel.ConditionalCellValueRule.operator
  langs:
  - typeScript
  type: property
  syntax:
    content: 'operator: Excel.ConditionalCellValueOperator | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual";'
    return:
      type:
      - Excel.ConditionalCellValueOperator | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6d028-110\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"6d028-110\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B21:E23\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.cellValue);\n    conditionalFormat.cellValue.format.font.color = \"red\";\n    conditionalFormat.cellValue.rule = { formula1: \"=0\", operator: \"LessThan\" };\n\n    await context.sync();\n});\n```"
