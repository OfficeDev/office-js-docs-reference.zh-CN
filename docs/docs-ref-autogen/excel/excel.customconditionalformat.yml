### YamlMime:UniversalReference
items:
  - uid: excel.Excel.CustomConditionalFormat
    summary: |-
      <span data-ttu-id="5629a-101">代表自定义条件格式类型。</span><span class="sxs-lookup"><span data-stu-id="5629a-101">Represents a custom conditional format type.</span></span>

      <span data-ttu-id="5629a-102">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5629a-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.CustomConditionalFormat
    fullName: Excel.CustomConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.CustomConditionalFormat.context
      - excel.Excel.CustomConditionalFormat.format
      - excel.Excel.CustomConditionalFormat.load
      - excel.Excel.CustomConditionalFormat.load_1
      - excel.Excel.CustomConditionalFormat.load_2
      - excel.Excel.CustomConditionalFormat.rule
      - excel.Excel.CustomConditionalFormat.set
      - excel.Excel.CustomConditionalFormat.set_1
      - excel.Excel.CustomConditionalFormat.toJSON
  - uid: excel.Excel.CustomConditionalFormat.context
    summary: <span data-ttu-id="5629a-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="5629a-103">The request context associated with the object.</span></span> <span data-ttu-id="5629a-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="5629a-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.CustomConditionalFormat.format
    summary: |-
      <span data-ttu-id="5629a-105">返回一个 format 对象, 该对象封装条件格式字体、填充、边框和其他属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-105">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span> <span data-ttu-id="5629a-106">只读。</span><span class="sxs-lookup"><span data-stu-id="5629a-106">Read-only.</span></span>

      <span data-ttu-id="5629a-107">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5629a-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5629a-108">示例</span><span class="sxs-lookup"><span data-stu-id="5629a-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: excel.Excel.CustomConditionalFormat.load
    summary: <span data-ttu-id="5629a-109">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5629a-110">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="5629a-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="5629a-111">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="5629a-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="5629a-112">`load(option?: string | string[]): Excel.CustomConditionalFormat`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-112">`load(option?: string | string[]): Excel.CustomConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="5629a-113">`load(option?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-113">`load(option?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="5629a-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomConditionalFormat`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="5629a-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="5629a-115">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="5629a-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="5629a-116">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="5629a-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="5629a-117">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="5629a-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="5629a-118">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="5629a-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.CustomConditionalFormatLoadOptions): Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.CustomConditionalFormatLoadOptions
  - uid: excel.Excel.CustomConditionalFormat.load_1
    summary: '<span data-ttu-id="5629a-119">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5629a-120">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="5629a-120">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="5629a-121">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.CustomConditionalFormat.load_2
    summary: '<span data-ttu-id="5629a-122">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="5629a-123">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="5629a-123">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="5629a-124">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.CustomConditionalFormat.rule
    summary: |-
      <span data-ttu-id="5629a-125">表示此条件格式中的 Rule 对象。</span><span class="sxs-lookup"><span data-stu-id="5629a-125">Represents the Rule object on this conditional format.</span></span> <span data-ttu-id="5629a-126">只读。</span><span class="sxs-lookup"><span data-stu-id="5629a-126">Read-only.</span></span>

      <span data-ttu-id="5629a-127">\[[API 集: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="5629a-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rule: Excel.ConditionalFormatRule;'
      return:
        type:
          - excel.Excel.ConditionalFormatRule
        description: |-


          #### <a name="examples"></a><span data-ttu-id="5629a-128">示例</span><span class="sxs-lookup"><span data-stu-id="5629a-128">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {
              var sheet = ctx.workbook.worksheets.getActiveWorksheet();
              var range = sheet.getRange("A1:A5");
              range.values = [[1], [20], [""], [5], ["test"]];
              var cf = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              var cfCustom = cf.customOrNullObject;
              cfCustom.rule.formula = "=ISBLANK(A1)";
              cfCustom.format.fill.color = "#00FF00";
              return ctx.sync().then(function () {
                  console.log("Added new custom conditional format highlighting all blank cells.");
              });
          }).catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.CustomConditionalFormat.set
    summary: '<span data-ttu-id="5629a-129">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-129">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="5629a-130">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="5629a-130">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="5629a-131">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="5629a-131">This method has the following additional signature:</span></span>

      `set(properties: Excel.CustomConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CustomConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="5629a-132">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-132">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.CustomConditionalFormatUpdateData
        - id: options
          description: '<span data-ttu-id="5629a-133">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="5629a-133">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.CustomConditionalFormat.set_1
    summary: '<span data-ttu-id="5629a-134">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="5629a-134">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.CustomConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.CustomConditionalFormat
  - uid: excel.Excel.CustomConditionalFormat.toJSON
    summary: '<span data-ttu-id="5629a-135">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="5629a-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="5629a-136">.</span><span class="sxs-lookup"><span data-stu-id="5629a-136"></span></span> <span data-ttu-id="5629a-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="5629a-137"></span></span><!-- --><span data-ttu-id="5629a-138">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 CustomConditionalFormat 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.CustomConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="5629a-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.CustomConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CustomConditionalFormatData`</span></span><!-- --><span data-ttu-id="5629a-139">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="5629a-139">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CustomConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.CustomConditionalFormatData
        description: ''