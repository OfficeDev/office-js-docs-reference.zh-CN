### YamlMime:UniversalReference
ms.openlocfilehash: afa3ba8ddc28bbb450f27ed2b7b389fcf61920b1
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 11/09/2018
ms.locfileid: "26221127"
items:
- uid: excel.Excel.ShowAsRule
  summary: '\[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]'
  name: Excel.ShowAsRule
  fullName: Excel.ShowAsRule
  langs:
  - typeScript
  type: interface
  package: excel
  children:
  - excel.Excel.ShowAsRule.baseField
  - excel.Excel.ShowAsRule.baseItem
  - excel.Excel.ShowAsRule.calculation
- uid: excel.Excel.ShowAsRule.baseField
  summary: >-
    基本透视字段中，如果适用，则基于 ShowAs 计算，基于 else null ShowAsCalculation 类型。


    \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: baseField
  fullName: baseField
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseField?: Excel.PivotField;'
    return:
      type:
      - excel.Excel.PivotField
- uid: excel.Excel.ShowAsRule.baseItem
  summary: >-
    基本的项，如果适用，基于 ShowAs 计算基于 else null ShowAsCalculation 类型。


    \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: baseItem
  fullName: baseItem
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseItem?: Excel.PivotItem;'
    return:
      type:
      - excel.Excel.PivotItem
      description: "\n#### <a name=\"examples\"></a>示例\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    const farmDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem(\"Sum of Crates Sold at Farm\");\n    const wholesaleDataHierarchy: Excel.DataPivotHierarchy = pivotTable.dataHierarchies.getItem(\"Sum of Crates Sold Wholesale\");\n\n    farmDataHierarchy.load(\"showAs\");\n    wholesaleDataHierarchy.load(\"showAs\");\n    await context.sync();\n\n    // show the difference between crate sales of the \"A Farms\" and the other farms\n    // this difference is both aggregated and shown for individual fruit types (where applicable)\n    let farmShowAs = farmDataHierarchy.showAs;\n    farmShowAs.calculation = Excel.ShowAsCalculation.differenceFrom;\n    farmShowAs.baseField = pivotTable.rowHierarchies.getItem(\"Farm\").fields.getItem(\"Farm\");\n    farmShowAs.baseItem = pivotTable.rowHierarchies.getItem(\"Farm\").fields.getItem(\"Farm\").items.getItem(\"A Farms\");\n    farmDataHierarchy.showAs = farmShowAs;\n\n    let wholesaleShowAs = wholesaleDataHierarchy.showAs;\n    wholesaleShowAs.calculation = Excel.ShowAsCalculation.differenceFrom;\n    wholesaleShowAs.baseField = pivotTable.rowHierarchies.getItem(\"Farm\").fields.getItem(\"Farm\");\n    wholesaleShowAs.baseItem = pivotTable.rowHierarchies.getItem(\"Farm\").fields.getItem(\"Farm\").items.getItem(\"A Farms\");\n    wholesaleDataHierarchy.showAs = wholesaleShowAs;\n    await context.sync();\n});\n```"
- uid: excel.Excel.ShowAsRule.calculation
  summary: >-
    要用于数据透视字段 ShowAs 计算。 有关详细信息，请参阅 Excel.ShowAsCalculation。


    \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: calculation
  fullName: calculation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculation: Excel.ShowAsCalculation | "Unknown" | "None" | "PercentOfGrandTotal" | "PercentOfRowTotal" | "PercentOfColumnTotal" | "PercentOfParentRowTotal" | "PercentOfParentColumnTotal" | "PercentOfParentTotal" | "PercentOf" | "RunningTotal" | "PercentRunningTotal" | "DifferenceFrom" | "PercentDifferenceFrom" | "RankAscending" | "RankDecending" | "Index";'
    return:
      type:
      - Excel.ShowAsCalculation | "Unknown" | "None" | "PercentOfGrandTotal" | "PercentOfRowTotal" | "PercentOfColumnTotal" | "PercentOfParentRowTotal" | "PercentOfParentColumnTotal" | "PercentOfParentTotal" | "PercentOf" | "RunningTotal" | "PercentRunningTotal" | "DifferenceFrom" | "PercentDifferenceFrom" | "RankAscending" | "RankDecending" | "Index"
