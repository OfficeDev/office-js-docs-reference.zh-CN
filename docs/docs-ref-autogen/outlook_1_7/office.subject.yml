### YamlMime:UniversalReference
items:
  - uid: Outlook_1_7.Office.Subject
    summary: |-
      提供用于获取和设置 Outlook 外接程序中的约会或邮件的主题的方法。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写
    name: Office.Subject
    fullName: Office.Subject
    langs:
      - typeScript
    type: interface
    package: Outlook_1_7
    children:
      - Outlook_1_7.Office.Subject.getAsync
      - Outlook_1_7.Office.Subject.getAsync_1
      - Outlook_1_7.Office.Subject.setAsync
      - Outlook_1_7.Office.Subject.setAsync_1
  - uid: Outlook_1_7.Office.Subject.getAsync
    summary: |-
      获取约会或邮件的主题。

      getAsync 方法开始对 Exchange 服务器进行异步调用, 以获取约会或邮件的主题。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 结果`value`的属性是项目的主题。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_7.Office.Subject.getAsync_1
    summary: |-
      获取约会或邮件的主题。

      getAsync 方法开始对 Exchange 服务器进行异步调用, 以获取约会或邮件的主题。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      #### <a name="examples"></a>示例

      ```javascript
      Office.context.mailbox.item.subject.getAsync(callback);

      function callback(asyncResult) {
          var subject = asyncResult.value;
      }
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 结果`value`的属性是项目的主题。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_7.Office.Subject.setAsync
    summary: |-
      设置约会或邮件的主题。

      setAsync 方法开始对 Exchange 服务器进行异步调用, 以设置约会或邮件的主题。 设置主题将覆盖当前主题，但会保留所有前缀，如“Fwd:”或“Re:”。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - DataExceedsMaximumSize: subject 参数的长度超过255个字符。
    name: 'setAsync(subject, options, callback)'
    fullName: 'setAsync(subject, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(subject: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: subject
          description: 约会或邮件的主题。 字符串长度限制为 255 个字符。
          type:
            - string
        - id: options
          description: '可选。 包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 如果设置主题失败, asyncResult 属性将包含一个错误代码。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_7.Office.Subject.setAsync_1
    summary: |-
      设置约会或邮件的主题。

      setAsync 方法开始对 Exchange 服务器进行异步调用, 以设置约会或邮件的主题。 设置主题将覆盖当前主题，但会保留所有前缀，如“Fwd:”或“Re:”。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - DataExceedsMaximumSize: subject 参数的长度超过255个字符。

      #### <a name="examples"></a>示例

      ```javascript
      Office.context.mailbox.item.subject.setAsync("New subject!", function (asyncResult) {
          if (asyncResult.status === "failed") {
              console.log("Action failed with error: " + asyncResult.error.message);
          }
      });
      ```
    name: 'setAsync(data, callback)'
    fullName: 'setAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: ''
          type:
            - string
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 如果设置主题失败, asyncResult 属性将包含一个错误代码。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'