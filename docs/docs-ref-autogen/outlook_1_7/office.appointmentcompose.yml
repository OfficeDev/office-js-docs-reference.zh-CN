### YamlMime:UniversalReference
ms.openlocfilehash: 4985cebb896d76130eb47d6fb720ede1424f18f9
ms.sourcegitcommit: 2ef4b6e6f2f27ecb9abf01fefa4cffd9498ad5dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 03/16/2019
ms.locfileid: "30656750"
items:
- uid: Outlook_1_7.Office.AppointmentCompose
  summary: >-
    <span data-ttu-id="47123-101">Office 的约会组织者模式。 [item](xref:Outlook_1_7.Office.Item)</span><span class="sxs-lookup"><span data-stu-id="47123-101">The appointment organizer mode of [Office.context.mailbox.item](xref:Outlook_1_7.Office.Item)</span></span><!-- --><span data-ttu-id="47123-102">.</span><span class="sxs-lookup"><span data-stu-id="47123-102"></span></span>


    <span data-ttu-id="47123-103">**重要说明**: 这是一个内部 Outlook 对象, 而不是直接通过现有接口公开。</span><span class="sxs-lookup"><span data-stu-id="47123-103">**Important**: This is an internal Outlook object, not directly exposed through existing interfaces.</span></span> <span data-ttu-id="47123-104">应将其视为 "context.subname" 模式。</span><span class="sxs-lookup"><span data-stu-id="47123-104">You should treat this as a mode of Office.context.mailbox.item.</span></span> <span data-ttu-id="47123-105">有关详细信息, 请参阅[对象模型](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.7/office.context.mailbox.item)页。</span><span class="sxs-lookup"><span data-stu-id="47123-105">Refer to the [Object Model](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.7/office.context.mailbox.item) page for more information.</span></span>
  name: Office.AppointmentCompose
  fullName: Office.AppointmentCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Appointment
  - 'ItemCompose '
  package: Outlook_1_7
  children:
  - Outlook_1_7.Office.AppointmentCompose.addFileAttachmentAsync
  - Outlook_1_7.Office.AppointmentCompose.addFileAttachmentAsync_1
  - Outlook_1_7.Office.AppointmentCompose.addHandlerAsync
  - Outlook_1_7.Office.AppointmentCompose.addHandlerAsync_1
  - Outlook_1_7.Office.AppointmentCompose.addItemAttachmentAsync
  - Outlook_1_7.Office.AppointmentCompose.addItemAttachmentAsync_1
  - Outlook_1_7.Office.AppointmentCompose.close
  - Outlook_1_7.Office.AppointmentCompose.getSelectedDataAsync
  - Outlook_1_7.Office.AppointmentCompose.getSelectedDataAsync_1
  - Outlook_1_7.Office.AppointmentCompose.loadCustomPropertiesAsync
  - Outlook_1_7.Office.AppointmentCompose.removeAttachmentAsync
  - Outlook_1_7.Office.AppointmentCompose.removeAttachmentAsync_1
  - Outlook_1_7.Office.AppointmentCompose.removeHandlerAsync
  - Outlook_1_7.Office.AppointmentCompose.removeHandlerAsync_1
  - Outlook_1_7.Office.AppointmentCompose.saveAsync
  - Outlook_1_7.Office.AppointmentCompose.saveAsync_1
  - Outlook_1_7.Office.AppointmentCompose.setSelectedDataAsync
  - Outlook_1_7.Office.AppointmentCompose.setSelectedDataAsync_1
  - Outlook_1_7.Office.AppointmentCompose.body
  - Outlook_1_7.Office.AppointmentCompose.end
  - Outlook_1_7.Office.AppointmentCompose.itemType
  - Outlook_1_7.Office.AppointmentCompose.location
  - Outlook_1_7.Office.AppointmentCompose.notificationMessages
  - Outlook_1_7.Office.AppointmentCompose.optionalAttendees
  - Outlook_1_7.Office.AppointmentCompose.organizer
  - Outlook_1_7.Office.AppointmentCompose.recurrence
  - Outlook_1_7.Office.AppointmentCompose.requiredAttendees
  - Outlook_1_7.Office.AppointmentCompose.seriesId
  - Outlook_1_7.Office.AppointmentCompose.start
  - Outlook_1_7.Office.AppointmentCompose.subject
- uid: Outlook_1_7.Office.AppointmentCompose.addFileAttachmentAsync
  summary: >-
    <span data-ttu-id="47123-106">将文件作为附件添加到邮件或约会。</span><span class="sxs-lookup"><span data-stu-id="47123-106">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="47123-107">addFileAttachmentAsync 方法在指定的 URI 处上载文件, 并将其附加到撰写窗体中的项目。</span><span class="sxs-lookup"><span data-stu-id="47123-107">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="47123-108">随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。</span><span class="sxs-lookup"><span data-stu-id="47123-108">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="47123-109">\[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-109">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-110">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-110">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-111">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-111">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-112">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-112">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-113">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-113">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-114">错误</span><span class="sxs-lookup"><span data-stu-id="47123-114">Errors</span></span></td><td><span data-ttu-id="47123-115">AttachmentSizeExceeded-附件大于允许的大小。</span><span class="sxs-lookup"><span data-stu-id="47123-115">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="47123-116">FileTypeNotSupported-附件的分机号不允许。</span><span class="sxs-lookup"><span data-stu-id="47123-116">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="47123-117">NumberOfAttachmentsExceeded-邮件或约会的附件过多。</span><span class="sxs-lookup"><span data-stu-id="47123-117">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table><span data-ttu-id="47123-118">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-118">

    #### Examples</span></span>


    ```javascript

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        var attachmentURL = "https://contoso.com/rtm/icon.png";
        Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
    }

    ```
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="47123-119">提供附加到邮件或约会的文件的位置的 URI。</span><span class="sxs-lookup"><span data-stu-id="47123-119">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id="47123-120">最大长度为 2048 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-120">The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="47123-121">在附件上载过程中显示的附件名称。</span><span class="sxs-lookup"><span data-stu-id="47123-121">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="47123-122">最大长度为 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-122">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="47123-123">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-123">Optional.</span></span> <span data-ttu-id="47123-124">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="47123-124">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="47123-125">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="47123-125">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="47123-126">isInline: 如果为 true, 则表示附件将在邮件正文中以内联方式显示, 并且不应显示在附件列表中。</span><span class="sxs-lookup"><span data-stu-id="47123-126">isInline: If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.</span></span>'
      type:
      - 'Office.AsyncContextOptions & { isInline: boolean }'
    - id: callback
      description: <span data-ttu-id="47123-127">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-127">Optional.</span></span> <span data-ttu-id="47123-128">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-128">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="47123-129">成功后, 将在 asyncResult 属性中提供附件标识符。</span><span class="sxs-lookup"><span data-stu-id="47123-129">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="47123-130">如果上传附件失败, asyncResult 对象将包含一个 error 对象, 该对象提供错误说明。</span><span class="sxs-lookup"><span data-stu-id="47123-130">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.addFileAttachmentAsync_1
  summary: >-
    <span data-ttu-id="47123-131">将文件作为附件添加到邮件或约会。</span><span class="sxs-lookup"><span data-stu-id="47123-131">Adds a file to a message or appointment as an attachment.</span></span>


    <span data-ttu-id="47123-132">addFileAttachmentAsync 方法在指定的 URI 处上载文件, 并将其附加到撰写窗体中的项目。</span><span class="sxs-lookup"><span data-stu-id="47123-132">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>


    <span data-ttu-id="47123-133">随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。</span><span class="sxs-lookup"><span data-stu-id="47123-133">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="47123-134">\[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-134">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-135">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-135">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-136">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-136">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-137">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-137">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-138">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-138">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-139">错误</span><span class="sxs-lookup"><span data-stu-id="47123-139">Errors</span></span></td><td><span data-ttu-id="47123-140">AttachmentSizeExceeded-附件大于允许的大小。</span><span class="sxs-lookup"><span data-stu-id="47123-140">AttachmentSizeExceeded - The attachment is larger than allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="47123-141">FileTypeNotSupported-附件的分机号不允许。</span><span class="sxs-lookup"><span data-stu-id="47123-141">FileTypeNotSupported - The attachment has an extension that is not allowed.</span></span></td></tr> <tr><td></td><td><span data-ttu-id="47123-142">NumberOfAttachmentsExceeded-邮件或约会的附件过多。</span><span class="sxs-lookup"><span data-stu-id="47123-142">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table>
  name: addFileAttachmentAsync(uri, attachmentName, callback)
  fullName: addFileAttachmentAsync(uri, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: <span data-ttu-id="47123-143">提供附加到邮件或约会的文件的位置的 URI。</span><span class="sxs-lookup"><span data-stu-id="47123-143">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id="47123-144">最大长度为 2048 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-144">The maximum length is 2048 characters.</span></span>
      type:
      - string
    - id: attachmentName
      description: <span data-ttu-id="47123-145">在附件上载过程中显示的附件名称。</span><span class="sxs-lookup"><span data-stu-id="47123-145">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="47123-146">最大长度为 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-146">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="47123-147">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-147">Optional.</span></span> <span data-ttu-id="47123-148">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-148">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="47123-149">成功后, 将在 asyncResult 属性中提供附件标识符。</span><span class="sxs-lookup"><span data-stu-id="47123-149">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="47123-150">如果上传附件失败, asyncResult 对象将包含一个 error 对象, 该对象提供错误说明。</span><span class="sxs-lookup"><span data-stu-id="47123-150">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.addHandlerAsync
  summary: >-
    <span data-ttu-id="47123-151">添加支持事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="47123-151">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="47123-152">目前, 受支持的事件类型是`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-152">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="47123-153">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-153"></span></span><!-- --><span data-ttu-id="47123-154">, 并`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-154">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="47123-155">.</span><span class="sxs-lookup"><span data-stu-id="47123-155"></span></span>


    <span data-ttu-id="47123-156">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-156">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-157">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-157">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-158">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-158">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-159">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-159">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-160">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-160">Appointment Organizer</span></span></td></tr> </table>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="47123-161">应调用处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="47123-161">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="47123-162">用于处理事件的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-162">The function to handle the event.</span></span> <span data-ttu-id="47123-163">此函数必须接受一个参数，即对象文本。</span><span class="sxs-lookup"><span data-stu-id="47123-163">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="47123-164">参数的 type 属性将与传递给 addHandlerAsync 的事件类型参数相匹配。</span><span class="sxs-lookup"><span data-stu-id="47123-164">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: options
      description: '<span data-ttu-id="47123-165">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-165">Optional.</span></span> <span data-ttu-id="47123-166">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="47123-166">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="47123-167">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="47123-167">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - any
    - id: callback
      description: <span data-ttu-id="47123-168">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-168">Optional.</span></span> <span data-ttu-id="47123-169">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="47123-169">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.addHandlerAsync_1
  summary: >-
    <span data-ttu-id="47123-170">添加支持事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="47123-170">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="47123-171">目前, 受支持的事件类型是`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-171">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="47123-172">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-172"></span></span><!-- --><span data-ttu-id="47123-173">, 并`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-173">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="47123-174">.</span><span class="sxs-lookup"><span data-stu-id="47123-174"></span></span>


    <span data-ttu-id="47123-175">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-175">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-176">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-176">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-177">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-177">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-178">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-178">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-179">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-179">Appointment Organizer</span></span></td></tr> </table>
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="47123-180">应调用处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="47123-180">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="47123-181">用于处理事件的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-181">The function to handle the event.</span></span> <span data-ttu-id="47123-182">此函数必须接受一个参数，即对象文本。</span><span class="sxs-lookup"><span data-stu-id="47123-182">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="47123-183">参数的 type 属性将与传递给 addHandlerAsync 的事件类型参数相匹配。</span><span class="sxs-lookup"><span data-stu-id="47123-183">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="47123-184">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-184">Optional.</span></span> <span data-ttu-id="47123-185">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="47123-185">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.addItemAttachmentAsync
  summary: >-
    <span data-ttu-id="47123-186">将 Exchange 项目（如邮件）作为附件添加到邮件或约会。</span><span class="sxs-lookup"><span data-stu-id="47123-186">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="47123-187">addItemAttachmentAsync 方法将具有指定 Exchange 标识符的项目附加到撰写窗体中的项目。</span><span class="sxs-lookup"><span data-stu-id="47123-187">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="47123-188">如果指定了回调方法, 则使用一个参数 asyncResult 调用方法, 该参数包含附件标识符或指示附加项目时出现的任何错误的代码。</span><span class="sxs-lookup"><span data-stu-id="47123-188">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="47123-189">如果需要, 可以使用 options 参数将状态信息传递给回调方法。</span><span class="sxs-lookup"><span data-stu-id="47123-189">You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="47123-190">随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。</span><span class="sxs-lookup"><span data-stu-id="47123-190">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="47123-191">如果你的 Office 外接程序在 Outlook Web App 中运行, 则 addItemAttachmentAsync 方法可以将项目附加到您正在编辑的项目之外的项目中;但是, 不支持这种情况, 建议不要这样做。</span><span class="sxs-lookup"><span data-stu-id="47123-191">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="47123-192">\[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-192">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-193">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-193">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-194">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-194">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-195">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-195">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-196">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-196">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-197">错误</span><span class="sxs-lookup"><span data-stu-id="47123-197">Errors</span></span></td><td><span data-ttu-id="47123-198">NumberOfAttachmentsExceeded-邮件或约会的附件过多。</span><span class="sxs-lookup"><span data-stu-id="47123-198">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table><span data-ttu-id="47123-199">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-199">

    #### Examples</span></span>


    ```javascript

    // The following example adds an existing Outlook item as an attachment

    // with the name `My Attachment`.

    function callback(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Attachment added");
        }
    }


    function addAttachment() {
        // EWS ID of item to attach (shortened for readability).
        var itemId = "AAMkADI1...AAA=";

        // The values in asyncContext can be accessed in the callback.
        var options = { 'asyncContext': { var1: 1, var2: 2 } };

        Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
    }

    ```
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="47123-200">要附加的项目的 Exchange 标识符。</span><span class="sxs-lookup"><span data-stu-id="47123-200">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id="47123-201">最大长度为 100 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-201">The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="47123-202">在附件上载过程中显示的附件名称。</span><span class="sxs-lookup"><span data-stu-id="47123-202">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="47123-203">最大长度为 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-203">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="47123-204">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-204">Optional.</span></span> <span data-ttu-id="47123-205">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="47123-205">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="47123-206">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="47123-206">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="47123-207">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-207">Optional.</span></span> <span data-ttu-id="47123-208">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-208">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="47123-209">成功后, 将在 asyncResult 属性中提供附件标识符。</span><span class="sxs-lookup"><span data-stu-id="47123-209">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="47123-210">如果添加附件失败, asyncResult 对象将包含一个 error 对象, 该对象提供错误说明。</span><span class="sxs-lookup"><span data-stu-id="47123-210">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.addItemAttachmentAsync_1
  summary: >-
    <span data-ttu-id="47123-211">将 Exchange 项目（如邮件）作为附件添加到邮件或约会。</span><span class="sxs-lookup"><span data-stu-id="47123-211">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>


    <span data-ttu-id="47123-212">addItemAttachmentAsync 方法将具有指定 Exchange 标识符的项目附加到撰写窗体中的项目。</span><span class="sxs-lookup"><span data-stu-id="47123-212">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="47123-213">如果指定了回调方法, 则使用一个参数 asyncResult 调用方法, 该参数包含附件标识符或指示附加项目时出现的任何错误的代码。</span><span class="sxs-lookup"><span data-stu-id="47123-213">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="47123-214">如果需要, 可以使用 options 参数将状态信息传递给回调方法。</span><span class="sxs-lookup"><span data-stu-id="47123-214">You can use the options parameter to pass state information to the callback method, if needed.</span></span>


    <span data-ttu-id="47123-215">随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。</span><span class="sxs-lookup"><span data-stu-id="47123-215">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>


    <span data-ttu-id="47123-216">如果你的 Office 外接程序在 Outlook Web App 中运行, 则 addItemAttachmentAsync 方法可以将项目附加到您正在编辑的项目之外的项目中;但是, 不支持这种情况, 建议不要这样做。</span><span class="sxs-lookup"><span data-stu-id="47123-216">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>


    <span data-ttu-id="47123-217">\[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-217">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-218">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-218">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-219">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-219">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-220">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-220">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-221">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-221">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-222">错误</span><span class="sxs-lookup"><span data-stu-id="47123-222">Errors</span></span></td><td><span data-ttu-id="47123-223">NumberOfAttachmentsExceeded-邮件或约会的附件过多。</span><span class="sxs-lookup"><span data-stu-id="47123-223">NumberOfAttachmentsExceeded - The message or appointment has too many attachments.</span></span></td></tr> </table>
  name: addItemAttachmentAsync(itemId, attachmentName, callback)
  fullName: addItemAttachmentAsync(itemId, attachmentName, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: <span data-ttu-id="47123-224">要附加的项目的 Exchange 标识符。</span><span class="sxs-lookup"><span data-stu-id="47123-224">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id="47123-225">最大长度为 100 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-225">The maximum length is 100 characters.</span></span>
      type:
      - any
    - id: attachmentName
      description: <span data-ttu-id="47123-226">在附件上载过程中显示的附件名称。</span><span class="sxs-lookup"><span data-stu-id="47123-226">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="47123-227">最大长度为 255 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-227">The maximum length is 255 characters.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="47123-228">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-228">Optional.</span></span> <span data-ttu-id="47123-229">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-229">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="47123-230">成功后, 将在 asyncResult 属性中提供附件标识符。</span><span class="sxs-lookup"><span data-stu-id="47123-230">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="47123-231">如果添加附件失败, asyncResult 对象将包含一个 error 对象, 该对象提供错误说明。</span><span class="sxs-lookup"><span data-stu-id="47123-231">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.close
  summary: >-
    <span data-ttu-id="47123-232">关闭正在撰写的当前项目</span><span class="sxs-lookup"><span data-stu-id="47123-232">Closes the current item that is being composed</span></span>


    <span data-ttu-id="47123-233">close 方法的行为取决于正在撰写的项目的当前状态。</span><span class="sxs-lookup"><span data-stu-id="47123-233">The behaviors of the close method depends on the current state of the item being composed.</span></span> <span data-ttu-id="47123-234">如果项目具有未保存的更改, 则客户端将提示用户保存、放弃或关闭该操作。</span><span class="sxs-lookup"><span data-stu-id="47123-234">If the item has unsaved changes, the client prompts the user to save, discard, or close the action.</span></span>


    <span data-ttu-id="47123-235">在 Outlook 桌面客户端中, 如果邮件是内嵌答复, 则 close 方法将不起作用。</span><span class="sxs-lookup"><span data-stu-id="47123-235">In the Outlook desktop client, if the message is an inline reply, the close method has no effect.</span></span>


    <span data-ttu-id="47123-236">**注意**: 在 web 上的 Outlook 中, 如果该项目是一个约会, 并且以前使用 saveAsync 保存过, 则系统会提示用户保存、放弃或取消操作, 即使自上次保存项目后未发生更改也是如此。</span><span class="sxs-lookup"><span data-stu-id="47123-236">**Note**: In Outlook on the web, if the item is an appointment and it has previously been saved using saveAsync, the user is prompted to save, discard, or cancel even if no changes have occurred since the item was last saved.</span></span>


    <span data-ttu-id="47123-237">\[[API 集: 邮箱 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-237">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-238">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-238">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-239">受限</span><span class="sxs-lookup"><span data-stu-id="47123-239">Restricted</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-240">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-240">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-241">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-241">Appointment Organizer</span></span></td></tr> </table>
  name: close()
  fullName: close()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'close(): void;'
    return:
      type:
      - void
      description: ''
- uid: Outlook_1_7.Office.AppointmentCompose.getSelectedDataAsync
  summary: >-
    <span data-ttu-id="47123-242">以异步方式返回邮件的主题或正文中选定的数据。</span><span class="sxs-lookup"><span data-stu-id="47123-242">Asynchronously returns selected data from the subject or body of a message.</span></span>


    <span data-ttu-id="47123-243">如果没有选定内容，但光标位于正文或主题中，此方法将会为所选数据返回 null。</span><span class="sxs-lookup"><span data-stu-id="47123-243">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="47123-244">如果选择了 "正文" 或 "主题" 以外的字段, 则该方法将返回 InvalidSelection 错误。</span><span class="sxs-lookup"><span data-stu-id="47123-244">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>


    <span data-ttu-id="47123-245">若要从回调方法访问所选数据, 请调用 asyncResult. value。</span><span class="sxs-lookup"><span data-stu-id="47123-245">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="47123-246">若要访问所选内容来自的源属性, 请调用 asyncResult. sourceProperty, 它是正文或主题。</span><span class="sxs-lookup"><span data-stu-id="47123-246">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>


    <span data-ttu-id="47123-247">\[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-247">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-248">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-248">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-249">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-249">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-250">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-250">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-251">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-251">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-252">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-252">

    #### Examples</span></span>


    ```javascript

    // Get selected data.

    Office.initialize = function () {
        Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
    };


    function getCallback(asyncResult) {
        var text = asyncResult.value.data;
        var prop = asyncResult.value.sourceProperty;

        Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
    }


    function setCallback(asyncResult) {
        // Check for errors.
    }

    ```
  name: getSelectedDataAsync(coercionType, options, callback)
  fullName: getSelectedDataAsync(coercionType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: <span data-ttu-id="47123-253">所选数据的格式为 coercionType 所确定的格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="47123-253">The selected data as a string with format determined by coercionType.</span></span>
    parameters:
    - id: coercionType
      description: <span data-ttu-id="47123-p126">请求数据的格式。如果为文本，则此方法返回纯文本作为字符串，删除任何显示的 HTML 标记。如果为 HTML，则此方法返回所选文本，不论是纯文本还是 HTML。</span><span class="sxs-lookup"><span data-stu-id="47123-p126">Requests a format for the data. If Text, the method returns the plain text as a string , removing any HTML tags present. If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>
      type:
      - Office.CoercionType
    - id: options
      description: '<span data-ttu-id="47123-257">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="47123-257">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="47123-258">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="47123-258">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="47123-259">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-259">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<any>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.getSelectedDataAsync_1
  summary: >-
    <span data-ttu-id="47123-260">以异步方式返回邮件的主题或正文中选定的数据。</span><span class="sxs-lookup"><span data-stu-id="47123-260">Asynchronously returns selected data from the subject or body of a message.</span></span>


    <span data-ttu-id="47123-261">如果没有选定内容，但光标位于正文或主题中，此方法将会为所选数据返回 null。</span><span class="sxs-lookup"><span data-stu-id="47123-261">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="47123-262">如果选择了 "正文" 或 "主题" 以外的字段, 则该方法将返回 InvalidSelection 错误。</span><span class="sxs-lookup"><span data-stu-id="47123-262">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>


    <span data-ttu-id="47123-263">若要从回调方法访问所选数据, 请调用 asyncResult. value。</span><span class="sxs-lookup"><span data-stu-id="47123-263">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="47123-264">若要访问所选内容来自的源属性, 请调用 asyncResult. sourceProperty, 它是正文或主题。</span><span class="sxs-lookup"><span data-stu-id="47123-264">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>


    <span data-ttu-id="47123-265">\[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-265">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-266">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-266">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-267">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-267">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-268">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-268">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-269">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-269">Appointment Organizer</span></span></td></tr> </table>
  name: getSelectedDataAsync(coercionType, callback)
  fullName: getSelectedDataAsync(coercionType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coercionType: Office.CoercionType, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: <span data-ttu-id="47123-270">所选数据的格式为 coercionType 所确定的格式的字符串。</span><span class="sxs-lookup"><span data-stu-id="47123-270">The selected data as a string with format determined by coercionType.</span></span>
    parameters:
    - id: coercionType
      description: <span data-ttu-id="47123-p130">请求数据的格式。如果为文本，则此方法返回纯文本作为字符串，删除任何显示的 HTML 标记。如果为 HTML，则此方法返回所选文本，不论是纯文本还是 HTML。</span><span class="sxs-lookup"><span data-stu-id="47123-p130">Requests a format for the data. If Text, the method returns the plain text as a string , removing any HTML tags present. If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>
      type:
      - Office.CoercionType
    - id: callback
      description: <span data-ttu-id="47123-274">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-274">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.loadCustomPropertiesAsync
  summary: >-
    <span data-ttu-id="47123-275">异步加载所选项目上此外接程序的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="47123-275">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="47123-276">自定义属性基于每个应用、每个项目存储为键/值对。</span><span class="sxs-lookup"><span data-stu-id="47123-276">Custom properties are stored as key/value pairs on a per-app, per-item basis.</span></span> <span data-ttu-id="47123-277">此方法在回调中返回一个 CustomProperties 对象, 该对象提供用于访问特定于当前项目和当前加载项的自定义属性的方法。</span><span class="sxs-lookup"><span data-stu-id="47123-277">This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in.</span></span> <span data-ttu-id="47123-278">自定义属性未在项目上加密，因此这不应用作安全存储。</span><span class="sxs-lookup"><span data-stu-id="47123-278">Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="47123-279">自定义属性作为 asyncResult 属性中的 CustomProperties 对象提供。</span><span class="sxs-lookup"><span data-stu-id="47123-279">The custom properties are provided as a CustomProperties object in the asyncResult.value property.</span></span> <span data-ttu-id="47123-280">此对象可用于获取、设置以及从项目中删除自定义属性，并将自定义属性集的更改重新保存到服务器。</span><span class="sxs-lookup"><span data-stu-id="47123-280">This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="47123-281">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-281">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-282">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-282">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-283">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-283">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-284">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-284">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-285">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-285">Appointment Organizer</span></span></td></tr> </table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="47123-286">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-286">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: <span data-ttu-id="47123-287">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-287">Optional.</span></span> <span data-ttu-id="47123-288">开发人员可以提供他们想要在回调函数中访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="47123-288">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="47123-289">此对象可以通过回调函数中的 asyncContext 属性来访问。</span><span class="sxs-lookup"><span data-stu-id="47123-289">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
      type:
      - any
- uid: Outlook_1_7.Office.AppointmentCompose.removeAttachmentAsync
  summary: >-
    <span data-ttu-id="47123-290">将附件从邮件或约会中删除。</span><span class="sxs-lookup"><span data-stu-id="47123-290">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="47123-291">removeAttachmentAsync 方法从项中删除具有指定标识符的附件。</span><span class="sxs-lookup"><span data-stu-id="47123-291">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="47123-292">最佳做法是，仅当同一个邮件应用程序在同一会话中添加了一个附件时，你才应使用该附件标识符来删除该附件。</span><span class="sxs-lookup"><span data-stu-id="47123-292">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="47123-293">在 Outlook Web App 和适用于设备的 OWA 中，附件标识符只在同一个会话中才有效。</span><span class="sxs-lookup"><span data-stu-id="47123-293">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="47123-294">当用户关闭应用程序时, 或者如果用户开始撰写内嵌窗体, 随后弹出窗体以继续在单独的窗口中。</span><span class="sxs-lookup"><span data-stu-id="47123-294">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="47123-295">\[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-295">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-296">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-296">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-297">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-297">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-298">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-298">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-299">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-299">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-300">错误</span><span class="sxs-lookup"><span data-stu-id="47123-300">Errors</span></span></td><td><span data-ttu-id="47123-301">InvalidAttachmentId-附件标识符不存在。</span><span class="sxs-lookup"><span data-stu-id="47123-301">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="47123-302">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-302">

    #### Examples</span></span>


    ```javascript

    // The following code removes an attachment with an identifier of '0'.

    Office.context.mailbox.item.removeAttachmentAsync(
        '0',
        { asyncContext : null },
        function (asyncResult)
        {
            console.log(asyncResult.status);
        }
    );

    ```
  name: removeAttachmentAsync(attachmentId, options, callback)
  fullName: removeAttachmentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="47123-303">要删除的附件的标识符。</span><span class="sxs-lookup"><span data-stu-id="47123-303">The identifier of the attachment to remove.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="47123-304">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-304">Optional.</span></span> <span data-ttu-id="47123-305">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="47123-305">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="47123-306">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="47123-306">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="47123-307">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-307">Optional.</span></span> <span data-ttu-id="47123-308">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-308">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="47123-309">如果删除附件失败, asyncResult 属性将包含失败原因的错误代码。</span><span class="sxs-lookup"><span data-stu-id="47123-309">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.removeAttachmentAsync_1
  summary: >-
    <span data-ttu-id="47123-310">将附件从邮件或约会中删除。</span><span class="sxs-lookup"><span data-stu-id="47123-310">Removes an attachment from a message or appointment.</span></span>


    <span data-ttu-id="47123-311">removeAttachmentAsync 方法从项中删除具有指定标识符的附件。</span><span class="sxs-lookup"><span data-stu-id="47123-311">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="47123-312">最佳做法是，仅当同一个邮件应用程序在同一会话中添加了一个附件时，你才应使用该附件标识符来删除该附件。</span><span class="sxs-lookup"><span data-stu-id="47123-312">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="47123-313">在 Outlook Web App 和适用于设备的 OWA 中，附件标识符只在同一个会话中才有效。</span><span class="sxs-lookup"><span data-stu-id="47123-313">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="47123-314">当用户关闭应用程序时, 或者如果用户开始撰写内嵌窗体, 随后弹出窗体以继续在单独的窗口中。</span><span class="sxs-lookup"><span data-stu-id="47123-314">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="47123-315">\[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-315">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-316">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-316">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-317">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-317">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-318">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-318">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-319">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-319">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-320">错误</span><span class="sxs-lookup"><span data-stu-id="47123-320">Errors</span></span></td><td><span data-ttu-id="47123-321">InvalidAttachmentId-附件标识符不存在。</span><span class="sxs-lookup"><span data-stu-id="47123-321">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table>
  name: removeAttachmentAsync(attachmentId, callback)
  fullName: removeAttachmentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="47123-322">要删除的附件的标识符。</span><span class="sxs-lookup"><span data-stu-id="47123-322">The identifier of the attachment to remove.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="47123-323">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-323">Optional.</span></span> <span data-ttu-id="47123-324">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-324">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="47123-325">如果删除附件失败, asyncResult 属性将包含失败原因的错误代码。</span><span class="sxs-lookup"><span data-stu-id="47123-325">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.removeHandlerAsync
  summary: >-
    <span data-ttu-id="47123-326">删除受支持事件类型的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="47123-326">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="47123-327">目前, 受支持的事件类型是`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-327">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="47123-328">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-328"></span></span><!-- --><span data-ttu-id="47123-329">, 并`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-329">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="47123-330">.</span><span class="sxs-lookup"><span data-stu-id="47123-330"></span></span>


    <span data-ttu-id="47123-331">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-331">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-332">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-332">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-333">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-333">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-334">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-334">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-335">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-335">Appointment Organizer</span></span></td></tr> </table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="47123-336">应撤销处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="47123-336">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: options
      description: '<span data-ttu-id="47123-337">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-337">Optional.</span></span> <span data-ttu-id="47123-338">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="47123-338">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="47123-339">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="47123-339">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - any
    - id: callback
      description: <span data-ttu-id="47123-340">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-340">Optional.</span></span> <span data-ttu-id="47123-341">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="47123-341">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.removeHandlerAsync_1
  summary: >-
    <span data-ttu-id="47123-342">删除受支持事件类型的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="47123-342">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="47123-343">目前, 受支持的事件类型是`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-343">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="47123-344">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-344"></span></span><!-- --><span data-ttu-id="47123-345">, 并`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="47123-345">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="47123-346">.</span><span class="sxs-lookup"><span data-stu-id="47123-346"></span></span>


    <span data-ttu-id="47123-347">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-347">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-348">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-348">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-349">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-349">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-350">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-350">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-351">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-351">Appointment Organizer</span></span></td></tr> </table>
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="47123-352">应撤销处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="47123-352">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="47123-353">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-353">Optional.</span></span> <span data-ttu-id="47123-354">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="47123-354">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.saveAsync
  summary: >-
    <span data-ttu-id="47123-355">异步保存项目。</span><span class="sxs-lookup"><span data-stu-id="47123-355">Asynchronously saves an item.</span></span>


    <span data-ttu-id="47123-p142">调用时，此方法将当前邮件保存为草稿，并通过回调方法返回项目 ID。在 Outlook Web App 或 Outlook 联机模式下，该项目被保存到服务器中。在 Outlook 缓存模式下，该项目被保存到本地缓存中。</span><span class="sxs-lookup"><span data-stu-id="47123-p142">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="47123-359">由于约会没有草稿状态, 如果在撰写模式下对约会调用了 saveAsync, 则会将该项目保存为用户日历上的普通约会。</span><span class="sxs-lookup"><span data-stu-id="47123-359">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="47123-360">对于之前未保存的新约会, 将不会发送邀请。</span><span class="sxs-lookup"><span data-stu-id="47123-360">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="47123-361">保存现有约会将向添加或删除的与会者发送更新。</span><span class="sxs-lookup"><span data-stu-id="47123-361">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="47123-362">**注意**: 如果外接程序对撰写模式中的项目调用 saveAsync, 以便获取 itemId 以使用 EWS 或 REST API, 请注意, 当 Outlook 处于缓存模式下时, 可能需要一段时间才能将项目实际同步到服务器。</span><span class="sxs-lookup"><span data-stu-id="47123-362">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="47123-363">在同步项目之前, 使用 itemId 将返回错误。</span><span class="sxs-lookup"><span data-stu-id="47123-363">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="47123-364">**注意**: 在撰写模式下, 以下客户端的 saveAsync 对约会的行为不同:</span><span class="sxs-lookup"><span data-stu-id="47123-364">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="47123-365">在撰写模式下, Mac Outlook 不支持会议上的 saveAsync。</span><span class="sxs-lookup"><span data-stu-id="47123-365">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="47123-366">在 Mac Outlook 中对会议调用 saveAsync 将返回错误。</span><span class="sxs-lookup"><span data-stu-id="47123-366">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="47123-367">在撰写模式下对约会调用 saveAsync 时, web 上的 Outlook 将始终发送邀请或更新。</span><span class="sxs-lookup"><span data-stu-id="47123-367">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="47123-368">\[[API 集: 邮箱 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-368">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="47123-369">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-369">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-370">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-370">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-371">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-371">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-372">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-372">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-373">错误</span><span class="sxs-lookup"><span data-stu-id="47123-373">Errors</span></span></td><td><span data-ttu-id="47123-374">InvalidAttachmentId-附件标识符不存在。</span><span class="sxs-lookup"><span data-stu-id="47123-374">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table>
  name: saveAsync(options, callback)
  fullName: saveAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="47123-375">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="47123-375">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="47123-376">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="47123-376">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="47123-377">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-377">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.saveAsync_1
  summary: >-
    <span data-ttu-id="47123-378">异步保存项目。</span><span class="sxs-lookup"><span data-stu-id="47123-378">Asynchronously saves an item.</span></span>


    <span data-ttu-id="47123-p147">调用时，此方法将当前邮件保存为草稿，并通过回调方法返回项目 ID。在 Outlook Web App 或 Outlook 联机模式下，该项目被保存到服务器中。在 Outlook 缓存模式下，该项目被保存到本地缓存中。</span><span class="sxs-lookup"><span data-stu-id="47123-p147">When invoked, this method saves the current message as a draft and returns the item id via the callback method. In Outlook Web App or Outlook in online mode, the item is saved to the server. In Outlook in cached mode, the item is saved to the local cache.</span></span>


    <span data-ttu-id="47123-382">由于约会没有草稿状态, 如果在撰写模式下对约会调用了 saveAsync, 则会将该项目保存为用户日历上的普通约会。</span><span class="sxs-lookup"><span data-stu-id="47123-382">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="47123-383">对于之前未保存的新约会, 将不会发送邀请。</span><span class="sxs-lookup"><span data-stu-id="47123-383">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="47123-384">保存现有约会将向添加或删除的与会者发送更新。</span><span class="sxs-lookup"><span data-stu-id="47123-384">Saving an existing appointment will send an update to added or removed attendees.</span></span>


    <span data-ttu-id="47123-385">**注意**: 如果外接程序对撰写模式中的项目调用 saveAsync, 以便获取 itemId 以使用 EWS 或 REST API, 请注意, 当 Outlook 处于缓存模式下时, 可能需要一段时间才能将项目实际同步到服务器。</span><span class="sxs-lookup"><span data-stu-id="47123-385">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="47123-386">在同步项目之前, 使用 itemId 将返回错误。</span><span class="sxs-lookup"><span data-stu-id="47123-386">Until the item is synced, using the itemId will return an error.</span></span>


    <span data-ttu-id="47123-387">**注意**: 在撰写模式下, 以下客户端的 saveAsync 对约会的行为不同:</span><span class="sxs-lookup"><span data-stu-id="47123-387">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>


    - <span data-ttu-id="47123-388">在撰写模式下, Mac Outlook 不支持会议上的 saveAsync。</span><span class="sxs-lookup"><span data-stu-id="47123-388">Mac Outlook does not support saveAsync on a meeting in compose mode.</span></span> <span data-ttu-id="47123-389">在 Mac Outlook 中对会议调用 saveAsync 将返回错误。</span><span class="sxs-lookup"><span data-stu-id="47123-389">Calling saveAsync on a meeting in Mac Outlook will return an error.</span></span>


    - <span data-ttu-id="47123-390">在撰写模式下对约会调用 saveAsync 时, web 上的 Outlook 将始终发送邀请或更新。</span><span class="sxs-lookup"><span data-stu-id="47123-390">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>


    <span data-ttu-id="47123-391">\[[API 集: 邮箱 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-391">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-392">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-392">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-393">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-393">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-394">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-394">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-395">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-395">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-396">错误</span><span class="sxs-lookup"><span data-stu-id="47123-396">Errors</span></span></td><td><span data-ttu-id="47123-397">InvalidAttachmentId-附件标识符不存在。</span><span class="sxs-lookup"><span data-stu-id="47123-397">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="47123-398">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-398">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.saveAsync(
        function callback(result) {
            // Process the result.
        });

    // The following is an example of the

    // `result` parameter passed to the

    // callback function. The `value`

    // property contains the item ID of

    // the item.

    {
        "value": "AAMkADI5...AAA=",
        "status": "succeeded"
    }

    ```
  name: saveAsync(callback)
  fullName: saveAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="47123-399">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-399">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.setSelectedDataAsync
  summary: >-
    <span data-ttu-id="47123-400">以异步方式将数据插入到邮件的正文或主题中。</span><span class="sxs-lookup"><span data-stu-id="47123-400">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="47123-401">document.setselecteddataasync 方法将指定的字符串插入到项目的主题或正文中的光标位置, 或者, 如果在编辑器中选择了文本, 则会将所选的文本替换为文本。</span><span class="sxs-lookup"><span data-stu-id="47123-401">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="47123-402">如果游标不在 body 或 subject 字段中, 则返回错误。</span><span class="sxs-lookup"><span data-stu-id="47123-402">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="47123-403">插入后, 光标放置在插入内容的末尾。</span><span class="sxs-lookup"><span data-stu-id="47123-403">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="47123-404">\[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-404">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-405">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-405">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-406">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-406">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-407">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-407">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-408">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-408">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-409">错误</span><span class="sxs-lookup"><span data-stu-id="47123-409">Errors</span></span></td><td><span data-ttu-id="47123-410">InvalidAttachmentId-附件标识符不存在。</span><span class="sxs-lookup"><span data-stu-id="47123-410">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="47123-411">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-411">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });

    ```
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync(data, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="47123-412">要插入的数据。</span><span class="sxs-lookup"><span data-stu-id="47123-412">The data to be inserted.</span></span> <span data-ttu-id="47123-413">数据不得超过 1,000,000 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-413">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id="47123-414">如果传入了1000000个以上的字符, 则会引发 ArgumentOutOfRange 异常。</span><span class="sxs-lookup"><span data-stu-id="47123-414">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
    - id: options
      description: "<span data-ttu-id=\"47123-415\">可选。</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-415\">Optional.</span></span> <span data-ttu-id=\"47123-416\">包含一个或多个以下属性的对象文本。</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-416\">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id=\"47123-417\">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-417\">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id=\"47123-418\">coercionType: 如果为文本, 则在 outlook Web App 和 outlook 中应用当前样式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-418\">coercionType: If text, the current style is applied in Outlook Web App and Outlook.</span></span> <span data-ttu-id=\"47123-419\">如果该字段是 HTML 编辑器，则仅插入文本数据，即使数据为 HTML。</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-419\">If the field is an HTML editor, only the text data is inserted, even if the data is HTML.</span></span> <span data-ttu-id=\"47123-420\">如果 html 和字段支持 html (主题不), 则在 outlook Web App 中应用当前样式, 并在 outlook 中应用默认样式。</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-420\">If html and the field supports HTML (the subject doesn't), the current style is applied in Outlook Web App and the default style is applied in Outlook.</span></span> <span data-ttu-id=\"47123-421\">如果字段是文本字段, 则返回一个 InvalidDataFormat 错误。</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-421\">If the field is a text field, an InvalidDataFormat error is returned.</span></span> <span data-ttu-id=\"47123-422\">如果未设置 coercionType, 则结果取决于字段: 如果该字段为 html, 则使用 html;如果该字段为文本, 则使用纯文本。</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-422\">If coercionType is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.</span></span>"
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
    - id: callback
      description: <span data-ttu-id="47123-423">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-423">Optional.</span></span> <span data-ttu-id="47123-424">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-424">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.setSelectedDataAsync_1
  summary: >-
    <span data-ttu-id="47123-425">以异步方式将数据插入到邮件的正文或主题中。</span><span class="sxs-lookup"><span data-stu-id="47123-425">Asynchronously inserts data into the body or subject of a message.</span></span>


    <span data-ttu-id="47123-426">document.setselecteddataasync 方法将指定的字符串插入到项目的主题或正文中的光标位置, 或者, 如果在编辑器中选择了文本, 则会将所选的文本替换为文本。</span><span class="sxs-lookup"><span data-stu-id="47123-426">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="47123-427">如果游标不在 body 或 subject 字段中, 则返回错误。</span><span class="sxs-lookup"><span data-stu-id="47123-427">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="47123-428">插入后, 光标放置在插入内容的末尾。</span><span class="sxs-lookup"><span data-stu-id="47123-428">After insertion, the cursor is placed at the end of the inserted content.</span></span>


    <span data-ttu-id="47123-429">\[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-429">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-430">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-430">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-431">ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="47123-431">ReadWriteItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-432">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-432">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-433">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-433">Appointment Organizer</span></span></td></tr> <tr><td><span data-ttu-id="47123-434">错误</span><span class="sxs-lookup"><span data-stu-id="47123-434">Errors</span></span></td><td><span data-ttu-id="47123-435">InvalidAttachmentId-附件标识符不存在。</span><span class="sxs-lookup"><span data-stu-id="47123-435">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="47123-436">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-436">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.setSelectedDataAsync("Hello World!");

    ```
  name: setSelectedDataAsync(data, callback)
  fullName: setSelectedDataAsync(data, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: <span data-ttu-id="47123-437">要插入的数据。</span><span class="sxs-lookup"><span data-stu-id="47123-437">The data to be inserted.</span></span> <span data-ttu-id="47123-438">数据不得超过 1,000,000 个字符。</span><span class="sxs-lookup"><span data-stu-id="47123-438">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id="47123-439">如果传入了1000000个以上的字符, 则会引发 ArgumentOutOfRange 异常。</span><span class="sxs-lookup"><span data-stu-id="47123-439">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="47123-440">可选。</span><span class="sxs-lookup"><span data-stu-id="47123-440">Optional.</span></span> <span data-ttu-id="47123-441">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="47123-441">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: Outlook_1_7.Office.AppointmentCompose.body
  summary: >-
    <span data-ttu-id="47123-442">获取一个提供用于处理项目正文的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="47123-442">Gets an object that provides methods for manipulating the body of an item.</span></span>


    <span data-ttu-id="47123-443">\[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-443">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-444">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-444">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-445">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-445">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-446">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-446">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-447">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-447">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-448">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-448">

    #### Examples</span></span>


    ```javascript

    // This example gets the body of the item as plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of an object that is passed as the result parameter to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: Outlook_1_7.Office.AppointmentCompose.end
  summary: >-
    <span data-ttu-id="47123-449">获取或设置约会结束的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="47123-449">Gets or sets the date and time that the appointment is to end.</span></span>


    <span data-ttu-id="47123-450">end 属性是一个表示为协调世界时 (UTC) 日期和时间值的 "办公室" 的[Time](xref:Outlook_1_7.Office.Time)对象。</span><span class="sxs-lookup"><span data-stu-id="47123-450">The end property is an [Office.Time](xref:Outlook_1_7.Office.Time) object expressed as a Coordinated Universal Time (UTC) date and time value.</span></span> <span data-ttu-id="47123-451">您可以使用 convertToLocalClientTime 方法将 end 属性值转换为客户端的本地日期和时间。</span><span class="sxs-lookup"><span data-stu-id="47123-451">You can use the convertToLocalClientTime method to convert the end property value to the client's local date and time.</span></span>


    <span data-ttu-id="47123-452">使用 setAsync 方法设置结束时间时, 应使用 convertToUtcClientTime 方法将客户端上的本地时间转换为服务器的 UTC。</span><span class="sxs-lookup"><span data-stu-id="47123-452">When you use the Time.setAsync method to set the end time, you should use the convertToUtcClientTime method to convert the local time on the client to UTC for the server.</span></span>


    <span data-ttu-id="47123-453">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-453">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-454">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-454">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-455">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-455">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-456">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-456">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-457">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-457">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-458">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-458">

    #### Examples</span></span>


    ```javascript

    // The following example sets the end time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var endTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.end.setAsync(endTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("End Time " + result.asyncContext.verb);
        }
    });

    ```
  name: end
  fullName: end
  langs:
  - typeScript
  type: property
  syntax:
    content: 'end: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_7.Office.AppointmentCompose.itemType
  summary: >-
    <span data-ttu-id="47123-459">获取实例表示的项的类型。</span><span class="sxs-lookup"><span data-stu-id="47123-459">Gets the type of item that an instance represents.</span></span>


    <span data-ttu-id="47123-460">itemtype 属性返回一个 itemType 枚举值, 指示 item 对象实例是邮件还是约会。</span><span class="sxs-lookup"><span data-stu-id="47123-460">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>


    <span data-ttu-id="47123-461">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-461">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-462">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-462">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-463">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-463">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-464">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-464">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-465">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-465">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-466">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-466">

    #### Examples</span></span>


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Appointment) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: Outlook_1_7.Office.AppointmentCompose.location
  summary: >-
    <span data-ttu-id="47123-467">获取或设置约会的[地点](xref:Outlook_1_7.Office.Location)。</span><span class="sxs-lookup"><span data-stu-id="47123-467">Gets or sets the [Office.Location](xref:Outlook_1_7.Office.Location) of an appointment.</span></span> <span data-ttu-id="47123-468">location 属性返回一个 location 对象, 该对象提供用于获取和设置约会位置的方法。</span><span class="sxs-lookup"><span data-stu-id="47123-468">The location property returns a Location object that provides methods that are used to get and set the location of the appointment.</span></span>


    <span data-ttu-id="47123-469">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-469">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-470">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-470">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-471">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-471">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-472">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-472">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-473">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-473">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-474">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-474">

    #### Examples</span></span>


    ```javascript

    var userContext = { value : 1 };

    Office.context.mailbox.item.location.getAsync( { context: userContext}, callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var location = asyncResult.value;
    }

    ```
  name: location
  fullName: location
  langs:
  - typeScript
  type: property
  syntax:
    content: 'location: Location;'
    return:
      type:
      - Location
- uid: Outlook_1_7.Office.AppointmentCompose.notificationMessages
  summary: >-
    <span data-ttu-id="47123-475">获取项目的通知邮件。</span><span class="sxs-lookup"><span data-stu-id="47123-475">Gets the notification messages for an item.</span></span>


    <span data-ttu-id="47123-476">\[[API 集: 邮箱 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-476">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-477">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-477">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-478">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-478">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-479">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-479">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-480">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-480">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-481">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-481">

    #### Examples</span></span>


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: Outlook_1_7.Office.AppointmentCompose.optionalAttendees
  summary: >-
    <span data-ttu-id="47123-482">提供对事件的可选与会者的访问权限。</span><span class="sxs-lookup"><span data-stu-id="47123-482">Provides access to the optional attendees of an event.</span></span> <span data-ttu-id="47123-483">对象的类型和访问级别取决于当前项目的模式。</span><span class="sxs-lookup"><span data-stu-id="47123-483">The type of object and level of access depends on the mode of the current item.</span></span> <span data-ttu-id="47123-484">optionalAttendees 属性返回一个[Office. 收件人](xref:Outlook_1_7.Office.Recipients)对象, 该对象提供用于获取或更新会议的可选与会者的方法。</span><span class="sxs-lookup"><span data-stu-id="47123-484">The optionalAttendees property returns an [Office.Recipients](xref:Outlook_1_7.Office.Recipients) object that provides methods to get or update the optional attendees for a meeting.</span></span>


    <span data-ttu-id="47123-485">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-485">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-486">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-486">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-487">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-487">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-488">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-488">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-489">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-489">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-490">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-490">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.optionalAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfOptionalAttendeesRecipients = asyncResult.value;
    }

    ```
  name: optionalAttendees
  fullName: optionalAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'optionalAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_7.Office.AppointmentCompose.organizer
  summary: >-
    <span data-ttu-id="47123-491">获取指定会议的组织者。</span><span class="sxs-lookup"><span data-stu-id="47123-491">Gets the organizer for the specified meeting.</span></span>


    <span data-ttu-id="47123-492">管理器属性返回一个[管理](xref:Outlook_1_7.Office.Organizer)器对象, 该对象提供获取组织者值的方法。</span><span class="sxs-lookup"><span data-stu-id="47123-492">The organizer property returns an [Organizer](xref:Outlook_1_7.Office.Organizer) object that provides a method to get the organizer value.</span></span>


    <span data-ttu-id="47123-493">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-493">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-494">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-494">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-495">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-495">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-496">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-496">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-497">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-497">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-498">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-498">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.organizer.getAsync(
        function(asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: organizer
  fullName: organizer
  langs:
  - typeScript
  type: property
  syntax:
    content: 'organizer: Organizer;'
    return:
      type:
      - Organizer
- uid: Outlook_1_7.Office.AppointmentCompose.recurrence
  summary: >-
    <span data-ttu-id="47123-499">获取或设置约会的定期模式。</span><span class="sxs-lookup"><span data-stu-id="47123-499">Gets or sets the recurrence pattern of an appointment.</span></span>


    <span data-ttu-id="47123-500">如果项目是系列或系列中的实例, 则定期属性将返回定期约会或会议请求的定期对象。</span><span class="sxs-lookup"><span data-stu-id="47123-500">The recurrence property returns a recurrence object for recurring appointments or meetings requests if an item is a series or an instance in a series.</span></span> <span data-ttu-id="47123-501">`null`返回单个约会的单个约会和会议请求。</span><span class="sxs-lookup"><span data-stu-id="47123-501">`null` is returned for single appointments and meeting requests of single appointments.</span></span>


    <span data-ttu-id="47123-502">**注意**: 会议请求的 itemClass 值为 IPM。Schedule. 会议请求。</span><span class="sxs-lookup"><span data-stu-id="47123-502">**Note**: Meeting requests have an itemClass value of IPM.Schedule.Meeting.Request.</span></span>


    <span data-ttu-id="47123-503">**注意**: 如果定期对象为 null, 则表示该对象是单个约会的单个约会或会议请求, 而不是某个系列的一部分。</span><span class="sxs-lookup"><span data-stu-id="47123-503">**Note**: If the recurrence object is null, this indicates that the object is a single appointment or a meeting request of a single appointment and NOT a part of a series.</span></span>


    <span data-ttu-id="47123-504">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-504">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-505">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-505">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-506">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-506">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-507">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-507">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-508">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-508">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-509">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-509">

    #### Examples</span></span>


    ```javascript

    // This example gets the Recurrence object of an appointment item.

    Office.context.mailbox.item.recurrence.getAsync(callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var recurrence = asyncResult.value;
        if (!recurrence) {
            console.log("One-time appointment or meeting");
        } else {
            console.log(JSON.stringify(recurrence));
        }
    }


    // The following example shows the results of the getAsync call that retrieves the recurrence for a series.

    // NOTE: In this example, seriesTimeObject is a placeholder for the JSON representing the

    // recurrence.seriesTime property. You should use the SeriesTime object's methods to get the

    // recurrence date and time properties.

    Recurrence = {
        "recurrenceType": "weekly",
        "recurrenceProperties": {"interval": 2, "days": ["mon","thu","fri"], "firstDayOfWeek": "sun"},
        "seriesTime": {seriesTimeObject},
        "recurrenceTimeZone": {"name": "Pacific Standard Time", "offset": -480}
    }

    ```
  name: recurrence
  fullName: recurrence
  langs:
  - typeScript
  type: property
  syntax:
    content: 'recurrence: Recurrence;'
    return:
      type:
      - Recurrence
- uid: Outlook_1_7.Office.AppointmentCompose.requiredAttendees
  summary: >-
    <span data-ttu-id="47123-510">提供对事件的必需与会者的访问权限。</span><span class="sxs-lookup"><span data-stu-id="47123-510">Provides access to the required attendees of an event.</span></span> <span data-ttu-id="47123-511">对象的类型和访问级别取决于当前项目的模式。</span><span class="sxs-lookup"><span data-stu-id="47123-511">The type of object and level of access depends on the mode of the current item.</span></span> <span data-ttu-id="47123-512">requiredAttendees 属性返回一个[Office. 收件人](xref:Outlook_1_7.Office.Recipients)对象, 该对象提供用于获取或更新会议的必需与会者的方法。</span><span class="sxs-lookup"><span data-stu-id="47123-512">The requiredAttendees property returns an [Office.Recipients](xref:Outlook_1_7.Office.Recipients) object that provides methods to get or update the required attendees for a meeting.</span></span>


    <span data-ttu-id="47123-513">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-513">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-514">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-514">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-515">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-515">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-516">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-516">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-517">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-517">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-518">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-518">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.requiredAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfRequiredAttendeesRecipients = asyncResult.value;
        console.log(JSON.stringify(arrayOfRequiredAttendeesRecipients));
    }

    ```
  name: requiredAttendees
  fullName: requiredAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requiredAttendees: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_7.Office.AppointmentCompose.seriesId
  summary: >-
    <span data-ttu-id="47123-519">获取实例所属的系列的 id。</span><span class="sxs-lookup"><span data-stu-id="47123-519">Gets the id of the series that an instance belongs to.</span></span>


    <span data-ttu-id="47123-520">在 OWA 和 Outlook 中, webcasts&seriesid 返回此项所属的父 (系列) 项的 Exchange Web 服务 (EWS) ID。</span><span class="sxs-lookup"><span data-stu-id="47123-520">In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="47123-521">但是, 在 iOS 和 Android 中, webcasts&seriesid 返回父项的 REST ID。</span><span class="sxs-lookup"><span data-stu-id="47123-521">However, in iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>


    <span data-ttu-id="47123-522">**注意**: webcasts&seriesid 属性返回的标识符与 Exchange Web 服务项目标识符相同。</span><span class="sxs-lookup"><span data-stu-id="47123-522">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="47123-523">webcasts&seriesid 属性与 outlook REST API 使用的 outlook id 不相同。</span><span class="sxs-lookup"><span data-stu-id="47123-523">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="47123-524">使用此值进行 REST API 调用前，应使用 Office.context.mailbox.convertToRestId 对它进行转换。</span><span class="sxs-lookup"><span data-stu-id="47123-524">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="47123-525">有关更多详细信息, 请参阅[使用 outlook 外接程序中的 outlook REST api](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span><span class="sxs-lookup"><span data-stu-id="47123-525">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span></span><!-- --><span data-ttu-id="47123-526">.</span><span class="sxs-lookup"><span data-stu-id="47123-526"></span></span>


    <span data-ttu-id="47123-527">对于不包含父项目 (如单个约会、系列项目或会议请求) 的项目, webcasts&seriesid 属性将返回 null, 并且对于不是会议请求的任何其他项目, 返回 "未定义"。</span><span class="sxs-lookup"><span data-stu-id="47123-527">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>


    <span data-ttu-id="47123-528">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-528">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: "<table> <tr><td>[<span data-ttu-id=\"47123-529\">最低权限级别</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-529\">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id=\"47123-530\">ReadItem</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-530\">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id=\"47123-531\">适用的 Outlook 模式</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-531\">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id=\"47123-532\">约会组织者</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-532\">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id=\"47123-533\">\n####说明</span><span class=\"sxs-lookup\"><span data-stu-id=\"47123-533\">\n#### Examples</span></span>\n\n```javascript\nvar seriesId = Office.context.mailbox.item.seriesId;\n\n// The seriesId property returns null for items that do\n// not have parent items (such as single appointments,\n// series items, or meeting requests) and returns\n// undefined for messages that are not meeting requests.\nvar isSeriesInstance = (seriesId != null);\nconsole.log(\"SeriesId is \" + seriesId \n    + \" and isSeriesInstance is \" + isSeriesInstance);\n```"
  name: seriesId
  fullName: seriesId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesId: string;'
    return:
      type:
      - string
- uid: Outlook_1_7.Office.AppointmentCompose.start
  summary: >-
    <span data-ttu-id="47123-534">获取或设置约会开始的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="47123-534">Gets or sets the date and time that the appointment is to begin.</span></span>


    <span data-ttu-id="47123-535">start 属性是一个表示为协调世界时 (UTC) 日期和时间值的 "办公室" 的[Time](xref:Outlook_1_7.Office.Time)对象。</span><span class="sxs-lookup"><span data-stu-id="47123-535">The start property is an [Office.Time](xref:Outlook_1_7.Office.Time) object expressed as a Coordinated Universal Time (UTC) date and time value.</span></span> <span data-ttu-id="47123-536">您可以使用 convertToLocalClientTime 方法将值转换为客户端的本地日期和时间。</span><span class="sxs-lookup"><span data-stu-id="47123-536">You can use the convertToLocalClientTime method to convert the value to the client's local date and time.</span></span>


    <span data-ttu-id="47123-537">当您使用 setAsync 方法来设置开始时间时, 应使用 convertToUtcClientTime 方法将客户端上的本地时间转换为服务器的 UTC。</span><span class="sxs-lookup"><span data-stu-id="47123-537">When you use the Time.setAsync method to set the start time, you should use the convertToUtcClientTime method to convert the local time on the client to UTC for the server.</span></span>


    <span data-ttu-id="47123-538">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-538">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-539">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-539">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-540">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-540">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-541">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-541">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-542">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-542">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-543">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-543">

    #### Examples</span></span>


    ```javascript

    // The following example sets the start time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var startTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("Start Time " + result.asyncContext.verb);
        }
    });

    ```
  name: start
  fullName: start
  langs:
  - typeScript
  type: property
  syntax:
    content: 'start: Time;'
    return:
      type:
      - Time
- uid: Outlook_1_7.Office.AppointmentCompose.subject
  summary: >-
    <span data-ttu-id="47123-544">获取或设置显示在项目的主题字段中的说明。</span><span class="sxs-lookup"><span data-stu-id="47123-544">Gets or sets the description that appears in the subject field of an item.</span></span>


    <span data-ttu-id="47123-545">subject 属性获取或设置由电子邮件服务器发送的项目的整个主题。</span><span class="sxs-lookup"><span data-stu-id="47123-545">The subject property gets or sets the entire subject of the item, as sent by the email server.</span></span>


    <span data-ttu-id="47123-546">subject 属性返回一个 subject 对象, 该对象提供用于获取和设置主题的方法。</span><span class="sxs-lookup"><span data-stu-id="47123-546">The subject property returns a Subject object that provides methods to get and set the subject.</span></span>


    <span data-ttu-id="47123-547">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="47123-547">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="47123-548">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="47123-548">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="47123-549">ReadItem</span><span class="sxs-lookup"><span data-stu-id="47123-549">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="47123-550">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="47123-550">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="47123-551">约会组织者</span><span class="sxs-lookup"><span data-stu-id="47123-551">Appointment Organizer</span></span></td></tr> </table><span data-ttu-id="47123-552">

    ####说明</span><span class="sxs-lookup"><span data-stu-id="47123-552">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.subject.getAsync(callback);


    function callback(asyncResult) {
        var subject = asyncResult.value;
    }

    ```
  name: subject
  fullName: subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
