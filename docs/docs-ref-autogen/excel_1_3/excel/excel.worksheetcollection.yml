### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorksheetCollection
    summary: |-
      <span data-ttu-id="39b10-101">表示属于工作簿的 worksheet 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="39b10-101">Represents a collection of worksheet objects that are part of the workbook.</span></span>

      <span data-ttu-id="39b10-102">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39b10-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorksheetCollection
    fullName: Excel.WorksheetCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.WorksheetCollection.add
      - excel.Excel.WorksheetCollection.context
      - excel.Excel.WorksheetCollection.getActiveWorksheet
      - excel.Excel.WorksheetCollection.getItem
      - excel.Excel.WorksheetCollection.items
      - excel.Excel.WorksheetCollection.load
      - excel.Excel.WorksheetCollection.load_1
      - excel.Excel.WorksheetCollection.load_2
      - excel.Excel.WorksheetCollection.toJSON
  - uid: excel.Excel.WorksheetCollection.add
    summary: |-
      <span data-ttu-id="39b10-p101">向工作簿添加新工作表。工作表将添加到现有工作表的末尾。如果您想要激活新添加的工作表，请对其调用 ".activate()。</span><span class="sxs-lookup"><span data-stu-id="39b10-p101">Adds a new worksheet to the workbook. The worksheet will be added at the end of existing worksheets. If you wish to activate the newly added worksheet, call ".activate() on it.</span></span>

      <span data-ttu-id="39b10-106">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39b10-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name?: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="39b10-107">示例</span><span class="sxs-lookup"><span data-stu-id="39b10-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var wSheetName = 'Sample Name';
              var worksheet = ctx.workbook.worksheets.add(wSheetName);
              worksheet.load('name');
              return ctx.sync().then(function() {
                  console.log(worksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: '<span data-ttu-id="39b10-p102">可选。要添加的工作表的名称。如果指定，名称应唯一。如果未指定，Excel 将确定新工作表的名称。</span><span class="sxs-lookup"><span data-stu-id="39b10-p102">Optional. The name of the worksheet to be added. If specified, name should be unqiue. If not specified, Excel determines the name of the new worksheet.</span></span>'
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.context
    summary: <span data-ttu-id="39b10-112">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="39b10-112">The request context associated with the object.</span></span> <span data-ttu-id="39b10-113">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="39b10-113">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.WorksheetCollection.getActiveWorksheet
    summary: |-
      <span data-ttu-id="39b10-114">获取工作簿中当前处于活动状态的工作表。</span><span class="sxs-lookup"><span data-stu-id="39b10-114">Gets the currently active worksheet in the workbook.</span></span>

      <span data-ttu-id="39b10-115">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39b10-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getActiveWorksheet()
    fullName: getActiveWorksheet()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveWorksheet(): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: |-


          #### <a name="examples"></a><span data-ttu-id="39b10-116">示例</span><span class="sxs-lookup"><span data-stu-id="39b10-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {  
              var activeWorksheet = ctx.workbook.worksheets.getActiveWorksheet();
              activeWorksheet.load('name');
              return ctx.sync().then(function() {
                      console.log(activeWorksheet.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.WorksheetCollection.getItem
    summary: |-
      <span data-ttu-id="39b10-117">按 Worksheet 对象的名称或 ID 获取此对象。</span><span class="sxs-lookup"><span data-stu-id="39b10-117">Gets a worksheet object using its Name or ID.</span></span>

      <span data-ttu-id="39b10-118">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="39b10-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="39b10-119">工作表的名称或 ID。</span><span class="sxs-lookup"><span data-stu-id="39b10-119">The Name or ID of the worksheet.</span></span>
          type:
            - string
  - uid: excel.Excel.WorksheetCollection.items
    summary: <span data-ttu-id="39b10-120">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="39b10-120">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Worksheet[];'
      return:
        type:
          - 'Excel.Worksheet[]'
  - uid: excel.Excel.WorksheetCollection.load
    summary: <span data-ttu-id="39b10-121">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="39b10-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="39b10-122">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="39b10-122">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="39b10-123">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="39b10-123">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="39b10-124">`load(option?: string | string[]): Excel.WorksheetCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="39b10-124">`load(option?: string | string[]): Excel.WorksheetCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="39b10-125">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="39b10-125">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="39b10-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="39b10-126">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetCollection` - Only available on collection types.</span></span> <span data-ttu-id="39b10-127">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="39b10-127">It is similar to the preceding signature.</span></span> <span data-ttu-id="39b10-128">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="39b10-128">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="39b10-129">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="39b10-129">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="39b10-130">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="39b10-130">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.WorksheetCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.WorksheetCollection.load_1
    summary: '<span data-ttu-id="39b10-131">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="39b10-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="39b10-132">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="39b10-132">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="39b10-133">示例</span><span class="sxs-lookup"><span data-stu-id="39b10-133">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var worksheets = ctx.workbook.worksheets;
              worksheets.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < worksheets.items.length; i++)
                  {
                      console.log(worksheets.items[i].name);
                      console.log(worksheets.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="39b10-134">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="39b10-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.WorksheetCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.WorksheetCollection.toJSON
    summary: '<span data-ttu-id="39b10-135">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="39b10-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="39b10-136">.</span><span class="sxs-lookup"><span data-stu-id="39b10-136"></span></span> <span data-ttu-id="39b10-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="39b10-137"></span></span><!-- --><span data-ttu-id="39b10-138">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.WorksheetCollection`对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.WorksheetCollectionData`</span><span class="sxs-lookup"><span data-stu-id="39b10-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.WorksheetCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetCollectionData`</span></span><!-- --><span data-ttu-id="39b10-139">), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="39b10-139">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetCollectionData
        description: ''