### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeBorderCollection:class'
    summary: |-
      <span data-ttu-id="62be0-101">表示构成区域边框的 Border 对象。</span><span class="sxs-lookup"><span data-stu-id="62be0-101">Represents the border objects that make up the range border.</span></span>

      <span data-ttu-id="62be0-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="62be0-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.RangeBorderCollection
    fullName: Excel.RangeBorderCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeBorderCollection#context:member'
      - 'excel!Excel.RangeBorderCollection#count:member'
      - 'excel!Excel.RangeBorderCollection#getItem:member(1)'
      - 'excel!Excel.RangeBorderCollection#getItem:member(2)'
      - 'excel!Excel.RangeBorderCollection#getItemAt:member(1)'
      - 'excel!Excel.RangeBorderCollection#items:member'
      - 'excel!Excel.RangeBorderCollection#load:member(1)'
      - 'excel!Excel.RangeBorderCollection#load:member(2)'
      - 'excel!Excel.RangeBorderCollection#load:member(3)'
      - 'excel!Excel.RangeBorderCollection#toJSON:member(1)'
  - uid: 'excel!Excel.RangeBorderCollection#context:member'
    summary: <span data-ttu-id="62be0-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="62be0-103">The request context associated with the object.</span></span> <span data-ttu-id="62be0-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="62be0-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeBorderCollection#count:member'
    summary: |-
      <span data-ttu-id="62be0-105">集合中的 border 对象数量。</span><span class="sxs-lookup"><span data-stu-id="62be0-105">Number of border objects in the collection.</span></span> <span data-ttu-id="62be0-106">只读。</span><span class="sxs-lookup"><span data-stu-id="62be0-106">Read-only.</span></span>

      <span data-ttu-id="62be0-107">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="62be0-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeBorderCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="62be0-108">使用其名称获取 border 对象</span><span class="sxs-lookup"><span data-stu-id="62be0-108">Gets a border object using its name.</span></span>

      <span data-ttu-id="62be0-109">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="62be0-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: Excel.BorderIndex): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="62be0-110">示例</span><span class="sxs-lookup"><span data-stu-id="62be0-110">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borderName = 'EdgeTop';
              var border = range.format.borders.getItem(borderName);
              border.load('style');
              return ctx.sync().then(function() {
                      console.log(border.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="62be0-111">要检索的 border 对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="62be0-111">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="62be0-112">有关详细信息，请参阅 BorderIndex。</span><span class="sxs-lookup"><span data-stu-id="62be0-112">See Excel.BorderIndex for details.</span></span>
          type:
            - 'excel!Excel.BorderIndex:enum'
  - uid: 'excel!Excel.RangeBorderCollection#getItem:member(2)'
    summary: |-
      <span data-ttu-id="62be0-113">使用其名称获取 border 对象</span><span class="sxs-lookup"><span data-stu-id="62be0-113">Gets a border object using its name.</span></span>

      <span data-ttu-id="62be0-114">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="62be0-114">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(indexString)
    fullName: getItem(indexString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(indexString: "EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: ''
      parameters:
        - id: indexString
          description: <span data-ttu-id="62be0-115">要检索的 border 对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="62be0-115">Index value of the border object to be retrieved.</span></span> <span data-ttu-id="62be0-116">有关详细信息，请参阅 BorderIndex。</span><span class="sxs-lookup"><span data-stu-id="62be0-116">See Excel.BorderIndex for details.</span></span>
          type:
            - '"EdgeTop" | "EdgeBottom" | "EdgeLeft" | "EdgeRight" | "InsideVertical" | "InsideHorizontal" | "DiagonalDown" | "DiagonalUp"'
  - uid: 'excel!Excel.RangeBorderCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="62be0-117">使用其索引获取 border 对象</span><span class="sxs-lookup"><span data-stu-id="62be0-117">Gets a border object using its index.</span></span>

      <span data-ttu-id="62be0-118">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="62be0-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.RangeBorder;'
      return:
        type:
          - 'excel!Excel.RangeBorder:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="62be0-119">示例</span><span class="sxs-lookup"><span data-stu-id="62be0-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var border = range.format.borders.getItemAt(0);
              border.load('sideIndex');
              return ctx.sync().then(function() {
                  console.log(border.sideIndex);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="62be0-120">要检索的对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="62be0-120">Index value of the object to be retrieved.</span></span> <span data-ttu-id="62be0-121">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="62be0-121">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.RangeBorderCollection#items:member'
    summary: <span data-ttu-id="62be0-122">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="62be0-122">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.RangeBorder[];'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection#items~0:complex'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(1)'
    summary: <span data-ttu-id="62be0-123">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="62be0-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="62be0-124">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="62be0-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="62be0-125">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="62be0-125">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.RangeBorderCollection#load~0:complex'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(2)'
    summary: <span data-ttu-id="62be0-126">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="62be0-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="62be0-127">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="62be0-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="62be0-128">示例</span><span class="sxs-lookup"><span data-stu-id="62be0-128">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var borders = range.format.borders;
              border.load('items');
              return ctx.sync().then(function() {
                  console.log(borders.count);
                  for (var i = 0; i < borders.items.length; i++)
                  {
                      console.log(borders.items[i].sideIndex);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "A1:F8";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="62be0-129">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="62be0-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeBorderCollection#load:member(3)'
    summary: <span data-ttu-id="62be0-130">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="62be0-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="62be0-131">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="62be0-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.RangeBorderCollection;'
      return:
        type:
          - 'excel!Excel.RangeBorderCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="62be0-132">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="62be0-132">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.RangeBorderCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="62be0-133">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="62be0-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="62be0-134">.</span><span class="sxs-lookup"><span data-stu-id="62be0-134"></span></span> <span data-ttu-id="62be0-135">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="62be0-135"></span></span><!-- --><span data-ttu-id="62be0-136">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.RangeBorderCollection`对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.RangeBorderCollectionData`</span><span class="sxs-lookup"><span data-stu-id="62be0-136">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.RangeBorderCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeBorderCollectionData`</span></span><!-- --><span data-ttu-id="62be0-137">），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="62be0-137">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeBorderCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RangeBorderCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeBorder:class'
    name: Excel.RangeBorder
  - uid: 'excel!Excel.BorderIndex:enum'
    name: Excel.BorderIndex
  - uid: 'excel!Excel.RangeBorderCollection#items~0:complex'
    name: 'Excel.RangeBorder[]'
    fullName: 'Excel.RangeBorder[]'
    spec.typeScript:
      - uid: 'excel!Excel.RangeBorder:class'
        name: Excel.RangeBorder
        fullName: Excel.RangeBorder
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.RangeBorderCollection:class'
    name: Excel.RangeBorderCollection
  - uid: 'excel!Excel.RangeBorderCollection#load~0:complex'
    name: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.RangeBorderCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.RangeBorderCollectionLoadOptions:interface'
        name: Excel.Interfaces.RangeBorderCollectionLoadOptions
        fullName: Excel.Interfaces.RangeBorderCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.RangeBorderCollectionData:interface'
    name: Excel.Interfaces.RangeBorderCollectionData