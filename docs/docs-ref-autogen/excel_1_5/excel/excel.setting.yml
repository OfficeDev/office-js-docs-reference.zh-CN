### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Setting:class'
    summary: |-
      <span data-ttu-id="1bf72-101">Setting 表示保存在文档中的设置的键值对（每个加载项每个文件）。</span><span class="sxs-lookup"><span data-stu-id="1bf72-101">Setting represents a key-value pair of a setting persisted to the document (per file per add-in).</span></span> <span data-ttu-id="1bf72-102">这些自定义键值对可用于存储内容或任务窗格外接程序所需的状态或生命周期信息。</span><span class="sxs-lookup"><span data-stu-id="1bf72-102">These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in.</span></span> <span data-ttu-id="1bf72-103">请注意，设置在文档中保持不变，因此不是存储任何敏感或受保护的信息（如用户信息和密码）的地方。</span><span class="sxs-lookup"><span data-stu-id="1bf72-103">Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.</span></span>

      <span data-ttu-id="1bf72-104">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bf72-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Setting
    fullName: Excel.Setting
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Setting#context:member'
      - 'excel!Excel.Setting#delete:member(1)'
      - 'excel!Excel.Setting#key:member'
      - 'excel!Excel.Setting#load:member(1)'
      - 'excel!Excel.Setting#load:member(2)'
      - 'excel!Excel.Setting#load:member(3)'
      - 'excel!Excel.Setting#set:member(1)'
      - 'excel!Excel.Setting#set:member(2)'
      - 'excel!Excel.Setting#toJSON:member(1)'
      - 'excel!Excel.Setting#value:member'
  - uid: 'excel!Excel.Setting#context:member'
    summary: <span data-ttu-id="1bf72-105">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="1bf72-105">The request context associated with the object.</span></span> <span data-ttu-id="1bf72-106">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="1bf72-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Setting#delete:member(1)'
    summary: |-
      <span data-ttu-id="1bf72-107">删除 Setting 对象。</span><span class="sxs-lookup"><span data-stu-id="1bf72-107">Deletes the setting.</span></span>

      <span data-ttu-id="1bf72-108">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bf72-108">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1bf72-109">示例</span><span class="sxs-lookup"><span data-stu-id="1bf72-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Setting#key:member'
    summary: |-
      <span data-ttu-id="1bf72-110">返回表示 setting 对象的 ID 的键。</span><span class="sxs-lookup"><span data-stu-id="1bf72-110">Returns the key that represents the id of the Setting.</span></span> <span data-ttu-id="1bf72-111">只读。</span><span class="sxs-lookup"><span data-stu-id="1bf72-111">Read-only.</span></span>

      <span data-ttu-id="1bf72-112">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bf72-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Setting#load:member(1)'
    summary: <span data-ttu-id="1bf72-113">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="1bf72-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1bf72-114">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="1bf72-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SettingLoadOptions): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="1bf72-115">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="1bf72-115">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.SettingLoadOptions:interface'
  - uid: 'excel!Excel.Setting#load:member(2)'
    summary: <span data-ttu-id="1bf72-116">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="1bf72-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1bf72-117">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="1bf72-117">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="1bf72-118">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="1bf72-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Setting#load:member(3)'
    summary: <span data-ttu-id="1bf72-119">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="1bf72-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1bf72-120">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="1bf72-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Setting;
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="1bf72-121">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="1bf72-121">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Setting#set:member(1)'
    summary: '<span data-ttu-id="1bf72-122">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="1bf72-122">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1bf72-123">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="1bf72-123">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="1bf72-124">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="1bf72-124">This method has the following additional signature:</span></span>

      `set(properties: Excel.Setting): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SettingUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="1bf72-125">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="1bf72-125">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'excel!Excel.Interfaces.SettingUpdateData:interface'
        - id: options
          description: <span data-ttu-id="1bf72-126">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="1bf72-126">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Setting#set:member(2)'
    summary: '<span data-ttu-id="1bf72-127">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="1bf72-127">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Setting): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Setting:class'
  - uid: 'excel!Excel.Setting#toJSON:member(1)'
    summary: '<span data-ttu-id="1bf72-128">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1bf72-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1bf72-129">.</span><span class="sxs-lookup"><span data-stu-id="1bf72-129"></span></span> <span data-ttu-id="1bf72-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1bf72-130"></span></span><!-- --><span data-ttu-id="1bf72-131">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel. 设置对象是一个 API 对象，但`toJSON`该方法返回一个简单的 JavaScript 对象（类型为`Excel.Interfaces.SettingData`</span><span class="sxs-lookup"><span data-stu-id="1bf72-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Setting object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingData`</span></span><!-- --><span data-ttu-id="1bf72-132">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="1bf72-132">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SettingData:interface'
        description: ''
  - uid: 'excel!Excel.Setting#value:member'
    summary: |-
      <span data-ttu-id="1bf72-133">表示为此设置存储的值。</span><span class="sxs-lookup"><span data-stu-id="1bf72-133">Represents the value stored for this setting.</span></span>

      <span data-ttu-id="1bf72-134">\[[API 集： ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bf72-134">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: any;'
      return:
        type:
          - any
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Setting:class'
    name: Excel.Setting
  - uid: 'excel!Excel.Interfaces.SettingLoadOptions:interface'
    name: Excel.Interfaces.SettingLoadOptions
  - uid: 'excel!Excel.Interfaces.SettingUpdateData:interface'
    name: Interfaces.SettingUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.SettingData:interface'
    name: Excel.Interfaces.SettingData