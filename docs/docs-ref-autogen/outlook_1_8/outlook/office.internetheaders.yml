### YamlMime:TSType
name: Office.InternetHeaders
uid: outlook!Office.InternetHeaders:interface
package: outlook!
fullName: Office.InternetHeaders
summary: >-
  `InternetHeaders`对象表示在邮件项目离开 Exchange 并转换为 MIME 邮件后保留的自定义 internet 标头。 这些标头存储为 MIME 邮件中的 x 标头。


  Internet 标头以项/值对的形式存储在每个项的基础上。


  **注意**：此对象用于设置和获取邮件项目的自定义标头。


  \[[API 集：邮箱 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **建议的做法**


  目前，internet 邮件头是用户邮箱的有限资源。 当配额耗尽时，您不能在该邮箱上创建更多的 internet 标头，这可能导致依赖于此的客户端的意外行为能够正常运行。


  在外接程序中创建 internet 邮件头时，请应用以下准则。


  - 创建所需的最小标头数。


  - 名称标头，以便以后可以重复使用和更新其值。 因此，请避免以变量方式命名标头 (例如，基于用户输入、时间戳等 ) 。


  **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**：`ReadItem`


  **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**：撰写
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getAsync(names, options, callback)
  uid: outlook!Office.InternetHeaders#getAsync:member(1)
  package: outlook!
  fullName: getAsync(names, options, callback)
  summary: >-
    已知 internet 标头名称的数组，此方法将返回包含这些 internet 标头及其值的字典。 如果外接程序请求的 x 标头不可用，则结果中不会返回该 x 标头。


    **注意**：此方法用于返回使用方法设置的自定义标头的值 `setAsync` 。


    \[[API 集：邮箱 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**：`ReadItem`


    **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**：撰写


    #### <a name="examples"></a>示例


    ```javascript

    Office.context.mailbox.item.internetHeaders.getAsync(["header1", "header2"], callback);


    function callback(asyncResult) {
        var dictionary = asyncResult.value;
        var header1_value = dictionary["header1"];
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(names: string[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<InternetHeaders>) => void): void;'
    parameters:
    - id: names
      description: 要返回的 internet 标头的名称。
      type: string[]
    - id: options
      description: 可选。 一个包含以下一个或多个属性的对象文字： `asyncContext`<!-- -->：开发人员可以在回调方法中提供希望访问的任何对象。
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: 可选。 方法完成后， `callback` 使用单个参数调用在参数中传递的函数。 `asyncResult`<!-- -->，它是一个 `Office.AsyncResult` 对象。
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.InternetHeaders:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: removeAsync(names, options, callback)
  uid: outlook!Office.InternetHeaders#removeAsync:member(1)
  package: outlook!
  fullName: removeAsync(names, options, callback)
  summary: >-
    已知 internet 标头名称的数组，此方法将从 internet 头集合中移除指定的标头。


    **注意**：此方法用于删除使用方法设置的自定义标头 `setAsync` 。


    \[[API 集：邮箱 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**：`ReadWriteItem`


    **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**：撰写


    #### <a name="examples"></a>示例


    ```javascript

    Office.context.mailbox.item.internetHeaders.removeAsync(["header1", "header2"]);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeAsync(names: string[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<InternetHeaders>) => void): void;'
    parameters:
    - id: names
      description: 要删除的 internet 标头的名称。
      type: string[]
    - id: options
      description: 可选。 一个包含以下一个或多个属性的对象文字： `asyncContext`<!-- -->：开发人员可以在回调方法中提供希望访问的任何对象。
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: 可选。 方法完成后， `callback` 使用单个参数调用在参数中传递的函数。 `asyncResult`<!-- -->，它是一个 `Office.AsyncResult` 对象。
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.InternetHeaders:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(headers, options, callback)
  uid: outlook!Office.InternetHeaders#setAsync:member(1)
  package: outlook!
  fullName: setAsync(headers, options, callback)
  summary: >-
    将指定的 internet 标头设置为指定的值。


    `setAsync`如果指定的标头尚不存在，则该方法将创建一个新的标头; 否则，现有值将替换为新值。


    **注意**：此方法用于设置自定义标头的值。


    \[[API 集：邮箱 1.8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**：`ReadWriteItem`


    **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**：撰写


    #### <a name="examples"></a>示例


    ```javascript

    Office.context.mailbox.item.internetHeaders.setAsync({"header1": "value1", "header2": "value2"});

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAsync(headers: Object, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: headers
      description: 要设置的标头的名称和相应的值。 应为字典对象，其中的键为 internet 标头的名称，值为 internet 标头的值。
      type: Object
    - id: options
      description: 可选。 包含一个或多个以下属性的对象文本。 `asyncContext`<!-- -->：开发人员可以在回调方法中提供希望访问的任何对象。
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: 可选。 方法完成后， `callback` 使用类型为 AsyncResult 的单个参数调用在参数中传递的函数。 `asyncResult.error` 属性中将提供遇到的所有错误。
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: c26c15caa645c162148936a6906c64a22903a0b7
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49328772"
