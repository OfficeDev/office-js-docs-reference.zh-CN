### YamlMime:UniversalReference
items:
  - uid: outlook.Office.MessageRead
    summary: |-
      <span data-ttu-id="7265e-101">Office 的邮件读取模式: "[邮箱](xref:outlook.Office.Item)"。</span><span class="sxs-lookup"><span data-stu-id="7265e-101">The message read mode of [Office.context.mailbox.item](xref:outlook.Office.Item)</span></span><!-- --><span data-ttu-id="7265e-102">.</span><span class="sxs-lookup"><span data-stu-id="7265e-102"></span></span>

      <span data-ttu-id="7265e-103">**重要说明**: 这是一个内部 Outlook 对象, 而不是直接通过现有接口公开。</span><span class="sxs-lookup"><span data-stu-id="7265e-103">**Important**: This is an internal Outlook object, not directly exposed through existing interfaces.</span></span> <span data-ttu-id="7265e-104">应将其视为 "context.subname" 模式。</span><span class="sxs-lookup"><span data-stu-id="7265e-104">You should treat this as a mode of Office.context.mailbox.item.</span></span> <span data-ttu-id="7265e-105">有关详细信息, 请参阅[对象模型](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/preview-requirement-set/office.context.mailbox.item)页。</span><span class="sxs-lookup"><span data-stu-id="7265e-105">Refer to the [Object Model](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/preview-requirement-set/office.context.mailbox.item) page for more information.</span></span>
    name: Office.MessageRead
    fullName: Office.MessageRead
    langs:
      - typeScript
    type: interface
    extends:
      - Message
      - 'ItemRead '
    package: outlook
    children:
      - outlook.Office.MessageRead.addHandlerAsync
      - outlook.Office.MessageRead.addHandlerAsync_1
      - outlook.Office.MessageRead.displayReplyAllForm
      - outlook.Office.MessageRead.displayReplyForm
      - outlook.Office.MessageRead.getEntities
      - outlook.Office.MessageRead.getEntitiesByType
      - outlook.Office.MessageRead.getFilteredEntitiesByName
      - outlook.Office.MessageRead.getInitializationContextAsync
      - outlook.Office.MessageRead.getInitializationContextAsync_1
      - outlook.Office.MessageRead.getRegExMatches
      - outlook.Office.MessageRead.getRegExMatchesByName
      - outlook.Office.MessageRead.getSelectedEntities
      - outlook.Office.MessageRead.getSelectedRegExMatches
      - outlook.Office.MessageRead.loadCustomPropertiesAsync
      - outlook.Office.MessageRead.removeHandlerAsync
      - outlook.Office.MessageRead.removeHandlerAsync_1
      - outlook.Office.MessageRead.attachments
      - outlook.Office.MessageRead.body
      - outlook.Office.MessageRead.categories
      - outlook.Office.MessageRead.cc
      - outlook.Office.MessageRead.conversationId
      - outlook.Office.MessageRead.dateTimeCreated
      - outlook.Office.MessageRead.dateTimeModified
      - outlook.Office.MessageRead.from
      - outlook.Office.MessageRead.internetHeaders
      - outlook.Office.MessageRead.internetMessageId
      - outlook.Office.MessageRead.itemClass
      - outlook.Office.MessageRead.itemId
      - outlook.Office.MessageRead.itemType
      - outlook.Office.MessageRead.normalizedSubject
      - outlook.Office.MessageRead.notificationMessages
      - outlook.Office.MessageRead.recurrence
      - outlook.Office.MessageRead.sender
      - outlook.Office.MessageRead.seriesId
      - outlook.Office.MessageRead.subject
      - outlook.Office.MessageRead.to
  - uid: outlook.Office.MessageRead.addHandlerAsync
    summary: |-
      <span data-ttu-id="7265e-106">添加支持事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7265e-106">Adds an event handler for a supported event.</span></span>

      <span data-ttu-id="7265e-107">目前, 受支持的事件类型是`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-107">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="7265e-108">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-108"></span></span><!-- --><span data-ttu-id="7265e-109">, 并`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-109">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="7265e-110">.</span><span class="sxs-lookup"><span data-stu-id="7265e-110"></span></span> <span data-ttu-id="7265e-111">在 "预览`Office.EventType.AttachmentsChanged` " `Office.EventType.EnhancedLocationsChanged`中, 也支持。</span><span class="sxs-lookup"><span data-stu-id="7265e-111">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="7265e-112">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-112">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="7265e-113">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-113">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-114">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-114">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-115">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-115">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-116">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-116">Message Read</span></span></td></tr> </table>'
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="7265e-117">应调用处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="7265e-117">The event that should invoke the handler.</span></span>
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="7265e-118">用于处理事件的函数。</span><span class="sxs-lookup"><span data-stu-id="7265e-118">The function to handle the event.</span></span> <span data-ttu-id="7265e-119">此函数必须接受一个参数，即对象文本。</span><span class="sxs-lookup"><span data-stu-id="7265e-119">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="7265e-120">参数的 type 属性将与传递给 addHandlerAsync 的事件类型参数相匹配。</span><span class="sxs-lookup"><span data-stu-id="7265e-120">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="7265e-121">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-121">Optional.</span></span> <span data-ttu-id="7265e-122">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="7265e-122">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="7265e-123">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-123">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="7265e-124">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-124">Optional.</span></span> <span data-ttu-id="7265e-125">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7265e-125">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageRead.addHandlerAsync_1
    summary: |-
      <span data-ttu-id="7265e-126">添加支持事件的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7265e-126">Adds an event handler for a supported event.</span></span>

      <span data-ttu-id="7265e-127">目前, 受支持的事件类型是`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-127">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="7265e-128">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-128"></span></span><!-- --><span data-ttu-id="7265e-129">, 并`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-129">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="7265e-130">.</span><span class="sxs-lookup"><span data-stu-id="7265e-130"></span></span> <span data-ttu-id="7265e-131">在 "预览`Office.EventType.AttachmentsChanged` " `Office.EventType.EnhancedLocationsChanged`中, 也支持。</span><span class="sxs-lookup"><span data-stu-id="7265e-131">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="7265e-132">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-132">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="7265e-133">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-133">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-134">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-134">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-135">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-135">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-136">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-136">Message Read</span></span></td></tr> </table>'
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="7265e-137">应调用处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="7265e-137">The event that should invoke the handler.</span></span>
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="7265e-138">用于处理事件的函数。</span><span class="sxs-lookup"><span data-stu-id="7265e-138">The function to handle the event.</span></span> <span data-ttu-id="7265e-139">此函数必须接受一个参数，即对象文本。</span><span class="sxs-lookup"><span data-stu-id="7265e-139">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="7265e-140">参数的 type 属性将与传递给 addHandlerAsync 的事件类型参数相匹配。</span><span class="sxs-lookup"><span data-stu-id="7265e-140">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="7265e-141">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-141">Optional.</span></span> <span data-ttu-id="7265e-142">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7265e-142">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageRead.displayReplyAllForm
    summary: |-
      <span data-ttu-id="7265e-143">显示答复窗体，其中包括所选邮件的发件人和所有收件人或所选约会的组织者和所有与会者。</span><span class="sxs-lookup"><span data-stu-id="7265e-143">Displays a reply form that includes the sender and all recipients of the selected message or the organizer and all attendees of the selected appointment.</span></span>

      <span data-ttu-id="7265e-144">在 Outlook Web App 中，答复窗体显示为包含 3 列视图的弹出式窗体以及包含 2 列或 1 列视图的弹出式窗体。</span><span class="sxs-lookup"><span data-stu-id="7265e-144">In Outlook Web App, the reply form is displayed as a pop-out form in the 3-column view and a pop-up form in the 2- or 1-column view.</span></span>

      <span data-ttu-id="7265e-145">如果任何字符串参数超出其限制, displayReplyAllForm 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7265e-145">If any of the string parameters exceed their limits, displayReplyAllForm throws an exception.</span></span>

      <span data-ttu-id="7265e-146">当附件在 formData 参数中指定时, outlook 和 outlook Web App 尝试下载所有附件并将其附加到答复窗体。</span><span class="sxs-lookup"><span data-stu-id="7265e-146">When attachments are specified in the formData.attachments parameter, Outlook and Outlook Web App attempt to download all attachments and attach them to the reply form.</span></span> <span data-ttu-id="7265e-147">如果无法添加任何附件，则在窗体 UI 中显示错误。</span><span class="sxs-lookup"><span data-stu-id="7265e-147">If any attachments fail to be added, an error is shown in the form UI.</span></span> <span data-ttu-id="7265e-148">如果这不可能，则不引发错误消息。</span><span class="sxs-lookup"><span data-stu-id="7265e-148">If this isn't possible, then no error message is thrown.</span></span>

      <span data-ttu-id="7265e-149">**注意**: outlook for iOS 或 outlook for Android 中不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-149">**Note**: This method is not supported in Outlook for iOS or Outlook for Android.</span></span>

      <span data-ttu-id="7265e-150">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-150">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-151">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-151">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-152">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-152">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-153">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-153">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-154">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-154">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-155">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-155">
      #### Examples</span></span>

      ```javascript
      // The following code passes a string to the `displayReplyAllForm` function.
      Office.context.mailbox.item.displayReplyAllForm('hello there');
      Office.context.mailbox.item.displayReplyAllForm('<b>hello there</b>');

      // Reply with an empty body.
      Office.context.mailbox.item.displayReplyAllForm({});

      // Reply with just a body.
      Office.context.mailbox.item.displayReplyAllForm(
      {
      'htmlBody' : 'hi'
      });

      // Reply with a body and a file attachment.
      Office.context.mailbox.item.displayReplyAllForm(
      {
          'htmlBody' : 'hi',
          'attachments' :
          [
              {
              'type' : Office.MailboxEnums.AttachmentType.File,
              'name' : 'squirrel.png',
              'url' : 'http://i.imgur.com/sRgTlGR.jpg'
              }
          ]
      });

      // Reply with a body and an item attachment.
      Office.context.mailbox.item.displayReplyAllForm(
      {
          'htmlBody' : 'hi',
          'attachments' :
          [
              {
              'type' : 'item',
              'name' : 'rand',
              'itemId' : Office.context.mailbox.item.itemId
              }
          ]
      });

      // Reply with a body, file attachment, item attachment, and a callback.
      Office.context.mailbox.item.displayReplyAllForm(
      {
          'htmlBody' : 'hi',
          'attachments' :
          [
              {
                  'type' : Office.MailboxEnums.AttachmentType.File,
                  'name' : 'squirrel.png',
                  'url' : 'http://i.imgur.com/sRgTlGR.jpg'
              },
              {
                  'type' : 'item',
                  'name' : 'rand',
                  'itemId' : Office.context.mailbox.item.itemId
              }
          ],
          'callback' : function(asyncResult)
          {
              console.log(asyncResult.value);
          }
      });
      ```
    name: 'displayReplyAllForm(formData, callback)'
    fullName: 'displayReplyAllForm(formData, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayReplyAllForm(formData: string | ReplyFormData, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formData
          description: '<span data-ttu-id="7265e-156">一个包含文本和 HTML 且表示答复窗体的正文的字符串。</span><span class="sxs-lookup"><span data-stu-id="7265e-156">A string that contains text and HTML and that represents the body of the reply form.</span></span> <span data-ttu-id="7265e-157">该字符串限制为 32 KB 或一个[ReplyFormData](xref:outlook.Office.ReplyFormData)对象, 其中包含正文或附件数据以及回调函数。</span><span class="sxs-lookup"><span data-stu-id="7265e-157">The string is limited to 32 KB OR an [Office.ReplyFormData](xref:outlook.Office.ReplyFormData) object that contains body or attachment data and a callback function.</span></span>'
          type:
            - string | ReplyFormData
        - id: callback
          description: '<span data-ttu-id="7265e-158">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-158">Optional.</span></span> <span data-ttu-id="7265e-159">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7265e-159">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageRead.displayReplyForm
    summary: |-
      <span data-ttu-id="7265e-160">显示答复窗体，其中仅包括所选邮件的发件人或所选约会的组织者。</span><span class="sxs-lookup"><span data-stu-id="7265e-160">Displays a reply form that includes only the sender of the selected message or the organizer of the selected appointment.</span></span>

      <span data-ttu-id="7265e-161">在 Outlook Web App 中，答复窗体显示为包含 3 列视图的弹出式窗体以及包含 2 列或 1 列视图的弹出式窗体。</span><span class="sxs-lookup"><span data-stu-id="7265e-161">In Outlook Web App, the reply form is displayed as a pop-out form in the 3-column view and a pop-up form in the 2- or 1-column view.</span></span>

      <span data-ttu-id="7265e-162">如果任何字符串参数超出其限制, displayReplyForm 将引发异常。</span><span class="sxs-lookup"><span data-stu-id="7265e-162">If any of the string parameters exceed their limits, displayReplyForm throws an exception.</span></span>

      <span data-ttu-id="7265e-163">当附件在 formData 参数中指定时, outlook 和 outlook Web App 尝试下载所有附件并将其附加到答复窗体。</span><span class="sxs-lookup"><span data-stu-id="7265e-163">When attachments are specified in the formData.attachments parameter, Outlook and Outlook Web App attempt to download all attachments and attach them to the reply form.</span></span> <span data-ttu-id="7265e-164">如果无法添加任何附件，则在窗体 UI 中显示错误。</span><span class="sxs-lookup"><span data-stu-id="7265e-164">If any attachments fail to be added, an error is shown in the form UI.</span></span> <span data-ttu-id="7265e-165">如果这不可能，则不引发错误消息。</span><span class="sxs-lookup"><span data-stu-id="7265e-165">If this isn't possible, then no error message is thrown.</span></span>

      <span data-ttu-id="7265e-166">**注意**: outlook for iOS 或 outlook for Android 中不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-166">**Note**: This method is not supported in Outlook for iOS or Outlook for Android.</span></span>

      <span data-ttu-id="7265e-167">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-167">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-168">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-168">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-169">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-169">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-170">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-170">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-171">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-171">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-172">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-172">
      #### Examples</span></span>

      ```javascript
      // The following code passes a string to the `displayReplyForm` function.
      Office.context.mailbox.item.displayReplyForm('hello there');
      Office.context.mailbox.item.displayReplyForm('<b>hello there</b>');

      // Reply with an empty body.
      Office.context.mailbox.item.displayReplyForm({});

      // Reply with just a body.
      Office.context.mailbox.item.displayReplyForm(
      {
          'htmlBody' : 'hi'
      });

      // Reply with a body and a file attachment.
      Office.context.mailbox.item.displayReplyForm(
      {
          'htmlBody' : 'hi',
          'attachments' :
          [
              {
                  'type' : Office.MailboxEnums.AttachmentType.File,
                  'name' : 'squirrel.png',
                  'url' : 'http://i.imgur.com/sRgTlGR.jpg'
              }
          ]
      });

      // Reply with a body and an item attachment.
      Office.context.mailbox.item.displayReplyForm(
      {
          'htmlBody' : 'hi',
          'attachments' :
          [
              {
                  'type' : 'item',
                  'name' : 'rand',
                  'itemId' : Office.context.mailbox.item.itemId
              }
          ]
      });

      // Reply with a body, file attachment, item attachment, and a callback.
      Office.context.mailbox.item.displayReplyForm(
      {
          'htmlBody' : 'hi',
          'attachments' :
          [
              {
                  'type' : Office.MailboxEnums.AttachmentType.File,
                  'name' : 'squirrel.png',
                  'url' : 'http://i.imgur.com/sRgTlGR.jpg'
              },
              {
                  'type' : 'item',
                  'name' : 'rand',
                  'itemId' : Office.context.mailbox.item.itemId
              }
          ],
          'callback' : function(asyncResult)
          {
              console.log(asyncResult.value);
          }
      });
      ```
    name: 'displayReplyForm(formData, callback)'
    fullName: 'displayReplyForm(formData, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayReplyForm(formData: string | ReplyFormData, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formData
          description: '<span data-ttu-id="7265e-173">一个包含文本和 HTML 且表示答复窗体的正文的字符串。</span><span class="sxs-lookup"><span data-stu-id="7265e-173">A string that contains text and HTML and that represents the body of the reply form.</span></span> <span data-ttu-id="7265e-174">该字符串限制为 32 KB 或一个[ReplyFormData](xref:outlook.Office.ReplyFormData)对象, 其中包含正文或附件数据以及回调函数。</span><span class="sxs-lookup"><span data-stu-id="7265e-174">The string is limited to 32 KB OR an [Office.ReplyFormData](xref:outlook.Office.ReplyFormData) object that contains body or attachment data and a callback function.</span></span>'
          type:
            - string | ReplyFormData
        - id: callback
          description: '<span data-ttu-id="7265e-175">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-175">Optional.</span></span> <span data-ttu-id="7265e-176">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7265e-176">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageRead.getEntities
    summary: |-
      <span data-ttu-id="7265e-177">获取在所选项目的正文中找到的实体。</span><span class="sxs-lookup"><span data-stu-id="7265e-177">Gets the entities found in the selected item's body.</span></span>

      <span data-ttu-id="7265e-178">**注意**: outlook for iOS 或 outlook for Android 中不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-178">**Note**: This method is not supported in Outlook for iOS or Outlook for Android.</span></span>

      <span data-ttu-id="7265e-179">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-179">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-180">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-180">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-181">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-181">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-182">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-182">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-183">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-183">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-184">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-184">
      #### Examples</span></span>

      ```javascript
      // The following example accesses the contacts entities in the current item's body.

      var contacts = Office.context.mailbox.item.getEntities().contacts;
      ```
    name: getEntities()
    fullName: getEntities()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntities(): Entities;'
      return:
        type:
          - Entities
        description: ''
  - uid: outlook.Office.MessageRead.getEntitiesByType
    summary: |-
      <span data-ttu-id="7265e-185">获取所选项目的正文中找到的指定实体类型的所有实体的数组。</span><span class="sxs-lookup"><span data-stu-id="7265e-185">Gets an array of all the entities of the specified entity type found in the selected item's body.</span></span>

      <span data-ttu-id="7265e-186">**注意**: outlook for iOS 或 outlook for Android 中不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-186">**Note**: This method is not supported in Outlook for iOS or Outlook for Android.</span></span>

      <span data-ttu-id="7265e-187">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-187">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-188">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-188">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-189">受限</span><span class="sxs-lookup"><span data-stu-id="7265e-189">Restricted</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-190">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-190">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-191">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-191">Message Read</span></span></td></tr> </table>

      <span data-ttu-id="7265e-192">当使用此方法的最低权限级别受限时，某些实体类型需要 ReadItem 才能进行访问，如下表中所指定。</span><span class="sxs-lookup"><span data-stu-id="7265e-192">While the minimum permission level to use this method is Restricted, some entity types require ReadItem to access, as specified in the following table.</span></span>

      <table> <tr> <th><span data-ttu-id="7265e-193">entityType 的值</span><span class="sxs-lookup"><span data-stu-id="7265e-193">Value of entityType</span></span></th> <th><span data-ttu-id="7265e-194">返回的数组中对象的类型</span><span class="sxs-lookup"><span data-stu-id="7265e-194">Type of objects in returned array</span></span></th> <th><span data-ttu-id="7265e-195">所需权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-195">Required Permission Level</span></span></th> </tr> <tr> <td><span data-ttu-id="7265e-196">Address</span><span class="sxs-lookup"><span data-stu-id="7265e-196">Address</span></span></td> <td><span data-ttu-id="7265e-197">String</span><span class="sxs-lookup"><span data-stu-id="7265e-197">String</span></span></td> <td><span data-ttu-id="7265e-198">受限</span><span class="sxs-lookup"><span data-stu-id="7265e-198">Restricted</span></span></td> </tr> <tr> <td><span data-ttu-id="7265e-199">联系人</span><span class="sxs-lookup"><span data-stu-id="7265e-199">Contact</span></span></td> <td><span data-ttu-id="7265e-200">联系人</span><span class="sxs-lookup"><span data-stu-id="7265e-200">Contact</span></span></td> <td><span data-ttu-id="7265e-201">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-201">ReadItem</span></span></td> </tr> <tr> <td><span data-ttu-id="7265e-202">EmailAddress</span><span class="sxs-lookup"><span data-stu-id="7265e-202">EmailAddress</span></span></td> <td><span data-ttu-id="7265e-203">String</span><span class="sxs-lookup"><span data-stu-id="7265e-203">String</span></span></td> <td><span data-ttu-id="7265e-204">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-204">ReadItem</span></span></td> </tr> <tr> <td><span data-ttu-id="7265e-205">MeetingSuggestion</span><span class="sxs-lookup"><span data-stu-id="7265e-205">MeetingSuggestion</span></span></td> <td><span data-ttu-id="7265e-206">MeetingSuggestion</span><span class="sxs-lookup"><span data-stu-id="7265e-206">MeetingSuggestion</span></span></td> <td><span data-ttu-id="7265e-207">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-207">ReadItem</span></span></td> </tr> <tr> <td><span data-ttu-id="7265e-208">PhoneNumber</span><span class="sxs-lookup"><span data-stu-id="7265e-208">PhoneNumber</span></span></td> <td><span data-ttu-id="7265e-209">PhoneNumber</span><span class="sxs-lookup"><span data-stu-id="7265e-209">PhoneNumber</span></span></td> <td><span data-ttu-id="7265e-210">受限</span><span class="sxs-lookup"><span data-stu-id="7265e-210">Restricted</span></span></td> </tr> <tr> <td><span data-ttu-id="7265e-211">TaskSuggestion</span><span class="sxs-lookup"><span data-stu-id="7265e-211">TaskSuggestion</span></span></td> <td><span data-ttu-id="7265e-212">TaskSuggestion</span><span class="sxs-lookup"><span data-stu-id="7265e-212">TaskSuggestion</span></span></td> <td><span data-ttu-id="7265e-213">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-213">ReadItem</span></span></td> </tr> <tr> <td><span data-ttu-id="7265e-214">URL</span><span class="sxs-lookup"><span data-stu-id="7265e-214">URL</span></span></td> <td><span data-ttu-id="7265e-215">String</span><span class="sxs-lookup"><span data-stu-id="7265e-215">String</span></span></td> <td><span data-ttu-id="7265e-216">受限</span><span class="sxs-lookup"><span data-stu-id="7265e-216">Restricted</span></span></td> </tr> </table>
      #### <span data-ttu-id="7265e-217">示例</span><span class="sxs-lookup"><span data-stu-id="7265e-217">Examples</span></span>

      ```javascript
      // The following example shows how to access an array of strings that represent postal addresses
      // in the current item's body.

      // The initialize function is required for all apps.
      Office.initialize = function () {
          // Checks for the DOM to load using the jQuery ready function.
          $(document).ready(function () {
              // After the DOM is loaded, app-specific code can run.
              var item = Office.context.mailbox.item;
              // Get an array of strings that represent postal addresses in the current item's body.
              var addresses = item.getEntitiesByType(Office.MailboxEnums.EntityType.Address);
              // Continue processing the array of addresses.
          });
      };
      ```
    name: getEntitiesByType(entityType)
    fullName: getEntitiesByType(entityType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntitiesByType(entityType: MailboxEnums.EntityType): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
      return:
        type:
          - '(string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]'
        description: '<span data-ttu-id="7265e-218">如果在 entitytype 中传递的值不是 entitytype 枚举的有效成员, 则该方法返回 null。</span><span class="sxs-lookup"><span data-stu-id="7265e-218">If the value passed in entityType is not a valid member of the EntityType enumeration, the method returns null.</span></span> <span data-ttu-id="7265e-219">如果指定类型的任何实体都不存在于该项目的正文中，该方法将返回空数组。</span><span class="sxs-lookup"><span data-stu-id="7265e-219">If no entities of the specified type are present in the item''s body, the method returns an empty array.</span></span> <span data-ttu-id="7265e-220">否则, 返回的数组中对象的类型取决于 entityType 参数中请求的实体的类型。</span><span class="sxs-lookup"><span data-stu-id="7265e-220">Otherwise, the type of the objects in the returned array depends on the type of entity requested in the entityType parameter.</span></span>'
      parameters:
        - id: entityType
          description: <span data-ttu-id="7265e-221">EntityType 枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="7265e-221">One of the EntityType enumeration values.</span></span>
          type:
            - MailboxEnums.EntityType
  - uid: outlook.Office.MessageRead.getFilteredEntitiesByName
    summary: |-
      <span data-ttu-id="7265e-222">返回传递清单 XML 文件中定义的命名筛选器的所选项目中的已知实体。</span><span class="sxs-lookup"><span data-stu-id="7265e-222">Returns well-known entities in the selected item that pass the named filter defined in the manifest XML file.</span></span>

      <span data-ttu-id="7265e-223">getFilteredEntitiesByName 方法返回与在清单 XML 文件中的 ItemHasKnownEntity rule 元素中定义的正则表达式匹配的实体, 具有指定的 FilterName 元素值。</span><span class="sxs-lookup"><span data-stu-id="7265e-223">The getFilteredEntitiesByName method returns the entities that match the regular expression defined in the ItemHasKnownEntity rule element in the manifest XML file with the specified FilterName element value.</span></span>

      <span data-ttu-id="7265e-224">**注意**: outlook for iOS 或 outlook for Android 中不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-224">**Note**: This method is not supported in Outlook for iOS or Outlook for Android.</span></span>

      <span data-ttu-id="7265e-225">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-225">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="7265e-226">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-226">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-227">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-227">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-228">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-228">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-229">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-229">Message Read</span></span></td></tr> </table>'
    name: getFilteredEntitiesByName(name)
    fullName: getFilteredEntitiesByName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilteredEntitiesByName(name: string): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
      return:
        type:
          - '(string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]'
        description: '<span data-ttu-id="7265e-230">如果清单中没有 ItemHasKnownEntity 元素与 name 参数匹配的 FilterName 元素值, 则该方法返回 null。</span><span class="sxs-lookup"><span data-stu-id="7265e-230">If there is no ItemHasKnownEntity element in the manifest with a FilterName element value that matches the name parameter, the method returns null.</span></span> <span data-ttu-id="7265e-231">如果 name 参数与清单中的 ItemHasKnownEntity 元素匹配, 但当前项目中没有匹配的实体, 则该方法将返回一个空数组。</span><span class="sxs-lookup"><span data-stu-id="7265e-231">If the name parameter does match an ItemHasKnownEntity element in the manifest, but there are no entities in the current item that match, the method return an empty array.</span></span>'
      parameters:
        - id: name
          description: <span data-ttu-id="7265e-232">定义要匹配的筛选器的 ItemHasKnownEntity 规则元素的名称。</span><span class="sxs-lookup"><span data-stu-id="7265e-232">The name of the ItemHasKnownEntity rule element that defines the filter to match.</span></span>
          type:
            - string
  - uid: outlook.Office.MessageRead.getInitializationContextAsync
    summary: |-
      <span data-ttu-id="7265e-233">获取[通过可操作邮件激活](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)加载项时传递的初始化数据</span><span class="sxs-lookup"><span data-stu-id="7265e-233">Gets initialization data passed when the add-in is [activated by an actionable message](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="7265e-234">.</span><span class="sxs-lookup"><span data-stu-id="7265e-234"></span></span>

      <span data-ttu-id="7265e-235">**注意**: 仅 outlook 2016 for Windows (大于16.0.8413.1000 的即点即用版本) 和适用于 Office 365 的 outlook 网页版支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-235">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>

      <span data-ttu-id="7265e-236">\[[API 集: 邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-236">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="7265e-237">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-237">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-238">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-238">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-239">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-239">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-240">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-240">Message Read</span></span></td></tr> </table>'
    isPreview: true
    name: 'getInitializationContextAsync(options, callback)'
    fullName: 'getInitializationContextAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="7265e-241">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-241">Optional.</span></span> <span data-ttu-id="7265e-242">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="7265e-242">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="7265e-243">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-243">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="7265e-244">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-244">Optional.</span></span> <span data-ttu-id="7265e-245">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7265e-245">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="7265e-246">成功时, 初始化数据在 asyncResult 属性中以字符串的形式提供。</span><span class="sxs-lookup"><span data-stu-id="7265e-246">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="7265e-247">如果没有初始化上下文, asyncResult 对象将包含一个 Error 对象, 其 code 属性设置为 9020, 其 name 属性设置为 GenericResponseError。</span><span class="sxs-lookup"><span data-stu-id="7265e-247">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageRead.getInitializationContextAsync_1
    summary: |-
      <span data-ttu-id="7265e-248">获取[通过可操作邮件激活](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)加载项时传递的初始化数据</span><span class="sxs-lookup"><span data-stu-id="7265e-248">Gets initialization data passed when the add-in is [activated by an actionable message](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)</span></span><!-- --><span data-ttu-id="7265e-249">.</span><span class="sxs-lookup"><span data-stu-id="7265e-249"></span></span>

      <span data-ttu-id="7265e-250">**注意**: 仅 outlook 2016 for Windows (大于16.0.8413.1000 的即点即用版本) 和适用于 Office 365 的 outlook 网页版支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-250">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>

      <span data-ttu-id="7265e-251">\[[API 集: 邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-251">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="7265e-252">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-252">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-253">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-253">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-254">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-254">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-255">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-255">Message Read</span></span></td></tr> </table>'
    isPreview: true
    name: getInitializationContextAsync(callback)
    fullName: getInitializationContextAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInitializationContextAsync(callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="7265e-256">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-256">Optional.</span></span> <span data-ttu-id="7265e-257">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7265e-257">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="7265e-258">成功时, 初始化数据在 asyncResult 属性中以字符串的形式提供。</span><span class="sxs-lookup"><span data-stu-id="7265e-258">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="7265e-259">如果没有初始化上下文, asyncResult 对象将包含一个 Error 对象, 其 code 属性设置为 9020, 其 name 属性设置为 GenericResponseError。</span><span class="sxs-lookup"><span data-stu-id="7265e-259">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.MessageRead.getRegExMatches
    summary: |-
      <span data-ttu-id="7265e-260">返回所选项目中匹配在清单 XML 文件中定义的正则表达式的字符串值。</span><span class="sxs-lookup"><span data-stu-id="7265e-260">Returns string values in the selected item that match the regular expressions defined in the manifest XML file.</span></span>

      <span data-ttu-id="7265e-261">getRegExMatches 方法返回匹配在清单 XML 文件中的每个 ItemHasRegularExpressionMatch 或 ItemHasKnownEntity 规则元素中定义的正则表达式的字符串。</span><span class="sxs-lookup"><span data-stu-id="7265e-261">The getRegExMatches method returns the strings that match the regular expression defined in each ItemHasRegularExpressionMatch or ItemHasKnownEntity rule element in the manifest XML file.</span></span> <span data-ttu-id="7265e-262">对于 ItemHasRegularExpressionMatch 规则, 匹配的字符串必须出现在由该规则指定的项的属性中。</span><span class="sxs-lookup"><span data-stu-id="7265e-262">For an ItemHasRegularExpressionMatch rule, a matching string has to occur in the property of the item that is specified by that rule.</span></span> <span data-ttu-id="7265e-263">PropertyName 简单类型定义受支持的属性。</span><span class="sxs-lookup"><span data-stu-id="7265e-263">The PropertyName simple type defines the supported properties.</span></span>

      <span data-ttu-id="7265e-264">如果您在项目的 body 属性上指定 ItemHasRegularExpressionMatch 规则, 则正则表达式应进一步筛选正文, 并且不应尝试返回项目的整个正文。</span><span class="sxs-lookup"><span data-stu-id="7265e-264">If you specify an ItemHasRegularExpressionMatch rule on the body property of an item, the regular expression should further filter the body and should not attempt to return the entire body of the item.</span></span> <span data-ttu-id="7265e-265">使用正则表达式 (如. \*) 获取项目的整个正文并不总是返回预期的结果。</span><span class="sxs-lookup"><span data-stu-id="7265e-265">Using a regular expression such as .\* to obtain the entire body of an item does not always return the expected results.</span></span> <span data-ttu-id="7265e-266">而是使用 getAsync 方法检索整个正文。</span><span class="sxs-lookup"><span data-stu-id="7265e-266">Instead, use the Body.getAsync method to retrieve the entire body.</span></span>

      <span data-ttu-id="7265e-267">**注意**: outlook for iOS 或 outlook for Android 中不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-267">**Note**: This method is not supported in Outlook for iOS or Outlook for Android.</span></span>

      <span data-ttu-id="7265e-268">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-268">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-269">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-269">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-270">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-270">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-271">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-271">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-272">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-272">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-273">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-273">
      #### Examples</span></span>

      ```javascript
      // Consider an add-in manifest has the following `Rule` element:
      //<Rule xsi:type="RuleCollection" Mode="And">
      //  <Rule xsi:type="ItemIs" FormType="Read" ItemType="Message" />
      //  <Rule xsi:type="RuleCollection" Mode="Or">
      //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="fruits" RegExValue="apple|banana|coconut" PropertyName="BodyAsPlaintext" IgnoreCase="true" />
      //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="veggies" RegExValue="tomato|onion|spinach|broccoli" PropertyName="BodyAsPlaintext" IgnoreCase="true" />
      //  </Rule>
      //</Rule>

      // The object returned from `getRegExMatches` would have two properties: `fruits` and `veggies`.
      //{
      //'fruits': ['apple','banana','Banana','coconut'],
      //'veggies': ['tomato','onion','spinach','broccoli']
      //}

      // The following example shows how to access the array of
      // matches for the regular expression rule elements `fruits`
      // and `veggies`, which are specified in the manifest.
      var allMatches = Office.context.mailbox.item.getRegExMatches();
      var fruits = allMatches.fruits;
      var veggies = allMatches.veggies;
      ```
    name: getRegExMatches()
    fullName: getRegExMatches()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRegExMatches(): any;'
      return:
        type:
          - any
        description: <span data-ttu-id="7265e-274">一个包含匹配在清单 XML 文件中定义的正则表达式的字符串数组的对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-274">An object that contains arrays of strings that match the regular expressions defined in the manifest XML file.</span></span> <span data-ttu-id="7265e-275">每个数组的名称等于匹配的 ItemHasRegularExpressionMatch 规则的 RegExName 属性的相应值或匹配 ItemHasKnownEntity 规则的 FilterName 属性的值。</span><span class="sxs-lookup"><span data-stu-id="7265e-275">The name of each array is equal to the corresponding value of the RegExName attribute of the matching ItemHasRegularExpressionMatch rule or the FilterName attribute of the matching ItemHasKnownEntity rule.</span></span>
  - uid: outlook.Office.MessageRead.getRegExMatchesByName
    summary: |-
      <span data-ttu-id="7265e-276">返回匹配在清单 XML 文件中定义的命名正则表达式的所选项目中的字符串值。</span><span class="sxs-lookup"><span data-stu-id="7265e-276">Returns string values in the selected item that match the named regular expression defined in the manifest XML file.</span></span>

      <span data-ttu-id="7265e-277">getRegExMatchesByName 方法返回与在清单 XML 文件中的 ItemHasRegularExpressionMatch rule 元素中定义的正则表达式匹配的字符串, 该正则表达式具有指定的 RegExName 元素值。</span><span class="sxs-lookup"><span data-stu-id="7265e-277">The getRegExMatchesByName method returns the strings that match the regular expression defined in the ItemHasRegularExpressionMatch rule element in the manifest XML file with the specified RegExName element value.</span></span>

      <span data-ttu-id="7265e-278">如果您在项目的 body 属性上指定 ItemHasRegularExpressionMatch 规则, 则正则表达式应进一步筛选正文, 并且不应尝试返回项目的整个正文。</span><span class="sxs-lookup"><span data-stu-id="7265e-278">If you specify an ItemHasRegularExpressionMatch rule on the body property of an item, the regular expression should further filter the body and should not attempt to return the entire body of the item.</span></span> <span data-ttu-id="7265e-279">使用正则表达式 (如. \*) 获取项目的整个正文并不总是返回预期的结果。</span><span class="sxs-lookup"><span data-stu-id="7265e-279">Using a regular expression such as .\* to obtain the entire body of an item does not always return the expected results.</span></span>

      <span data-ttu-id="7265e-280">**注意**: outlook for iOS 或 outlook for Android 中不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-280">**Note**: This method is not supported in Outlook for iOS or Outlook for Android.</span></span>

      <span data-ttu-id="7265e-281">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-281">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-282">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-282">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-283">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-283">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-284">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-284">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-285">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-285">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-286">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-286">
      #### Examples</span></span>

      ```javascript
      // Consider an add-in manifest has the following `Rule` element:
      //<Rule xsi:type="RuleCollection" Mode="And">
      //  <Rule xsi:type="ItemIs" FormType="Read" ItemType="Message" />
      //  <Rule xsi:type="RuleCollection" Mode="Or">
      //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="fruits" RegExValue="apple|banana|coconut" PropertyName="BodyAsPlaintext" IgnoreCase="true" />
      //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="veggies" RegExValue="tomato|onion|spinach|broccoli" PropertyName="BodyAsPlaintext" IgnoreCase="true" />
      //  </Rule>
      //</Rule>

      // The object returned from `getRegExMatches` would have two properties: `fruits` and `veggies`.
      //{
      //'fruits': ['apple','banana','Banana','coconut'],
      //'veggies': ['tomato','onion','spinach','broccoli']
      //}

      var fruits = Office.context.mailbox.item.getRegExMatchesByName("fruits");
      var veggies = Office.context.mailbox.item.getRegExMatchesByName("veggies");
      ```
    name: getRegExMatchesByName(name)
    fullName: getRegExMatchesByName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRegExMatchesByName(name: string): string[];'
      return:
        type:
          - 'string[]'
        description: <span data-ttu-id="7265e-287">一个包含匹配在清单 XML 文件中定义的正则表达式的字符串的数组。</span><span class="sxs-lookup"><span data-stu-id="7265e-287">An array that contains the strings that match the regular expression defined in the manifest XML file.</span></span>
      parameters:
        - id: name
          description: <span data-ttu-id="7265e-288">定义要匹配的筛选器的 ItemHasRegularExpressionMatch 规则元素的名称。</span><span class="sxs-lookup"><span data-stu-id="7265e-288">The name of the ItemHasRegularExpressionMatch rule element that defines the filter to match.</span></span>
          type:
            - string
  - uid: outlook.Office.MessageRead.getSelectedEntities
    summary: |-
      <span data-ttu-id="7265e-289">获取在用户已选择的突出显示匹配项中找到的实体。</span><span class="sxs-lookup"><span data-stu-id="7265e-289">Gets the entities found in a highlighted match a user has selected.</span></span> <span data-ttu-id="7265e-290">突出显示的匹配项适用于上下文外接程序。</span><span class="sxs-lookup"><span data-stu-id="7265e-290">Highlighted matches apply to contextual add-ins.</span></span>

      <span data-ttu-id="7265e-291">**注意**: outlook for iOS 或 outlook for Android 中不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-291">**Note**: This method is not supported in Outlook for iOS or Outlook for Android.</span></span>

      <span data-ttu-id="7265e-292">\[[API 集: 邮箱 1.6](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-292">\[ [API set: Mailbox 1.6](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-293">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-293">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-294">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-294">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-295">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-295">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-296">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-296">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-297">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-297">
      #### Examples</span></span>

      ```javascript
      // The following example accesses the addresses entities in the highlighted
      // match selected by the user.
      var addresses = Office.context.mailbox.item.getSelectedEntities().addresses;
      ```
    name: getSelectedEntities()
    fullName: getSelectedEntities()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedEntities(): Entities;'
      return:
        type:
          - Entities
        description: ''
  - uid: outlook.Office.MessageRead.getSelectedRegExMatches
    summary: |-
      <span data-ttu-id="7265e-298">返回突出显示匹配项中匹配在清单 XML 文件中定义的正则表达式的字符串值。</span><span class="sxs-lookup"><span data-stu-id="7265e-298">Returns string values in a highlighted match that match the regular expressions defined in the manifest XML file.</span></span> <span data-ttu-id="7265e-299">突出显示的匹配项适用于上下文外接程序。</span><span class="sxs-lookup"><span data-stu-id="7265e-299">Highlighted matches apply to contextual add-ins.</span></span>

      <span data-ttu-id="7265e-300">office.context.mailbox.item.getselectedregexmatches 方法返回匹配在清单 XML 文件中的每个 ItemHasRegularExpressionMatch 或 ItemHasKnownEntity 规则元素中定义的正则表达式的字符串。</span><span class="sxs-lookup"><span data-stu-id="7265e-300">The getSelectedRegExMatches method returns the strings that match the regular expression defined in each ItemHasRegularExpressionMatch or ItemHasKnownEntity rule element in the manifest XML file.</span></span> <span data-ttu-id="7265e-301">对于 ItemHasRegularExpressionMatch 规则, 匹配的字符串必须出现在由该规则指定的项的属性中。</span><span class="sxs-lookup"><span data-stu-id="7265e-301">For an ItemHasRegularExpressionMatch rule, a matching string has to occur in the property of the item that is specified by that rule.</span></span> <span data-ttu-id="7265e-302">PropertyName 简单类型定义受支持的属性。</span><span class="sxs-lookup"><span data-stu-id="7265e-302">The PropertyName simple type defines the supported properties.</span></span>

      <span data-ttu-id="7265e-303">如果您在项目的 body 属性上指定 ItemHasRegularExpressionMatch 规则, 则正则表达式应进一步筛选正文, 并且不应尝试返回项目的整个正文。</span><span class="sxs-lookup"><span data-stu-id="7265e-303">If you specify an ItemHasRegularExpressionMatch rule on the body property of an item, the regular expression should further filter the body and should not attempt to return the entire body of the item.</span></span> <span data-ttu-id="7265e-304">使用正则表达式 (如. \*) 获取项目的整个正文并不总是返回预期的结果。</span><span class="sxs-lookup"><span data-stu-id="7265e-304">Using a regular expression such as .\* to obtain the entire body of an item does not always return the expected results.</span></span> <span data-ttu-id="7265e-305">而是使用 getAsync 方法检索整个正文。</span><span class="sxs-lookup"><span data-stu-id="7265e-305">Instead, use the Body.getAsync method to retrieve the entire body.</span></span>

      <span data-ttu-id="7265e-306">**注意**: outlook for iOS 或 outlook for Android 中不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-306">**Note**: This method is not supported in Outlook for iOS or Outlook for Android.</span></span>

      <span data-ttu-id="7265e-307">\[[API 集: 邮箱 1.6](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-307">\[ [API set: Mailbox 1.6](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-308">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-308">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-309">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-309">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-310">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-310">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-311">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-311">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-312">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-312">
      #### Examples</span></span>

      ```javascript
      // Consider an add-in manifest has the following `Rule` element:
      //<Rule xsi:type="RuleCollection" Mode="And">
      //  <Rule xsi:type="ItemIs" FormType="Read" ItemType="Message" />
      //  <Rule xsi:type="RuleCollection" Mode="Or">
      //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="fruits" RegExValue="apple|banana|coconut" PropertyName="BodyAsPlaintext" IgnoreCase="true" />
      //    <Rule xsi:type="ItemHasRegularExpressionMatch" RegExName="veggies" RegExValue="tomato|onion|spinach|broccoli" PropertyName="BodyAsPlaintext" IgnoreCase="true" />
      //  </Rule>
      //</Rule>

      // The object returned from `getRegExMatches` would have two properties: `fruits` and `veggies`.
      //{
      //'fruits': ['apple','banana','Banana','coconut'],
      //'veggies': ['tomato','onion','spinach','broccoli']
      //}

      // The following example shows how to access the array of matches for the
      // regular expression rule elements `fruits` and `veggies`, which are
      // specified in the manifest.
      var selectedMatches = Office.context.mailbox.item.getSelectedRegExMatches();
      var fruits = selectedMatches.fruits;
      var veggies = selectedMatches.veggies;
      ```
    name: getSelectedRegExMatches()
    fullName: getSelectedRegExMatches()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRegExMatches(): any;'
      return:
        type:
          - any
        description: <span data-ttu-id="7265e-313">一个包含匹配在清单 XML 文件中定义的正则表达式的字符串数组的对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-313">An object that contains arrays of strings that match the regular expressions defined in the manifest XML file.</span></span> <span data-ttu-id="7265e-314">每个数组的名称等于匹配的 ItemHasRegularExpressionMatch 规则的 RegExName 属性的相应值或匹配 ItemHasKnownEntity 规则的 FilterName 属性的值。</span><span class="sxs-lookup"><span data-stu-id="7265e-314">The name of each array is equal to the corresponding value of the RegExName attribute of the matching ItemHasRegularExpressionMatch rule or the FilterName attribute of the matching ItemHasKnownEntity rule.</span></span>
  - uid: outlook.Office.MessageRead.loadCustomPropertiesAsync
    summary: |-
      <span data-ttu-id="7265e-315">异步加载所选项目上此外接程序的自定义属性。</span><span class="sxs-lookup"><span data-stu-id="7265e-315">Asynchronously loads custom properties for this add-in on the selected item.</span></span>

      <span data-ttu-id="7265e-316">自定义属性基于每个应用、每个项目存储为键/值对。</span><span class="sxs-lookup"><span data-stu-id="7265e-316">Custom properties are stored as key/value pairs on a per-app, per-item basis.</span></span> <span data-ttu-id="7265e-317">此方法在回调中返回一个 CustomProperties 对象, 该对象提供用于访问特定于当前项目和当前加载项的自定义属性的方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-317">This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in.</span></span> <span data-ttu-id="7265e-318">自定义属性未在项目上加密，因此这不应用作安全存储。</span><span class="sxs-lookup"><span data-stu-id="7265e-318">Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>

      <span data-ttu-id="7265e-319">自定义属性作为 asyncResult 属性中的 CustomProperties 对象提供。</span><span class="sxs-lookup"><span data-stu-id="7265e-319">The custom properties are provided as a CustomProperties object in the asyncResult.value property.</span></span> <span data-ttu-id="7265e-320">此对象可用于获取、设置以及从项目中删除自定义属性，并将自定义属性集的更改重新保存到服务器。</span><span class="sxs-lookup"><span data-stu-id="7265e-320">This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>

      <span data-ttu-id="7265e-321">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-321">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="7265e-322">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-322">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-323">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-323">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-324">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-324">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-325">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-325">Message Read</span></span></td></tr> </table>'
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: 'loadCustomPropertiesAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="7265e-326">方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。</span><span class="sxs-lookup"><span data-stu-id="7265e-326">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
        - id: userContext
          description: <span data-ttu-id="7265e-327">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-327">Optional.</span></span> <span data-ttu-id="7265e-328">开发人员可以提供他们想要在回调函数中访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-328">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="7265e-329">此对象可以通过回调函数中的 asyncContext 属性来访问。</span><span class="sxs-lookup"><span data-stu-id="7265e-329">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
          type:
            - any
  - uid: outlook.Office.MessageRead.removeHandlerAsync
    summary: |-
      <span data-ttu-id="7265e-330">删除受支持事件类型的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7265e-330">Removes the event handlers for a supported event type.</span></span>

      <span data-ttu-id="7265e-331">目前, 受支持的事件类型是`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-331">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="7265e-332">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-332"></span></span><!-- --><span data-ttu-id="7265e-333">, 并`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-333">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="7265e-334">.</span><span class="sxs-lookup"><span data-stu-id="7265e-334"></span></span> <span data-ttu-id="7265e-335">在 "预览`Office.EventType.AttachmentsChanged` " `Office.EventType.EnhancedLocationsChanged`中, 也支持。</span><span class="sxs-lookup"><span data-stu-id="7265e-335">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="7265e-336">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-336">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="7265e-337">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-337">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-338">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-338">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-339">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-339">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-340">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-340">Message Read</span></span></td></tr> </table>'
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="7265e-341">应撤销处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="7265e-341">The event that should revoke the handler.</span></span>
          type:
            - Office.EventType
        - id: options
          description: '<span data-ttu-id="7265e-342">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-342">Optional.</span></span> <span data-ttu-id="7265e-343">包含一个或多个以下属性的对象文本。</span><span class="sxs-lookup"><span data-stu-id="7265e-343">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="7265e-344">asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-344">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="7265e-345">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-345">Optional.</span></span> <span data-ttu-id="7265e-346">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7265e-346">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageRead.removeHandlerAsync_1
    summary: |-
      <span data-ttu-id="7265e-347">删除受支持事件类型的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="7265e-347">Removes the event handlers for a supported event type.</span></span>

      <span data-ttu-id="7265e-348">目前, 受支持的事件类型是`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-348">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="7265e-349">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-349"></span></span><!-- --><span data-ttu-id="7265e-350">, 并`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="7265e-350">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="7265e-351">.</span><span class="sxs-lookup"><span data-stu-id="7265e-351"></span></span> <span data-ttu-id="7265e-352">在 "预览`Office.EventType.AttachmentsChanged` " `Office.EventType.EnhancedLocationsChanged`中, 也支持。</span><span class="sxs-lookup"><span data-stu-id="7265e-352">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>

      <span data-ttu-id="7265e-353">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-353">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="7265e-354">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-354">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-355">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-355">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-356">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-356">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-357">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-357">Message Read</span></span></td></tr> </table>'
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: <span data-ttu-id="7265e-358">应撤销处理程序的事件。</span><span class="sxs-lookup"><span data-stu-id="7265e-358">The event that should revoke the handler.</span></span>
          type:
            - Office.EventType
        - id: callback
          description: '<span data-ttu-id="7265e-359">可选。</span><span class="sxs-lookup"><span data-stu-id="7265e-359">Optional.</span></span> <span data-ttu-id="7265e-360">方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 asyncresult 对象的参数。</span><span class="sxs-lookup"><span data-stu-id="7265e-360">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.MessageRead.attachments
    summary: |-
      <span data-ttu-id="7265e-361">以数组的形式获取项目的附件。</span><span class="sxs-lookup"><span data-stu-id="7265e-361">Gets the item's attachments as an array.</span></span>

      <span data-ttu-id="7265e-362">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-362">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-363">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-363">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-364">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-364">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-365">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-365">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-366">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-366">Message Read</span></span></td></tr> </table>

      <span data-ttu-id="7265e-367">**注意**: 由于潜在的安全问题, Outlook 阻止了某些类型的文件, 因此不会返回这些文件。</span><span class="sxs-lookup"><span data-stu-id="7265e-367">**Note**: Certain types of files are blocked by Outlook due to potential security issues and are therefore not returned.</span></span> <span data-ttu-id="7265e-368">有关详细信息, 请参阅[Outlook 中阻止的附件](https://support.office.com/article/Blocked-attachments-in-Outlook-434752E1-02D3-4E90-9124-8B81E49A8519)</span><span class="sxs-lookup"><span data-stu-id="7265e-368">For more information, see [Blocked attachments in Outlook](https://support.office.com/article/Blocked-attachments-in-Outlook-434752E1-02D3-4E90-9124-8B81E49A8519)</span></span><!-- --><span data-ttu-id="7265e-369">.</span><span class="sxs-lookup"><span data-stu-id="7265e-369"></span></span>
      #### <a name="examples"></a><span data-ttu-id="7265e-370">示例</span><span class="sxs-lookup"><span data-stu-id="7265e-370">Examples</span></span>

      ```javascript
      // The following code builds an HTML string with details of all attachments on the current item.
      var item = Office.context.mailbox.item;
      var outputString = "";

      if (item.attachments.length > 0) {
          for (i = 0 ; i < item.attachments.length ; i++) {
              var attachment = item.attachments[i];
              outputString += "<BR>" + i + ". Name: ";
              outputString += attachment.name;
              outputString += "<BR>ID: " + attachment.id;
              outputString += "<BR>contentType: " + attachment.contentType;
              outputString += "<BR>size: " + attachment.size;
              outputString += "<BR>attachmentType: " + attachment.attachmentType;
              outputString += "<BR>isInline: " + attachment.isInline;
          }
      }

      console.log(outputString);
      ```
    name: attachments
    fullName: attachments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'attachments: AttachmentDetails[];'
      return:
        type:
          - 'AttachmentDetails[]'
  - uid: outlook.Office.MessageRead.body
    summary: |-
      <span data-ttu-id="7265e-371">获取一个提供用于处理项目正文的方法的对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-371">Gets an object that provides methods for manipulating the body of an item.</span></span>

      <span data-ttu-id="7265e-372">\[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-372">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-373">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-373">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-374">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-374">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-375">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-375">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-376">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-376">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-377">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-377">
      #### Examples</span></span>

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Body;'
      return:
        type:
          - Body
  - uid: outlook.Office.MessageRead.categories
    summary: |-
      <span data-ttu-id="7265e-378">获取一个对象, 该对象提供用于管理项的类别的方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-378">Gets an object that provides methods for managing the item's categories.</span></span>

      <span data-ttu-id="7265e-379">\[[API 集: 邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-379">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: '<table> <tr><td>[<span data-ttu-id="7265e-380">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-380">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-381">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-381">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-382">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-382">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-383">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-383">Message Read</span></span></td></tr> </table>'
    isPreview: true
    name: categories
    fullName: categories
    langs:
      - typeScript
    type: property
    syntax:
      content: 'categories: Categories;'
      return:
        type:
          - outlook.Office.Categories
  - uid: outlook.Office.MessageRead.cc
    summary: |-
      <span data-ttu-id="7265e-384">提供对邮件的抄送 (Cc) 收件人的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7265e-384">Provides access to the Cc (carbon copy) recipients of a message.</span></span> <span data-ttu-id="7265e-385">对象的类型和访问级别取决于当前项目的模式。</span><span class="sxs-lookup"><span data-stu-id="7265e-385">The type of object and level of access depends on the mode of the current item.</span></span>

      <span data-ttu-id="7265e-386">cc 属性返回一个数组, 其中包含邮件的 "抄送" 行上列出的每个收件人的 EmailAddressDetails 对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-386">The cc property returns an array that contains an EmailAddressDetails object for each recipient listed on the Cc line of the message.</span></span> <span data-ttu-id="7265e-387">集合上限为 100 个成员。</span><span class="sxs-lookup"><span data-stu-id="7265e-387">The collection is limited to a maximum of 100 members.</span></span>

      <span data-ttu-id="7265e-388">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-388">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-389">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-389">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-390">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-390">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-391">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-391">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-392">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-392">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-393">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-393">
      #### Examples</span></span>

      ```javascript
      console.log(JSON.stringify(Office.context.mailbox.item.cc));
      ```
    name: cc
    fullName: cc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cc: EmailAddressDetails[];'
      return:
        type:
          - 'EmailAddressDetails[]'
  - uid: outlook.Office.MessageRead.conversationId
    summary: |-
      <span data-ttu-id="7265e-394">获取包含特定消息的电子邮件会话的标识符。</span><span class="sxs-lookup"><span data-stu-id="7265e-394">Gets an identifier for the email conversation that contains a particular message.</span></span>

      <span data-ttu-id="7265e-p140">如果在阅读窗体或撰写窗体的回复中激活邮件应用程序，则此属性可以获得一个整数值。如果用户随后更改了回复邮件的主题（若发送回复），则该邮件的对话 ID 将改变且之前获取的值将不适用。</span><span class="sxs-lookup"><span data-stu-id="7265e-p140">You can get an integer for this property if your mail app is activated in read forms or responses in compose forms. If subsequently the user changes the subject of the reply message, upon sending the reply, the conversation ID for that message will change and that value you obtained earlier will no longer apply.</span></span>

      <span data-ttu-id="7265e-397">对于撰写窗体的新项目，此属性获得一个 null 值。</span><span class="sxs-lookup"><span data-stu-id="7265e-397">You get null for this property for a new item in a compose form.</span></span> <span data-ttu-id="7265e-398">如果用户设置主题并保存项, 则 conversationId 属性将返回一个值。</span><span class="sxs-lookup"><span data-stu-id="7265e-398">If the user sets a subject and saves the item, the conversationId property will return a value.</span></span>

      <span data-ttu-id="7265e-399">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-399">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-400">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-400">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-401">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-401">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-402">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-402">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-403">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-403">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-404">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-404">
      #### Examples</span></span>

      ```javascript
      var conversationId = Office.context.mailbox.item.conversationId;
      console.log("conversationId: " + conversationId);
      ```
    name: conversationId
    fullName: conversationId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'conversationId: string;'
      return:
        type:
          - string
  - uid: outlook.Office.MessageRead.dateTimeCreated
    summary: |-
      <span data-ttu-id="7265e-405">获取项目创建的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="7265e-405">Gets the date and time that an item was created.</span></span>

      <span data-ttu-id="7265e-406">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-406">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-407">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-407">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-408">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-408">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-409">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-409">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-410">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-410">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-411">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-411">
      #### Examples</span></span>

      ```javascript
      var dateTimeCreated = Office.context.mailbox.item.dateTimeCreated;
      console.log("Date and time created: " + dateTimeCreated);
      ```
    name: dateTimeCreated
    fullName: dateTimeCreated
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateTimeCreated: Date;'
      return:
        type:
          - Date
  - uid: outlook.Office.MessageRead.dateTimeModified
    summary: |-
      <span data-ttu-id="7265e-412">获取项目最近一次修改的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="7265e-412">Gets the date and time that an item was last modified.</span></span>

      <span data-ttu-id="7265e-413">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-413">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-414">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-414">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-415">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-415">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-416">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-416">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-417">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-417">Message Read</span></span></td></tr> </table>

      <span data-ttu-id="7265e-418">**注意**: outlook for iOS 或 outlook for Android 中不支持此成员。</span><span class="sxs-lookup"><span data-stu-id="7265e-418">**Note**: This member is not supported in Outlook for iOS or Outlook for Android.</span></span>
      #### <a name="examples"></a><span data-ttu-id="7265e-419">示例</span><span class="sxs-lookup"><span data-stu-id="7265e-419">Examples</span></span>

      ```javascript
      var dateTimeModified = Office.context.mailbox.item.dateTimeModified;
      console.log("Date and time modified: " + dateTimeModified);
      ```
    name: dateTimeModified
    fullName: dateTimeModified
    langs:
      - typeScript
    type: property
    syntax:
      content: 'dateTimeModified: Date;'
      return:
        type:
          - Date
  - uid: outlook.Office.MessageRead.from
    summary: |-
      <span data-ttu-id="7265e-420">获取邮件发件人的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="7265e-420">Gets the email address of the sender of a message.</span></span>

      <span data-ttu-id="7265e-421">"发件人" 和 "发件人" 属性表示同一个人, 除非该邮件是由代理发送的。</span><span class="sxs-lookup"><span data-stu-id="7265e-421">The from and sender properties represent the same person unless the message is sent by a delegate.</span></span> <span data-ttu-id="7265e-422">在这种情况下, from 属性表示代理者, 而 sender 属性表示委托。</span><span class="sxs-lookup"><span data-stu-id="7265e-422">In that case, the from property represents the delegator, and the sender property represents the delegate.</span></span>

      <span data-ttu-id="7265e-423">**注意**: from 属性中 EmailAddressDetails 对象的 recipientType 属性未定义。</span><span class="sxs-lookup"><span data-stu-id="7265e-423">**Note**: The recipientType property of the EmailAddressDetails object in the from property is undefined.</span></span>

      <span data-ttu-id="7265e-424">from 属性返回一个 EmailAddressDetails 对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-424">The from property returns an EmailAddressDetails object.</span></span>

      <span data-ttu-id="7265e-425">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-425">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-426">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-426">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-427">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-427">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-428">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-428">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-429">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-429">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-430">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-430">
      #### Examples</span></span>

      ```javascript
      var from = Office.context.mailbox.item.from;
      console.log("From " + from);
      ```
    name: from
    fullName: from
    langs:
      - typeScript
    type: property
    syntax:
      content: 'from: EmailAddressDetails;'
      return:
        type:
          - EmailAddressDetails
  - uid: outlook.Office.MessageRead.internetHeaders
    summary: |-
      <span data-ttu-id="7265e-431">获取邮件的 internet 邮件头。</span><span class="sxs-lookup"><span data-stu-id="7265e-431">Gets the internet headers of a message.</span></span>

      <span data-ttu-id="7265e-432">internetHeaders 属性返回一个 internetHeaders 对象, 该对象提供用于管理邮件上的 internet 标头的方法。</span><span class="sxs-lookup"><span data-stu-id="7265e-432">The internetHeaders property returns an InternetHeaders object that provides methods to manage the internet headers on the message.</span></span>

      <span data-ttu-id="7265e-433">\[[API 集: 邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-433">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-434">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-434">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-435">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-435">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-436">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-436">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-437">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-437">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-438">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-438">
      #### Examples</span></span>

      ```javascript
      Office.context.mailbox.item.internetHeaders.getAsync(["header1", "header2"], callback);

      function callback(asyncResult) {
          var dictionary = asyncResult.value;
          var header1_value = dictionary["header1"];
      }
      ```
    isPreview: true
    name: internetHeaders
    fullName: internetHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'internetHeaders: InternetHeaders;'
      return:
        type:
          - outlook.Office.InternetHeaders
  - uid: outlook.Office.MessageRead.internetMessageId
    summary: |-
      <span data-ttu-id="7265e-439">获取电子邮件的 Internet 消息标识符。</span><span class="sxs-lookup"><span data-stu-id="7265e-439">Gets the Internet message identifier for an email message.</span></span>

      <span data-ttu-id="7265e-440">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-440">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-441">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-441">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-442">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-442">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-443">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-443">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-444">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-444">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-445">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-445">
      #### Examples</span></span>

      ```javascript
      var internetMessageId = Office.context.mailbox.item.internetMessageId;
      console.log("internetMessageId: " + internetMessageId);
      ```
    name: internetMessageId
    fullName: internetMessageId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'internetMessageId: string;'
      return:
        type:
          - string
  - uid: outlook.Office.MessageRead.itemClass
    summary: |-
      <span data-ttu-id="7265e-446">获取选定项目的 Exchange Web 服务项目类。</span><span class="sxs-lookup"><span data-stu-id="7265e-446">Gets the Exchange Web Services item class of the selected item.</span></span>

      <span data-ttu-id="7265e-447">您可以创建扩展默认邮件类别的自定义邮件类别, 例如, 自定义约会邮件类 IPM。Contoso。</span><span class="sxs-lookup"><span data-stu-id="7265e-447">You can create custom message classes that extends a default message class, for example, a custom appointment message class IPM.Appointment.Contoso.</span></span>

      <span data-ttu-id="7265e-448">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-448">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-449">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-449">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-450">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-450">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-451">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-451">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-452">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-452">Message Read</span></span></td></tr> </table>

      <span data-ttu-id="7265e-453">itemClass 属性指定选定项目的邮件类。</span><span class="sxs-lookup"><span data-stu-id="7265e-453">The itemClass property specifies the message class of the selected item.</span></span> <span data-ttu-id="7265e-454">以下是邮件或约会项目的默认邮件类别。</span><span class="sxs-lookup"><span data-stu-id="7265e-454">The following are the default message classes for the message or appointment item.</span></span>

      <table> <tr> <th><span data-ttu-id="7265e-455">类型</span><span class="sxs-lookup"><span data-stu-id="7265e-455">Type</span></span></th> <th><span data-ttu-id="7265e-456">说明</span><span class="sxs-lookup"><span data-stu-id="7265e-456">Description</span></span></th> <th><span data-ttu-id="7265e-457">Item 类</span><span class="sxs-lookup"><span data-stu-id="7265e-457">Item Class</span></span></th> </tr> <tr> <td><span data-ttu-id="7265e-458">约会项目</span><span class="sxs-lookup"><span data-stu-id="7265e-458">Appointment items</span></span></td> <td><span data-ttu-id="7265e-459">这些是项目类 IPM 的日历项目。约会或 IPM。约会。</span><span class="sxs-lookup"><span data-stu-id="7265e-459">These are calendar items of the item class IPM.Appointment or IPM.Appointment.Occurrence.</span></span></td> <td><span data-ttu-id="7265e-460">ipm.note.约会、IPM。约会事件</span><span class="sxs-lookup"><span data-stu-id="7265e-460">IPM.Appointment,IPM.Appointment.Occurrence</span></span></td> </tr> <tr> <td><span data-ttu-id="7265e-461">邮件项目</span><span class="sxs-lookup"><span data-stu-id="7265e-461">Message items</span></span></td> <td><span data-ttu-id="7265e-462">其中包括具有默认邮件类别 IPM 的电子邮件。注意, 以及使用 IPM 的会议请求、响应和取消。Schedule: 作为基本邮件类的会议。</span><span class="sxs-lookup"><span data-stu-id="7265e-462">These include email messages that have the default message class IPM.Note, and meeting requests, responses, and cancellations, that use IPM.Schedule.Meeting as the base message class.</span></span></td> <td><span data-ttu-id="7265e-463">ipm.note.请注意, IPM。Schedule (会议) 请求, IPM。Schedule. Neg、IPM。Schedule、IPM、IPM。日程安排: 会议, IPM。日程安排. 会议. 已取消</span><span class="sxs-lookup"><span data-stu-id="7265e-463">IPM.Note,IPM.Schedule.Meeting.Request,IPM.Schedule.Meeting.Neg,IPM.Schedule.Meeting.Pos,IPM.Schedule.Meeting.Tent,IPM.Schedule.Meeting.Canceled</span></span></td> </tr> </table>
      #### <span data-ttu-id="7265e-464">示例</span><span class="sxs-lookup"><span data-stu-id="7265e-464">Examples</span></span>

      ```javascript
      var itemClass = Office.context.mailbox.item.itemClass;
      console.log("Item class: " + itemClass);
      ```
    name: itemClass
    fullName: itemClass
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemClass: string;'
      return:
        type:
          - string
  - uid: outlook.Office.MessageRead.itemId
    summary: |-
      <span data-ttu-id="7265e-465">获取当前项目的 Exchange Web 服务项目标识符。</span><span class="sxs-lookup"><span data-stu-id="7265e-465">Gets the Exchange Web Services item identifier for the current item.</span></span>

      <span data-ttu-id="7265e-466">itemId 属性在撰写模式中不可用。</span><span class="sxs-lookup"><span data-stu-id="7265e-466">The itemId property is not available in compose mode.</span></span> <span data-ttu-id="7265e-467">如果需要项目标识符, 则可以使用 saveAsync 方法将项目保存到存储区, 这将在回调函数的 asyncResult 参数中返回项目标识符。</span><span class="sxs-lookup"><span data-stu-id="7265e-467">If an item identifier is required, the saveAsync method can be used to save the item to the store, which will return the item identifier in the asyncResult.value parameter in the callback function.</span></span>

      <span data-ttu-id="7265e-468">**注意**: itemId 属性返回的标识符与 Exchange Web 服务项目标识符相同。</span><span class="sxs-lookup"><span data-stu-id="7265e-468">**Note**: The identifier returned by the itemId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="7265e-469">itemId 属性与 outlook 条目 ID 或 outlook REST API 使用的 id 不相同。</span><span class="sxs-lookup"><span data-stu-id="7265e-469">The itemId property is not identical to the Outlook Entry ID or the ID used by the Outlook REST API.</span></span> <span data-ttu-id="7265e-470">使用此值进行 REST API 调用前，应使用 Office.context.mailbox.convertToRestId 对它进行转换。</span><span class="sxs-lookup"><span data-stu-id="7265e-470">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="7265e-471">有关更多详细信息, 请参阅[使用 outlook 外接程序中的 outlook REST api](https://docs.microsoft.com/outlook/add-ins/use-rest-api#get-the-item-id)</span><span class="sxs-lookup"><span data-stu-id="7265e-471">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api#get-the-item-id)</span></span><!-- --><span data-ttu-id="7265e-472">.</span><span class="sxs-lookup"><span data-stu-id="7265e-472"></span></span>

      <span data-ttu-id="7265e-473">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-473">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-474">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-474">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-475">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-475">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-476">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-476">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-477">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-477">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-478">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-478">
      #### Examples</span></span>

      ```javascript
      // The following code checks for the presence of an item
      // identifier. If the `itemId` property returns `null` or
      // `undefined`, it saves the item to the store and gets the
      // item identifier from the asynchronous result.
      var itemId = Office.context.mailbox.item.itemId;
      if (itemId === null || itemId == undefined) {
          Office.context.mailbox.item.saveAsync(function(result) {
              itemId = result.value;
          });
      }
      ```
    name: itemId
    fullName: itemId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemId: string;'
      return:
        type:
          - string
  - uid: outlook.Office.MessageRead.itemType
    summary: |-
      <span data-ttu-id="7265e-479">获取实例表示的项的类型。</span><span class="sxs-lookup"><span data-stu-id="7265e-479">Gets the type of item that an instance represents.</span></span>

      <span data-ttu-id="7265e-480">itemtype 属性返回一个 itemType 枚举值, 指示 item 对象实例是邮件还是约会。</span><span class="sxs-lookup"><span data-stu-id="7265e-480">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>

      <span data-ttu-id="7265e-481">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-481">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-482">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-482">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-483">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-483">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-484">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-484">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-485">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-485">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-486">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-486">
      #### Examples</span></span>

      ```javascript
      if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
          // Do something.
      } else {
          // Do something else.
      }
      ```
    name: itemType
    fullName: itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: MailboxEnums.ItemType;'
      return:
        type:
          - MailboxEnums.ItemType
  - uid: outlook.Office.MessageRead.normalizedSubject
    summary: |-
      <span data-ttu-id="7265e-487">获取项目的主题, 删除所有前缀 (包括 RE: 和 FWD:)。</span><span class="sxs-lookup"><span data-stu-id="7265e-487">Gets the subject of an item, with all prefixes removed (including RE: and FWD:).</span></span>

      <span data-ttu-id="7265e-488">normalizedSubject 属性获取项目的主题, 其中包含任何标准前缀 (如 RE: 和 FW:)由电子邮件程序添加的。</span><span class="sxs-lookup"><span data-stu-id="7265e-488">The normalizedSubject property gets the subject of the item, with any standard prefixes (such as RE: and FW:) that are added by email programs.</span></span> <span data-ttu-id="7265e-489">若要获取具有完整前缀的项的主题, 请使用 subject 属性。</span><span class="sxs-lookup"><span data-stu-id="7265e-489">To get the subject of the item with the prefixes intact, use the subject property.</span></span>

      <span data-ttu-id="7265e-490">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-490">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-491">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-491">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-492">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-492">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-493">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-493">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-494">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-494">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-495">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-495">
      #### Examples</span></span>

      ```javascript
      var normalizedSubject = Office.context.mailbox.item.normalizedSubject;
      console.log("Normalized subject: " + normalizedSubject);
      ```
    name: normalizedSubject
    fullName: normalizedSubject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'normalizedSubject: string;'
      return:
        type:
          - string
  - uid: outlook.Office.MessageRead.notificationMessages
    summary: |-
      <span data-ttu-id="7265e-496">获取项目的通知邮件。</span><span class="sxs-lookup"><span data-stu-id="7265e-496">Gets the notification messages for an item.</span></span>

      <span data-ttu-id="7265e-497">\[[API 集: 邮箱 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-497">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-498">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-498">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-499">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-499">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-500">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-500">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-501">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-501">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-502">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-502">
      #### Examples</span></span>

      ```javascript
      // Get all notifications.
      Office.context.mailbox.item.notificationMessages.getAllAsync(
          function (asyncResult) {
              console.log(JSON.stringify(asyncResult));
          }
      );
      ```
    name: notificationMessages
    fullName: notificationMessages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'notificationMessages: NotificationMessages;'
      return:
        type:
          - NotificationMessages
  - uid: outlook.Office.MessageRead.recurrence
    summary: |-
      <span data-ttu-id="7265e-503">获取约会的定期模式。</span><span class="sxs-lookup"><span data-stu-id="7265e-503">Gets the recurrence pattern of an appointment.</span></span> <span data-ttu-id="7265e-504">获取会议请求的定期模式。</span><span class="sxs-lookup"><span data-stu-id="7265e-504">Gets the recurrence pattern of a meeting request.</span></span> <span data-ttu-id="7265e-505">约会项目的阅读和撰写模式。</span><span class="sxs-lookup"><span data-stu-id="7265e-505">Read and compose modes for appointment items.</span></span> <span data-ttu-id="7265e-506">会议请求项目的阅读模式。</span><span class="sxs-lookup"><span data-stu-id="7265e-506">Read mode for meeting request items.</span></span>

      <span data-ttu-id="7265e-507">如果项目是系列或系列中的实例, 则定期属性将返回定期约会或会议请求的定期对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-507">The recurrence property returns a recurrence object for recurring appointments or meetings requests if an item is a series or an instance in a series.</span></span> <span data-ttu-id="7265e-508">`null`返回单个约会的单个约会和会议请求。</span><span class="sxs-lookup"><span data-stu-id="7265e-508">`null` is returned for single appointments and meeting requests of single appointments.</span></span> <span data-ttu-id="7265e-509">`undefined`对于不是会议请求的邮件, 将返回。</span><span class="sxs-lookup"><span data-stu-id="7265e-509">`undefined` is returned for messages that are not meeting requests.</span></span>

      <span data-ttu-id="7265e-510">**注意**: 会议请求的 itemClass 值为 IPM。Schedule. 会议请求。</span><span class="sxs-lookup"><span data-stu-id="7265e-510">**Note**: Meeting requests have an itemClass value of IPM.Schedule.Meeting.Request.</span></span>

      <span data-ttu-id="7265e-511">**注意**: 如果定期对象为 null, 则表示该对象是单个约会的单个约会或会议请求, 而不是某个系列的一部分。</span><span class="sxs-lookup"><span data-stu-id="7265e-511">**Note**: If the recurrence object is null, this indicates that the object is a single appointment or a meeting request of a single appointment and NOT a part of a series.</span></span>

      <span data-ttu-id="7265e-512">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-512">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-513">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-513">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-514">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-514">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-515">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-515">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-516">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-516">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-517">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-517">
      #### Examples</span></span>

      ```javascript
      var recurrence = Office.context.mailbox.item.recurrence;
      console.log("Recurrence: " + JSON.stringify(recurrence));
      ```
    name: recurrence
    fullName: recurrence
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrence: Recurrence;'
      return:
        type:
          - Recurrence
  - uid: outlook.Office.MessageRead.sender
    summary: |-
      <span data-ttu-id="7265e-518">获取电子邮件发件人的电子邮件地址。</span><span class="sxs-lookup"><span data-stu-id="7265e-518">Gets the email address of the sender of an email message.</span></span>

      <span data-ttu-id="7265e-519">"发件人" 和 "发件人" 属性表示同一个人, 除非该邮件是由代理发送的。</span><span class="sxs-lookup"><span data-stu-id="7265e-519">The from and sender properties represent the same person unless the message is sent by a delegate.</span></span> <span data-ttu-id="7265e-520">在这种情况下, from 属性表示代理者, 而 sender 属性表示委托。</span><span class="sxs-lookup"><span data-stu-id="7265e-520">In that case, the from property represents the delegator, and the sender property represents the delegate.</span></span>

      <span data-ttu-id="7265e-521">**注意**: sender 属性中 EmailAddressDetails 对象的 recipientType 属性未定义。</span><span class="sxs-lookup"><span data-stu-id="7265e-521">**Note**: The recipientType property of the EmailAddressDetails object in the sender property is undefined.</span></span>

      <span data-ttu-id="7265e-522">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-522">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-523">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-523">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-524">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-524">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-525">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-525">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-526">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-526">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-527">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-527">
      #### Examples</span></span>

      ```javascript
      var senderName = Office.context.mailbox.item.sender.displayName;
      var senderAddress = Office.context.mailbox.item.sender.emailAddress;
      console.log("Sender: " + senderName + " (" + senderAddress + ")");
      ```
    name: sender
    fullName: sender
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sender: EmailAddressDetails;'
      return:
        type:
          - EmailAddressDetails
  - uid: outlook.Office.MessageRead.seriesId
    summary: |-
      <span data-ttu-id="7265e-528">获取实例所属的系列的 id。</span><span class="sxs-lookup"><span data-stu-id="7265e-528">Gets the id of the series that an instance belongs to.</span></span>

      <span data-ttu-id="7265e-529">在 OWA 和 Outlook 中, webcasts&seriesid 返回此项所属的父 (系列) 项的 Exchange Web 服务 (EWS) ID。</span><span class="sxs-lookup"><span data-stu-id="7265e-529">In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="7265e-530">但是, 在 iOS 和 Android 中, webcasts&seriesid 返回父项的 REST ID。</span><span class="sxs-lookup"><span data-stu-id="7265e-530">However, in iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>

      <span data-ttu-id="7265e-531">**注意**: webcasts&seriesid 属性返回的标识符与 Exchange Web 服务项目标识符相同。</span><span class="sxs-lookup"><span data-stu-id="7265e-531">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="7265e-532">webcasts&seriesid 属性与 outlook REST API 使用的 outlook id 不相同。</span><span class="sxs-lookup"><span data-stu-id="7265e-532">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="7265e-533">使用此值进行 REST API 调用前，应使用 Office.context.mailbox.convertToRestId 对它进行转换。</span><span class="sxs-lookup"><span data-stu-id="7265e-533">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="7265e-534">有关更多详细信息, 请参阅[使用 outlook 外接程序中的 outlook REST api](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span><span class="sxs-lookup"><span data-stu-id="7265e-534">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span></span><!-- --><span data-ttu-id="7265e-535">.</span><span class="sxs-lookup"><span data-stu-id="7265e-535"></span></span>

      <span data-ttu-id="7265e-536">对于不包含父项目 (如单个约会、系列项目或会议请求) 的项目, webcasts&seriesid 属性将返回 null, 并且对于不是会议请求的任何其他项目, 返回 "未定义"。</span><span class="sxs-lookup"><span data-stu-id="7265e-536">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>

      <span data-ttu-id="7265e-537">\[[API 集: 邮箱 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-537">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-538">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-538">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-539">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-539">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-540">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-540">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-541">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-541">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-542">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-542">
      #### Examples</span></span>

      ```javascript
      var seriesId = Office.context.mailbox.item.seriesId;

      // The seriesId property returns null for items that do
      // not have parent items (such as single appointments,
      // series items, or meeting requests) and returns
      // undefined for messages that are not meeting requests.
      var isSeriesInstance = (seriesId != null);
      console.log("SeriesId is " + seriesId 
          + " and isSeriesInstance is " + isSeriesInstance);
      ```
    name: seriesId
    fullName: seriesId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesId: string;'
      return:
        type:
          - string
  - uid: outlook.Office.MessageRead.subject
    summary: |-
      <span data-ttu-id="7265e-543">获取项目的 "主题" 字段中显示的说明。</span><span class="sxs-lookup"><span data-stu-id="7265e-543">Gets the description that appears in the subject field of an item.</span></span>

      <span data-ttu-id="7265e-544">subject 属性获取或设置由电子邮件服务器发送的项目的整个主题。</span><span class="sxs-lookup"><span data-stu-id="7265e-544">The subject property gets or sets the entire subject of the item, as sent by the email server.</span></span>

      <span data-ttu-id="7265e-545">subject 属性返回一个字符串。</span><span class="sxs-lookup"><span data-stu-id="7265e-545">The subject property returns a string.</span></span> <span data-ttu-id="7265e-546">使用 normalizedSubject 属性可获取主题减去任何前导前缀, 如 RE: 和 FW:。</span><span class="sxs-lookup"><span data-stu-id="7265e-546">Use the normalizedSubject property to get the subject minus any leading prefixes such as RE: and FW:.</span></span>

      <span data-ttu-id="7265e-547">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-547">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-548">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-548">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-549">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-549">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-550">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-550">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-551">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-551">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-552">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-552">
      #### Examples</span></span>

      ```javascript
      // The following JavaScript code example shows how to access the
      // `subject` property of the current item in Outlook.

      // The initialize function is required for all apps.
      Office.initialize = function () {
          // Checks for the DOM to load using the jQuery ready function.
          $(document).ready(function () {
              // After the DOM is loaded, app-specific code can run.
              var item = Office.context.mailbox.item;
              var subject = item.subject;
              // Continue with processing the subject of the current item,
              // which can be a message or appointment.
          });
      };
      ```
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: string;'
      return:
        type:
          - string
  - uid: outlook.Office.MessageRead.to
    summary: |-
      <span data-ttu-id="7265e-553">提供对邮件的“收件人”行上的收件人的访问权限。</span><span class="sxs-lookup"><span data-stu-id="7265e-553">Provides access to the recipients on the To line of a message.</span></span> <span data-ttu-id="7265e-554">对象的类型和访问级别取决于当前项目的模式。</span><span class="sxs-lookup"><span data-stu-id="7265e-554">The type of object and level of access depends on the mode of the current item.</span></span>

      <span data-ttu-id="7265e-555">to 属性返回一个数组, 该数组包含邮件的 "收件人" 行中列出的每个收件人的 EmailAddressDetails 对象。</span><span class="sxs-lookup"><span data-stu-id="7265e-555">The to property returns an array that contains an EmailAddressDetails object for each recipient listed on the To line of the message.</span></span> <span data-ttu-id="7265e-556">集合上限为 100 个成员。</span><span class="sxs-lookup"><span data-stu-id="7265e-556">The collection is limited to a maximum of 100 members.</span></span>

      <span data-ttu-id="7265e-557">\[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7265e-557">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <table> <tr><td>[<span data-ttu-id="7265e-558">最低权限级别</span><span class="sxs-lookup"><span data-stu-id="7265e-558">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="7265e-559">ReadItem</span><span class="sxs-lookup"><span data-stu-id="7265e-559">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="7265e-560">适用的 Outlook 模式</span><span class="sxs-lookup"><span data-stu-id="7265e-560">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="7265e-561">邮件读取</span><span class="sxs-lookup"><span data-stu-id="7265e-561">Message Read</span></span></td></tr> </table><span data-ttu-id="7265e-562">
      ####说明</span><span class="sxs-lookup"><span data-stu-id="7265e-562">
      #### Examples</span></span>

      ```javascript
      console.log(JSON.stringify(Office.context.mailbox.item.to));
      ```
    name: to
    fullName: to
    langs:
      - typeScript
    type: property
    syntax:
      content: 'to: EmailAddressDetails[];'
      return:
        type:
          - 'EmailAddressDetails[]'