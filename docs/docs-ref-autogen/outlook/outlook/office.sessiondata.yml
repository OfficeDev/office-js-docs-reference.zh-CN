### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.SessionData:interface'
    summary: |-
      提供用于管理项的会话数据的方法。

      \[[API 集：邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **：`ReadItem`

      **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **：撰写
    isPreview: true
    name: Office.SessionData
    fullName: Office.SessionData
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.SessionData#clearAsync:member(1)'
      - 'outlook!Office.SessionData#clearAsync:member(2)'
      - 'outlook!Office.SessionData#getAllAsync:member(1)'
      - 'outlook!Office.SessionData#getAsync:member(1)'
      - 'outlook!Office.SessionData#removeAsync:member(1)'
      - 'outlook!Office.SessionData#removeAsync:member(2)'
      - 'outlook!Office.SessionData#setAsync:member(1)'
      - 'outlook!Office.SessionData#setAsync:member(2)'
  - uid: 'outlook!Office.SessionData#clearAsync:member(1)'
    summary: |-
      清除所有会话数据键/值对。

      \[[API 集：邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **：`ReadWriteItem`

      **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **：撰写
    isPreview: true
    name: 'clearAsync(options, callback)'
    fullName: 'clearAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 可选。 包含一个或多个以下属性的对象文本。 `asyncContext`<!-- -->：开发人员可以在回调方法中提供希望访问的任何对象。
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 可选。 方法完成后， `callback` 使用单个参数调用在参数中传递的函数。 `asyncResult`<!-- -->，它是一个 `Office.AsyncResult` 对象。
          type:
            - 'outlook!Office.SessionData#clearAsync~0:complex'
  - uid: 'outlook!Office.SessionData#clearAsync:member(2)'
    summary: |-
      清除所有会话数据键/值对。

      \[[API 集：邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **：`ReadWriteItem`

      **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **：撰写

      #### <a name="examples"></a>示例

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/session-data-apis.yaml
      Office.context.mailbox.item.sessionData.clearAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("sessionData.clearAsync succeeded");
        } else {
          console.log("Failed to clear sessionData. Error: " + JSON.stringify(asyncResult.error));
        }
      });
      ```
    isPreview: true
    name: clearAsync(callback)
    fullName: clearAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearAsync(callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 可选。 方法完成后， `callback` 使用单个参数调用在参数中传递的函数。 `asyncResult`<!-- -->，它是一个 `Office.AsyncResult` 对象。
          type:
            - 'outlook!Office.SessionData#clearAsync~1:complex'
  - uid: 'outlook!Office.SessionData#getAllAsync:member(1)'
    summary: |-
      获取所有会话数据键/值对。

      \[[API 集：邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **：`ReadWriteItem`

      **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **：撰写

      #### <a name="examples"></a>示例

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/session-data-apis.yaml
      Office.context.mailbox.item.sessionData.getAllAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("The sessionData is " + JSON.stringify(asyncResult.value));
        } else {
          console.log("Failed to get all sessionData. Error: " + JSON.stringify(asyncResult.error));
        }
      });
      ```
    isPreview: true
    name: getAllAsync(callback)
    fullName: getAllAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 方法完成后， `callback` 使用单个参数调用在参数中传递的函数。 `asyncResult`<!-- -->，它是一个 `Office.AsyncResult` 对象。
          type:
            - 'outlook!Office.SessionData#getAllAsync~0:complex'
  - uid: 'outlook!Office.SessionData#getAsync:member(1)'
    summary: |-
      获取指定键的会话数据值。

      \[[API 集：邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **：`ReadItem`

      **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **：撰写

      #### <a name="examples"></a>示例

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/session-data-apis.yaml
      Office.context.mailbox.item.sessionData.getAsync(
        "Date",
        function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("The sessionData value is " + JSON.stringify(asyncResult.value));
        } else {
          console.log("Failed to get sessionData. Error: " + JSON.stringify(asyncResult.error));
        }
      });
      ```
    isPreview: true
    name: 'getAsync(name, callback)'
    fullName: 'getAsync(name, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(name: string, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: 会话数据密钥。
          type:
            - string
        - id: callback
          description: 方法完成后， `callback` 使用单个参数类型调用在参数中传递的函数 `Office.AsyncResult`<!-- -->.
          type:
            - 'outlook!Office.SessionData#getAsync~0:complex'
  - uid: 'outlook!Office.SessionData#removeAsync:member(1)'
    summary: |-
      删除会话数据键/值对。

      \[[API 集：邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **：`ReadWriteItem`

      **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **：撰写
    isPreview: true
    name: 'removeAsync(name, options, callback)'
    fullName: 'removeAsync(name, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(name: string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: 会话数据密钥。
          type:
            - string
        - id: options
          description: 可选。 包含一个或多个以下属性的对象文本。 `asyncContext`<!-- -->：开发人员可以在回调方法中提供希望访问的任何对象。
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 可选。 方法完成后， `callback` 使用单个参数调用在参数中传递的函数。 `asyncResult`<!-- -->，它是一个 `Office.AsyncResult` 对象。
          type:
            - 'outlook!Office.SessionData#removeAsync~0:complex'
  - uid: 'outlook!Office.SessionData#removeAsync:member(2)'
    summary: |-
      删除会话数据键/值对。

      \[[API 集：邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **：`ReadWriteItem`

      **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **：撰写

      #### <a name="examples"></a>示例

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/session-data-apis.yaml
      Office.context.mailbox.item.sessionData.removeAsync(
        "Date",
        function callback(asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
            console.log("sessionData.removeAsync succeeded");
          } else {
            console.log("Failed to remove sessionData. Error: " + JSON.stringify(asyncResult.error));
          }
        }
      );
      ```
    isPreview: true
    name: 'removeAsync(name, callback)'
    fullName: 'removeAsync(name, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(name: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: 会话数据密钥。
          type:
            - string
        - id: callback
          description: 可选。 方法完成后， `callback` 使用单个参数调用在参数中传递的函数。 `asyncResult`<!-- -->，它是一个 `Office.AsyncResult` 对象。
          type:
            - 'outlook!Office.SessionData#removeAsync~1:complex'
  - uid: 'outlook!Office.SessionData#setAsync:member(1)'
    summary: |-
      设置会话数据键/值对。

      \[[API 集：邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **：`ReadItem`

      **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **：撰写
    isPreview: true
    name: 'setAsync(name, value, options, callback)'
    fullName: 'setAsync(name, value, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(name: string, value: string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: 会话数据密钥。
          type:
            - string
        - id: value
          description: 字符串形式的会话数据值。
          type:
            - string
        - id: options
          description: 可选。 包含一个或多个以下属性的对象文本。 `asyncContext`<!-- -->：开发人员可以在回调方法中提供希望访问的任何对象。
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 可选。 方法完成后， `callback` 使用单个参数类型调用在参数中传递的函数 `Office.AsyncResult`<!-- -->.
          type:
            - 'outlook!Office.SessionData#setAsync~0:complex'
  - uid: 'outlook!Office.SessionData#setAsync:member(2)'
    summary: |-
      设置会话数据键/值对。

      \[[API 集：邮箱预览](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- --> **：`ReadItem`

      **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- --> **：撰写

      #### <a name="examples"></a>示例

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/99-preview-apis/session-data-apis.yaml
      Office.context.mailbox.item.sessionData.setAsync(
        "Date",
        "7/24/2020",
        function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("sessionData.setAsync succeeded");
        } else {
          console.log("Failed to set sessionData. Error: " + JSON.stringify(asyncResult.error));
        }
      });
      ```
    isPreview: true
    name: 'setAsync(name, value, callback)'
    fullName: 'setAsync(name, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(name: string, value: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: 会话数据密钥。
          type:
            - string
        - id: value
          description: 字符串形式的会话数据值。
          type:
            - string
        - id: callback
          description: 可选。 方法完成后， `callback` 使用单个参数类型调用在参数中传递的函数 `Office.AsyncResult`<!-- -->.
          type:
            - 'outlook!Office.SessionData#setAsync~1:complex'
references:
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.SessionData#clearAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.SessionData#clearAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.SessionData#getAllAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.SessionData#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.SessionData#removeAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.SessionData#removeAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.SessionData#setAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.SessionData#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void