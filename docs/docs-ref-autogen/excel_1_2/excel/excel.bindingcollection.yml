### YamlMime:UniversalReference
items:
  - uid: excel.Excel.BindingCollection
    summary: |-
      <span data-ttu-id="c4b9c-101">表示属于工作簿的所有绑定对象的集合。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-101">Represents the collection of all the binding objects that are part of the workbook.</span></span>

      <span data-ttu-id="c4b9c-102">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c4b9c-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.BindingCollection
    fullName: Excel.BindingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.BindingCollection.context
      - excel.Excel.BindingCollection.count
      - excel.Excel.BindingCollection.getItem
      - excel.Excel.BindingCollection.getItemAt
      - excel.Excel.BindingCollection.items
      - excel.Excel.BindingCollection.load
      - excel.Excel.BindingCollection.load_1
      - excel.Excel.BindingCollection.load_2
      - excel.Excel.BindingCollection.toJSON
  - uid: excel.Excel.BindingCollection.context
    summary: <span data-ttu-id="c4b9c-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-103">The request context associated with the object.</span></span> <span data-ttu-id="c4b9c-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.BindingCollection.count
    summary: |-
      <span data-ttu-id="c4b9c-105">返回集合中绑定的数量。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-105">Returns the number of bindings in the collection.</span></span> <span data-ttu-id="c4b9c-106">只读。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-106">Read-only.</span></span>

      <span data-ttu-id="c4b9c-107">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c4b9c-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.BindingCollection.getItem
    summary: |-
      <span data-ttu-id="c4b9c-108">按 ID 获取绑定对象。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-108">Gets a binding object by ID.</span></span>

      <span data-ttu-id="c4b9c-109">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c4b9c-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(id)
    fullName: getItem(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(id: string): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c4b9c-110">示例</span><span class="sxs-lookup"><span data-stu-id="c4b9c-110">Examples</span></span>

          ```javascript
          // Create a table binding to monitor data changes in the table. 
          // When data is changed, the background color of the table will be changed to orange.
          function addEventHandler() {
              // Create Table1
              Excel.run(function (ctx) { 
                  ctx.workbook.tables.add("Sheet1!A1:C4", true);
                  return ctx.sync().then(function() {
                          console.log("My Diet Data Inserted!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
              //Create a new table binding for Table1
              Office.context.document.bindings.addFromNamedItemAsync(
                  "Table1", Office.CoercionType.Table, { id: "myBinding" }, function (asyncResult) {
                  if (asyncResult.status == "failed") {
                      console.log("Action failed with error: " + asyncResult.error.message);
                  }
                  else {
                      // If succeeded, then add event handler to the table binding.
                      Office.select("bindings#myBinding").addHandlerAsync(
                          Office.EventType.BindingDataChanged, onBindingDataChanged);
                  }
              });
          }
              
          // when data in the table is changed, this event will be triggered.
          function onBindingDataChanged(eventArgs) {
              Excel.run(function (ctx) { 
                  // highlight the table in orange to indicate data has been changed.
                  ctx.workbook.bindings.getItem(eventArgs.binding.id).getTable().getDataBodyRange().format.fill.color = "Orange";
                  return ctx.sync().then(function() {
                          console.log("The value in this table got changed!");
                  })
                  .catch(function (error) {
                          console.log(JSON.stringify(error));
                  });
              });
          }
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="c4b9c-111">要检索的绑定对象的 ID。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-111">Id of the binding object to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.BindingCollection.getItemAt
    summary: |-
      <span data-ttu-id="c4b9c-112">根据其在项目数组中的位置获取绑定对象。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-112">Gets a binding object based on its position in the items array.</span></span>

      <span data-ttu-id="c4b9c-113">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c4b9c-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Binding;'
      return:
        type:
          - excel.Excel.Binding
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c4b9c-114">示例</span><span class="sxs-lookup"><span data-stu-id="c4b9c-114">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var lastPosition = ctx.workbook.bindings.count - 1;
              var binding = ctx.workbook.bindings.getItemAt(lastPosition);
              binding.load('type')
              return ctx.sync().then(function() {
                      console.log(binding.type); 
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="c4b9c-115">要检索的对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-115">Index value of the object to be retrieved.</span></span> <span data-ttu-id="c4b9c-116">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-116">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.BindingCollection.items
    summary: <span data-ttu-id="c4b9c-117">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-117">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Binding[];'
      return:
        type:
          - 'Excel.Binding[]'
  - uid: excel.Excel.BindingCollection.load
    summary: <span data-ttu-id="c4b9c-118">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c4b9c-119">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-119">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c4b9c-120">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="c4b9c-120">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c4b9c-121">`load(option?: string | string[]): Excel.BindingCollection`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-121">`load(option?: string | string[]): Excel.BindingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c4b9c-122">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-122">`load(option?: { select?: string; expand?: string; }): Excel.BindingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c4b9c-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.BindingCollection` - Only available on collection types.</span></span> <span data-ttu-id="c4b9c-124">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-124">It is similar to the preceding signature.</span></span> <span data-ttu-id="c4b9c-125">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-125">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c4b9c-126">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-126">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c4b9c-127">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-127">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.BindingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.BindingCollection.load_1
    summary: '<span data-ttu-id="c4b9c-128">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c4b9c-129">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-129">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c4b9c-130">示例</span><span class="sxs-lookup"><span data-stu-id="c4b9c-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < bindings.items.length; i++)
                  {
                      console.log(bindings.items[i].id);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of bindings
          Excel.run(function (ctx) { 
              var bindings = ctx.workbook.bindings;
              bindings.load('count');
              return ctx.sync().then(function() {
                  console.log("Bindings: Count= " + bindings.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="c4b9c-131">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-131">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.BindingCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.BindingCollection.toJSON
    summary: '<span data-ttu-id="c4b9c-132">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c4b9c-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c4b9c-133">.</span><span class="sxs-lookup"><span data-stu-id="c4b9c-133"></span></span> <span data-ttu-id="c4b9c-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c4b9c-134"></span></span><!-- --><span data-ttu-id="c4b9c-135">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.BindingCollection`对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Excel.Interfaces.BindingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="c4b9c-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.BindingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingCollectionData`</span></span><!-- --><span data-ttu-id="c4b9c-136">), 其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="c4b9c-136">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.BindingCollectionData
        description: ''