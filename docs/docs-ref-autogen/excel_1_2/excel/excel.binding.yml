### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Binding:class'
    summary: |-
      <span data-ttu-id="1883b-101">表示工作簿中定义的 Office.js 绑定。</span><span class="sxs-lookup"><span data-stu-id="1883b-101">Represents an Office.js binding that is defined in the workbook.</span></span>

      <span data-ttu-id="1883b-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1883b-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Binding
    fullName: Excel.Binding
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Binding#context:member'
      - 'excel!Excel.Binding#getRange:member(1)'
      - 'excel!Excel.Binding#getTable:member(1)'
      - 'excel!Excel.Binding#getText:member(1)'
      - 'excel!Excel.Binding#id:member'
      - 'excel!Excel.Binding#load:member(1)'
      - 'excel!Excel.Binding#load:member(2)'
      - 'excel!Excel.Binding#load:member(3)'
      - 'excel!Excel.Binding#onDataChanged:member'
      - 'excel!Excel.Binding#onSelectionChanged:member'
      - 'excel!Excel.Binding#toJSON:member(1)'
      - 'excel!Excel.Binding#type:member'
  - uid: 'excel!Excel.Binding#context:member'
    summary: <span data-ttu-id="1883b-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="1883b-103">The request context associated with the object.</span></span> <span data-ttu-id="1883b-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="1883b-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Binding#getRange:member(1)'
    summary: |-
      <span data-ttu-id="1883b-105">返回绑定表示的区域。</span><span class="sxs-lookup"><span data-stu-id="1883b-105">Returns the range represented by the binding.</span></span> <span data-ttu-id="1883b-106">如果绑定类型不正确，将引发错误。</span><span class="sxs-lookup"><span data-stu-id="1883b-106">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="1883b-107">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1883b-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1883b-108">示例</span><span class="sxs-lookup"><span data-stu-id="1883b-108">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var range = binding.getRange();
              range.load('cellCount');
              return ctx.sync().then(function() {
                  console.log(range.cellCount);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Binding#getTable:member(1)'
    summary: |-
      <span data-ttu-id="1883b-109">返回绑定表示的表。</span><span class="sxs-lookup"><span data-stu-id="1883b-109">Returns the table represented by the binding.</span></span> <span data-ttu-id="1883b-110">如果绑定类型不正确，将引发错误。</span><span class="sxs-lookup"><span data-stu-id="1883b-110">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="1883b-111">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1883b-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTable()
    fullName: getTable()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTable(): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1883b-112">示例</span><span class="sxs-lookup"><span data-stu-id="1883b-112">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var table = binding.getTable();
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Binding#getText:member(1)'
    summary: |-
      <span data-ttu-id="1883b-113">返回绑定表示的文本。</span><span class="sxs-lookup"><span data-stu-id="1883b-113">Returns the text represented by the binding.</span></span> <span data-ttu-id="1883b-114">如果绑定类型不正确，将引发错误。</span><span class="sxs-lookup"><span data-stu-id="1883b-114">Will throw an error if binding is not of the correct type.</span></span>

      <span data-ttu-id="1883b-115">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1883b-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getText()
    fullName: getText()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getText(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'excel!Excel.Binding#getText~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1883b-116">示例</span><span class="sxs-lookup"><span data-stu-id="1883b-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              var text = binding.getText();
              binding.load('text');
              return ctx.sync().then(function() {
                  console.log(text);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Binding#id:member'
    summary: |-
      <span data-ttu-id="1883b-117">表示绑定标识符。</span><span class="sxs-lookup"><span data-stu-id="1883b-117">Represents binding identifier.</span></span> <span data-ttu-id="1883b-118">只读。</span><span class="sxs-lookup"><span data-stu-id="1883b-118">Read-only.</span></span>

      <span data-ttu-id="1883b-119">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1883b-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Binding#load:member(1)'
    summary: <span data-ttu-id="1883b-120">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="1883b-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1883b-121">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="1883b-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.BindingLoadOptions): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="1883b-122">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="1883b-122">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.BindingLoadOptions:interface'
  - uid: 'excel!Excel.Binding#load:member(2)'
    summary: <span data-ttu-id="1883b-123">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="1883b-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1883b-124">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="1883b-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Binding;'
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1883b-125">示例</span><span class="sxs-lookup"><span data-stu-id="1883b-125">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var binding = ctx.workbook.bindings.getItemAt(0);
              binding.load('type');
              return ctx.sync().then(function() {
                  console.log(binding.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="1883b-126">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="1883b-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Binding#load:member(3)'
    summary: <span data-ttu-id="1883b-127">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="1883b-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1883b-128">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="1883b-128">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Binding;
      return:
        type:
          - 'excel!Excel.Binding:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="1883b-129">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="1883b-129">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Binding#onDataChanged:member'
    summary: |-
      <span data-ttu-id="1883b-130">当绑定内的数据或格式变化时发生。</span><span class="sxs-lookup"><span data-stu-id="1883b-130">Occurs when data or formatting within the binding is changed.</span></span>

      <span data-ttu-id="1883b-131">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1883b-131">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onDataChanged
    fullName: onDataChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Binding#onDataChanged~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1883b-132">示例</span><span class="sxs-lookup"><span data-stu-id="1883b-132">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");    
              const salesTable = sheet.tables.getItem("SalesTable");
              const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), "Table", "SalesByQuarter");
              salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);

              console.log("The data changed handler is registered.");

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Binding#onSelectionChanged:member'
    summary: |-
      <span data-ttu-id="1883b-133">当绑定中的所选内容更改时发生。</span><span class="sxs-lookup"><span data-stu-id="1883b-133">Occurs when the selected content in the binding is changed.</span></span>

      <span data-ttu-id="1883b-134">\[[API 集： ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1883b-134">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Binding#onSelectionChanged~0:complex'
  - uid: 'excel!Excel.Binding#toJSON:member(1)'
    summary: '<span data-ttu-id="1883b-135">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1883b-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1883b-136">.</span><span class="sxs-lookup"><span data-stu-id="1883b-136"></span></span> <span data-ttu-id="1883b-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1883b-137"></span></span><!-- --><span data-ttu-id="1883b-138">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel. Binding 对象是 API 对象，但`toJSON`方法返回一个简单的 JavaScript 对象（类型为`Excel.Interfaces.BindingData`</span><span class="sxs-lookup"><span data-stu-id="1883b-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Binding object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingData`</span></span><!-- --><span data-ttu-id="1883b-139">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="1883b-139">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.BindingData;'
      return:
        type:
          - 'excel!Excel.Interfaces.BindingData:interface'
        description: ''
  - uid: 'excel!Excel.Binding#type:member'
    summary: |-
      <span data-ttu-id="1883b-140">返回绑定的类型。</span><span class="sxs-lookup"><span data-stu-id="1883b-140">Returns the type of the binding.</span></span> <span data-ttu-id="1883b-141">有关详细信息，请参阅 BindingType。</span><span class="sxs-lookup"><span data-stu-id="1883b-141">See Excel.BindingType for details.</span></span> <span data-ttu-id="1883b-142">只读。</span><span class="sxs-lookup"><span data-stu-id="1883b-142">Read-only.</span></span>

      <span data-ttu-id="1883b-143">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1883b-143">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
      return:
        type:
          - 'excel!Excel.Binding#type~0:complex'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.Binding#getText~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'excel!Excel.Binding:class'
    name: Excel.Binding
  - uid: 'excel!Excel.Interfaces.BindingLoadOptions:interface'
    name: Excel.Interfaces.BindingLoadOptions
  - uid: 'excel!Excel.Binding#onDataChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.BindingDataChangedEventArgs:interface'
        name: Excel.BindingDataChangedEventArgs
        fullName: Excel.BindingDataChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Binding#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.BindingSelectionChangedEventArgs:interface'
        name: Excel.BindingSelectionChangedEventArgs
        fullName: Excel.BindingSelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Interfaces.BindingData:interface'
    name: Excel.Interfaces.BindingData
  - uid: 'excel!Excel.Binding#type~0:complex'
    name: Excel.BindingType | "Range" | "Table" | "Text"
    fullName: Excel.BindingType | "Range" | "Table" | "Text"
    spec.typeScript:
      - uid: 'excel!Excel.BindingType:enum'
        name: Excel.BindingType
        fullName: Excel.BindingType
      - name: ' | "Range" | "Table" | "Text"'
        fullName: ' | "Range" | "Table" | "Text"'