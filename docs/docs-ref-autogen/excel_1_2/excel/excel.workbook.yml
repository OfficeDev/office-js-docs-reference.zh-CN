### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Workbook
    summary: |-
      <span data-ttu-id="05f82-101">工作簿是顶级对象，它包含相关 workbook 对象，例如工作表、表、范围等。</span><span class="sxs-lookup"><span data-stu-id="05f82-101">Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc.</span></span>

      <span data-ttu-id="05f82-102">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05f82-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Workbook
    fullName: Excel.Workbook
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Workbook.application
      - excel.Excel.Workbook.bindings
      - excel.Excel.Workbook.context
      - excel.Excel.Workbook.functions
      - excel.Excel.Workbook.getSelectedRange
      - excel.Excel.Workbook.load
      - excel.Excel.Workbook.load_1
      - excel.Excel.Workbook.load_2
      - excel.Excel.Workbook.names
      - excel.Excel.Workbook.onSelectionChanged
      - excel.Excel.Workbook.set
      - excel.Excel.Workbook.set_1
      - excel.Excel.Workbook.tables
      - excel.Excel.Workbook.toJSON
      - excel.Excel.Workbook.worksheets
  - uid: excel.Excel.Workbook.application
    summary: |-
      <span data-ttu-id="05f82-103">表示包含此工作簿的 Excel 应用程序实例。</span><span class="sxs-lookup"><span data-stu-id="05f82-103">Represents the Excel application instance that contains this workbook.</span></span> <span data-ttu-id="05f82-104">只读。</span><span class="sxs-lookup"><span data-stu-id="05f82-104">Read-only.</span></span>

      <span data-ttu-id="05f82-105">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05f82-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: application
    fullName: application
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly application: Excel.Application;'
      return:
        type:
          - excel.Excel.Application
  - uid: excel.Excel.Workbook.bindings
    summary: |-
      <span data-ttu-id="05f82-106">表示属于工作簿的绑定的集合。</span><span class="sxs-lookup"><span data-stu-id="05f82-106">Represents a collection of bindings that are part of the workbook.</span></span> <span data-ttu-id="05f82-107">只读。</span><span class="sxs-lookup"><span data-stu-id="05f82-107">Read-only.</span></span>

      <span data-ttu-id="05f82-108">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05f82-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: bindings
    fullName: bindings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly bindings: Excel.BindingCollection;'
      return:
        type:
          - excel.Excel.BindingCollection
  - uid: excel.Excel.Workbook.context
    summary: <span data-ttu-id="05f82-109">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="05f82-109">The request context associated with the object.</span></span> <span data-ttu-id="05f82-110">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="05f82-110">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Workbook.functions
    summary: |-
      <span data-ttu-id="05f82-111">代表可用于计算的工作表函数的集合。</span><span class="sxs-lookup"><span data-stu-id="05f82-111">Represents a collection of worksheet functions that can be used for computation.</span></span> <span data-ttu-id="05f82-112">只读。</span><span class="sxs-lookup"><span data-stu-id="05f82-112">Read-only.</span></span>

      <span data-ttu-id="05f82-113">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05f82-113">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: functions
    fullName: functions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly functions: Excel.Functions;'
      return:
        type:
          - excel.Excel.Functions
  - uid: excel.Excel.Workbook.getSelectedRange
    summary: |-
      <span data-ttu-id="05f82-114">从工作簿中获取当前选定的单个区域。</span><span class="sxs-lookup"><span data-stu-id="05f82-114">Gets the currently selected single range from the workbook.</span></span> <span data-ttu-id="05f82-115">如果选择了多个区域, 则此方法将引发错误。</span><span class="sxs-lookup"><span data-stu-id="05f82-115">If there are multiple ranges selected, this method will throw an error.</span></span>

      <span data-ttu-id="05f82-116">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05f82-116">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getSelectedRange()
    fullName: getSelectedRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="05f82-117">示例</span><span class="sxs-lookup"><span data-stu-id="05f82-117">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var selectedRange = ctx.workbook.getSelectedRange();
              selectedRange.load('address');
              return ctx.sync().then(function() {
                      console.log(selectedRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel.Excel.Workbook.load
    summary: <span data-ttu-id="05f82-118">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="05f82-119">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="05f82-119">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="05f82-120">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="05f82-120">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="05f82-121">`load(option?: string | string[]): Excel.Workbook`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-121">`load(option?: string | string[]): Excel.Workbook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="05f82-122">`load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-122">`load(option?: { select?: string; expand?: string; }): Excel.Workbook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="05f82-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="05f82-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook` - Only available on collection types.</span></span> <span data-ttu-id="05f82-124">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="05f82-124">It is similar to the preceding signature.</span></span> <span data-ttu-id="05f82-125">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="05f82-125">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="05f82-126">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="05f82-126">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="05f82-127">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="05f82-127">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorkbookLoadOptions
  - uid: excel.Excel.Workbook.load_1
    summary: '<span data-ttu-id="05f82-128">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="05f82-129">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="05f82-129">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="05f82-130">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Workbook.load_2
    summary: '<span data-ttu-id="05f82-131">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="05f82-132">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="05f82-132">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
      return:
        type:
          - excel.Excel.Workbook
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="05f82-133">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Workbook.names
    summary: |-
      <span data-ttu-id="05f82-134">表示工作簿范围内的已命名项目（称为区域和常量）的集合。</span><span class="sxs-lookup"><span data-stu-id="05f82-134">Represents a collection of workbook scoped named items (named ranges and constants).</span></span> <span data-ttu-id="05f82-135">只读。</span><span class="sxs-lookup"><span data-stu-id="05f82-135">Read-only.</span></span>

      <span data-ttu-id="05f82-136">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05f82-136">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: names
    fullName: names
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly names: Excel.NamedItemCollection;'
      return:
        type:
          - excel.Excel.NamedItemCollection
  - uid: excel.Excel.Workbook.onSelectionChanged
    summary: |-
      <span data-ttu-id="05f82-137">文档中的选择更改时发生。</span><span class="sxs-lookup"><span data-stu-id="05f82-137">Occurs when the selection in the document is changed.</span></span>

      <span data-ttu-id="05f82-138">\[[API 集: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05f82-138">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
  - uid: excel.Excel.Workbook.set
    summary: '<span data-ttu-id="05f82-139">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-139">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="05f82-140">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="05f82-140">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="05f82-141">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="05f82-141">This method has the following additional signature:</span></span>

      `set(properties: Excel.Workbook): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="05f82-142">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-142">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.WorkbookUpdateData
        - id: options
          description: '<span data-ttu-id="05f82-143">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="05f82-143">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.Workbook.set_1
    summary: '<span data-ttu-id="05f82-144">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="05f82-144">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Workbook): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Workbook
  - uid: excel.Excel.Workbook.tables
    summary: |-
      <span data-ttu-id="05f82-145">表示与工作簿关联的表的集合。</span><span class="sxs-lookup"><span data-stu-id="05f82-145">Represents a collection of tables associated with the workbook.</span></span> <span data-ttu-id="05f82-146">只读。</span><span class="sxs-lookup"><span data-stu-id="05f82-146">Read-only.</span></span>

      <span data-ttu-id="05f82-147">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05f82-147">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
  - uid: excel.Excel.Workbook.toJSON
    summary: '<span data-ttu-id="05f82-148">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="05f82-148">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="05f82-149">.</span><span class="sxs-lookup"><span data-stu-id="05f82-149"></span></span> <span data-ttu-id="05f82-150">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="05f82-150"></span></span><!-- --><span data-ttu-id="05f82-151">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Excel 工作簿对象是 API 对象, 但`toJSON`方法返回一个简单的 JavaScript 对象 (类型为`Excel.Interfaces.WorkbookData`</span><span class="sxs-lookup"><span data-stu-id="05f82-151">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Workbook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookData`</span></span><!-- --><span data-ttu-id="05f82-152">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="05f82-152">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorkbookData;'
      return:
        type:
          - excel.Excel.Interfaces.WorkbookData
        description: ''
  - uid: excel.Excel.Workbook.worksheets
    summary: |-
      <span data-ttu-id="05f82-153">表示与工作簿关联的工作表的集合。</span><span class="sxs-lookup"><span data-stu-id="05f82-153">Represents a collection of worksheets associated with the workbook.</span></span> <span data-ttu-id="05f82-154">只读。</span><span class="sxs-lookup"><span data-stu-id="05f82-154">Read-only.</span></span>

      <span data-ttu-id="05f82-155">\[[API 集: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="05f82-155">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheets
    fullName: worksheets
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheets: Excel.WorksheetCollection;'
      return:
        type:
          - excel.Excel.WorksheetCollection