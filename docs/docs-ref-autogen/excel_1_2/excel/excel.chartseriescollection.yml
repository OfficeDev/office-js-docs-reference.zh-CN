### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    summary: |-
      <span data-ttu-id="3bcbb-101">表示图表系列的集合。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-101">Represents a collection of chart series.</span></span>

      <span data-ttu-id="3bcbb-102">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3bcbb-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartSeriesCollection
    fullName: Excel.ChartSeriesCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartSeriesCollection#context:member'
      - 'excel!Excel.ChartSeriesCollection#count:member'
      - 'excel!Excel.ChartSeriesCollection#getItemAt:member(1)'
      - 'excel!Excel.ChartSeriesCollection#items:member'
      - 'excel!Excel.ChartSeriesCollection#load:member(1)'
      - 'excel!Excel.ChartSeriesCollection#load:member(2)'
      - 'excel!Excel.ChartSeriesCollection#load:member(3)'
      - 'excel!Excel.ChartSeriesCollection#toJSON:member(1)'
  - uid: 'excel!Excel.ChartSeriesCollection#context:member'
    summary: <span data-ttu-id="3bcbb-103">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-103">The request context associated with the object.</span></span> <span data-ttu-id="3bcbb-104">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartSeriesCollection#count:member'
    summary: |-
      <span data-ttu-id="3bcbb-105">返回集合中的系列数量。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-105">Returns the number of series in the collection.</span></span> <span data-ttu-id="3bcbb-106">只读。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-106">Read-only.</span></span>

      <span data-ttu-id="3bcbb-107">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3bcbb-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.ChartSeriesCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="3bcbb-108">根据其在集合中的位置检索系列</span><span class="sxs-lookup"><span data-stu-id="3bcbb-108">Retrieves a series based on its position in the collection.</span></span>

      <span data-ttu-id="3bcbb-109">\[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="3bcbb-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.ChartSeries;'
      return:
        type:
          - 'excel!Excel.ChartSeries:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3bcbb-110">示例</span><span class="sxs-lookup"><span data-stu-id="3bcbb-110">Examples</span></span>

          ```javascript
          // Get the name of the first series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  console.log(seriesCollection.items[0].name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="3bcbb-111">要检索的对象的索引值。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-111">Index value of the object to be retrieved.</span></span> <span data-ttu-id="3bcbb-112">从零开始编制索引。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-112">Zero-indexed.</span></span>
          type:
            - number
  - uid: 'excel!Excel.ChartSeriesCollection#items:member'
    summary: <span data-ttu-id="3bcbb-113">获取此集合中已加载的子项。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-113">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.ChartSeries[];'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection#items~0:complex'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(1)'
    summary: <span data-ttu-id="3bcbb-114">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3bcbb-115">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-115">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="3bcbb-116">提供要加载的对象的属性的选项。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-116">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.ChartSeriesCollection#load~0:complex'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(2)'
    summary: <span data-ttu-id="3bcbb-117">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3bcbb-118">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-118">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="3bcbb-119">示例</span><span class="sxs-lookup"><span data-stu-id="3bcbb-119">Examples</span></span>

          ```javascript
          // Getting the names of series in the series collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < seriesCollection.items.length; i++)
                  {
                      console.log(seriesCollection.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of chart series in collection.
          Excel.run(function (ctx) { 
              var seriesCollection = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1").series;
              seriesCollection.load('count');
              return ctx.sync().then(function() {
                  console.log("series: Count= " + seriesCollection.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="3bcbb-120">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartSeriesCollection#load:member(3)'
    summary: <span data-ttu-id="3bcbb-121">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="3bcbb-122">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.ChartSeriesCollection;'
      return:
        type:
          - 'excel!Excel.ChartSeriesCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="3bcbb-123">`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-123">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.ChartSeriesCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="3bcbb-124">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="3bcbb-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="3bcbb-125">.</span><span class="sxs-lookup"><span data-stu-id="3bcbb-125"></span></span> <span data-ttu-id="3bcbb-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="3bcbb-126"></span></span><!-- --><span data-ttu-id="3bcbb-127">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始`Excel.ChartSeriesCollection`对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.ChartSeriesCollectionData`</span><span class="sxs-lookup"><span data-stu-id="3bcbb-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartSeriesCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartSeriesCollectionData`</span></span><!-- --><span data-ttu-id="3bcbb-128">），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。</span><span class="sxs-lookup"><span data-stu-id="3bcbb-128">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartSeriesCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartSeriesCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartSeries:class'
    name: Excel.ChartSeries
  - uid: 'excel!Excel.ChartSeriesCollection#items~0:complex'
    name: 'Excel.ChartSeries[]'
    fullName: 'Excel.ChartSeries[]'
    spec.typeScript:
      - uid: 'excel!Excel.ChartSeries:class'
        name: Excel.ChartSeries
        fullName: Excel.ChartSeries
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.ChartSeriesCollection:class'
    name: Excel.ChartSeriesCollection
  - uid: 'excel!Excel.ChartSeriesCollection#load~0:complex'
    name: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.ChartSeriesCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.ChartSeriesCollectionLoadOptions:interface'
        name: Excel.Interfaces.ChartSeriesCollectionLoadOptions
        fullName: Excel.Interfaces.ChartSeriesCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.ChartSeriesCollectionData:interface'
    name: Excel.Interfaces.ChartSeriesCollectionData