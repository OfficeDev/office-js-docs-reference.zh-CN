### YamlMime:TSType
name: Excel.Comment
uid: excel!Excel.Comment:class
package: excel!
fullName: Excel.Comment
summary: >-
  代表工作簿中的注释。


  \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: authorEmail
  uid: excel!Excel.Comment#authorEmail:member
  package: excel!
  fullName: authorEmail
  summary: >-
    获取批注作者的电子邮件。


    \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorEmail: string;'
    return:
      type: string
- name: authorName
  uid: excel!Excel.Comment#authorName:member
  package: excel!
  fullName: authorName
  summary: >-
    获取批注作者的姓名。


    \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorName: string;'
    return:
      type: string
- name: content
  uid: excel!Excel.Comment#content:member
  package: excel!
  fullName: content
  summary: >-
    批注的内容。 字符串为纯文本。


    \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'content: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/12-comment/comment-basics.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Comments\");\n    const comment = sheet.comments.getItemAt(0);\n    comment.content = \"PLEASE add headers here.\";\n    await context.sync();\n});\n```"
- name: context
  uid: excel!Excel.Comment#context:member
  package: excel!
  fullName: context
  summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: creationDate
  uid: excel!Excel.Comment#creationDate:member
  package: excel!
  fullName: creationDate
  summary: >-
    获取批注的创建时间。 如果批注是从备注转换而来的，则返回 null，因为批注没有创建日期。


    \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly creationDate: Date;'
    return:
      type: Date
- name: id
  uid: excel!Excel.Comment#id:member
  package: excel!
  fullName: id
  summary: >-
    指定注释标识符。


    \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: replies
  uid: excel!Excel.Comment#replies:member
  package: excel!
  fullName: replies
  summary: >-
    表示与批注关联的回复对象的集合。


    \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly replies: Excel.CommentReplyCollection;'
    return:
      type: <xref uid="excel!Excel.CommentReplyCollection:class" />
methods:
- name: delete()
  uid: excel!Excel.Comment#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    删除批注和所有连接的答复。


    \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/12-comment/comment-basics.yaml\nawait Excel.run(async (context) => {\n    context.workbook.comments.getItemByCell(\"Comments!A2\").delete();\n    await context.sync();\n});\n```"
- name: getLocation()
  uid: excel!Excel.Comment#getLocation:member(1)
  package: excel!
  fullName: getLocation()
  summary: >-
    获取此注释所在的单元格。


    \[[API 集： ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLocation(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.Comment#load:member(1)
  package: excel!
  fullName: load(options)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.CommentLoadOptions): Excel.Comment;'
    parameters:
    - id: options
      description: 提供要加载的对象的属性的选项。
      type: <xref uid="excel!Excel.Interfaces.CommentLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Comment:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Comment#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Comment;'
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Comment:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/12-comment/comment-basics.yaml\nawait Excel.run(async (context) => {\n    const comment = context.workbook.comments.getItemByCell(\"Comments!A2\");\n    comment.load([\"authorEmail\", \"authorName\", \"creationDate\"]);\n    await context.sync();\n\n    console.log(`${comment.creationDate.toDateString()}: ${comment.authorName} (${comment.authorEmail})`);\n    await context.sync();\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Comment#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Comment;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Comment:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Comment#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: Excel.Comment): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。
      type: <xref uid="excel!Excel.Interfaces.CommentUpdateData:interface" />
    - id: options
      description: 提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Comment#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 基于现有加载的对象同时设置该对象的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Comment): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Comment:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Comment#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) 而原始的 Excel 注释对象是一个 API 对象，则该 `toJSON` 方法返回一个简单的 JavaScript 对象 (类型为 `Excel.Interfaces.CommentData`<!-- -->) ，其中包含原始对象中任何已加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.CommentData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.CommentData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: bc43172488a546195c331f3cd2f6f8e98348f827
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49165448"
