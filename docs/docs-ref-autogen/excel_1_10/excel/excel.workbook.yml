### YamlMime:TSType
name: Excel.Workbook
uid: excel!Excel.Workbook:class
package: excel!
fullName: Excel.Workbook
summary: >-
  Workbook 是顶级对象，其中包含相关的工作簿对象，如工作表、表、区域等。若要详细了解工作簿对象模型，请阅读使用 [Excel JavaScript API 处理工作簿](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks)<!-- -->.


  \[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: application
  uid: excel!Excel.Workbook#application:member
  package: excel!
  fullName: application
  summary: >-
    表示包含此工作簿的 Excel 应用程序实例。


    \[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type: <xref uid="excel!Excel.Application:class" />
- name: autoSave
  uid: excel!Excel.Workbook#autoSave:member
  package: excel!
  fullName: autoSave
  summary: >-
    指定工作簿是否位于自动保存模式。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly autoSave: boolean;'
    return:
      type: boolean
- name: bindings
  uid: excel!Excel.Workbook#bindings:member
  package: excel!
  fullName: bindings
  summary: >-
    表示属于工作簿的绑定的集合。


    \[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type: <xref uid="excel!Excel.BindingCollection:class" />
- name: calculationEngineVersion
  uid: excel!Excel.Workbook#calculationEngineVersion:member
  package: excel!
  fullName: calculationEngineVersion
  summary: >-
    返回有关 Excel 计算引擎的版本号。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly calculationEngineVersion: number;'
    return:
      type: number
- name: chartDataPointTrack
  uid: excel!Excel.Workbook#chartDataPointTrack:member
  package: excel!
  fullName: chartDataPointTrack
  summary: >-
    如果工作簿中的所有图表都跟踪它们所附加的实际数据点，则为 True。 假 如果图表跟踪数据点的索引。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'chartDataPointTrack: boolean;'
    return:
      type: boolean
- name: comments
  uid: excel!Excel.Workbook#comments:member
  package: excel!
  fullName: comments
  summary: >-
    表示与工作簿关联的批注集合。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly comments: Excel.CommentCollection;'
    return:
      type: <xref uid="excel!Excel.CommentCollection:class" />
- name: context
  uid: excel!Excel.Workbook#context:member
  package: excel!
  fullName: context
  summary: 与对象关联的请求上下文。 这会将外接程序的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: customXmlParts
  uid: excel!Excel.Workbook#customXmlParts:member
  package: excel!
  fullName: customXmlParts
  summary: >-
    表示此工作簿中包含的自定义 XML 部件的集合。


    \[[API 集：ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
    return:
      type: <xref uid="excel!Excel.CustomXmlPartCollection:class" />
- name: dataConnections
  uid: excel!Excel.Workbook#dataConnections:member
  package: excel!
  fullName: dataConnections
  summary: >-
    表示工作簿中所有数据连接。


    \[[API 集：ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataConnections: Excel.DataConnectionCollection;'
    return:
      type: <xref uid="excel!Excel.DataConnectionCollection:class" />
- name: functions
  uid: excel!Excel.Workbook#functions:member
  package: excel!
  fullName: functions
  summary: >-
    表示可用于计算的工作表函数的集合。


    \[[API 集：ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type: <xref uid="excel!Excel.Functions:class" />
- name: isDirty
  uid: excel!Excel.Workbook#isDirty:member
  package: excel!
  fullName: isDirty
  summary: >-
    指定自上次保存工作簿以来是否进行了更改。 如果要关闭修改的工作簿而不保存或提示保存，可以将此属性设置为 true。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'isDirty: boolean;'
    return:
      type: boolean
- name: name
  uid: excel!Excel.Workbook#name:member
  package: excel!
  fullName: name
  summary: >-
    获取工作簿名称。


    \[[API 集：ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: names
  uid: excel!Excel.Workbook#names:member
  package: excel!
  fullName: names
  summary: >-
    表示工作簿范围内的已命名项目（称为区域和常量）的集合。


    \[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type: <xref uid="excel!Excel.NamedItemCollection:class" />
- name: onAutoSaveSettingChanged
  uid: excel!Excel.Workbook#onAutoSaveSettingChanged:member
  package: excel!
  fullName: onAutoSaveSettingChanged
  summary: >-
    在工作簿上更改“自动保存”设置时发生。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onAutoSaveSettingChanged: OfficeExtension.EventHandlers<Excel.WorkbookAutoSaveSettingChangedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.WorkbookAutoSaveSettingChangedEventArgs:interface" />&gt;
- name: onSelectionChanged
  uid: excel!Excel.Workbook#onSelectionChanged:member
  package: excel!
  fullName: onSelectionChanged
  summary: >-
    文档中的选择更改时发生。


    \[[API 集：ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.SelectionChangedEventArgs:interface" />&gt;
- name: pivotTables
  uid: excel!Excel.Workbook#pivotTables:member
  package: excel!
  fullName: pivotTables
  summary: >-
    表示一组与 workbook 相关联的 PivotTable 对象。


    \[[API 集：ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/38-pivottable/pivottable-get-pivottables.yaml\nawait Excel.run(async (context) => {\n  // Get the names of all the PivotTables in the workbook.\n  const pivotTables = context.workbook.pivotTables;\n  pivotTables.load(\"name\");\n  await context.sync();\n\n  // Display the names in the console.\n  console.log(\"PivotTables in the workbook:\")\n  pivotTables.items.forEach((pivotTable) => {\n    console.log(`\\t${pivotTable.name}`);\n  });\n});\n```"
- name: pivotTableStyles
  uid: excel!Excel.Workbook#pivotTableStyles:member
  package: excel!
  fullName: pivotTableStyles
  summary: >-
    表示一组与工作簿相关联的 PivotTableStyles。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTableStyles: Excel.PivotTableStyleCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableStyleCollection:class" />
- name: previouslySaved
  uid: excel!Excel.Workbook#previouslySaved:member
  package: excel!
  fullName: previouslySaved
  summary: >-
    指定工作簿是在本地保存还是联机保存。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly previouslySaved: boolean;'
    return:
      type: boolean
- name: properties
  uid: excel!Excel.Workbook#properties:member
  package: excel!
  fullName: properties
  summary: >-
    获取工作簿属性。


    \[[API 集：ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly properties: Excel.DocumentProperties;'
    return:
      type: <xref uid="excel!Excel.DocumentProperties:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/26-document/properties.yaml\nawait Excel.run(async (context) => {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    console.log(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n});\n```"
- name: protection
  uid: excel!Excel.Workbook#protection:member
  package: excel!
  fullName: protection
  summary: >-
    返回工作簿的保护对象。


    \[[API 集：ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly protection: Excel.WorkbookProtection;'
    return:
      type: <xref uid="excel!Excel.WorkbookProtection:class" />
- name: readOnly
  uid: excel!Excel.Workbook#readOnly:member
  package: excel!
  fullName: readOnly
  summary: >-
    如果在只读模式下打开工作簿，则为 True。


    \[[API 集：ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly readOnly: boolean;'
    return:
      type: boolean
- name: settings
  uid: excel!Excel.Workbook#settings:member
  package: excel!
  fullName: settings
  summary: >-
    表示一组与 workbook 相关联的 setting 对象。


    \[[API 集：ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly settings: Excel.SettingCollection;'
    return:
      type: <xref uid="excel!Excel.SettingCollection:class" />
- name: slicers
  uid: excel!Excel.Workbook#slicers:member
  package: excel!
  fullName: slicers
  summary: >-
    表示与工作簿关联的切片器集合。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicers: Excel.SlicerCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerCollection:class" />
- name: slicerStyles
  uid: excel!Excel.Workbook#slicerStyles:member
  package: excel!
  fullName: slicerStyles
  summary: >-
    表示一组与工作簿相关联的 SlicerStyles。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly slicerStyles: Excel.SlicerStyleCollection;'
    return:
      type: <xref uid="excel!Excel.SlicerStyleCollection:class" />
- name: styles
  uid: excel!Excel.Workbook#styles:member
  package: excel!
  fullName: styles
  summary: >-
    表示与工作簿关联的样式的集合。


    \[[API 集：ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly styles: Excel.StyleCollection;'
    return:
      type: <xref uid="excel!Excel.StyleCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/42-range/style.yaml\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
- name: tables
  uid: excel!Excel.Workbook#tables:member
  package: excel!
  fullName: tables
  summary: >-
    表示与工作簿关联的表的集合。


    \[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type: <xref uid="excel!Excel.TableCollection:class" />
- name: tableStyles
  uid: excel!Excel.Workbook#tableStyles:member
  package: excel!
  fullName: tableStyles
  summary: >-
    表示一组与工作簿相关联的 TableStyles。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tableStyles: Excel.TableStyleCollection;'
    return:
      type: <xref uid="excel!Excel.TableStyleCollection:class" />
- name: timelineStyles
  uid: excel!Excel.Workbook#timelineStyles:member
  package: excel!
  fullName: timelineStyles
  summary: >-
    表示一组与工作簿相关联的 TimelineStyles。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly timelineStyles: Excel.TimelineStyleCollection;'
    return:
      type: <xref uid="excel!Excel.TimelineStyleCollection:class" />
- name: usePrecisionAsDisplayed
  uid: excel!Excel.Workbook#usePrecisionAsDisplayed:member
  package: excel!
  fullName: usePrecisionAsDisplayed
  summary: >-
    如果此工作簿中的计算仅使用显示的数字精度来完成，则为 True。 将此属性从 false 切换到 true 时，数据将永久失去准确性。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'usePrecisionAsDisplayed: boolean;'
    return:
      type: boolean
- name: worksheets
  uid: excel!Excel.Workbook#worksheets:member
  package: excel!
  fullName: worksheets
  summary: >-
    表示与工作簿关联的工作表的集合。


    \[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type: <xref uid="excel!Excel.WorksheetCollection:class" />
methods:
- name: getActiveCell()
  uid: excel!Excel.Workbook#getActiveCell:member(1)
  package: excel!
  fullName: getActiveCell()
  summary: >-
    获取工作簿中当前处于活动状态的单元格。


    \[[API 集：ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveCell(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/50-workbook/workbook-get-active-cell.yaml\nawait Excel.run(async (context) => {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n});\n```"
- name: getActiveChart()
  uid: excel!Excel.Workbook#getActiveChart:member(1)
  package: excel!
  fullName: getActiveChart()
  summary: >-
    获取工作簿中的当前活动图表。 如果没有活动图表，则 `ItemNotFound` 会引发异常。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveChart(): Excel.Chart;'
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: ''
- name: getActiveChartOrNullObject()
  uid: excel!Excel.Workbook#getActiveChartOrNullObject:member(1)
  package: excel!
  fullName: getActiveChartOrNullObject()
  summary: >-
    获取工作簿中的当前活动图表。 如果没有活动图表，则返回 null 对象。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveChartOrNullObject(): Excel.Chart;'
    return:
      type: <xref uid="excel!Excel.Chart:class" />
      description: ''
- name: getActiveSlicer()
  uid: excel!Excel.Workbook#getActiveSlicer:member(1)
  package: excel!
  fullName: getActiveSlicer()
  summary: >-
    获取工作簿中当前处于活动状态的切片器。 如果没有活动的切片器，则 `ItemNotFound` 会引发异常。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSlicer(): Excel.Slicer;'
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: getActiveSlicerOrNullObject()
  uid: excel!Excel.Workbook#getActiveSlicerOrNullObject:member(1)
  package: excel!
  fullName: getActiveSlicerOrNullObject()
  summary: >-
    获取工作簿中当前处于活动状态的切片器。 如果没有处于活动状态的切片器，则返回 null 对象。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActiveSlicerOrNullObject(): Excel.Slicer;'
    return:
      type: <xref uid="excel!Excel.Slicer:class" />
      description: ''
- name: getIsActiveCollabSession()
  uid: excel!Excel.Workbook#getIsActiveCollabSession:member(1)
  package: excel!
  fullName: getIsActiveCollabSession()
  summary: >-
    如果多个用户正在编辑工作簿（共同创作），则为 True。 请注意，在工作簿状态更改和更改反映在方法结果之间可能有一些延迟。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIsActiveCollabSession(): OfficeExtension.ClientResult<boolean>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;boolean&gt;
      description: ''
- name: getSelectedRange()
  uid: excel!Excel.Workbook#getSelectedRange:member(1)
  package: excel!
  fullName: getSelectedRange()
  summary: >-
    从工作簿获取当前选定的单个区域。 如果选择了多个范围，此方法将引发错误。


    \[[API 集：ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getSelectedRanges()
  uid: excel!Excel.Workbook#getSelectedRanges:member(1)
  package: excel!
  fullName: getSelectedRanges()
  summary: >-
    从工作簿中获取当前选定的一个或多个区域。 与 getSelectedRange() 不同，此方法返回表示所有选定区域的 RangeAreas 对象。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRanges(): Excel.RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/42-range/range-areas.yaml\nawait Excel.run(async (context) => {\n\n    const selectedRanges = context.workbook.getSelectedRanges();\n    selectedRanges.format.fill.color = \"lightblue\";\n\n    await context.sync();\n})\n```"
- name: load(options)
  uid: excel!Excel.Workbook#load:member(1)
  package: excel!
  fullName: load(options)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
    parameters:
    - id: options
      description: 提供要加载的对象的属性的选项。
      type: <xref uid="excel!Excel.Interfaces.WorkbookLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Workbook#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
    parameters:
    - id: propertyNames
      description: 用逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Workbook#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Workbook;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，它是一个以逗号分隔的字符串，用于指定要加载的 `propertyNamesAndPaths.expand` 导航属性。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Workbook#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 同时设置对象的多个属性。 你可以传递具有相应属性的普通对象，也可以传递同一类型的另一个 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: Excel.Workbook): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性以等态方式构造到调用该方法的对象的属性。
      type: <xref uid="excel!Excel.Interfaces.WorkbookUpdateData:interface" />
    - id: options
      description: 提供在属性对象尝试设置任何只读属性时禁止错误的选项。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Workbook#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 基于现有的已加载对象，同时设置对象上的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Workbook): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Workbook:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Workbook#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: 重写 JavaScript 方法，以便向 API 对象传递 `toJSON()` 时提供更多有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->，反过来，调用传递给该对象的方法。) 而原始 Excel.Workbook 对象是一个 API 对象，该方法返回一个类型为 (`toJSON` `toJSON` JavaScript 对象 `Excel.Interfaces.WorkbookData`<!-- -->) 包含原始对象中任何加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.WorkbookData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: b19cd3705c12be4894a5c0af51eda95a180b229d
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49852472"
