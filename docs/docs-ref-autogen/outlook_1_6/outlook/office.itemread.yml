### YamlMime:UniversalReference
items:
  - uid: outlook.Office.ItemRead
    summary: |-
      Office 的读取模式: "邮箱"。[项目](xref:outlook.Office.Item)<!-- -->.

      **重要说明**: 这是一个内部 Outlook 对象, 而不是直接通过现有接口公开。 应将其视为 "context.subname" 模式。 有关详细信息, 请参阅[对象模型](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.6/office.context.mailbox.item)页。
    name: Office.ItemRead
    fullName: Office.ItemRead
    langs:
      - typeScript
    type: interface
    extends:
      - outlook.Office.Item
    package: outlook
    children:
      - outlook.Office.ItemRead.displayReplyAllForm
      - outlook.Office.ItemRead.displayReplyForm
      - outlook.Office.ItemRead.getEntities
      - outlook.Office.ItemRead.getEntitiesByType
      - outlook.Office.ItemRead.getFilteredEntitiesByName
      - outlook.Office.ItemRead.getRegExMatches
      - outlook.Office.ItemRead.getRegExMatchesByName
      - outlook.Office.ItemRead.getSelectedEntities
      - outlook.Office.ItemRead.getSelectedRegExMatches
      - outlook.Office.ItemRead.attachments
      - outlook.Office.ItemRead.itemClass
      - outlook.Office.ItemRead.itemId
      - outlook.Office.ItemRead.normalizedSubject
      - outlook.Office.ItemRead.subject
  - uid: outlook.Office.ItemRead.displayReplyAllForm
    summary: |-
      显示答复窗体，其中包括所选邮件的发件人和所有收件人或所选约会的组织者和所有与会者。

      在 web 上的 Outlook 中, 答复窗体显示为3列视图中的弹出窗体和2列或1列视图中的弹出式窗体。

      如果任何字符串参数超出其限制, displayReplyAllForm 将引发异常。

      当附件在 formData 参数中指定时, web 上的 Outlook 和桌面客户端将尝试下载所有附件并将其附加到答复窗体。 如果无法添加任何附件，则在窗体 UI 中显示错误。 如果这不可能，则不引发错误消息。

      **注意**: 在 IOS 或 Android 上的 Outlook 中不支持此方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: 'displayReplyAllForm(formData, callback)'
    fullName: 'displayReplyAllForm(formData, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayReplyAllForm(formData: string | ReplyFormData, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formData
          description: '一个包含文本和 HTML 且表示答复窗体的正文的字符串。 该字符串限制为 32 KB 或一个[ReplyFormData](xref:outlook.Office.ReplyFormData)对象, 其中包含正文或附件数据以及回调函数。'
          type:
            - string | ReplyFormData
        - id: callback
          description: '可选。 方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 AsyncResult 对象的参数。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.ItemRead.displayReplyForm
    summary: |-
      显示答复窗体，其中仅包括所选邮件的发件人或所选约会的组织者。

      在 web 上的 Outlook 中, 答复窗体显示为3列视图中的弹出窗体和2列或1列视图中的弹出式窗体。

      如果任何字符串参数超出其限制, displayReplyForm 将引发异常。

      当附件在 formData 参数中指定时, web 上的 Outlook 和桌面客户端将尝试下载所有附件并将其附加到答复窗体。 如果无法添加任何附件，则在窗体 UI 中显示错误。 如果这不可能，则不引发错误消息。

      **注意**: 在 IOS 或 Android 上的 Outlook 中不支持此方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: 'displayReplyForm(formData, callback)'
    fullName: 'displayReplyForm(formData, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'displayReplyForm(formData: string | ReplyFormData, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formData
          description: '一个包含文本和 HTML 且表示答复窗体的正文的字符串。 该字符串限制为 32 KB 或一个[ReplyFormData](xref:outlook.Office.ReplyFormData)对象, 其中包含正文或附件数据以及回调函数。'
          type:
            - string | ReplyFormData
        - id: callback
          description: '可选。 方法完成后, 使用单个参数 asyncResult 调用在 callback 参数中传递的函数, 该参数是一个作为一个 AsyncResult 对象的参数。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.ItemRead.getEntities
    summary: |-
      获取在所选项目的正文中找到的实体。

      **注意**: 在 IOS 或 Android 上的 Outlook 中不支持此方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: getEntities()
    fullName: getEntities()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntities(): Entities;'
      return:
        type:
          - outlook.Office.Entities
        description: ''
  - uid: outlook.Office.ItemRead.getEntitiesByType
    summary: |-
      获取所选项目的正文中找到的指定实体类型的所有实体的数组。

      **注意**: 在 IOS 或 Android 上的 Outlook 中不支持此方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: 受限

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取

      当使用此方法的最低权限级别受限时，某些实体类型需要 ReadItem 才能进行访问，如下表中所指定。

      <table> <tr> <th>EntityType 的值</th> <th>返回的数组中对象的类型</th> <th>所需权限级别</th> </tr> <tr> <td>Address</td> <td>String</td> <td>受限</td> </tr> <tr> <td>联系人</td> <td>联系人</td> <td>ReadItem</td> </tr> <tr> <td>EmailAddress</td> <td>String</td> <td>ReadItem</td> </tr> <tr> <td>MeetingSuggestion</td> <td>MeetingSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>PhoneNumber</td> <td>PhoneNumber</td> <td>受限</td> </tr> <tr> <td>TaskSuggestion</td> <td>TaskSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>URL</td> <td>String</td> <td>受限</td> </tr> </table>
    name: getEntitiesByType(entityType)
    fullName: getEntitiesByType(entityType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getEntitiesByType(entityType: MailboxEnums.EntityType | string): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
      return:
        type:
          - '(string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]'
        description: '如果在 entityType 中传递的值不是 EntityType 枚举的有效成员, 则该方法返回 null。 如果指定类型的任何实体都不存在于该项目的正文中，该方法将返回空数组。 否则, 返回的数组中对象的类型取决于 entityType 参数中请求的实体的类型。'
      parameters:
        - id: entityType
          description: EntityType 枚举值之一。
          type:
            - MailboxEnums.EntityType | string
  - uid: outlook.Office.ItemRead.getFilteredEntitiesByName
    summary: |-
      返回传递清单 XML 文件中定义的命名筛选器的所选项目中的已知实体。

      GetFilteredEntitiesByName 方法返回与在清单 XML 文件中的 ItemHasKnownEntity rule 元素中定义的正则表达式匹配的实体, 具有指定的 FilterName 元素值。

      **注意**: 在 IOS 或 Android 上的 Outlook 中不支持此方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: getFilteredEntitiesByName(name)
    fullName: getFilteredEntitiesByName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilteredEntitiesByName(name: string): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
      return:
        type:
          - '(string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]'
        description: '如果清单中没有 ItemHasKnownEntity 元素与 name 参数匹配的 FilterName 元素值, 则该方法返回 null。 如果 name 参数与清单中的 ItemHasKnownEntity 元素匹配, 但当前项目中没有匹配的实体, 则该方法将返回一个空数组。'
      parameters:
        - id: name
          description: 定义要匹配的筛选器的 ItemHasKnownEntity 规则元素的名称。
          type:
            - string
  - uid: outlook.Office.ItemRead.getRegExMatches
    summary: |-
      返回所选项目中匹配在清单 XML 文件中定义的正则表达式的字符串值。

      GetRegExMatches 方法返回匹配在清单 XML 文件中的每个 ItemHasRegularExpressionMatch 或 ItemHasKnownEntity 规则元素中定义的正则表达式的字符串。 对于 ItemHasRegularExpressionMatch 规则, 匹配的字符串必须出现在由该规则指定的项的属性中。 PropertyName 简单类型定义受支持的属性。

      如果您在项目的 body 属性上指定 ItemHasRegularExpressionMatch 规则, 则正则表达式应进一步筛选正文, 并且不应尝试返回项目的整个正文。 使用正则表达式 (如. *) 获取项目的整个正文并不总是返回预期的结果。 而是使用 getAsync 方法检索整个正文。

      **注意**: 在 IOS 或 Android 上的 Outlook 中不支持此方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: getRegExMatches()
    fullName: getRegExMatches()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRegExMatches(): any;'
      return:
        type:
          - any
        description: 一个包含匹配在清单 XML 文件中定义的正则表达式的字符串数组的对象。 每个数组的名称等于匹配的 ItemHasRegularExpressionMatch 规则的 RegExName 属性的相应值或匹配 ItemHasKnownEntity 规则的 FilterName 属性的值。
  - uid: outlook.Office.ItemRead.getRegExMatchesByName
    summary: |-
      返回匹配在清单 XML 文件中定义的命名正则表达式的所选项目中的字符串值。

      GetRegExMatchesByName 方法返回与在清单 XML 文件中的 ItemHasRegularExpressionMatch rule 元素中定义的正则表达式匹配的字符串, 该正则表达式具有指定的 RegExName 元素值。

      如果您在项目的 body 属性上指定 ItemHasRegularExpressionMatch 规则, 则正则表达式应进一步筛选正文, 并且不应尝试返回项目的整个正文。 使用正则表达式 (如. *) 获取项目的整个正文并不总是返回预期的结果。

      **注意**: 在 IOS 或 Android 上的 Outlook 中不支持此方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: getRegExMatchesByName(name)
    fullName: getRegExMatchesByName(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRegExMatchesByName(name: string): string[];'
      return:
        type:
          - 'string[]'
        description: 一个包含匹配在清单 XML 文件中定义的正则表达式的字符串的数组。
      parameters:
        - id: name
          description: 定义要匹配的筛选器的 ItemHasRegularExpressionMatch 规则元素的名称。
          type:
            - string
  - uid: outlook.Office.ItemRead.getSelectedEntities
    summary: |-
      获取在用户已选择的突出显示匹配项中找到的实体。 突出显示的匹配项适用于上下文外接程序。

      **注意**: 在 IOS 或 Android 上的 Outlook 中不支持此方法。

      \[[API 集: 邮箱 1.6](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: getSelectedEntities()
    fullName: getSelectedEntities()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedEntities(): Entities;'
      return:
        type:
          - outlook.Office.Entities
        description: ''
  - uid: outlook.Office.ItemRead.getSelectedRegExMatches
    summary: |-
      返回突出显示匹配项中匹配在清单 XML 文件中定义的正则表达式的字符串值。 突出显示的匹配项适用于上下文外接程序。

      Office.context.mailbox.item.getselectedregexmatches 方法返回匹配在清单 XML 文件中的每个 ItemHasRegularExpressionMatch 或 ItemHasKnownEntity 规则元素中定义的正则表达式的字符串。 对于 ItemHasRegularExpressionMatch 规则, 匹配的字符串必须出现在由该规则指定的项的属性中。 PropertyName 简单类型定义受支持的属性。

      如果您在项目的 body 属性上指定 ItemHasRegularExpressionMatch 规则, 则正则表达式应进一步筛选正文, 并且不应尝试返回项目的整个正文。 使用正则表达式 (如. *) 获取项目的整个正文并不总是返回预期的结果。 而是使用 getAsync 方法检索整个正文。

      **注意**: 在 IOS 或 Android 上的 Outlook 中不支持此方法。

      \[[API 集: 邮箱 1.6](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: getSelectedRegExMatches()
    fullName: getSelectedRegExMatches()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedRegExMatches(): any;'
      return:
        type:
          - any
        description: 一个包含匹配在清单 XML 文件中定义的正则表达式的字符串数组的对象。 每个数组的名称等于匹配的 ItemHasRegularExpressionMatch 规则的 RegExName 属性的相应值或匹配 ItemHasKnownEntity 规则的 FilterName 属性的值。
  - uid: outlook.Office.ItemRead.attachments
    summary: |-
      以数组的形式获取项目的附件。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取

      **注意**: 由于潜在的安全问题, Outlook 阻止了某些类型的文件, 因此不会返回这些文件。 有关详细信息, 请参阅[Outlook 中阻止的附件](https://support.office.com/article/Blocked-attachments-in-Outlook-434752E1-02D3-4E90-9124-8B81E49A8519)<!-- -->.
    name: attachments
    fullName: attachments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'attachments: AttachmentDetails[];'
      return:
        type:
          - 'AttachmentDetails[]'
  - uid: outlook.Office.ItemRead.itemClass
    summary: |-
      获取选定项目的 Exchange Web 服务项目类。

      您可以创建扩展默认邮件类别的自定义邮件类别, 例如, 自定义约会邮件类 IPM。Contoso。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取

      ItemClass 属性指定选定项目的邮件类。 以下是邮件或约会项目的默认邮件类别。

      <table> <tr> <th>类型</th> <th>说明</th> <th>Item 类</th> </tr> <tr> <td>约会项目</td> <td>这些是项目类 IPM 的日历项目。约会或 IPM。约会。</td> <td>IPM.NOTE.约会、IPM。约会事件</td> </tr> <tr> <td>邮件项目</td> <td>其中包括具有默认邮件类别 IPM 的电子邮件。注意, 以及使用 IPM 的会议请求、响应和取消。Schedule: 作为基本邮件类的会议。</td> <td>IPM.NOTE.请注意, IPM。Schedule (会议) 请求, IPM。Schedule. Neg、IPM。Schedule、IPM、IPM。日程安排: 会议, IPM。日程安排. 会议. 已取消</td> </tr> </table>
    name: itemClass
    fullName: itemClass
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemClass: string;'
      return:
        type:
          - string
  - uid: outlook.Office.ItemRead.itemId
    summary: |-
      获取当前项目的 Exchange Web 服务项目标识符。

      ItemId 属性在撰写模式中不可用。 如果需要项目标识符, 则可以使用 saveAsync 方法将项目保存到存储区, 这将在回调函数的 asyncResult 参数中返回项目标识符。

      **注意**: itemId 属性返回的标识符与 Exchange Web 服务项目标识符相同。 ItemId 属性与 outlook 条目 ID 或 Outlook REST API 使用的 ID 不相同。 使用此值进行 REST API 调用前，应使用 Office.context.mailbox.convertToRestId 对它进行转换。 有关更多详细信息, 请参阅[使用 outlook 外接程序中的 OUTLOOK REST api](https://docs.microsoft.com/outlook/add-ins/use-rest-api#get-the-item-id)<!-- -->.

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: itemId
    fullName: itemId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemId: string;'
      return:
        type:
          - string
  - uid: outlook.Office.ItemRead.normalizedSubject
    summary: |-
      获取项目的主题, 删除所有前缀 (包括 RE: 和 FWD:)。

      NormalizedSubject 属性获取项目的主题, 其中包含任何标准前缀 (如 RE: 和 FW:)由电子邮件程序添加的。 若要获取具有完整前缀的项的主题, 请使用 subject 属性。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: normalizedSubject
    fullName: normalizedSubject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'normalizedSubject: string;'
      return:
        type:
          - string
  - uid: outlook.Office.ItemRead.subject
    summary: |-
      获取项目的 "主题" 字段中显示的说明。

      Subject 属性获取或设置由电子邮件服务器发送的项目的整个主题。

      Subject 属性返回一个字符串。 使用 normalizedSubject 属性可获取主题减去任何前导前缀, 如 RE: 和 FW:。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 读取
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: string;'
      return:
        type:
          - string