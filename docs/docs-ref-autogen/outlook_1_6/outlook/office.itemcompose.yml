### YamlMime:UniversalReference
items:
  - uid: Outlook.Office.ItemCompose
    summary: |-
      " [Context.subname](xref:Outlook.Office.Item) " 的撰写模式<!-- -->.

      **重要说明**: 这是一个内部 Outlook 对象, 而不是直接通过现有接口公开。 应将其视为 "context.subname" 模式。 有关详细信息, 请参阅[对象模型](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.6/office.context.mailbox.item)页。
    name: Office.ItemCompose
    fullName: Office.ItemCompose
    langs:
      - typeScript
    type: interface
    extends:
      - Outlook.Office.Item
    package: Outlook
    children:
      - Outlook.Office.ItemCompose.addFileAttachmentAsync
      - Outlook.Office.ItemCompose.addFileAttachmentAsync_1
      - Outlook.Office.ItemCompose.addItemAttachmentAsync
      - Outlook.Office.ItemCompose.addItemAttachmentAsync_1
      - Outlook.Office.ItemCompose.close
      - Outlook.Office.ItemCompose.getSelectedDataAsync
      - Outlook.Office.ItemCompose.getSelectedDataAsync_1
      - Outlook.Office.ItemCompose.removeAttachmentAsync
      - Outlook.Office.ItemCompose.removeAttachmentAsync_1
      - Outlook.Office.ItemCompose.saveAsync
      - Outlook.Office.ItemCompose.saveAsync_1
      - Outlook.Office.ItemCompose.setSelectedDataAsync
      - Outlook.Office.ItemCompose.setSelectedDataAsync_1
      - Outlook.Office.ItemCompose.subject
  - uid: Outlook.Office.ItemCompose.addFileAttachmentAsync
    summary: |-
      将文件作为附件添加到邮件或约会。

      AddFileAttachmentAsync 方法在指定的 URI 处上载文件, 并将其附加到撰写窗体中的项目。

      随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - AttachmentSizeExceeded: 附件大于允许的大小。

      - FileTypeNotSupported: 附件的分机号码是不允许的。

      - NumberOfAttachmentsExceeded: 邮件或约会的附件过多。
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: 提供附加到邮件或约会的文件的位置的 URI。 最大长度为 2048 个字符。
          type:
            - string
        - id: attachmentName
          description: 在附件上载过程中显示的附件名称。 最大长度为 255 个字符。
          type:
            - string
        - id: options
          description: '可选。 包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。 isInline: 如果为 true, 则表示附件将在邮件正文中以内联方式显示, 并且不应显示在附件列表中。'
          type:
            - 'Office.AsyncContextOptions & { isInline: boolean }'
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 成功后, 将在 asyncResult 属性中提供附件标识符。 如果上传附件失败, asyncResult 对象将包含一个 Error 对象, 该对象提供错误说明。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.ItemCompose.addFileAttachmentAsync_1
    summary: |-
      将文件作为附件添加到邮件或约会。

      AddFileAttachmentAsync 方法在指定的 URI 处上载文件, 并将其附加到撰写窗体中的项目。

      随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - AttachmentSizeExceeded: 附件大于允许的大小。

      - FileTypeNotSupported: 附件的分机号码是不允许的。

      - NumberOfAttachmentsExceeded: 邮件或约会的附件过多。
    name: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: 提供附加到邮件或约会的文件的位置的 URI。 最大长度为 2048 个字符。
          type:
            - string
        - id: attachmentName
          description: 在附件上载过程中显示的附件名称。 最大长度为 255 个字符。
          type:
            - string
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 成功后, 将在 asyncResult 属性中提供附件标识符。 如果上传附件失败, asyncResult 对象将包含一个 Error 对象, 该对象提供错误说明。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.ItemCompose.addItemAttachmentAsync
    summary: |-
      将 Exchange 项目（如邮件）作为附件添加到邮件或约会。

      AddItemAttachmentAsync 方法将具有指定 Exchange 标识符的项目附加到撰写窗体中的项目。 如果指定了回调方法, 则使用一个参数 asyncResult 调用方法, 该参数包含附件标识符或指示附加项目时出现的任何错误的代码。 如果需要, 可以使用 options 参数将状态信息传递给回调方法。

      随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。

      如果 Office 外接程序在 web 上的 Outlook 中运行, 则 addItemAttachmentAsync 方法可以将项目附加到您正在编辑的项目之外的项目中;但是, 不支持这种情况, 建议不要这样做。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - NumberOfAttachmentsExceeded: 邮件或约会的附件过多。
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: 要附加的项目的 Exchange 标识符。 最大长度为 100 个字符。
          type:
            - any
        - id: attachmentName
          description: 在附件上载过程中显示的附件名称。 最大长度为 255 个字符。
          type:
            - string
        - id: options
          description: '可选。 包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 成功后, 将在 asyncResult 属性中提供附件标识符。 如果添加附件失败, asyncResult 对象将包含一个 Error 对象, 该对象提供错误说明。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.ItemCompose.addItemAttachmentAsync_1
    summary: |-
      将 Exchange 项目（如邮件）作为附件添加到邮件或约会。

      AddItemAttachmentAsync 方法将具有指定 Exchange 标识符的项目附加到撰写窗体中的项目。 如果指定了回调方法, 则使用一个参数 asyncResult 调用方法, 该参数包含附件标识符或指示附加项目时出现的任何错误的代码。 如果需要, 可以使用 options 参数将状态信息传递给回调方法。

      随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。

      如果 Office 外接程序在 web 上的 Outlook 中运行, 则 addItemAttachmentAsync 方法可以将项目附加到您正在编辑的项目之外的项目中;但是, 不支持这种情况, 建议不要这样做。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - NumberOfAttachmentsExceeded: 邮件或约会的附件过多。
    name: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: 要附加的项目的 Exchange 标识符。 最大长度为 100 个字符。
          type:
            - any
        - id: attachmentName
          description: 在附件上载过程中显示的附件名称。 最大长度为 255 个字符。
          type:
            - string
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 成功后, 将在 asyncResult 属性中提供附件标识符。 如果添加附件失败, asyncResult 对象将包含一个 Error 对象, 该对象提供错误说明。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.ItemCompose.close
    summary: |-
      关闭正在撰写的当前项目

      Close 方法的行为取决于正在撰写的项目的当前状态。 如果项目具有未保存的更改, 则客户端将提示用户保存、放弃或关闭该操作。

      在 Outlook 桌面客户端中, 如果邮件是内嵌答复, 则 close 方法将不起作用。

      **注意**: 在 web 上的 Outlook 中, 如果该项目是一个约会, 并且以前使用 saveAsync 保存过, 则系统会提示用户保存、放弃或取消操作, 即使自上次保存项目后未发生更改也是如此。

      \[[API 集: 邮箱 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: 受限

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: Outlook.Office.ItemCompose.getSelectedDataAsync
    summary: |-
      以异步方式返回邮件的主题或正文中选定的数据。

      如果没有选定内容，但光标位于正文或主题中，此方法将会为所选数据返回 null。 如果选择了 "正文" 或 "主题" 以外的字段, 则该方法将返回 InvalidSelection 错误。

      若要从回调方法访问所选数据, 请调用 asyncResult. value。 若要访问所选内容来自的源属性, 请调用 asyncResult. sourceProperty, 它是正文或主题。

      \[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: 所选数据的格式为 coercionType 所确定的格式的字符串。
      parameters:
        - id: coercionType
          description: '请求数据的格式。 如果为 Text, 则此方法以字符串的形式返回纯文本, 同时删除任何 HTML 标记。 如果为 HTML，则此方法返回所选文本，不论是纯文本还是 HTML。'
          type:
            - Office.CoercionType | string
        - id: options
          description: '包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: Outlook.Office.ItemCompose.getSelectedDataAsync_1
    summary: |-
      以异步方式返回邮件的主题或正文中选定的数据。

      如果没有选定内容，但光标位于正文或主题中，此方法将会为所选数据返回 null。 如果选择了 "正文" 或 "主题" 以外的字段, 则该方法将返回 InvalidSelection 错误。

      若要从回调方法访问所选数据, 请调用 asyncResult. value。 若要访问所选内容来自的源属性, 请调用 asyncResult. sourceProperty, 它是正文或主题。

      \[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: 所选数据的格式为 coercionType 所确定的格式的字符串。
      parameters:
        - id: coercionType
          description: 请求数据的格式。如果为文本，则此方法返回纯文本作为字符串，删除任何显示的 HTML 标记。如果为 HTML，则此方法返回所选文本，不论是纯文本还是 HTML。
          type:
            - Office.CoercionType | string
        - id: callback
          description: '方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: Outlook.Office.ItemCompose.removeAttachmentAsync
    summary: |-
      将附件从邮件或约会中删除。

      RemoveAttachmentAsync 方法从项中删除具有指定标识符的附件。 最佳做法是，仅当同一个邮件应用程序在同一会话中添加了一个附件时，你才应使用该附件标识符来删除该附件。 在 web 和移动设备上的 Outlook 中, 附件标识符仅在同一个会话中有效。 当用户关闭应用程序时, 或者如果用户开始撰写内嵌窗体, 随后弹出窗体以继续在单独的窗口中。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。
    name: 'removeAttachmentAsync(attachmentId, options, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: 要删除的附件的标识符。
          type:
            - string
        - id: options
          description: '可选。 包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 如果删除附件失败, asyncResult 属性将包含失败原因的错误代码。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.ItemCompose.removeAttachmentAsync_1
    summary: |-
      将附件从邮件或约会中删除。

      RemoveAttachmentAsync 方法从项中删除具有指定标识符的附件。 最佳做法是，仅当同一个邮件应用程序在同一会话中添加了一个附件时，你才应使用该附件标识符来删除该附件。 在 web 和移动设备上的 Outlook 中, 附件标识符仅在同一个会话中有效。 当用户关闭应用程序时, 或者如果用户开始撰写内嵌窗体, 随后弹出窗体以继续在单独的窗口中。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。
    name: 'removeAttachmentAsync(attachmentId, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: 要删除的附件的标识符。
          type:
            - string
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 如果删除附件失败, asyncResult 属性将包含失败原因的错误代码。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.ItemCompose.saveAsync
    summary: |-
      异步保存项目。

      调用时，此方法将当前邮件保存为草稿，并通过回调方法返回项目 ID。 在 Outlook 网页或 Outlook 的联机模式中, 将项目保存到服务器。 在 Outlook 缓存模式下，该项目被保存到本地缓存中。

      由于约会没有草稿状态, 如果在撰写模式下对约会调用了 saveAsync, 则会将该项目保存为用户日历上的普通约会。 对于之前未保存的新约会, 将不会发送邀请。 保存现有约会将向添加或删除的与会者发送更新。

      **注意**: 如果外接程序对撰写模式中的项目调用 saveAsync, 以便获取 itemId 以使用 EWS 或 REST API, 请注意, 当 Outlook 处于缓存模式下时, 可能需要一段时间才能将项目实际同步到服务器。 在同步项目之前, 使用 itemId 将返回错误。

      **注意**: 在撰写模式下, 以下客户端的 saveAsync 对约会的行为不同:

      - Mac 上的 Outlook 不支持保存会议。 在撰写模式下从会议中调用时, saveAsync 方法将失败。 若要解决此问题, 请参阅[使用 OFFICE JS API 将会议保存为 Outlook For Mac 中的草稿](https://support.microsoft.com/help/4505745)。

      - 在撰写模式下对约会调用 saveAsync 时, web 上的 Outlook 将始终发送邀请或更新。

      \[[API 集: 邮箱 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。
    name: 'saveAsync(options, callback)'
    fullName: 'saveAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 如果删除附件失败, asyncResult 属性将包含失败原因的错误代码。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.ItemCompose.saveAsync_1
    summary: |-
      异步保存项目。

      调用时，此方法将当前邮件保存为草稿，并通过回调方法返回项目 ID。 在 Outlook 网页或 Outlook 的联机模式中, 将项目保存到服务器。 在 Outlook 缓存模式下，该项目被保存到本地缓存中。

      由于约会没有草稿状态, 如果在撰写模式下对约会调用了 saveAsync, 则会将该项目保存为用户日历上的普通约会。 对于之前未保存的新约会, 将不会发送邀请。 保存现有约会将向添加或删除的与会者发送更新。

      **注意**: 如果外接程序对撰写模式中的项目调用 saveAsync, 以便获取 itemId 以使用 EWS 或 REST API, 请注意, 当 Outlook 处于缓存模式下时, 可能需要一段时间才能将项目实际同步到服务器。 在同步项目之前, 使用 itemId 将返回错误。

      **注意**: 在撰写模式下, 以下客户端的 saveAsync 对约会的行为不同:

      - Mac 上的 Outlook 不支持保存会议。 在撰写模式下从会议中调用时, saveAsync 方法将失败。 若要解决此问题, 请参阅[使用 OFFICE JS API 将会议保存为 Outlook For Mac 中的草稿](https://support.microsoft.com/help/4505745)。

      - 在撰写模式下对约会调用 saveAsync 时, web 上的 Outlook 将始终发送邀请或更新。

      \[[API 集: 邮箱 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。
    name: saveAsync(callback)
    fullName: saveAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 如果删除附件失败, asyncResult 属性将包含失败原因的错误代码。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.ItemCompose.setSelectedDataAsync
    summary: |-
      以异步方式将数据插入到邮件的正文或主题中。

      Document.setselecteddataasync 方法将指定的字符串插入到项目的主题或正文中的光标位置, 或者, 如果在编辑器中选择了文本, 则会将所选的文本替换为文本。 如果游标不在 body 或 subject 字段中, 则返回错误。 插入后, 光标放置在插入内容的末尾。

      \[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '要插入的数据。 数据不得超过 1,000,000 个字符。 如果传入了1000000个以上的字符, 则会引发 ArgumentOutOfRange 异常。'
          type:
            - string
        - id: options
          description: '可选。 包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。 coercionType: 如果是文本, 则当前样式应用于 web 上的 Outlook 和桌面客户端。 如果该字段是 HTML 编辑器，则仅插入文本数据，即使数据为 HTML。 如果 html 和字段支持 HTML (主题不), 则当前样式应用于 web 上的 Outlook, 并且默认样式应用于桌面客户端上的 Outlook 中。 如果字段是文本字段, 则返回一个 InvalidDataFormat 错误。 如果未设置 coercionType, 则结果取决于字段: 如果该字段为 HTML, 则使用 HTML;如果该字段为文本, 则使用纯文本。'
          type:
            - Office.AsyncContextOptions & CoercionTypeOptions
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.ItemCompose.setSelectedDataAsync_1
    summary: |-
      以异步方式将数据插入到邮件的正文或主题中。

      Document.setselecteddataasync 方法将指定的字符串插入到项目的主题或正文中的光标位置, 或者, 如果在编辑器中选择了文本, 则会将所选的文本替换为文本。 如果游标不在 body 或 subject 字段中, 则返回错误。 插入后, 光标放置在插入内容的末尾。

      \[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '要插入的数据。 数据不得超过 1,000,000 个字符。 如果传入了1000000个以上的字符, 则会引发 ArgumentOutOfRange 异常。'
          type:
            - string
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.ItemCompose.subject
    summary: |-
      获取或设置显示在项目的主题字段中的说明。

      Subject 属性获取或设置由电子邮件服务器发送的项目的整个主题。

      Subject 属性返回一个 Subject 对象, 该对象提供用于获取和设置主题的方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - Outlook.Office.Subject