### YamlMime:TSType
name: Excel.CellPropertiesFont
uid: excel!Excel.CellPropertiesFont:interface
package: excel!
fullName: Excel.CellPropertiesFont
summary: >-
  表示 `format.font` 的属性 `getCellProperties`<!-- -->, `getRowProperties`<!-- -->，和 `getColumnProperties` 或的 `format.font` 输入参数 `setCellProperties`<!-- -->, `setRowProperties`<!-- -->，并 `setColumnProperties`<!-- -->.


  \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: bold
  uid: excel!Excel.CellPropertiesFont#bold:member
  package: excel!
  fullName: bold
  summary: >-
    表示`format.font.bold`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'bold?: boolean;'
    return:
      type: boolean
- name: color
  uid: excel!Excel.CellPropertiesFont#color:member
  package: excel!
  fullName: color
  summary: >-
    表示`format.font.color`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'color?: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/cell-properties.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n\n    // Creating the SettableCellProperties objects to use for the range.\n    // In your add-in, these should be created once, outside the function.\n    const topHeaderProps: Excel.SettableCellProperties = {\n        // The style property takes a string matching the name of an Excel style.\n        // Built-in style names are listed in the `BuiltInStyle` enum.\n        // Note that a style will overwrite any formatting,\n        // so do not use the format property with the style property.\n        style: \"Heading1\"\n    };\n\n    const headerProps: Excel.SettableCellProperties = {\n        // Any subproperties of format that are not set will not be changed when these cell properties are set.\n        format: {\n            fill: {\n                color: \"Blue\"\n            },\n            font: {\n                color: \"White\",\n                bold: true\n            }\n        }\n    };\n\n    const nonApplicableProps: Excel.SettableCellProperties = {\n        format: {\n            fill: {\n                pattern: Excel.FillPattern.gray25\n            },\n            font: {\n                color: \"Gray\",\n                italic: true\n            }\n        }\n    };\n\n    const matchupScoreProps: Excel.SettableCellProperties = {\n        format: {\n            borders: {\n                bottom: {\n                    style: Excel.BorderLineStyle.continuous\n                },\n                left: {\n                    style: Excel.BorderLineStyle.continuous\n                },\n                right: {\n                    style: Excel.BorderLineStyle.continuous\n                },\n                top: {\n                    style: Excel.BorderLineStyle.continuous\n                }\n            }\n        }\n    };\n\n    const range = sheet.getRange(\"A1:E5\");\n\n    // You can use empty JSON objects to avoid changing a cell's properties.\n    range.setCellProperties([\n        [topHeaderProps, {}, {}, {}, {}],\n        [{}, {}, headerProps, headerProps, headerProps],\n        [{}, headerProps, nonApplicableProps, matchupScoreProps, matchupScoreProps],\n        [{}, headerProps, matchupScoreProps, nonApplicableProps, matchupScoreProps],\n        [{}, headerProps, matchupScoreProps, matchupScoreProps, nonApplicableProps]\n    ]);\n\n    sheet.getUsedRange().format.autofitColumns();\n    await context.sync();\n});\n```"
- name: italic
  uid: excel!Excel.CellPropertiesFont#italic:member
  package: excel!
  fullName: italic
  summary: >-
    表示`format.font.italic`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'italic?: boolean;'
    return:
      type: boolean
- name: name
  uid: excel!Excel.CellPropertiesFont#name:member
  package: excel!
  fullName: name
  summary: >-
    表示`format.font.name`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name?: string;'
    return:
      type: string
- name: size
  uid: excel!Excel.CellPropertiesFont#size:member
  package: excel!
  fullName: size
  summary: >-
    表示`format.font.size`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'size?: number;'
    return:
      type: number
- name: strikethrough
  uid: excel!Excel.CellPropertiesFont#strikethrough:member
  package: excel!
  fullName: strikethrough
  summary: >-
    表示`format.font.strikethrough`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'strikethrough?: boolean;'
    return:
      type: boolean
- name: subscript
  uid: excel!Excel.CellPropertiesFont#subscript:member
  package: excel!
  fullName: subscript
  summary: >-
    表示`format.font.subscript`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'subscript?: boolean;'
    return:
      type: boolean
- name: superscript
  uid: excel!Excel.CellPropertiesFont#superscript:member
  package: excel!
  fullName: superscript
  summary: >-
    表示`format.font.superscript`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'superscript?: boolean;'
    return:
      type: boolean
- name: tintAndShade
  uid: excel!Excel.CellPropertiesFont#tintAndShade:member
  package: excel!
  fullName: tintAndShade
  summary: >-
    表示`format.font.tintAndShade`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'tintAndShade?: number;'
    return:
      type: number
- name: underline
  uid: excel!Excel.CellPropertiesFont#underline:member
  package: excel!
  fullName: underline
  summary: >-
    表示`format.font.underline`属性。


    \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'underline?: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
    return:
      type: <xref uid="excel!Excel.RangeUnderlineStyle:enum" /> | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
metadata:
  ms.openlocfilehash: 969603891a810121f6de92e50c3faffb43767540
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49267381"
