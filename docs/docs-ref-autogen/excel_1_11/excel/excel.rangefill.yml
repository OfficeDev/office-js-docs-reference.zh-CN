### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.RangeFill:class'
    summary: |-
      表示 range 对象的背景。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeFill
    fullName: Excel.RangeFill
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.RangeFill#clear:member(1)'
      - 'excel!Excel.RangeFill#color:member'
      - 'excel!Excel.RangeFill#context:member'
      - 'excel!Excel.RangeFill#load:member(1)'
      - 'excel!Excel.RangeFill#load:member(2)'
      - 'excel!Excel.RangeFill#load:member(3)'
      - 'excel!Excel.RangeFill#pattern:member'
      - 'excel!Excel.RangeFill#patternColor:member'
      - 'excel!Excel.RangeFill#patternTintAndShade:member'
      - 'excel!Excel.RangeFill#set:member(1)'
      - 'excel!Excel.RangeFill#set:member(2)'
      - 'excel!Excel.RangeFill#tintAndShade:member'
      - 'excel!Excel.RangeFill#toJSON:member(1)'
  - uid: 'excel!Excel.RangeFill#clear:member(1)'
    summary: |-
      重置区域背景。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var rangeFill = range.format.fill;
              rangeFill.clear();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.RangeFill#color:member'
    summary: |-
      代表表单\#RRGGBB （例如，"FFA500"）或命名的 HTML 颜色（例如 "橙色"）的背景色的 HTML 颜色代码。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.RangeFill#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.RangeFill#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.RangeFillLoadOptions): Excel.RangeFill;'
      return:
        type:
          - 'excel!Excel.RangeFill:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.Interfaces.RangeFillLoadOptions:interface'
  - uid: 'excel!Excel.RangeFill#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeFill;'
      return:
        type:
          - 'excel!Excel.RangeFill:class'
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              var rangeFill = range.format.fill;
              rangeFill.load('color');
              return ctx.sync().then(function() {
                  console.log(rangeFill.color);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below sets fill color. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.fill.color = '0000FF';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.RangeFill#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.RangeFill;
      return:
        type:
          - 'excel!Excel.RangeFill:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性`propertyNamesAndPaths.expand` ，并且是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.RangeFill#pattern:member'
    summary: |-
      区域的图案。 有关详细信息，请参阅 Excel.FillPattern。 不支持 LinearGradient 和 RectangularGradient。 如果为 null 值，则表示整个区域没有统一的模式设置。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: pattern
    fullName: pattern
    langs:
      - typeScript
    type: property
    syntax:
      content: 'pattern: Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient";'
      return:
        type:
          - 'excel!Excel.RangeFill#pattern~0:complex'
  - uid: 'excel!Excel.RangeFill#patternColor:member'
    summary: |-
      表示范围模式的颜色的 HTML 颜色代码，格式\#RRGGBB （例如，"FFA500"）或命名的 HTML 颜色（例如 "橙色"）。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: patternColor
    fullName: patternColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'patternColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.RangeFill#patternTintAndShade:member'
    summary: |-
      指定用于将区域填充的图案颜色变浅或变暗的双精度值，该值介于-1 （最暗）和1（最亮）之间，0表示原始颜色。 如果模式 tintAndShades 不一致，则将返回 null。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: patternTintAndShade
    fullName: patternTintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'patternTintAndShade: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeFill#set:member(1)'
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名：

      `set(properties: Excel.RangeFill): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeFillUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。
          type:
            - 'excel!Excel.Interfaces.RangeFillUpdateData:interface'
        - id: options
          description: 提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.RangeFill#set:member(2)'
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeFill): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.RangeFill:class'
  - uid: 'excel!Excel.RangeFill#tintAndShade:member'
    summary: |-
      指定用于将区域填充的颜色变浅或变暗的双精度值，该值介于-1 （最暗）和1（最亮）之间，0表示原始颜色。 如果 tintAndShades 不是统一的，将返回 null。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: tintAndShade
    fullName: tintAndShade
    langs:
      - typeScript
    type: property
    syntax:
      content: 'tintAndShade: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.RangeFill#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 RangeFill 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.RangeFillData`<!-- -->），其中包含原始对象中所有已加载的子属性的浅表副本。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFillData;'
      return:
        type:
          - 'excel!Excel.Interfaces.RangeFillData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeFill:class'
    name: Excel.RangeFill
  - uid: 'excel!Excel.Interfaces.RangeFillLoadOptions:interface'
    name: Excel.Interfaces.RangeFillLoadOptions
  - uid: 'excel!Excel.RangeFill#pattern~0:complex'
    name: Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"
    fullName: Excel.FillPattern | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"
    spec.typeScript:
      - uid: 'excel!Excel.FillPattern:enum'
        name: Excel.FillPattern
        fullName: Excel.FillPattern
      - name: ' | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"'
        fullName: ' | "None" | "Solid" | "Gray50" | "Gray75" | "Gray25" | "Horizontal" | "Vertical" | "Down" | "Up" | "Checker" | "SemiGray75" | "LightHorizontal" | "LightVertical" | "LightDown" | "LightUp" | "Grid" | "CrissCross" | "Gray16" | "Gray8" | "LinearGradient" | "RectangularGradient"'
  - uid: 'excel!Excel.Interfaces.RangeFillUpdateData:interface'
    name: Interfaces.RangeFillUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.RangeFillData:interface'
    name: Excel.Interfaces.RangeFillData