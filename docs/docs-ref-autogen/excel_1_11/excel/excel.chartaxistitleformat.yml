### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartAxisTitleFormat:class'
    summary: |-
      表示图表坐标轴标题格式。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ChartAxisTitleFormat
    fullName: Excel.ChartAxisTitleFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartAxisTitleFormat#border:member'
      - 'excel!Excel.ChartAxisTitleFormat#context:member'
      - 'excel!Excel.ChartAxisTitleFormat#fill:member'
      - 'excel!Excel.ChartAxisTitleFormat#font:member'
      - 'excel!Excel.ChartAxisTitleFormat#load:member(1)'
      - 'excel!Excel.ChartAxisTitleFormat#load:member(2)'
      - 'excel!Excel.ChartAxisTitleFormat#load:member(3)'
      - 'excel!Excel.ChartAxisTitleFormat#set:member(1)'
      - 'excel!Excel.ChartAxisTitleFormat#set:member(2)'
      - 'excel!Excel.ChartAxisTitleFormat#toJSON:member(1)'
  - uid: 'excel!Excel.ChartAxisTitleFormat#border:member'
    summary: |-
      指定图表坐标轴标题的边框格式，包括颜色、linestyle 和粗细。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: border
    fullName: border
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly border: Excel.ChartBorder;'
      return:
        type:
          - 'excel!Excel.ChartBorder:class'
  - uid: 'excel!Excel.ChartAxisTitleFormat#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartAxisTitleFormat#fill:member'
    summary: |-
      指定图表坐标轴标题的填充格式。

      \[[API 集： ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.ChartFill;'
      return:
        type:
          - 'excel!Excel.ChartFill:class'
  - uid: 'excel!Excel.ChartAxisTitleFormat#font:member'
    summary: |-
      指定图表轴标题的字体属性，例如字体名称、字体大小、颜色等图表轴标题对象的字体。

      \[[API 集： ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.ChartFont;'
      return:
        type:
          - 'excel!Excel.ChartFont:class'
  - uid: 'excel!Excel.ChartAxisTitleFormat#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartAxisTitleFormatLoadOptions): Excel.ChartAxisTitleFormat;'
      return:
        type:
          - 'excel!Excel.ChartAxisTitleFormat:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.Interfaces.ChartAxisTitleFormatLoadOptions:interface'
  - uid: 'excel!Excel.ChartAxisTitleFormat#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartAxisTitleFormat;'
      return:
        type:
          - 'excel!Excel.ChartAxisTitleFormat:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartAxisTitleFormat#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartAxisTitleFormat;
      return:
        type:
          - 'excel!Excel.ChartAxisTitleFormat:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ChartAxisTitleFormat#set:member(1)'
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名：

      `set(properties: Excel.ChartAxisTitleFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartAxisTitleFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。
          type:
            - 'excel!Excel.Interfaces.ChartAxisTitleFormatUpdateData:interface'
        - id: options
          description: 提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartAxisTitleFormat#set:member(2)'
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartAxisTitleFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartAxisTitleFormat:class'
  - uid: 'excel!Excel.ChartAxisTitleFormat#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，也 `toJSON` 会调用传递给它的对象的方法。尽管原始 ChartAxisTitleFormat 对象是 API 对象，但 `toJSON` 方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.ChartAxisTitleFormatData`<!-- -->），其中包含原始对象中所有已加载的子属性的浅表副本。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartAxisTitleFormatData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartAxisTitleFormatData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.ChartBorder:class'
    name: Excel.ChartBorder
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartFill:class'
    name: Excel.ChartFill
  - uid: 'excel!Excel.ChartFont:class'
    name: Excel.ChartFont
  - uid: 'excel!Excel.ChartAxisTitleFormat:class'
    name: Excel.ChartAxisTitleFormat
  - uid: 'excel!Excel.Interfaces.ChartAxisTitleFormatLoadOptions:interface'
    name: Excel.Interfaces.ChartAxisTitleFormatLoadOptions
  - uid: 'excel!Excel.Interfaces.ChartAxisTitleFormatUpdateData:interface'
    name: Interfaces.ChartAxisTitleFormatUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ChartAxisTitleFormatData:interface'
    name: Excel.Interfaces.ChartAxisTitleFormatData