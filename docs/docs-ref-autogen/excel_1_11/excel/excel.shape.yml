### YamlMime:TSType
name: Excel.Shape
uid: excel!Excel.Shape:class
package: excel!
fullName: Excel.Shape
summary: >-
  表示工作表中的通用 shape 对象。 形状可以是几何形状、线条、一组形状等。若要了解有关形状对象模型更多信息，请阅读使用 [Excel JavaScript API 处理形状](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-shapes)<!-- -->.


  \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: altTextDescription
  uid: excel!Excel.Shape#altTextDescription:member
  package: excel!
  fullName: altTextDescription
  summary: >-
    指定 Shape 对象的可选说明文本。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'altTextDescription: string;'
    return:
      type: string
- name: altTextTitle
  uid: excel!Excel.Shape#altTextTitle:member
  package: excel!
  fullName: altTextTitle
  summary: >-
    指定 Shape 对象的可选标题文本。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'altTextTitle: string;'
    return:
      type: string
- name: connectionSiteCount
  uid: excel!Excel.Shape#connectionSiteCount:member
  package: excel!
  fullName: connectionSiteCount
  summary: >-
    返回此形状上的连接站点数。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly connectionSiteCount: number;'
    return:
      type: number
- name: context
  uid: excel!Excel.Shape#context:member
  package: excel!
  fullName: context
  summary: 与对象关联的请求上下文。 这会将外接程序的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: fill
  uid: excel!Excel.Shape#fill:member
  package: excel!
  fullName: fill
  summary: >-
    返回此形状的填充格式。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly fill: Excel.ShapeFill;'
    return:
      type: <xref uid="excel!Excel.ShapeFill:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-create-and-delete.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.smileyFace);\n    shape.left = 300;\n    shape.top = 100;\n    shape.height = 100;\n    shape.width = 100;\n    shape.fill.foregroundColor = \"yellow\"\n    await context.sync();\n});\n```"
- name: geometricShape
  uid: excel!Excel.Shape#geometricShape:member
  package: excel!
  fullName: geometricShape
  summary: >-
    返回与形状关联的几何形状。 如果形状类型不是“GeometricShape”，则会引发错误。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly geometricShape: Excel.GeometricShape;'
    return:
      type: <xref uid="excel!Excel.GeometricShape:class" />
- name: geometricShapeType
  uid: excel!Excel.Shape#geometricShapeType:member
  package: excel!
  fullName: geometricShapeType
  summary: >-
    指定此几何形状的几何形状类型。 有关详细信息，请参阅 Excel.GeometricShapeType。 如果形状类型不是“GeometricShape”，返回 NULL。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'geometricShapeType: Excel.GeometricShapeType | "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus";'
    return:
      type: <xref uid="excel!Excel.GeometricShapeType:enum" /> | "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"
- name: group
  uid: excel!Excel.Shape#group:member
  package: excel!
  fullName: group
  summary: >-
    返回与形状关联的形状组。 如果形状类型不是“GroupShape”，则会引发错误。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly group: Excel.ShapeGroup;'
    return:
      type: <xref uid="excel!Excel.ShapeGroup:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-groups.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n\n    const shapeGroup = sheet.shapes.getItem(\"Group\").group;\n    shapeGroup.ungroup();\n    console.log(\"Shapes ungrouped\");\n\n    await context.sync();\n});\n```"
- name: height
  uid: excel!Excel.Shape#height:member
  package: excel!
  fullName: height
  summary: >-
    指定形状的高度（以点表示）。 如果设置为负值或零作为输入，则引发无效参数异常。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'height: number;'
    return:
      type: number
- name: id
  uid: excel!Excel.Shape#id:member
  package: excel!
  fullName: id
  summary: >-
    指定形状标识符。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: image
  uid: excel!Excel.Shape#image:member
  package: excel!
  fullName: image
  summary: >-
    返回与形状关联的图像。 如果形状类型不是“Image”，则会引发错误。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly image: Excel.Image;'
    return:
      type: <xref uid="excel!Excel.Image:class" />
- name: left
  uid: excel!Excel.Shape#left:member
  package: excel!
  fullName: left
  summary: >-
    从形状左侧到工作表左侧的距离（以磅为单位）。 如果设置为负值作为输入，则引发无效参数异常。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'left: number;'
    return:
      type: number
- name: level
  uid: excel!Excel.Shape#level:member
  package: excel!
  fullName: level
  summary: >-
    指定指定形状的级别。 例如，级别 0 表示形状不是任何组的一部分，级别 1 表示形状是顶级组的一部分，级别 2 表示形状是顶级子组的一部分。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly level: number;'
    return:
      type: number
- name: line
  uid: excel!Excel.Shape#line:member
  package: excel!
  fullName: line
  summary: >-
    返回与形状关联的线条。 如果形状类型不是“Line”，则会引发错误。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly line: Excel.Line;'
    return:
      type: <xref uid="excel!Excel.Line:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-lines.yaml\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.beginArrowheadLength = Excel.ArrowheadLength.long;\n    line.beginArrowheadWidth = Excel.ArrowheadWidth.wide;\n    line.beginArrowheadStyle = Excel.ArrowheadStyle.oval;\n\n    line.endArrowheadLength = Excel.ArrowheadLength.long;\n    line.endArrowheadWidth = Excel.ArrowheadWidth.wide;\n    line.endArrowheadStyle = Excel.ArrowheadStyle.triangle;\n\n    await context.sync();\n});\n```"
- name: lineFormat
  uid: excel!Excel.Shape#lineFormat:member
  package: excel!
  fullName: lineFormat
  summary: >-
    返回此形状的线条格式。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly lineFormat: Excel.ShapeLineFormat;'
    return:
      type: <xref uid="excel!Excel.ShapeLineFormat:class" />
- name: lockAspectRatio
  uid: excel!Excel.Shape#lockAspectRatio:member
  package: excel!
  fullName: lockAspectRatio
  summary: >-
    指定此形状的纵横比是否锁定。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'lockAspectRatio: boolean;'
    return:
      type: boolean
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-move-and-order.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.getItem(\"Octagon\")\n    shape.lockAspectRatio = true;\n    shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);\n    await context.sync();\n});\n```"
- name: name
  uid: excel!Excel.Shape#name:member
  package: excel!
  fullName: name
  summary: >-
    指定形状的名称。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
- name: onActivated
  uid: excel!Excel.Shape#onActivated:member
  package: excel!
  fullName: onActivated
  summary: >-
    当激活形状时发生此事件。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ShapeActivatedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.ShapeActivatedEventArgs:interface" />&gt;
- name: onDeactivated
  uid: excel!Excel.Shape#onDeactivated:member
  package: excel!
  fullName: onDeactivated
  summary: >-
    当停用形状时发生此事件。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ShapeDeactivatedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.ShapeDeactivatedEventArgs:interface" />&gt;
- name: parentGroup
  uid: excel!Excel.Shape#parentGroup:member
  package: excel!
  fullName: parentGroup
  summary: >-
    指定此形状的父组。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentGroup: Excel.Shape;'
    return:
      type: <xref uid="excel!Excel.Shape:class" />
- name: placement
  uid: excel!Excel.Shape#placement:member
  package: excel!
  fullName: placement
  summary: >-
    表示对象如何附加到其下方的单元格。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'placement: Excel.Placement | "TwoCell" | "OneCell" | "Absolute";'
    return:
      type: <xref uid="excel!Excel.Placement:enum" /> | "TwoCell" | "OneCell" | "Absolute"
- name: rotation
  uid: excel!Excel.Shape#rotation:member
  package: excel!
  fullName: rotation
  summary: >-
    指定形状的旋转角度（以度数表示）。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'rotation: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-create-and-delete.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.triangle);\n    shape.left = 100;\n    shape.top = 300;\n    shape.height = 150;\n    shape.width = 200;\n    shape.rotation = 45;\n    shape.fill.clear();\n    await context.sync();\n});\n```"
- name: textFrame
  uid: excel!Excel.Shape#textFrame:member
  package: excel!
  fullName: textFrame
  summary: >-
    返回此形状的文本框对象。 只读。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly textFrame: Excel.TextFrame;'
    return:
      type: <xref uid="excel!Excel.TextFrame:class" />
- name: top
  uid: excel!Excel.Shape#top:member
  package: excel!
  fullName: top
  summary: >-
    从形状上边缘到工作表上边缘之间的距离（以磅为单位）。 如果设置为负值作为输入，则引发无效参数异常。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'top: number;'
    return:
      type: number
- name: type
  uid: excel!Excel.Shape#type:member
  package: excel!
  fullName: type
  summary: >-
    返回此形状的类型。 有关详细信息，请参阅 Excel.ShapeType。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly type: Excel.ShapeType | "Unsupported" | "Image" | "GeometricShape" | "Group" | "Line";'
    return:
      type: <xref uid="excel!Excel.ShapeType:enum" /> | "Unsupported" | "Image" | "GeometricShape" | "Group" | "Line"
- name: visible
  uid: excel!Excel.Shape#visible:member
  package: excel!
  fullName: visible
  summary: >-
    指定形状是否可见。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'visible: boolean;'
    return:
      type: boolean
- name: width
  uid: excel!Excel.Shape#width:member
  package: excel!
  fullName: width
  summary: >-
    指定形状的宽度（以点表示）。 如果设置为负值或零作为输入，则引发无效参数异常。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'width: number;'
    return:
      type: number
- name: zOrderPosition
  uid: excel!Excel.Shape#zOrderPosition:member
  package: excel!
  fullName: zOrderPosition
  summary: >-
    返回指定形状在 z 顺序中的位置，0 表示顺序堆栈的底部。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly zOrderPosition: number;'
    return:
      type: number
methods:
- name: copyTo(destinationSheet)
  uid: excel!Excel.Shape#copyTo:member(1)
  package: excel!
  fullName: copyTo(destinationSheet)
  summary: >-
    复制并粘贴 Shape 对象。 粘贴的形状将复制到此形状相同的像素位置。


    \[[API 集：ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'copyTo(destinationSheet?: Worksheet | string): Excel.Shape;'
    parameters:
    - id: destinationSheet
      description: 形状对象将粘贴到的工作表。 默认值为复制的形状的工作表。
      type: <xref uid="excel!Excel.Worksheet:class" /> | string
    return:
      type: <xref uid="excel!Excel.Shape:class" />
      description: ''
- name: delete()
  uid: excel!Excel.Shape#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    从工作表删除形状。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-create-and-delete.yaml\nawait Excel.run(async (context) => {\n    context.workbook.worksheets.getItemOrNullObject(\"Shapes\").delete();\n    const sheet = context.workbook.worksheets.add(\"Shapes\");\n\n    const shapes = sheet.shapes;\n\n    // load all the shapes in the collection without loading their properties\n    shapes.load(\"items/$none\");\n    await context.sync();\n\n    shapes.items.forEach((shape) => shape.delete());\n    await context.sync();\n});\n```"
- name: getAsImage(format)
  uid: excel!Excel.Shape#getAsImage:member(1)
  package: excel!
  fullName: getAsImage(format)
  summary: >-
    将形状转换为图像并将图像返回为 base64 编码字符串。 DPI 为 96。 唯一受支持的格式是 `Excel.PictureFormat.BMP`<!-- -->, `Excel.PictureFormat.PNG`<!-- -->, `Excel.PictureFormat.JPEG`<!-- -->，且 `Excel.PictureFormat.GIF`<!-- -->.


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsImage(format: Excel.PictureFormat): OfficeExtension.ClientResult<string>;'
    parameters:
    - id: format
      description: 指定图像的格式。
      type: <xref uid="excel!Excel.PictureFormat:enum" />
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-images.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.getItem(\"Image\");\n    const result = shape.getAsImage(Excel.PictureFormat.png);\n    await context.sync();\n\n    const imageString = result.value;\n    // Your add-in would save this string as a .png file.\n    console.log(\"The image's base64-encoded string: \" + imageString);\n});\n```"
- name: getAsImage(formatString)
  uid: excel!Excel.Shape#getAsImage:member(2)
  package: excel!
  fullName: getAsImage(formatString)
  summary: >-
    将形状转换为图像并将图像返回为 base64 编码字符串。 DPI 为 96。 唯一受支持的格式是 `Excel.PictureFormat.BMP`<!-- -->, `Excel.PictureFormat.PNG`<!-- -->, `Excel.PictureFormat.JPEG`<!-- -->，且 `Excel.PictureFormat.GIF`<!-- -->.


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsImage(formatString: "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"): OfficeExtension.ClientResult<string>;'
    parameters:
    - id: formatString
      description: 指定图像的格式。
      type: "\"UNKNOWN\" | \"BMP\" | \"JPEG\" | \"GIF\" | \"PNG\" | \"SVG\""
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: ''
- name: incrementLeft(increment)
  uid: excel!Excel.Shape#incrementLeft:member(1)
  package: excel!
  fullName: incrementLeft(increment)
  summary: >-
    以指定磅数水平移动形状。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'incrementLeft(increment: number): void;'
    parameters:
    - id: increment
      description: 将水平移动形状的增量（以点为单位）。 正值表示形状向右移动，负值表示形状向左移动。 如果工作表方向为从右向左，则相反：正值将形状向左移动，负值表示将形状向右移动。
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-move-and-order.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.getItem(\"Square\")\n    shape.incrementLeft(-25);\n    await context.sync();\n});\n```"
- name: incrementRotation(increment)
  uid: excel!Excel.Shape#incrementRotation:member(1)
  package: excel!
  fullName: incrementRotation(increment)
  summary: >-
    将形状围绕 z 轴旋转特定度数。 使用 `rotation` 该属性可设置形状的绝对旋转角度。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'incrementRotation(increment: number): void;'
    parameters:
    - id: increment
      description: 形状旋转的度数。 为正值时顺时针旋转形状，为负值时逆时针旋转形状。
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-images.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.getItem(\"Image\");\n    shape.incrementRotation(180);\n    await context.sync();\n});\n```"
- name: incrementTop(increment)
  uid: excel!Excel.Shape#incrementTop:member(1)
  package: excel!
  fullName: incrementTop(increment)
  summary: >-
    以指定磅数垂直移动形状。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'incrementTop(increment: number): void;'
    parameters:
    - id: increment
      description: 增量（以点为单位）将形状垂直移动。 以点表示。 正值表示形状向下移动，负值表示向上移动形状。
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-move-and-order.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.getItem(\"Pentagon\")\n    shape.incrementTop(25);\n    await context.sync();\n});\n```"
- name: load(options)
  uid: excel!Excel.Shape#load:member(1)
  package: excel!
  fullName: load(options)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.ShapeLoadOptions): Excel.Shape;'
    parameters:
    - id: options
      description: 提供要加载的对象的属性的选项。
      type: <xref uid="excel!Excel.Interfaces.ShapeLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Shape:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Shape#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Shape;'
    parameters:
    - id: propertyNames
      description: 用逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Shape:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Shape#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Shape;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` 是一个以逗号分隔的字符串，用于指定要加载的属性，它是一个以逗号分隔的字符串，用于指定要加载的 `propertyNamesAndPaths.expand` 导航属性。'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Shape:class" />
      description: ''
- name: scaleHeight(scaleFactor, scaleType, scaleFrom)
  uid: excel!Excel.Shape#scaleHeight:member(1)
  package: excel!
  fullName: scaleHeight(scaleFactor, scaleType, scaleFrom)
  summary: >-
    按指定因子缩放形状的高度。 对于图像，你可以说明是相对于原始尺寸还是当前尺寸缩放形状。 对于除图片以外的其他形状来说，缩放总是相对于其当前高度而言。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'scaleHeight(scaleFactor: number, scaleType: Excel.ShapeScaleType, scaleFrom?: Excel.ShapeScaleFrom): void;'
    parameters:
    - id: scaleFactor
      description: 指定形状调整后的高度与当前或原始高度的比例。
      type: number
    - id: scaleType
      description: 指定形状是相对于其原始大小还是相对于当前尺寸进行缩放。 原始大小缩放选项仅适用于图像。
      type: <xref uid="excel!Excel.ShapeScaleType:enum" />
    - id: scaleFrom
      description: 可选。 指定在缩放形状时，该形状的哪一部分将保持在原有的位置。 如果省略，则代表形状的左上角保留其位置。
      type: <xref uid="excel!Excel.ShapeScaleFrom:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-move-and-order.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.getItem(\"Octagon\")\n    shape.lockAspectRatio = true;\n    shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);\n    await context.sync();\n});\n```"
- name: scaleHeight(scaleFactor, scaleTypeString, scaleFrom)
  uid: excel!Excel.Shape#scaleHeight:member(2)
  package: excel!
  fullName: scaleHeight(scaleFactor, scaleTypeString, scaleFrom)
  summary: >-
    按指定因子缩放形状的高度。 对于图像，你可以说明是相对于原始尺寸还是当前尺寸缩放形状。 对于除图片以外的其他形状来说，缩放总是相对于其当前高度而言。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'scaleHeight(scaleFactor: number, scaleTypeString: "CurrentSize" | "OriginalSize", scaleFrom?: "ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"): void;'
    parameters:
    - id: scaleFactor
      description: 指定形状调整后的高度与当前或原始高度的比例。
      type: number
    - id: scaleTypeString
      description: 指定形状是相对于其原始大小还是相对于当前尺寸进行缩放。 原始大小缩放选项仅适用于图像。
      type: "\"CurrentSize\" | \"OriginalSize\""
    - id: scaleFrom
      description: 可选。 指定在缩放形状时，该形状的哪一部分将保持在原有的位置。 如果省略，则代表形状的左上角保留其位置。
      type: "\"ScaleFromTopLeft\" | \"ScaleFromMiddle\" | \"ScaleFromBottomRight\""
    return:
      type: void
      description: ''
- name: scaleWidth(scaleFactor, scaleType, scaleFrom)
  uid: excel!Excel.Shape#scaleWidth:member(1)
  package: excel!
  fullName: scaleWidth(scaleFactor, scaleType, scaleFrom)
  summary: >-
    按指定因子缩放形状的宽度。 对于图像，你可以说明是相对于原始尺寸还是当前尺寸缩放形状。 对于除图片以外的其他形状来说，缩放总是相对于其当前宽度而言。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'scaleWidth(scaleFactor: number, scaleType: Excel.ShapeScaleType, scaleFrom?: Excel.ShapeScaleFrom): void;'
    parameters:
    - id: scaleFactor
      description: 指定形状调整后的宽度与当前或原始宽度的比例。
      type: number
    - id: scaleType
      description: 指定形状是相对于其原始大小还是相对于当前尺寸进行缩放。 原始大小缩放选项仅适用于图像。
      type: <xref uid="excel!Excel.ShapeScaleType:enum" />
    - id: scaleFrom
      description: 可选。 指定在缩放形状时，该形状的哪一部分将保持在原有的位置。 如果省略，则代表形状的左上角保留其位置。
      type: <xref uid="excel!Excel.ShapeScaleFrom:enum" />
    return:
      type: void
      description: ''
- name: scaleWidth(scaleFactor, scaleTypeString, scaleFrom)
  uid: excel!Excel.Shape#scaleWidth:member(2)
  package: excel!
  fullName: scaleWidth(scaleFactor, scaleTypeString, scaleFrom)
  summary: >-
    按指定因子缩放形状的宽度。 对于图像，你可以说明是相对于原始尺寸还是当前尺寸缩放形状。 对于除图片以外的其他形状来说，缩放总是相对于其当前宽度而言。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'scaleWidth(scaleFactor: number, scaleTypeString: "CurrentSize" | "OriginalSize", scaleFrom?: "ScaleFromTopLeft" | "ScaleFromMiddle" | "ScaleFromBottomRight"): void;'
    parameters:
    - id: scaleFactor
      description: 指定形状调整后的宽度与当前或原始宽度的比例。
      type: number
    - id: scaleTypeString
      description: 指定形状是相对于其原始大小还是相对于当前尺寸进行缩放。 原始大小缩放选项仅适用于图像。
      type: "\"CurrentSize\" | \"OriginalSize\""
    - id: scaleFrom
      description: 可选。 指定在缩放形状时，该形状的哪一部分将保持在原有的位置。 如果省略，则代表形状的左上角保留其位置。
      type: "\"ScaleFromTopLeft\" | \"ScaleFromMiddle\" | \"ScaleFromBottomRight\""
    return:
      type: void
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Shape#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: 同时设置对象的多个属性。 你可以传递具有相应属性的普通对象，也可以传递同一类型的另一个 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: Excel.Shape): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性以等态方式构造到调用该方法的对象的属性。
      type: <xref uid="excel!Excel.Interfaces.ShapeUpdateData:interface" />
    - id: options
      description: 提供在属性对象尝试设置任何只读属性时禁止错误的选项。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Shape#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: 基于现有的已加载对象，同时设置对象上的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Shape): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Shape:class" />
    return:
      type: void
      description: ''
- name: setZOrder(position)
  uid: excel!Excel.Shape#setZOrder:member(1)
  package: excel!
  fullName: setZOrder(position)
  summary: >-
    将指定形状沿集合的 z 顺序向上或向下移动，将其移动到其他形状的前面或后面。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setZOrder(position: Excel.ShapeZOrder): void;'
    parameters:
    - id: position
      description: 相对于其他形状在 z 顺序堆栈中移动形状。 有关详细信息，请参阅 Excel.ShapeZOrder。
      type: <xref uid="excel!Excel.ShapeZOrder:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/44-shape/shape-move-and-order.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.getItem(\"Octagon\")\n    shape.setZOrder(Excel.ShapeZOrder.sendBackward);\n    await context.sync();\n});\n```"
- name: setZOrder(positionString)
  uid: excel!Excel.Shape#setZOrder:member(2)
  package: excel!
  fullName: setZOrder(positionString)
  summary: >-
    将指定形状沿集合的 z 顺序向上或向下移动，将其移动到其他形状的前面或后面。


    \[[API 集：ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setZOrder(positionString: "BringToFront" | "BringForward" | "SendToBack" | "SendBackward"): void;'
    parameters:
    - id: positionString
      description: 相对于其他形状在 z 顺序堆栈中移动形状。 有关详细信息，请参阅 Excel.ShapeZOrder。
      type: "\"BringToFront\" | \"BringForward\" | \"SendToBack\" | \"SendBackward\""
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Shape#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: 重写 JavaScript 方法，以便向 API 对象传递 `toJSON()` 时提供更多有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->，反过来，调用传递给该对象的对象的方法。) 而原始 Excel.Shape 对象是一个 API 对象，该方法返回一个类型为 (`toJSON` `toJSON` JavaScript 对象 `Excel.Interfaces.ShapeData`<!-- -->) 包含原始对象中任何加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.ShapeData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.ShapeData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 2ef5a0024ba45ab62e1b4338b39e9ba09075d358
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49851800"
