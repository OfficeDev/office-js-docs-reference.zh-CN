### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.GroupShapeCollection:class'
    summary: |-
      代表形状组中的形状集合。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.GroupShapeCollection
    fullName: Excel.GroupShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.GroupShapeCollection#context:member'
      - 'excel!Excel.GroupShapeCollection#getCount:member(1)'
      - 'excel!Excel.GroupShapeCollection#getItem:member(1)'
      - 'excel!Excel.GroupShapeCollection#getItemAt:member(1)'
      - 'excel!Excel.GroupShapeCollection#items:member'
      - 'excel!Excel.GroupShapeCollection#load:member(1)'
      - 'excel!Excel.GroupShapeCollection#load:member(2)'
      - 'excel!Excel.GroupShapeCollection#load:member(3)'
      - 'excel!Excel.GroupShapeCollection#toJSON:member(1)'
  - uid: 'excel!Excel.GroupShapeCollection#context:member'
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.GroupShapeCollection#getCount:member(1)'
    summary: |-
      返回形状组中的形状数量。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.GroupShapeCollection#getItem:member(1)'
    summary: |-
      按名称或 ID 获取形状。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: key
          description: 要检索的形状的名称或 ID。
          type:
            - string
  - uid: 'excel!Excel.GroupShapeCollection#getItemAt:member(1)'
    summary: |-
      根据其在集合中的位置获取形状。

      \[[API 集： ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Shape;'
      return:
        type:
          - 'excel!Excel.Shape:class'
        description: ''
      parameters:
        - id: index
          description: 要检索的对象的从零开始的索引值。
          type:
            - number
  - uid: 'excel!Excel.GroupShapeCollection#items:member'
    summary: 获取此集合中已加载的子项。
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Shape[];'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection#items~0:complex'
  - uid: 'excel!Excel.GroupShapeCollection#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.GroupShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.GroupShapeCollection;'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection:class'
        description: ''
      parameters:
        - id: options
          description: 提供要加载的对象的属性的选项。
          type:
            - 'excel!Excel.GroupShapeCollection#load~0:complex'
  - uid: 'excel!Excel.GroupShapeCollection#load:member(2)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.GroupShapeCollection;'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.GroupShapeCollection#load:member(3)'
    summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.GroupShapeCollection;'
      return:
        type:
          - 'excel!Excel.GroupShapeCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`是一个以逗号分隔的字符串，用于指定要加载的属性，并且 `propertyNamesAndPaths.expand` 是一个以逗号分隔的字符串，用于指定要加载的导航属性。'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.GroupShapeCollection#toJSON:member(1)'
    summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，也 `toJSON` 会调用传递给它的对象的方法。尽管原始 `Excel.GroupShapeCollection` 对象是 API 对象，但 `toJSON` 方法返回一个无格式的 JavaScript 对象（类型为`Excel.Interfaces.GroupShapeCollectionData`<!-- -->），其中包含集合的项中所有加载属性的浅表副本的 "items" 数组。
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.GroupShapeCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.GroupShapeCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.GroupShapeCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.Shape:class'
    name: Excel.Shape
  - uid: 'excel!Excel.GroupShapeCollection#items~0:complex'
    name: 'Excel.Shape[]'
    fullName: 'Excel.Shape[]'
    spec.typeScript:
      - uid: 'excel!Excel.Shape:class'
        name: Excel.Shape
        fullName: Excel.Shape
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.GroupShapeCollection:class'
    name: Excel.GroupShapeCollection
  - uid: 'excel!Excel.GroupShapeCollection#load~0:complex'
    name: Excel.Interfaces.GroupShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.GroupShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.GroupShapeCollectionLoadOptions:interface'
        name: Excel.Interfaces.GroupShapeCollectionLoadOptions
        fullName: Excel.Interfaces.GroupShapeCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.GroupShapeCollectionData:interface'
    name: Excel.Interfaces.GroupShapeCollectionData