### YamlMime:UniversalReference
ms.openlocfilehash: 5cf79685bddd231bfba7f7a54a20513a53c2b24b
ms.sourcegitcommit: 4bbd18c863a4140ad456b859f9c0309e153e10b2
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 11/02/2018
ms.locfileid: "25912541"
items:
- uid: Outlook_1_2.Office.MessageCompose
  summary: >-
    邮件撰写模式下的[Office.context.mailbox.item](xref:Outlook_1_2.Office.Item)<!-- -->。


    重要说明： 这是一个内部的 Outlook 对象，不能直接通过现有接口公开。 应将此视为模式`Office.context.mailbox.item` <!-- -->。 引用的对象模型的详细信息页。
  name: Office.MessageCompose
  fullName: Outlook_1_2.Office.MessageCompose
  langs:
  - typeScript
  type: interface
  extends:
  - Message
  package: Outlook_1_2
  children:
  - Outlook_1_2.Office.MessageCompose.addFileAttachmentAsync
  - Outlook_1_2.Office.MessageCompose.addItemAttachmentAsync
  - Outlook_1_2.Office.MessageCompose.bcc
  - Outlook_1_2.Office.MessageCompose.body
  - Outlook_1_2.Office.MessageCompose.cc
  - Outlook_1_2.Office.MessageCompose.conversationId
  - Outlook_1_2.Office.MessageCompose.dateTimeCreated
  - Outlook_1_2.Office.MessageCompose.dateTimeModifed
  - Outlook_1_2.Office.MessageCompose.getSelectedDataAsync
  - Outlook_1_2.Office.MessageCompose.itemType
  - Outlook_1_2.Office.MessageCompose.loadCustomPropertiesAsync
  - Outlook_1_2.Office.MessageCompose.removeAttachmentAsync
  - Outlook_1_2.Office.MessageCompose.setSelectedDataAsync
  - Outlook_1_2.Office.MessageCompose.subject
  - Outlook_1_2.Office.MessageCompose.to
- uid: Outlook_1_2.Office.MessageCompose.addFileAttachmentAsync
  summary: >-
    将文件作为附件添加到邮件或约会。


    addFileAttachmentAsync 方法在指定的 URI 上载文件并将其附加到撰写窗体中的项目。


    您随后可以将该标识符与 removeAttachmentAsync 方法一同使用，以删除同一个会话中的附件。


    \[[API 集： 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr>


    <tr><td>错误</td><td>AttachmentSizeExceeded-附件大于所允许。</td></tr><tr><td></td><td>FileTypeNotSupported-附件具有未允许的扩展名。</td></tr><tr><td></td><td>NumberOfAttachmentsExceeded-的邮件或约会的附件太多。</td></tr></table>


    除了此签名，该方法还具有以下签名：


    `addFileAttachmentAsync(uri: string, attachmentName: string): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, options: AsyncContextOptions): void;`


    `addFileAttachmentAsync(uri: string, attachmentName: string, callback: (result: AsyncResult<string>) => void): void;`
  name: addFileAttachmentAsync(uri, attachmentName, options, callback)
  fullName: Outlook_1_2.Office.MessageCompose.addFileAttachmentAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: uri
      description: 提供附加到邮件或约会的文件的位置的 URI。最大长度为 2048 个字符。
      type:
      - string
    - id: attachmentName
      description: 在附件上载过程中显示的附件名称。最大长度为 255 个字符。
      type:
      - string
    - id: options
      description: 可选。 包含一个或多个以下属性的对象文本。 asyncContext： 开发人员可以提供他们希望在回调方法访问任何对象。 isInline： 如果为 true，指示附件将显示嵌入在邮件正文中，并且不应在附件列表中显示。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 该方法完成后，使用类型 Office.AsyncResult 的单个参数调用中的 callback 参数传递的函数。 成功，将 asyncResult.value 属性中提供的附件标识符。 如果上传附件失败，asyncResult 对象将包含一个 Error 对象，提供错误描述。
      type:
      - '(result: AsyncResult<string>) => void'
- uid: Outlook_1_2.Office.MessageCompose.addItemAttachmentAsync
  summary: >-
    将 Exchange 项目（如邮件）作为附件添加到邮件或约会。


    addItemAttachmentAsync 方法将包含指定 Exchange 标识符的项目附加到撰写窗体中的项目。如果您指定一个回调方法，此方法使用一个 asyncResult 参数调用，该参数包含一个附件标识符或代码，指示附加项目过程中出现的任何错误。您可以使用 options 参数将状态信息传递给回调方法（如果需要）。


    您随后可以将该标识符与 removeAttachmentAsync 方法一同使用，以删除同一个会话中的附件。


    如果 Office 外接程序在 Outlook Web App 中运行，则 addItemAttachmentAsync 方法可以将项目添加到项目（正在编辑的项目除外）中；然而，不支持也不建议这样做。


    \[[API 集： 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr>


    <tr><td>错误</td><td>NumberOfAttachmentsExceeded-的邮件或约会的附件太多。</td></tr></table>


    除了此签名，此方法还具有以下签名：


    `addItemAttachmentAsync(itemId: any, attachmentName: string): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, options: Office.AsyncContextOptions): void;`


    `addItemAttachmentAsync(itemId: any, attachmentName: string, callback: (result: AsyncResult<string>) => void): void;`
  name: addItemAttachmentAsync(itemId, attachmentName, options, callback)
  fullName: Outlook_1_2.Office.MessageCompose.addItemAttachmentAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: itemId
      description: 要附加的项目的 Exchange 标识符。最大长度为 100 个字符。
      type:
      - any
    - id: attachmentName
      description: 在附件上载过程中显示的附件名称。最大长度为 255 个字符。
      type:
      - string
    - id: options
      description: 包含一个或多个以下属性的对象文本。 asyncContext： 开发人员可以提供他们希望在回调方法访问任何对象。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 方法完成后，使用单个的类型为 AsyncResult 参数调用中的 callback 参数传递的函数。 成功，将 asyncResult.value 属性中提供的附件标识符。 如果添加附件失败，asyncResult 对象将包含一个 Error 对象，提供错误描述。
      type:
      - '(result: AsyncResult<string>) => void'
- uid: Outlook_1_2.Office.MessageCompose.bcc
  summary: >-
    获取一个对象，提供用于获取或更新邮件的密件抄送 （密件抄送副本） 行上的收件人的方法。


    \[[API 集： 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: bcc
  fullName: Outlook_1_2.Office.MessageCompose.bcc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bcc: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_2.Office.MessageCompose.body
  summary: >-
    获取一个提供用于处理项目正文的方法的对象。


    \[[API 集： 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: body
  fullName: Outlook_1_2.Office.MessageCompose.body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Office.Body;'
    return:
      type:
      - outlook.Office.Body
- uid: Outlook_1_2.Office.MessageCompose.cc
  summary: >-
    提供对邮件的抄送 (cc) 收件人访问。 对象的类型和访问级别取决于当前项的模式。


    Cc 属性返回[Office.Recipients](xref:Outlook_1_2.Office.Recipients)对象提供用于获取或更新的收件人的邮件 Cc 行上的方法。


    \[[API 集： 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: cc
  fullName: Outlook_1_2.Office.MessageCompose.cc
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cc: Recipients;'
    return:
      type:
      - Recipients
- uid: Outlook_1_2.Office.MessageCompose.conversationId
  summary: >-
    获取包含特定消息的电子邮件会话的标识符。


    如果在阅读窗体或撰写窗体的回复中激活邮件应用程序，则此属性可以获得一个整数值。如果用户随后更改了回复邮件的主题（若发送回复），则该邮件的对话 ID 将改变且之前获取的值将不适用。


    对于撰写窗体的新项目，此属性获得一个 null 值。如果用户设置一个主题并保存该项目，conversationId 属性将返回一个值。


    \[[API 集： 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: conversationId
  fullName: Outlook_1_2.Office.MessageCompose.conversationId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'conversationId: string;'
    return:
      type:
      - string
- uid: Outlook_1_2.Office.MessageCompose.dateTimeCreated
  summary: >-
    获取项目创建的日期和时间。仅限阅读模式。


    \[[API 集： 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: dateTimeCreated
  fullName: Outlook_1_2.Office.MessageCompose.dateTimeCreated
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dateTimeCreated: Date;'
    return:
      type:
      - Date
- uid: Outlook_1_2.Office.MessageCompose.dateTimeModifed
  summary: >-
    获取项目最近一次修改的日期和时间。仅限阅读模式。


    \[[API 集： 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>


    注意：在 Outlook for iOS 或 Outlook for Android 中不支持此成员。
  name: dateTimeModifed
  fullName: Outlook_1_2.Office.MessageCompose.dateTimeModifed
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dateTimeModifed: Date;'
    return:
      type:
      - Date
- uid: Outlook_1_2.Office.MessageCompose.getSelectedDataAsync
  summary: >-
    以异步方式返回邮件的主题或正文中选定的数据。


    如果没有选定内容，但光标位于正文或主题中，此方法将会为所选数据返回 null。如果选定的是字段，而不是正文或主题，则此方法返回 InvalidSelection 错误。


    若要从回调方法访问所选数据，请调用 asyncResult.value.data。若要访问选定内容的源属性，请调用 asyncResult.value.sourceProperty，这将为 body 或 subject。


    \[[API 集： 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: getSelectedDataAsync(coerciontype, callback)
  fullName: Outlook_1_2.Office.MessageCompose.getSelectedDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync(coerciontype: Office.CoercionType, callback: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: 作为字符串的所选数据的格式由 coercionType 确定。
    parameters:
    - id: coerciontype
      description: ''
      type:
      - office.Office.CoercionType
    - id: callback
      description: 该方法完成后，使用类型 Office.AsyncResult 的单个参数调用中的 callback 参数传递的函数。
      type:
      - '(result: AsyncResult<any>) => void'
- uid: Outlook_1_2.Office.MessageCompose.itemType
  summary: >-
    获取实例表示的项的类型。


    itemType 属性返回其中一个 ItemType 枚举值，指示 item 对象实例是邮件还是约会。


    \[[API 集： 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: itemType
  fullName: Outlook_1_2.Office.MessageCompose.itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: Office.MailboxEnums.ItemType;'
    return:
      type:
      - outlook.Office.MailboxEnums.ItemType
- uid: Outlook_1_2.Office.MessageCompose.loadCustomPropertiesAsync
  summary: >-
    异步加载所选项目上此外接程序的自定义属性。


    自定义属性基于每个应用、每个项目存储为键/值对。此方法在回调中返回 CustomProperties，该回调提供访问特定于当前项目和当前外接程序的自定义属性的方法。自定义属性未在项目上加密，因此这不应用作安全存储。


    自定义属性作为 asyncResult.value 属性中的 CustomProperties 对象提供。此对象可用于获取、设置以及从项目中删除自定义属性，并将自定义属性集的更改重新保存到服务器。


    \[[API 集： 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: Outlook_1_2.Office.MessageCompose.loadCustomPropertiesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: AsyncResult<Office.CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: 该方法完成后，使用类型 Office.AsyncResult 的单个参数调用中的 callback 参数传递的函数。
      type:
      - '(result: AsyncResult<Office.CustomProperties>) => void'
    - id: userContext
      description: 可选。 开发人员可以提供他们想要访问的回调函数中的任何对象。 AsyncResult.asyncContext 属性的回调函数中，可以访问此对象。
      type:
      - any
- uid: Outlook_1_2.Office.MessageCompose.removeAttachmentAsync
  summary: >-
    将附件从邮件或约会中删除。


    RemoveAttachmentAsync 方法从项目中删除具有指定标识符的附件。 最佳做法是，仅当同一个邮件应用程序在同一会话中添加了一个附件时，你才应使用该附件标识符来删除该附件。 在 Outlook Web App 和适用于设备的 OWA 中，附件标识符只在同一个会话中才有效。 会话是通过，当用户关闭应用程序，或如果用户开始撰写内嵌窗体，则随后弹出窗体继续在单独的窗口。


    \[[API 集： 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr>


    <tr><td>错误</td><td>InvalidAttachmentId-附件标识符不存在。</td></tr></table>


    除了此签名，该方法还具有以下签名：


    `removeAttachmentAsync(attachmentIndex: string): void;`


    `removeAttachmentAsync(attachmentIndex: string, options: Office.AsyncContextOptions): void;`


    `removeAttachmentAsync(attachmentIndex: string, callback: (result: AsyncResult<void>) => void): void;`
  name: removeAttachmentAsync(attachmentIndex, options, callback)
  fullName: Outlook_1_2.Office.MessageCompose.removeAttachmentAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeAttachmentAsync(attachmentIndex: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentIndex
      description: 要删除的附件的标识符。字符串的最大长度为 100 个字符。
      type:
      - string
    - id: options
      description: 可选。 包含一个或多个以下属性的对象文本。 asyncContext： 开发人员可以提供他们希望在回调方法访问任何对象。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 可选。 该方法完成后，使用类型 Office.AsyncResult 的单个参数调用中的 callback 参数传递的函数。 如果删除附件失败，则 asyncResult.error 属性将包含错误代码与失败的原因。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: Outlook_1_2.Office.MessageCompose.setSelectedDataAsync
  summary: >-
    以异步方式将数据插入到邮件的正文或主题中。


    SetSelectedDataAsync 方法在光标位置中的主题或正文的项目，插入指定的字符串，或者，如果在编辑器中未选择文本，它将替换所选的文本。 如果光标不在正文或主题字段中，则返回错误。 后插入，光标位于插入内容的末尾。


    \[[API 集： 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr>


    <tr><td>错误</td><td>InvalidAttachmentId-附件标识符不存在。</td></tr></table>


    除了此签名，该方法还具有以下签名：


    `setSelectedDataAsync(data: string): void;`


    `setSelectedDataAsync(data: string, options: Office.AsyncContextOptions & CoercionTypeOptions): void;`


    `setSelectedDataAsync(data: string, callback: (result: AsyncResult<void>) => void): void;`
  name: setSelectedDataAsync(data, options, callback)
  fullName: Outlook_1_2.Office.MessageCompose.setSelectedDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: 要插入的数据。数据不得超过 1,000,000 个字符。如果传入的数据超过 1,000,000 个字符，则会引发 ArgumentOutOfRange 异常。
      type:
      - string
    - id: options
      description: 可选。 包含一个或多个以下属性的对象文本。 asyncContext： 开发人员可以提供他们希望在回调方法访问任何对象。 coercionType： 如果文本，当前样式应用 Outlook Web App 和 Outlook 中。 如果该字段是 HTML 编辑器，则仅插入文本数据，即使数据为 HTML。 如果 html 和字段支持的 HTML （主题不），当前样式应用 Outlook Web App 中，并在 Outlook 中应用的默认样式。 如果字段是文本字段，则返回 InvalidDataFormat 错误。 如果未设置 coercionType，则结果取决于字段：如果该字段为 HTML，则使用 HTML；如果该字段为文本，则使用纯文本。
      type:
      - Office.AsyncContextOptions & CoercionTypeOptions
    - id: callback
      description: 可选。 该方法完成后，使用类型 Office.AsyncResult 的单个参数调用中的 callback 参数传递的函数。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: Outlook_1_2.Office.MessageCompose.subject
  summary: >-
    获取或设置显示在项目的主题字段中的说明。


    subject 属性获取或设置由电子邮件服务器发送项目时的整个主题。


    subject 属性返回一个 Subject 对象，该对象提供用于获取和设置主题的方法。


    \[[API 集： 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: subject
  fullName: Outlook_1_2.Office.MessageCompose.subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: Subject;'
    return:
      type:
      - Subject
- uid: Outlook_1_2.Office.MessageCompose.to
  summary: >-
    提供的收件人的邮件 To 行的访问。 对象的类型和访问级别取决于当前项的模式。


    到属性返回提供方法用于获取或更新的邮件 To 行上的收件人的 Recipients 对象。


    \[[API 集： 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>邮件撰写</td></tr></table>
  name: to
  fullName: Outlook_1_2.Office.MessageCompose.to
  langs:
  - typeScript
  type: property
  syntax:
    content: 'to: Recipients;'
    return:
      type:
      - Recipients
