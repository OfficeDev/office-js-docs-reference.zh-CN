### YamlMime:UniversalReference
items:
  - uid: Outlook_1_2.Office.CustomProperties
    summary: |-
      CustomProperties 对象表示特定于特定项目的自定义属性, 以及特定于 Outlook 邮件外接程序的自定义属性。 例如，邮件外接程序可能有必要保存一些特定于激活外接程序的当前电子邮件的数据。 如果用户以后再次访问相同的邮件，并再次激活邮件外接程序，外接程序将能够检索作为自定义属性保存的数据。

      由于 Outlook for Mac 不缓存自定义属性, 因此如果用户的网络出现故障, 邮件外接程序将无法访问其自定义属性。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写或阅读
    name: Office.CustomProperties
    fullName: Office.CustomProperties
    langs:
      - typeScript
    type: interface
    package: Outlook_1_2
    children:
      - Outlook_1_2.Office.CustomProperties.get
      - Outlook_1_2.Office.CustomProperties.remove
      - Outlook_1_2.Office.CustomProperties.saveAsync
      - Outlook_1_2.Office.CustomProperties.set
  - uid: Outlook_1_2.Office.CustomProperties.get
    summary: 返回指定自定义属性的值。
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写或阅读
    name: get(name)
    fullName: get(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'get(name: string): any;'
      return:
        type:
          - any
        description: |-
          指定的自定义属性的值。

          \[Api 集: 邮箱1。0\]
      parameters:
        - id: name
          description: 要返回的自定义属性的名称。
          type:
            - string
  - uid: Outlook_1_2.Office.CustomProperties.remove
    summary: |-
      从自定义属性集合中移除指定的属性。

      若要永久移除属性, 必须调用 CustomProperties 对象的 saveAsync 方法。
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写或阅读
    name: remove(name)
    fullName: remove(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: |-
            要移除的属性的名称。

            \[Api 集: 邮箱1。0\]
          type:
            - string
  - uid: Outlook_1_2.Office.CustomProperties.saveAsync
    summary: |-
      将特定于项目的自定义属性保存到服务器。

      必须调用 saveAsync 方法, 以保留通过 set 方法或 CustomProperties 对象的 remove 方法所做的任何更改。 保存操作是异步操作。

      最好让回调函数检查并处理 saveAsync 中的错误。 尤其要注意的是，当用户在阅读窗体中处于连接状态时，可以激活阅读外接程序，随后用户将断开连接。 如果外接程序在处于断开连接状态时调用 saveAsync, saveAsync 将返回错误。 你的回调方法应该会相应地处理此错误。
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写或阅读

      #### <a name="examples"></a>示例

      ```javascript
      // The following JavaScript code sample shows how to asynchronously use
      // the loadCustomPropertiesAsync method to load custom properties that
      // are specific to the current item, and the saveAsync method to save
      // these properties back to the server. After loading the custom properties,
      // the code sample uses the get method to read the custom property myProp,
      // the set method to write the custom property otherProp, and then finally
      // calls the saveAsync method to save the custom properties.

      // The initialize function is required for all add-ins.
      Office.initialize = function () {
          // Checks for the DOM to load using the jQuery ready function.
          $(document).ready(function () {
              // After the DOM is loaded, add-in-specific code can run.
              var item = Office.context.mailbox.item;
              item.loadCustomPropertiesAsync(customPropsCallback);
          });
      };

      function customPropsCallback(asyncResult) {
          var customProps = asyncResult.value;
          var myProp = customProps.get("myProp");

          customProps.set("otherProp", "value");
          customProps.saveAsync(saveCallback);
      }

      function saveCallback(asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Failed) {
              write(asyncResult.error.message);
          }
          else {
              // Async call to save custom properties completed.
              // Proceed to do the appropriate for your add-in.
          }
      }

      // Writes to a div with id='message' on the page.
      function write(message) {
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'saveAsync(callback, asyncContext)'
    fullName: 'saveAsync(callback, asyncContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback?: (asyncResult: Office.AsyncResult<void>) => void, asyncContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
        - id: asyncContext
          description: |-
            可选。 传递给回调方法的任何状态数据。

            \[Api 集: 邮箱1。0\]
          type:
            - any
  - uid: Outlook_1_2.Office.CustomProperties.set
    summary: |-
      将指定属性设置为指定值。

      set 方法将指定的属性设置为指定的值。 必须使用 saveAsync 方法将属性保存到服务器。

      如果指定的属性尚不存在, 则 set 方法将创建一个新属性;否则, 现有值将被替换为新值。 value 参数可以是任何类型;但是, 它始终作为字符串传递给服务器。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写或阅读
    name: 'set(name, value)'
    fullName: 'set(name, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(name: string, value: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: 要设置的属性的名称。
          type:
            - string
        - id: value
          description: 要设置的属性的值。
          type:
            - string