### YamlMime:UniversalReference
items:
  - uid: Outlook.Office.MessageCompose
    summary: |-
      [Office](xref:Outlook.Office.Item)的邮件撰写模式。<!-- -->.

      **重要说明**: 这是一个内部 Outlook 对象, 而不是直接通过现有接口公开。 应将其视为 "context.subname" 模式。 有关详细信息, 请参阅[对象模型](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.2/office.context.mailbox.item)页。
    name: Office.MessageCompose
    fullName: Office.MessageCompose
    langs:
      - typeScript
    type: interface
    extends:
      - Outlook.Office.Message
      - Outlook.Office.ItemCompose
    package: Outlook
    children:
      - Outlook.Office.MessageCompose.addFileAttachmentAsync
      - Outlook.Office.MessageCompose.addFileAttachmentAsync_1
      - Outlook.Office.MessageCompose.addItemAttachmentAsync
      - Outlook.Office.MessageCompose.addItemAttachmentAsync_1
      - Outlook.Office.MessageCompose.getSelectedDataAsync
      - Outlook.Office.MessageCompose.getSelectedDataAsync_1
      - Outlook.Office.MessageCompose.loadCustomPropertiesAsync
      - Outlook.Office.MessageCompose.removeAttachmentAsync
      - Outlook.Office.MessageCompose.removeAttachmentAsync_1
      - Outlook.Office.MessageCompose.setSelectedDataAsync
      - Outlook.Office.MessageCompose.setSelectedDataAsync_1
      - Outlook.Office.MessageCompose.bcc
      - Outlook.Office.MessageCompose.body
      - Outlook.Office.MessageCompose.cc
      - Outlook.Office.MessageCompose.conversationId
      - Outlook.Office.MessageCompose.itemType
      - Outlook.Office.MessageCompose.subject
      - Outlook.Office.MessageCompose.to
  - uid: Outlook.Office.MessageCompose.addFileAttachmentAsync
    summary: |-
      将文件作为附件添加到邮件或约会。

      AddFileAttachmentAsync 方法在指定的 URI 处上载文件, 并将其附加到撰写窗体中的项目。

      随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      **错误**:

      - AttachmentSizeExceeded: 附件大于允许的大小。

      - FileTypeNotSupported: 附件的分机号码是不允许的。

      - NumberOfAttachmentsExceeded: 邮件或约会的附件过多。

      #### <a name="examples"></a>示例

      ```javascript
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          var attachmentURL = "https://contoso.com/rtm/icon.png";
          Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
      }
      ```
      ```javascript
      // The following example adds an image file as an inline attachment and
      // references the attachment in the message body.
      Office.context.mailbox.item.addFileAttachmentAsync(
          "http://i.imgur.com/WJXklif.png",
          "cute_bird.png",
          {
              isInline: true
          },
          function (asyncResult) {
              Office.context.mailbox.item.body.setAsync(
                  "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                  {
                      "coercionType": "html"
                  },
                  function (asyncResult) {
                      // Do something here.
                  });
          });
      ```
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: 提供附加到邮件或约会的文件的位置的 URI。 最大长度为 2048 个字符。
          type:
            - string
        - id: attachmentName
          description: 在附件上载过程中显示的附件名称。 最大长度为 255 个字符。
          type:
            - string
        - id: options
          description: '可选。 包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。 isInline: 如果为 true, 则表示附件将在邮件正文中以内联方式显示, 并且不应显示在附件列表中。'
          type:
            - 'Office.AsyncContextOptions & { isInline: boolean }'
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 成功后, 将在 asyncResult 属性中提供附件标识符。 如果上传附件失败, asyncResult 对象将包含一个 Error 对象, 该对象提供错误说明。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.MessageCompose.addFileAttachmentAsync_1
    summary: |-
      将文件作为附件添加到邮件或约会。

      AddFileAttachmentAsync 方法在指定的 URI 处上载文件, 并将其附加到撰写窗体中的项目。

      随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      **错误**:

      - AttachmentSizeExceeded: 附件大于允许的大小。

      - FileTypeNotSupported: 附件的分机号码是不允许的。

      - NumberOfAttachmentsExceeded: 邮件或约会的附件过多。
    name: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: 提供附加到邮件或约会的文件的位置的 URI。 最大长度为 2048 个字符。
          type:
            - string
        - id: attachmentName
          description: 在附件上载过程中显示的附件名称。 最大长度为 255 个字符。
          type:
            - string
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 成功后, 将在 asyncResult 属性中提供附件标识符。 如果上传附件失败, asyncResult 对象将包含一个 Error 对象, 该对象提供错误说明。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.MessageCompose.addItemAttachmentAsync
    summary: |-
      将 Exchange 项目（如邮件）作为附件添加到邮件或约会。

      AddItemAttachmentAsync 方法将具有指定 Exchange 标识符的项目附加到撰写窗体中的项目。 如果指定了回调方法, 则使用一个参数 asyncResult 调用方法, 该参数包含附件标识符或指示附加项目时出现的任何错误的代码。 如果需要, 可以使用 options 参数将状态信息传递给回调方法。

      随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。

      如果 Office 外接程序在 web 上的 Outlook 中运行, 则 addItemAttachmentAsync 方法可以将项目附加到您正在编辑的项目之外的项目中;但是, 不支持这种情况, 建议不要这样做。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      **错误**:

      - NumberOfAttachmentsExceeded: 邮件或约会的附件过多。

      #### <a name="examples"></a>示例

      ```javascript
      // The following example adds an existing Outlook item as an attachment
      // with the name `My Attachment`.
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // EWS ID of item to attach (shortened for readability).
          var itemId = "AAMkADI1...AAA=";

          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
      }
      ```
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: 要附加的项目的 Exchange 标识符。 最大长度为 100 个字符。
          type:
            - any
        - id: attachmentName
          description: 在附件上载过程中显示的附件名称。 最大长度为 255 个字符。
          type:
            - string
        - id: options
          description: '可选。 包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 成功后, 将在 asyncResult 属性中提供附件标识符。 如果添加附件失败, asyncResult 对象将包含一个 Error 对象, 该对象提供错误说明。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.MessageCompose.addItemAttachmentAsync_1
    summary: |-
      将 Exchange 项目（如邮件）作为附件添加到邮件或约会。

      AddItemAttachmentAsync 方法将具有指定 Exchange 标识符的项目附加到撰写窗体中的项目。 如果指定了回调方法, 则使用一个参数 asyncResult 调用方法, 该参数包含附件标识符或指示附加项目时出现的任何错误的代码。 如果需要, 可以使用 options 参数将状态信息传递给回调方法。

      随后可以将该标识符与 removeAttachmentAsync 方法一起使用, 以删除同一个会话中的附件。

      如果 Office 外接程序在 web 上的 Outlook 中运行, 则 addItemAttachmentAsync 方法可以将项目附加到您正在编辑的项目之外的项目中;但是, 不支持这种情况, 建议不要这样做。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      **错误**:

      - NumberOfAttachmentsExceeded: 邮件或约会的附件过多。
    name: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: 要附加的项目的 Exchange 标识符。 最大长度为 100 个字符。
          type:
            - any
        - id: attachmentName
          description: 在附件上载过程中显示的附件名称。 最大长度为 255 个字符。
          type:
            - string
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 成功后, 将在 asyncResult 属性中提供附件标识符。 如果添加附件失败, asyncResult 对象将包含一个 Error 对象, 该对象提供错误说明。'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook.Office.MessageCompose.getSelectedDataAsync
    summary: |-
      以异步方式返回邮件的主题或正文中选定的数据。

      如果没有选定内容，但光标位于正文或主题中，此方法将会为所选数据返回 null。 如果选择了 "正文" 或 "主题" 以外的字段, 则该方法将返回 InvalidSelection 错误。

      若要从回调方法访问所选数据, 请调用 asyncResult. value。 若要访问所选内容来自的源属性, 请调用 asyncResult. sourceProperty, 它是正文或主题。

      \[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      #### <a name="examples"></a>示例

      ```javascript
      // Get selected data.
      Office.initialize = function () {
          Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
      };

      function getCallback(asyncResult) {
          var text = asyncResult.value.data;
          var prop = asyncResult.value.sourceProperty;

          Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
      }

      function setCallback(asyncResult) {
          // Check for errors.
      }
      ```
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: 所选数据的格式为 coercionType 所确定的格式的字符串。
      parameters:
        - id: coercionType
          description: '请求数据的格式。 如果为 Text, 则此方法以字符串的形式返回纯文本, 同时删除任何 HTML 标记。 如果为 HTML，则此方法返回所选文本，不论是纯文本还是 HTML。'
          type:
            - Office.CoercionType | string
        - id: options
          description: '包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: Outlook.Office.MessageCompose.getSelectedDataAsync_1
    summary: |-
      以异步方式返回邮件的主题或正文中选定的数据。

      如果没有选定内容，但光标位于正文或主题中，此方法将会为所选数据返回 null。 如果选择了 "正文" 或 "主题" 以外的字段, 则该方法将返回 InvalidSelection 错误。

      若要从回调方法访问所选数据, 请调用 asyncResult. value。 若要访问所选内容来自的源属性, 请调用 asyncResult. sourceProperty, 它是正文或主题。

      \[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: 所选数据的格式为 coercionType 所确定的格式的字符串。
      parameters:
        - id: coercionType
          description: '请求数据的格式。 如果为 Text, 则此方法以字符串的形式返回纯文本, 同时删除任何 HTML 标记。 如果为 HTML，则此方法返回所选文本，不论是纯文本还是 HTML。'
          type:
            - Office.CoercionType | string
        - id: callback
          description: '方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: Outlook.Office.MessageCompose.loadCustomPropertiesAsync
    summary: |-
      异步加载所选项目上此外接程序的自定义属性。

      自定义属性基于每个应用、每个项目存储为键/值对。 此方法在回调中返回一个 CustomProperties 对象, 该对象提供用于访问特定于当前项目和当前加载项的自定义属性的方法。 自定义属性未在项目上加密，因此这不应用作安全存储。

      自定义属性作为 asyncResult 属性中的 CustomProperties 对象提供。 此对象可用于获取、设置以及从项目中删除自定义属性，并将自定义属性集的更改重新保存到服务器。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: 'loadCustomPropertiesAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
        - id: userContext
          description: 可选。 开发人员可以提供他们想要在回调函数中访问的任何对象。 此对象可以通过回调函数中的 asyncContext 属性来访问。
          type:
            - any
  - uid: Outlook.Office.MessageCompose.removeAttachmentAsync
    summary: |-
      将附件从邮件或约会中删除。

      RemoveAttachmentAsync 方法从项中删除具有指定标识符的附件。 最佳做法是，仅当同一个邮件应用程序在同一会话中添加了一个附件时，你才应使用该附件标识符来删除该附件。 在 web 和移动设备上的 Outlook 中, 附件标识符仅在同一个会话中有效。 当用户关闭应用程序时, 或者如果用户开始撰写内嵌窗体, 随后弹出窗体以继续在单独的窗口中。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。

      #### <a name="examples"></a>示例

      ```javascript
      // The following code removes an attachment with an identifier of '0'.
      Office.context.mailbox.item.removeAttachmentAsync(
          '0',
          { asyncContext : null },
          function (asyncResult)
          {
              console.log(asyncResult.status);
          }
      );
      ```
    name: 'removeAttachmentAsync(attachmentId, options, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: 要删除的附件的标识符。
          type:
            - string
        - id: options
          description: '可选。 包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 如果删除附件失败, asyncResult 属性将包含失败原因的错误代码。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.MessageCompose.removeAttachmentAsync_1
    summary: |-
      将附件从邮件或约会中删除。

      RemoveAttachmentAsync 方法从项中删除具有指定标识符的附件。 最佳做法是，仅当同一个邮件应用程序在同一会话中添加了一个附件时，你才应使用该附件标识符来删除该附件。 在 web 和移动设备上的 Outlook 中, 附件标识符仅在同一个会话中有效。 当用户关闭应用程序时, 或者如果用户开始撰写内嵌窗体, 随后弹出窗体以继续在单独的窗口中。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。
    name: 'removeAttachmentAsync(attachmentId, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: 要删除的附件的标识符。
          type:
            - string
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。 如果删除附件失败, asyncResult 属性将包含失败原因的错误代码。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.MessageCompose.setSelectedDataAsync
    summary: |-
      以异步方式将数据插入到邮件的正文或主题中。

      Document.setselecteddataasync 方法将指定的字符串插入到项目的主题或正文中的光标位置, 或者, 如果在编辑器中选择了文本, 则会将所选的文本替换为文本。 如果游标不在 body 或 subject 字段中, 则返回错误。 插入后, 光标放置在插入内容的末尾。

      \[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。

      #### <a name="examples"></a>示例

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });
      ```
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '要插入的数据。 数据不得超过 1,000,000 个字符。 如果传入了1000000个以上的字符, 则会引发 ArgumentOutOfRange 异常。'
          type:
            - string
        - id: options
          description: '可选。 包含一个或多个以下属性的对象文本。 asyncContext: 开发人员可以在回调方法中提供要访问的任何对象。 coercionType: 如果是文本, 则当前样式应用于 web 上的 Outlook 和桌面客户端。 如果该字段是 HTML 编辑器，则仅插入文本数据，即使数据为 HTML。 如果 html 和字段支持 HTML (主题不), 则当前样式应用于 web 上的 Outlook, 并且默认样式应用于桌面客户端上的 Outlook 中。 如果字段是文本字段, 则返回一个 InvalidDataFormat 错误。 如果未设置 coercionType, 则结果取决于字段: 如果该字段为 HTML, 则使用 HTML;如果该字段为文本, 则使用纯文本。'
          type:
            - Office.AsyncContextOptions & CoercionTypeOptions
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.MessageCompose.setSelectedDataAsync_1
    summary: |-
      以异步方式将数据插入到邮件的正文或主题中。

      Document.setselecteddataasync 方法将指定的字符串插入到项目的主题或正文中的光标位置, 或者, 如果在编辑器中选择了文本, 则会将所选的文本替换为文本。 如果游标不在 body 或 subject 字段中, 则返回错误。 插入后, 光标放置在插入内容的末尾。

      \[[API 集: 邮箱 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      **错误**:

      - InvalidAttachmentId: 附件标识符不存在。

      #### <a name="examples"></a>示例

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("Hello World!");
      ```
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: '要插入的数据。 数据不得超过 1,000,000 个字符。 如果传入了1000000个以上的字符, 则会引发 ArgumentOutOfRange 异常。'
          type:
            - string
        - id: callback
          description: '可选。 方法完成后, 将使用类型为 AsyncResult 的单个参数调用在 callback 参数中传递的函数。'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook.Office.MessageCompose.bcc
    summary: |-
      获取对象，该对象提供用于获取或更新邮件的密件抄送 (Bcc) 行上的收件人的方法。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      #### <a name="examples"></a>示例

      ```javascript
      Office.context.mailbox.item.bcc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.bcc.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.bcc.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfBccRecipients = asyncResult.value;
      }
      ```
    name: bcc
    fullName: bcc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bcc: Recipients;'
      return:
        type:
          - Outlook.Office.Recipients
  - uid: Outlook.Office.MessageCompose.body
    summary: |-
      获取一个提供用于处理项目正文的方法的对象。

      \[[API 集: 邮箱 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      #### <a name="examples"></a>示例

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Body;'
      return:
        type:
          - Outlook.Office.Body
  - uid: Outlook.Office.MessageCompose.cc
    summary: |-
      提供对邮件的抄送 (Cc) 收件人的访问权限。 对象的类型和访问级别取决于当前项目的模式。

      Cc 属性返回一个[Office. 收件人](xref:Outlook.Office.Recipients)对象, 该对象提供用于获取或更新邮件的 "抄送" 行上的收件人的方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      #### <a name="examples"></a>示例

      ```javascript
      Office.context.mailbox.item.cc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.cc.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.cc.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfCcRecipients = asyncResult.value;
      }
      ```
    name: cc
    fullName: cc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cc: Recipients;'
      return:
        type:
          - Outlook.Office.Recipients
  - uid: Outlook.Office.MessageCompose.conversationId
    summary: |-
      获取包含特定消息的电子邮件会话的标识符。

      如果在阅读窗体或撰写窗体的回复中激活邮件应用程序，则此属性可以获得一个整数值。如果用户随后更改了回复邮件的主题（若发送回复），则该邮件的对话 ID 将改变且之前获取的值将不适用。

      对于撰写窗体的新项目，此属性获得一个 null 值。 如果用户设置主题并保存项, 则 conversationId 属性将返回一个值。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      #### <a name="examples"></a>示例

      ```javascript
      var conversationId = Office.context.mailbox.item.conversationId;
      console.log("conversationId: " + conversationId);
      ```
    name: conversationId
    fullName: conversationId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'conversationId: string;'
      return:
        type:
          - string
  - uid: Outlook.Office.MessageCompose.itemType
    summary: |-
      获取实例表示的项的类型。

      ItemType 属性返回一个 ItemType 枚举值, 指示 item 对象实例是邮件还是约会。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      #### <a name="examples"></a>示例

      ```javascript
      if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
          // Do something.
      } else {
          // Do something else.
      }
      ```
    name: itemType
    fullName: itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: MailboxEnums.ItemType | string;'
      return:
        type:
          - MailboxEnums.ItemType | string
  - uid: Outlook.Office.MessageCompose.subject
    summary: |-
      获取或设置显示在项目的主题字段中的说明。

      Subject 属性获取或设置由电子邮件服务器发送的项目的整个主题。

      Subject 属性返回一个 Subject 对象, 该对象提供用于获取和设置主题的方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      #### <a name="examples"></a>示例

      ```javascript
      Office.context.mailbox.item.subject.getAsync(callback);

      function callback(asyncResult) {
          var subject = asyncResult.value;
      }
      ```
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - Outlook.Office.Subject
  - uid: Outlook.Office.MessageCompose.to
    summary: |-
      提供对邮件的“收件人”行上的收件人的访问权限。 对象的类型和访问级别取决于当前项目的模式。

      To 属性返回一个收件人对象, 该对象提供用于获取或更新邮件的 "收件人" 行上的收件人的方法。

      \[[API 集: 邮箱 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      **[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 邮件撰写

      #### <a name="examples"></a>示例

      ```javascript
      Office.context.mailbox.item.to.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.to.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.to.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfToRecipients = asyncResult.value;
      }
      ```
    name: to
    fullName: to
    langs:
      - typeScript
    type: property
    syntax:
      content: 'to: Recipients;'
      return:
        type:
          - Outlook.Office.Recipients