### YamlMime:UniversalReference
ms.openlocfilehash: b1e9b5c038d95d276dd8bba24bec9bb871147043
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976990"
items:
- uid: visio.Visio.Shape
  summary: >-
    <span data-ttu-id="70d6f-101">表示 Shape 类。</span><span class="sxs-lookup"><span data-stu-id="70d6f-101">Represents the Shape class.</span></span>


    <span data-ttu-id="70d6f-102">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Shape
  fullName: Visio.Shape
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Shape.comments
  - visio.Visio.Shape.getBounds
  - visio.Visio.Shape.hyperlinks
  - visio.Visio.Shape.id
  - visio.Visio.Shape.load
  - visio.Visio.Shape.load_1
  - visio.Visio.Shape.load_2
  - visio.Visio.Shape.name
  - visio.Visio.Shape.select
  - visio.Visio.Shape.set
  - visio.Visio.Shape.set_1
  - visio.Visio.Shape.shapeDataItems
  - visio.Visio.Shape.subShapes
  - visio.Visio.Shape.text
  - visio.Visio.Shape.toJSON
  - visio.Visio.Shape.view
- uid: visio.Visio.Shape.comments
  summary: >-
    <span data-ttu-id="70d6f-p101">返回注释集合。只读。</span><span class="sxs-lookup"><span data-stu-id="70d6f-p101">Returns the Comments Collection. Read-only.</span></span>


    <span data-ttu-id="70d6f-105">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-105">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: comments
  fullName: comments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type:
      - visio.Visio.CommentCollection
- uid: visio.Visio.Shape.getBounds
  summary: >-
    <span data-ttu-id="70d6f-106">返回指定形状边界框的 BoundingBox 对象。</span><span class="sxs-lookup"><span data-stu-id="70d6f-106">Returns the BoundingBox object that specifies bounding box of the shape.</span></span>


    <span data-ttu-id="70d6f-107">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-107">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getBounds()
  fullName: getBounds()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type:
      - OfficeExtension.ClientResult<Visio.BoundingBox>
      description: ''
- uid: visio.Visio.Shape.hyperlinks
  summary: >-
    <span data-ttu-id="70d6f-p102">返回一组形状对象超链接。只读。</span><span class="sxs-lookup"><span data-stu-id="70d6f-p102">Returns the Hyperlinks collection for a Shape object. Read-only.</span></span>


    <span data-ttu-id="70d6f-110">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: hyperlinks
  fullName: hyperlinks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type:
      - visio.Visio.HyperlinkCollection
- uid: visio.Visio.Shape.id
  summary: >-
    <span data-ttu-id="70d6f-111">形状的标识符。</span><span class="sxs-lookup"><span data-stu-id="70d6f-111">Shape's identifier.</span></span> <span data-ttu-id="70d6f-112">只读。</span><span class="sxs-lookup"><span data-stu-id="70d6f-112">Read-only.</span></span>


    <span data-ttu-id="70d6f-113">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-113">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: visio.Visio.Shape.load
  summary: <span data-ttu-id="70d6f-114">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="70d6f-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70d6f-115">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="70d6f-115">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="70d6f-116">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="70d6f-116">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="70d6f-117">`load(option?: string | string[]): Visio.Shape`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="70d6f-117">`load(option?: string | string[]): Visio.Shape` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="70d6f-118">`load(option?: { select?: string; expand?: string; }): Visio.Shape`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="70d6f-118">`load(option?: { select?: string; expand?: string; }): Visio.Shape` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="70d6f-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="70d6f-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape` - Only available on collection types.</span></span> <span data-ttu-id="70d6f-120">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="70d6f-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="70d6f-121">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="70d6f-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="70d6f-122">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="70d6f-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="70d6f-123">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="70d6f-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="70d6f-124">示例</span><span class="sxs-lookup"><span data-stu-id="70d6f-124">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Sample Name";
        var shape = activePage.shapes.getItem(shapeName);
        shape.load();
        return ctx.sync().then(function () {
            console.log(shape.name );
            console.log(shape.id );
            console.log(shape.Text );
            console.log(shape.Select );
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```

    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        shape.view.highlight = { color: "#E7E7E7", width: 100 };
        return ctx.sync();
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
    return:
      type:
      - visio.Visio.Shape
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - visio.Visio.Interfaces.ShapeLoadOptions
- uid: visio.Visio.Shape.load_1
  summary: <span data-ttu-id="70d6f-125">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="70d6f-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70d6f-126">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="70d6f-126">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Shape;'
    return:
      type:
      - visio.Visio.Shape
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="70d6f-127">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="70d6f-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Shape.load_2
  summary: <span data-ttu-id="70d6f-128">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="70d6f-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="70d6f-129">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="70d6f-129">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Shape;'
    return:
      type:
      - visio.Visio.Shape
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="70d6f-130">其中 propertyNamesAndPaths.select 是一个以逗号分隔的字符串，指定要加载的属性，propertyNamesAndPaths.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="70d6f-130">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.Shape.name
  summary: >-
    <span data-ttu-id="70d6f-p108">形状的名称。只读。</span><span class="sxs-lookup"><span data-stu-id="70d6f-p108">Shape's name. Read-only.</span></span>


    <span data-ttu-id="70d6f-133">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-133">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.select
  summary: >-
    <span data-ttu-id="70d6f-p109">如果选择形状，则返回 true。用户可以设置为 true，从而明确选择形状。</span><span class="sxs-lookup"><span data-stu-id="70d6f-p109">Returns true, if shape is selected. User can set true to select the shape explicitly.</span></span>


    <span data-ttu-id="70d6f-136">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-136">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: select
  fullName: select
  langs:
  - typeScript
  type: property
  syntax:
    content: 'select: boolean;'
    return:
      type:
      - boolean
- uid: visio.Visio.Shape.set
  summary: <span data-ttu-id="70d6f-137">在同一时间设置对象的多个的属性。</span><span class="sxs-lookup"><span data-stu-id="70d6f-137">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="70d6f-138">您可以传递具有的相应属性的普通对象或相同类型的另一个 API 对象。</span><span class="sxs-lookup"><span data-stu-id="70d6f-138">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="70d6f-139">此方法具有以下其他签名：</span><span class="sxs-lookup"><span data-stu-id="70d6f-139">This method has the following additional signature:</span></span>


    `set(properties: Visio.Shape): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="70d6f-140">具有对属性的对象调用 isomorphically 结构化的属性的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="70d6f-140">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ShapeUpdateData
    - id: options
      description: <span data-ttu-id="70d6f-141">提供一个选项以取消显示错误，如果属性对象会尝试设置任何只读属性。</span><span class="sxs-lookup"><span data-stu-id="70d6f-141">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Shape.set_1
  summary: <span data-ttu-id="70d6f-142">在基于现有加载对象的同一时间对象上设置多个属性。</span><span class="sxs-lookup"><span data-stu-id="70d6f-142">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.Shape): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - visio.Visio.Shape
- uid: visio.Visio.Shape.shapeDataItems
  summary: >-
    <span data-ttu-id="70d6f-p111">返回形状的数据部分。只读。</span><span class="sxs-lookup"><span data-stu-id="70d6f-p111">Returns the Shape's Data Section. Read-only.</span></span>


    <span data-ttu-id="70d6f-145">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-145">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: shapeDataItems
  fullName: shapeDataItems
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type:
      - visio.Visio.ShapeDataItemCollection
- uid: visio.Visio.Shape.subShapes
  summary: >-
    <span data-ttu-id="70d6f-p112">获取 SubShape 集合。只读。</span><span class="sxs-lookup"><span data-stu-id="70d6f-p112">Gets SubShape Collection. Read-only.</span></span>


    <span data-ttu-id="70d6f-148">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-148">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: subShapes
  fullName: subShapes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type:
      - visio.Visio.ShapeCollection
- uid: visio.Visio.Shape.text
  summary: >-
    <span data-ttu-id="70d6f-149">形状的文本。</span><span class="sxs-lookup"><span data-stu-id="70d6f-149">Shape's text.</span></span> <span data-ttu-id="70d6f-150">只读。</span><span class="sxs-lookup"><span data-stu-id="70d6f-150">Read-only.</span></span>


    <span data-ttu-id="70d6f-151">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-151">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Shape.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type:
      - visio.Visio.Interfaces.ShapeData
      description: ''
- uid: visio.Visio.Shape.view
  summary: >-
    <span data-ttu-id="70d6f-p114">返回形状的视图。只读。</span><span class="sxs-lookup"><span data-stu-id="70d6f-p114">Returns the view of the shape. Read-only.</span></span>


    <span data-ttu-id="70d6f-154">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="70d6f-154">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: view
  fullName: view
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type:
      - visio.Visio.ShapeView
