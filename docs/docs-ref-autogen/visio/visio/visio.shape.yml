### YamlMime:TSType
name: Visio.Shape
uid: visio!Visio.Shape:class
package: visio!
fullName: Visio.Shape
summary: >-
  表示 Shape 类。


  \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: comments
  uid: visio!Visio.Shape#comments:member
  package: visio!
  fullName: comments
  summary: >-
    返回注释集合。 只读。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly comments: Visio.CommentCollection;'
    return:
      type: <xref uid="visio!Visio.CommentCollection:class" />
- name: context
  uid: visio!Visio.Shape#context:member
  package: visio!
  fullName: context
  summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: hyperlinks
  uid: visio!Visio.Shape#hyperlinks:member
  package: visio!
  fullName: hyperlinks
  summary: >-
    返回一组形状对象超链接。 只读。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly hyperlinks: Visio.HyperlinkCollection;'
    return:
      type: <xref uid="visio!Visio.HyperlinkCollection:class" />
- name: id
  uid: visio!Visio.Shape#id:member
  package: visio!
  fullName: id
  summary: >-
    形状的标识符。 只读。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: number;'
    return:
      type: number
- name: name
  uid: visio!Visio.Shape#name:member
  package: visio!
  fullName: name
  summary: >-
    形状的名称。 只读。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: select
  uid: visio!Visio.Shape#select:member
  package: visio!
  fullName: select
  summary: >-
    如果选择形状，则返回 true。 用户可以设置为 true，从而明确选择形状。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select: boolean;'
    return:
      type: boolean
- name: shapeDataItems
  uid: visio!Visio.Shape#shapeDataItems:member
  package: visio!
  fullName: shapeDataItems
  summary: >-
    返回形状的数据部分。 只读。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly shapeDataItems: Visio.ShapeDataItemCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
- name: subShapes
  uid: visio!Visio.Shape#subShapes:member
  package: visio!
  fullName: subShapes
  summary: >-
    获取 SubShape 集合。 只读。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly subShapes: Visio.ShapeCollection;'
    return:
      type: <xref uid="visio!Visio.ShapeCollection:class" />
- name: text
  uid: visio!Visio.Shape#text:member
  package: visio!
  fullName: text
  summary: >-
    形状的文本。 只读。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
- name: view
  uid: visio!Visio.Shape#view:member
  package: visio!
  fullName: view
  summary: >-
    返回形状的视图。 只读。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly view: Visio.ShapeView;'
    return:
      type: <xref uid="visio!Visio.ShapeView:class" />
methods:
- name: getBounds()
  uid: visio!Visio.Shape#getBounds:member(1)
  package: visio!
  fullName: getBounds()
  summary: >-
    返回指定形状边界框的 BoundingBox 对象。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBounds(): OfficeExtension.ClientResult<Visio.BoundingBox>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="visio!Visio.BoundingBox:interface" />&gt;
      description: ''
- name: load(option)
  uid: visio!Visio.Shape#load:member(1)
  package: visio!
  fullName: load(option)
  summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
  remarks: >-
    除了此签名之外，此方法还具有以下签名：


    `load(option?: string | string[]): Visio.Shape` -Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。


    `load(option?: { select?: string; expand?: string; }): Visio.Shape` -Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Shape` -仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeLoadOptions): Visio.Shape;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.Shape#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Shape;'
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shapeName = \"Sample Name\";\n    var shape = activePage.shapes.getItem(shapeName);\n    shape.load([\"name\", \"id\", \"text\", \"select\"]);\n    return ctx.sync().then(function () {\n        console.log(shape.name);\n        console.log(shape.id);\n        console.log(shape.text);\n        console.log(shape.select);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    shape.view.highlight = { color: \"#E7E7E7\", width: 100 };\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: visio!Visio.Shape#load:member(3)
  package: visio!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Shape;'
    parameters:
    - id: propertyNamesAndPaths
      description: 其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="visio!Visio.Shape:class" />
      description: ''
- name: set(properties, options)
  uid: visio!Visio.Shape#set:member(1)
  package: visio!
  fullName: set(properties, options)
  summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: Visio.Shape): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ShapeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。
      type: <xref uid="visio!Visio.Interfaces.ShapeUpdateData:interface" />
    - id: options
      description: 提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: visio!Visio.Shape#set:member(2)
  package: visio!
  fullName: set(properties)
  summary: 基于现有加载的对象同时设置该对象的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Visio.Shape): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="visio!Visio.Shape:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: visio!Visio.Shape#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) ，而原始的 Visio 对象是 API 对象，则该 `toJSON` 方法返回一个简单的 JavaScript 对象 (类型为 `Visio.Interfaces.ShapeData`<!-- -->) ，其中包含原始对象中任何已加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: db857aca01d9a64b2dd052a06e51a233676aa585
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49193059"
