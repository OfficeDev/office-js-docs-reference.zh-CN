### YamlMime:TSType
name: Visio.PageView
uid: visio!Visio.PageView:class
package: visio!
fullName: Visio.PageView
summary: >-
  表示 PageView 类。


  \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.PageView#context:member
  package: visio!
  fullName: context
  summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: zoom
  uid: visio!Visio.PageView#zoom:member
  package: visio!
  fullName: zoom
  summary: >-
    获取和设置页面的缩放级别。 该值可以介于10和400之间，表示缩放百分比。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'zoom: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    activePage.view.zoom = 300;\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
methods:
- name: centerViewportOnShape(ShapeId)
  uid: visio!Visio.PageView#centerViewportOnShape:member(1)
  package: visio!
  fullName: centerViewportOnShape(ShapeId)
  summary: >-
    平移 Visio 绘图，将指定的形状放置在视图中心位置。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'centerViewportOnShape(ShapeId: number): void;'
    parameters:
    - id: ShapeId
      description: 在中心位置显示的形状的 ID。
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    activePage.view.centerViewportOnShape(shape.Id);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: fitToWindow()
  uid: visio!Visio.PageView#fitToWindow:member(1)
  package: visio!
  fullName: fitToWindow()
  summary: >-
    让页面填满当前窗口。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'fitToWindow(): void;'
    return:
      type: void
      description: ''
- name: getPosition()
  uid: visio!Visio.PageView#getPosition:member(1)
  package: visio!
  fullName: getPosition()
  summary: >-
    返回在视图中指定页面位置的 Position 对象。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="visio!Visio.Position:interface" />&gt;
      description: ''
- name: getSelection()
  uid: visio!Visio.PageView#getSelection:member(1)
  package: visio!
  fullName: getSelection()
  summary: >-
    表示页面中的 Selection 对象。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelection(): Visio.Selection;'
    return:
      type: <xref uid="visio!Visio.Selection:class" />
      description: ''
- name: isShapeInViewport(Shape)
  uid: visio!Visio.PageView#isShapeInViewport:member(1)
  package: visio!
  fullName: isShapeInViewport(Shape)
  summary: >-
    检查形状是否在页面的视区内。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
    parameters:
    - id: Shape
      description: 要检查的形状。
      type: <xref uid="visio!Visio.Shape:class" />
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;boolean&gt;
      description: ''
- name: load(option)
  uid: visio!Visio.PageView#load:member(1)
  package: visio!
  fullName: load(option)
  summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
  remarks: >-
    除了此签名之外，此方法还具有以下签名：


    `load(option?: string | string[]): Visio.PageView` -Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。


    `load(option?: { select?: string; expand?: string; }): Visio.PageView` -Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView` -仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.PageViewLoadOptions): Visio.PageView;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.PageViewLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.PageView:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.PageView#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.PageView;'
    parameters:
    - id: propertyNames
      description: 一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.PageView:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: visio!Visio.PageView#load:member(3)
  package: visio!
  fullName: load(propertyNamesAndPaths)
  summary: 将命令加入队列以加载对象的指定属性。 阅读属性前必须先调用 `context.sync()`。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.PageView;'
    parameters:
    - id: propertyNamesAndPaths
      description: 其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="visio!Visio.PageView:class" />
      description: ''
- name: set(properties, options)
  uid: visio!Visio.PageView#set:member(1)
  package: visio!
  fullName: set(properties, options)
  summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
  remarks: >-
    此方法具有以下附加签名：


    `set(properties: Visio.PageView): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.PageViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: 一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。
      type: <xref uid="visio!Visio.Interfaces.PageViewUpdateData:interface" />
    - id: options
      description: 提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: visio!Visio.PageView#set:member(2)
  package: visio!
  fullName: set(properties)
  summary: 基于现有加载的对象同时设置该对象的多个属性。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Visio.PageView): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="visio!Visio.PageView:class" />
    return:
      type: void
      description: ''
- name: setPosition(Position)
  uid: visio!Visio.PageView#setPosition:member(1)
  package: visio!
  fullName: setPosition(Position)
  summary: >-
    在视图中设置页面的位置。


    \[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPosition(Position: Visio.Position): void;'
    parameters:
    - id: Position
      description: 指定页面在视图中的新位置的位置对象。
      type: <xref uid="visio!Visio.Position:interface" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: visio!Visio.PageView#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: 重写 JavaScript `toJSON()` 方法，以便在将 API 对象传递到时提供更有用的输出 `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来，调用 `toJSON` 传递给它的对象的方法。 ) ，而原始 PageView 对象是 API 对象，则该 `toJSON` 方法返回一个 (类型为的纯 JavaScript 对象。 `Visio.Interfaces.PageViewData`<!-- -->) ，其中包含原始对象中任何已加载的子属性的浅表副本。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageViewData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.PageViewData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: bb196a6e0d549184c9777f9e52a3582e7646a1bf
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49249573"
