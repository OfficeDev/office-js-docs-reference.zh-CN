### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.PageView:class'
    summary: |-
      <span data-ttu-id="ae6de-101">表示 PageView 类。</span><span class="sxs-lookup"><span data-stu-id="ae6de-101">Represents the PageView class.</span></span>

      <span data-ttu-id="ae6de-102">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae6de-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.PageView
    fullName: Visio.PageView
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.PageView#centerViewportOnShape:member(1)'
      - 'visio!Visio.PageView#context:member'
      - 'visio!Visio.PageView#fitToWindow:member(1)'
      - 'visio!Visio.PageView#getPosition:member(1)'
      - 'visio!Visio.PageView#getSelection:member(1)'
      - 'visio!Visio.PageView#isShapeInViewport:member(1)'
      - 'visio!Visio.PageView#load:member(1)'
      - 'visio!Visio.PageView#load:member(2)'
      - 'visio!Visio.PageView#load:member(3)'
      - 'visio!Visio.PageView#set:member(1)'
      - 'visio!Visio.PageView#set:member(2)'
      - 'visio!Visio.PageView#setPosition:member(1)'
      - 'visio!Visio.PageView#toJSON:member(1)'
      - 'visio!Visio.PageView#zoom:member'
  - uid: 'visio!Visio.PageView#centerViewportOnShape:member(1)'
    summary: |-
      <span data-ttu-id="ae6de-103">平移 Visio 绘图，将指定的形状放置在视图中心位置。</span><span class="sxs-lookup"><span data-stu-id="ae6de-103">Pans the Visio drawing to place the specified shape in the center of the view.</span></span>

      <span data-ttu-id="ae6de-104">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae6de-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: centerViewportOnShape(ShapeId)
    fullName: centerViewportOnShape(ShapeId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'centerViewportOnShape(ShapeId: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ae6de-105">示例</span><span class="sxs-lookup"><span data-stu-id="ae6de-105">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              activePage.view.centerViewportOnShape(shape.Id);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: ShapeId
          description: <span data-ttu-id="ae6de-106">在中心位置显示的形状的 ID。</span><span class="sxs-lookup"><span data-stu-id="ae6de-106">ShapeId to be seen in the center.</span></span>
          type:
            - number
  - uid: 'visio!Visio.PageView#context:member'
    summary: <span data-ttu-id="ae6de-107">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="ae6de-107">The request context associated with the object.</span></span> <span data-ttu-id="ae6de-108">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="ae6de-108">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.PageView#fitToWindow:member(1)'
    summary: |-
      <span data-ttu-id="ae6de-109">让页面填满当前窗口。</span><span class="sxs-lookup"><span data-stu-id="ae6de-109">Fit Page to current window.</span></span>

      <span data-ttu-id="ae6de-110">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae6de-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: fitToWindow()
    fullName: fitToWindow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'fitToWindow(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'visio!Visio.PageView#getPosition:member(1)'
    summary: |-
      <span data-ttu-id="ae6de-111">返回在视图中指定页面位置的 Position 对象。</span><span class="sxs-lookup"><span data-stu-id="ae6de-111">Returns the position object that specifies the position of the page in the view.</span></span>

      <span data-ttu-id="ae6de-112">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae6de-112">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getPosition()
    fullName: getPosition()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
      return:
        type:
          - 'visio!Visio.PageView#getPosition~0:complex'
        description: ''
  - uid: 'visio!Visio.PageView#getSelection:member(1)'
    summary: |-
      <span data-ttu-id="ae6de-113">表示页面中的 Selection 对象。</span><span class="sxs-lookup"><span data-stu-id="ae6de-113">Represents the Selection in the page.</span></span>

      <span data-ttu-id="ae6de-114">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae6de-114">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getSelection()
    fullName: getSelection()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelection(): Visio.Selection;'
      return:
        type:
          - 'visio!Visio.Selection:class'
        description: ''
  - uid: 'visio!Visio.PageView#isShapeInViewport:member(1)'
    summary: |-
      <span data-ttu-id="ae6de-115">检查形状是否在页面的视区内。</span><span class="sxs-lookup"><span data-stu-id="ae6de-115">To check if the shape is in view of the page or not.</span></span>

      <span data-ttu-id="ae6de-116">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae6de-116">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: isShapeInViewport(Shape)
    fullName: isShapeInViewport(Shape)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'visio!Visio.PageView#isShapeInViewport~0:complex'
        description: ''
      parameters:
        - id: Shape
          description: <span data-ttu-id="ae6de-117">要检查的形状。</span><span class="sxs-lookup"><span data-stu-id="ae6de-117">Shape to be checked.</span></span>
          type:
            - 'visio!Visio.Shape:class'
  - uid: 'visio!Visio.PageView#load:member(1)'
    summary: <span data-ttu-id="ae6de-118">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ae6de-119">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="ae6de-119">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="ae6de-120">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="ae6de-120">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="ae6de-121">`load(option?: string | string[]): Visio.PageView`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-121">`load(option?: string | string[]): Visio.PageView` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="ae6de-122">`load(option?: { select?: string; expand?: string; }): Visio.PageView`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-122">`load(option?: { select?: string; expand?: string; }): Visio.PageView` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="ae6de-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="ae6de-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView` - Only available on collection types.</span></span> <span data-ttu-id="ae6de-124">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="ae6de-124">It is similar to the preceding signature.</span></span> <span data-ttu-id="ae6de-125">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="ae6de-125">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ae6de-126">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="ae6de-126">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ae6de-127">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="ae6de-127">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.PageViewLoadOptions): Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.PageViewLoadOptions:interface'
  - uid: 'visio!Visio.PageView#load:member(2)'
    summary: <span data-ttu-id="ae6de-128">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ae6de-129">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="ae6de-129">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="ae6de-130">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.PageView#load:member(3)'
    summary: <span data-ttu-id="ae6de-131">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ae6de-132">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="ae6de-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.PageView;'
      return:
        type:
          - 'visio!Visio.PageView:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="ae6de-133">其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.PageView#set:member(1)'
    summary: '<span data-ttu-id="ae6de-134">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="ae6de-135">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="ae6de-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="ae6de-136">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="ae6de-136">This method has the following additional signature:</span></span>

      `set(properties: Visio.PageView): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PageViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="ae6de-137">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'visio!Visio.Interfaces.PageViewUpdateData:interface'
        - id: options
          description: <span data-ttu-id="ae6de-138">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="ae6de-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'visio!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.PageView#set:member(2)'
    summary: '<span data-ttu-id="ae6de-139">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="ae6de-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.PageView): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.PageView:class'
  - uid: 'visio!Visio.PageView#setPosition:member(1)'
    summary: |-
      <span data-ttu-id="ae6de-140">在视图中设置页面的位置。</span><span class="sxs-lookup"><span data-stu-id="ae6de-140">Sets the position of the page in the view.</span></span>

      <span data-ttu-id="ae6de-141">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae6de-141">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: setPosition(Position)
    fullName: setPosition(Position)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPosition(Position: Visio.Position): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: Position
          description: <span data-ttu-id="ae6de-142">指定页面在视图中的新位置的位置对象。</span><span class="sxs-lookup"><span data-stu-id="ae6de-142">Position object that specifies the new position of the page in the view.</span></span>
          type:
            - 'visio!Visio.Position:interface'
  - uid: 'visio!Visio.PageView#toJSON:member(1)'
    summary: '<span data-ttu-id="ae6de-143">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="ae6de-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="ae6de-144">.</span><span class="sxs-lookup"><span data-stu-id="ae6de-144"></span></span> <span data-ttu-id="ae6de-145">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="ae6de-145"></span></span><!-- --><span data-ttu-id="ae6de-146">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始 PageView 对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Visio.Interfaces.PageViewData`</span><span class="sxs-lookup"><span data-stu-id="ae6de-146">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.PageView object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.PageViewData`</span></span><!-- --><span data-ttu-id="ae6de-147">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="ae6de-147">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.PageViewData;'
      return:
        type:
          - 'visio!Visio.Interfaces.PageViewData:interface'
        description: ''
  - uid: 'visio!Visio.PageView#zoom:member'
    summary: |-
      <span data-ttu-id="ae6de-148">获取和设置页面的缩放级别。</span><span class="sxs-lookup"><span data-stu-id="ae6de-148">Get and set Page's Zoom level.</span></span> <span data-ttu-id="ae6de-149">该值可以介于10和400之间，表示缩放百分比。</span><span class="sxs-lookup"><span data-stu-id="ae6de-149">The value can be between 10 and 400 and denotes the percentage of zoom.</span></span>

      <span data-ttu-id="ae6de-150">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="ae6de-150">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: zoom
    fullName: zoom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zoom: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ae6de-151">示例</span><span class="sxs-lookup"><span data-stu-id="ae6de-151">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              activePage.view.zoom = 300;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.PageView#getPosition~0:complex'
    name: OfficeExtension.ClientResult<Visio.Position>
    fullName: OfficeExtension.ClientResult<Visio.Position>
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'visio!Visio.Position:interface'
        name: Visio.Position
        fullName: Visio.Position
      - name: '>'
        fullName: '>'
  - uid: 'visio!Visio.Selection:class'
    name: Visio.Selection
  - uid: 'visio!Visio.PageView#isShapeInViewport~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'visio!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'visio!Visio.Shape:class'
    name: Visio.Shape
  - uid: 'visio!Visio.PageView:class'
    name: Visio.PageView
  - uid: 'visio!Visio.Interfaces.PageViewLoadOptions:interface'
    name: Visio.Interfaces.PageViewLoadOptions
  - uid: 'visio!Visio.Interfaces.PageViewUpdateData:interface'
    name: Interfaces.PageViewUpdateData
  - uid: 'visio!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.Position:interface'
    name: Visio.Position
  - uid: 'visio!Visio.Interfaces.PageViewData:interface'
    name: Visio.Interfaces.PageViewData