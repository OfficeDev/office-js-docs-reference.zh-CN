### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.Comment:class'
    summary: |-
      <span data-ttu-id="a9d11-101">表示 Comment 对象。</span><span class="sxs-lookup"><span data-stu-id="a9d11-101">Represents the Comment.</span></span>

      <span data-ttu-id="a9d11-102">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a9d11-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Comment
    fullName: Visio.Comment
    langs:
      - typeScript
    type: class
    extends:
      - 'visio!OfficeExtension.ClientObject:class'
    package: visio!
    children:
      - 'visio!Visio.Comment#author:member'
      - 'visio!Visio.Comment#context:member'
      - 'visio!Visio.Comment#date:member'
      - 'visio!Visio.Comment#load:member(1)'
      - 'visio!Visio.Comment#load:member(2)'
      - 'visio!Visio.Comment#load:member(3)'
      - 'visio!Visio.Comment#set:member(1)'
      - 'visio!Visio.Comment#set:member(2)'
      - 'visio!Visio.Comment#text:member'
      - 'visio!Visio.Comment#toJSON:member(1)'
  - uid: 'visio!Visio.Comment#author:member'
    summary: |-
      <span data-ttu-id="a9d11-103">指定注释的作者姓名的字符串。</span><span class="sxs-lookup"><span data-stu-id="a9d11-103">A string that specifies the name of the author of the comment.</span></span>

      <span data-ttu-id="a9d11-104">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a9d11-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: author
    fullName: author
    langs:
      - typeScript
    type: property
    syntax:
      content: 'author: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.Comment#context:member'
    summary: <span data-ttu-id="a9d11-105">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="a9d11-105">The request context associated with the object.</span></span> <span data-ttu-id="a9d11-106">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="a9d11-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'visio!Visio.RequestContext:class'
  - uid: 'visio!Visio.Comment#date:member'
    summary: |-
      <span data-ttu-id="a9d11-107">指定注释创建日期的字符串。</span><span class="sxs-lookup"><span data-stu-id="a9d11-107">A string that specifies the date when the comment was created.</span></span>

      <span data-ttu-id="a9d11-108">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a9d11-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: date
    fullName: date
    langs:
      - typeScript
    type: property
    syntax:
      content: 'date: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.Comment#load:member(1)'
    summary: <span data-ttu-id="a9d11-109">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a9d11-110">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="a9d11-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="a9d11-111">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="a9d11-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a9d11-112">`load(option?: string | string[]): Visio.Comment`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-112">`load(option?: string | string[]): Visio.Comment` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a9d11-113">`load(option?: { select?: string; expand?: string; }): Visio.Comment`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-113">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a9d11-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="a9d11-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id="a9d11-115">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="a9d11-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="a9d11-116">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="a9d11-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a9d11-117">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="a9d11-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a9d11-118">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="a9d11-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="a9d11-119">示例</span><span class="sxs-lookup"><span data-stu-id="a9d11-119">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shapeName = "Position Belt.41";
          var shape = activePage.shapes.getItem(shapeName);
          var shapeComments= shape.comments;
          shapeComments.load(["author", "text"]);
          return ctx.sync().then(function () {
              for(var i = 0; i < shapeComments.items.length; i++)
              {
                  var comment = shapeComments.items[i];
                  console.log("comment Author: " + comment.author);
                  console.log("Comment Text: " + comment.text);
                  console.log("Date " + comment.date);
              }
          });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.CommentLoadOptions): Visio.Comment;'
      return:
        type:
          - 'visio!Visio.Comment:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'visio!Visio.Interfaces.CommentLoadOptions:interface'
  - uid: 'visio!Visio.Comment#load:member(2)'
    summary: <span data-ttu-id="a9d11-120">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a9d11-121">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="a9d11-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Comment;'
      return:
        type:
          - 'visio!Visio.Comment:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="a9d11-122">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'visio!Visio.Comment#load:member(3)'
    summary: <span data-ttu-id="a9d11-123">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a9d11-124">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="a9d11-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Comment;'
      return:
        type:
          - 'visio!Visio.Comment:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="a9d11-125">其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-125">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'visio!Visio.Comment#set:member(1)'
    summary: '<span data-ttu-id="a9d11-126">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-126">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="a9d11-127">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="a9d11-127">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="a9d11-128">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="a9d11-128">This method has the following additional signature:</span></span>

      `set(properties: Visio.Comment): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="a9d11-129">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-129">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'visio!Visio.Interfaces.CommentUpdateData:interface'
        - id: options
          description: <span data-ttu-id="a9d11-130">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="a9d11-130">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'visio!OfficeExtension.UpdateOptions:interface'
  - uid: 'visio!Visio.Comment#set:member(2)'
    summary: '<span data-ttu-id="a9d11-131">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="a9d11-131">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Comment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'visio!Visio.Comment:class'
  - uid: 'visio!Visio.Comment#text:member'
    summary: |-
      <span data-ttu-id="a9d11-132">包含注释文本的字符串。</span><span class="sxs-lookup"><span data-stu-id="a9d11-132">A string that contains the comment text.</span></span>

      <span data-ttu-id="a9d11-133">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a9d11-133">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
  - uid: 'visio!Visio.Comment#toJSON:member(1)'
    summary: '<span data-ttu-id="a9d11-134">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="a9d11-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="a9d11-135">.</span><span class="sxs-lookup"><span data-stu-id="a9d11-135"></span></span> <span data-ttu-id="a9d11-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="a9d11-136"></span></span><!-- --><span data-ttu-id="a9d11-137">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始的 Visio Comment 对象是 API 对象，但该`toJSON`方法返回一个简单的 JavaScript 对象（类型为`Visio.Interfaces.CommentData`</span><span class="sxs-lookup"><span data-stu-id="a9d11-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Comment object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.CommentData`</span></span><!-- --><span data-ttu-id="a9d11-138">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="a9d11-138">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.CommentData;'
      return:
        type:
          - 'visio!Visio.Interfaces.CommentData:interface'
        description: ''
references:
  - uid: 'visio!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'visio!Visio.RequestContext:class'
    name: RequestContext
  - uid: 'visio!Visio.Comment:class'
    name: Visio.Comment
  - uid: 'visio!Visio.Interfaces.CommentLoadOptions:interface'
    name: Visio.Interfaces.CommentLoadOptions
  - uid: 'visio!Visio.Interfaces.CommentUpdateData:interface'
    name: Interfaces.CommentUpdateData
  - uid: 'visio!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'visio!Visio.Interfaces.CommentData:interface'
    name: Visio.Interfaces.CommentData