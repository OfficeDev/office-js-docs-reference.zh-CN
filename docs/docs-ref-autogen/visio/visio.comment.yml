### YamlMime:UniversalReference
ms.openlocfilehash: b5a589d55f280d2e15786c37182b3b2fab2e328d
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976290"
items:
- uid: visio.Visio.Comment
  summary: >-
    <span data-ttu-id="28707-101">表示 Comment 对象。</span><span class="sxs-lookup"><span data-stu-id="28707-101">Represents the Comment.</span></span>


    <span data-ttu-id="28707-102">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="28707-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Comment
  fullName: Visio.Comment
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Comment.author
  - visio.Visio.Comment.date
  - visio.Visio.Comment.load
  - visio.Visio.Comment.load_1
  - visio.Visio.Comment.load_2
  - visio.Visio.Comment.set
  - visio.Visio.Comment.set_1
  - visio.Visio.Comment.text
  - visio.Visio.Comment.toJSON
- uid: visio.Visio.Comment.author
  summary: >-
    <span data-ttu-id="28707-103">指定注释的作者姓名的字符串。</span><span class="sxs-lookup"><span data-stu-id="28707-103">A string that specifies the name of the author of the comment.</span></span>


    <span data-ttu-id="28707-104">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="28707-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: author
  fullName: author
  langs:
  - typeScript
  type: property
  syntax:
    content: 'author: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.date
  summary: >-
    <span data-ttu-id="28707-105">指定注释创建日期的字符串。</span><span class="sxs-lookup"><span data-stu-id="28707-105">A string that specifies the date when the comment was created.</span></span>


    <span data-ttu-id="28707-106">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="28707-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: date
  fullName: date
  langs:
  - typeScript
  type: property
  syntax:
    content: 'date: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.load
  summary: <span data-ttu-id="28707-107">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="28707-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="28707-108">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="28707-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="28707-109">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="28707-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="28707-110">`load(option?: string | string[]): Visio.Comment`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="28707-110">`load(option?: string | string[]): Visio.Comment` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="28707-111">`load(option?: { select?: string; expand?: string; }): Visio.Comment`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="28707-111">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="28707-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="28707-112">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id="28707-113">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="28707-113">It is similar to the preceding signature.</span></span> <span data-ttu-id="28707-114">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="28707-114">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="28707-115">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="28707-115">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="28707-116">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="28707-116">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="28707-117">示例</span><span class="sxs-lookup"><span data-stu-id="28707-117">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Position Belt.41";
        var shape = activePage.shapes.getItem(shapeName);
        var shapecomments= shape.comments;
        shapecomments.load();
        return ctx.sync().then(function () {
            for(var i=0; i<shapecomments.items.length;i++)
            {
                var comment= shapecomments.items[i];
                console.log("comment Author: " + comment.author);
                console.log("Comment Text: " + comment.text);
                console.log("Date " + comment.date);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.CommentLoadOptions): Visio.Comment;'
    return:
      type:
      - visio.Visio.Comment
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - visio.Visio.Interfaces.CommentLoadOptions
- uid: visio.Visio.Comment.load_1
  summary: <span data-ttu-id="28707-118">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="28707-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="28707-119">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="28707-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Comment;'
    return:
      type:
      - visio.Visio.Comment
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="28707-120">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="28707-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Comment.load_2
  summary: <span data-ttu-id="28707-121">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="28707-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="28707-122">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="28707-122">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Comment;'
    return:
      type:
      - visio.Visio.Comment
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="28707-123">其中 propertyNamesAndPaths.select 是一个以逗号分隔的字符串，指定要加载的属性，propertyNamesAndPaths.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="28707-123">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.Comment.set
  summary: <span data-ttu-id="28707-124">在同一时间设置对象的多个的属性。</span><span class="sxs-lookup"><span data-stu-id="28707-124">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="28707-125">您可以传递具有的相应属性的普通对象或相同类型的另一个 API 对象。</span><span class="sxs-lookup"><span data-stu-id="28707-125">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="28707-126">此方法具有以下其他签名：</span><span class="sxs-lookup"><span data-stu-id="28707-126">This method has the following additional signature:</span></span>


    `set(properties: Visio.Comment): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="28707-127">具有对属性的对象调用 isomorphically 结构化的属性的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="28707-127">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.CommentUpdateData
    - id: options
      description: <span data-ttu-id="28707-128">提供一个选项以取消显示错误，如果属性对象会尝试设置任何只读属性。</span><span class="sxs-lookup"><span data-stu-id="28707-128">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Comment.set_1
  summary: <span data-ttu-id="28707-129">在基于现有加载对象的同一时间对象上设置多个属性。</span><span class="sxs-lookup"><span data-stu-id="28707-129">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.Comment): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - visio.Visio.Comment
- uid: visio.Visio.Comment.text
  summary: >-
    <span data-ttu-id="28707-130">包含注释文本的字符串。</span><span class="sxs-lookup"><span data-stu-id="28707-130">A string that contains the comment text.</span></span>


    <span data-ttu-id="28707-131">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="28707-131">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.CommentData;'
    return:
      type:
      - visio.Visio.Interfaces.CommentData
      description: ''
