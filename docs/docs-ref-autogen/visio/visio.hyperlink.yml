### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Hyperlink
    summary: |-
      <span data-ttu-id="a2202-101">表示 Hyperlink 对象。</span><span class="sxs-lookup"><span data-stu-id="a2202-101">Represents the Hyperlink.</span></span>

      <span data-ttu-id="a2202-102">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a2202-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Hyperlink
    fullName: Visio.Hyperlink
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Hyperlink.address
      - visio.Visio.Hyperlink.context
      - visio.Visio.Hyperlink.description
      - visio.Visio.Hyperlink.extraInfo
      - visio.Visio.Hyperlink.load
      - visio.Visio.Hyperlink.load_1
      - visio.Visio.Hyperlink.load_2
      - visio.Visio.Hyperlink.subAddress
      - visio.Visio.Hyperlink.toJSON
  - uid: visio.Visio.Hyperlink.address
    summary: |-
      <span data-ttu-id="a2202-103">获取超链接对象的地址。</span><span class="sxs-lookup"><span data-stu-id="a2202-103">Gets the address of the Hyperlink object.</span></span> <span data-ttu-id="a2202-104">只读。</span><span class="sxs-lookup"><span data-stu-id="a2202-104">Read-only.</span></span>

      <span data-ttu-id="a2202-105">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a2202-105">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly address: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.context
    summary: <span data-ttu-id="a2202-106">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="a2202-106">The request context associated with the object.</span></span> <span data-ttu-id="a2202-107">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="a2202-107">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.Hyperlink.description
    summary: |-
      <span data-ttu-id="a2202-108">获取超链接的说明。</span><span class="sxs-lookup"><span data-stu-id="a2202-108">Gets the description of a hyperlink.</span></span> <span data-ttu-id="a2202-109">只读。</span><span class="sxs-lookup"><span data-stu-id="a2202-109">Read-only.</span></span>

      <span data-ttu-id="a2202-110">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a2202-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: description
    fullName: description
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly description: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.extraInfo
    summary: |-
      <span data-ttu-id="a2202-111">获取用于解析超链接的 url 的额外 URL 请求信息。</span><span class="sxs-lookup"><span data-stu-id="a2202-111">Gets the extra URL request information used to resolve the hyperlink's URL.</span></span> <span data-ttu-id="a2202-112">只读。</span><span class="sxs-lookup"><span data-stu-id="a2202-112">Read-only.</span></span>

      <span data-ttu-id="a2202-113">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a2202-113">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: extraInfo
    fullName: extraInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly extraInfo: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.load
    summary: <span data-ttu-id="a2202-114">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="a2202-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a2202-115">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="a2202-115">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="a2202-116">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="a2202-116">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a2202-117">`load(option?: string | string[]): Visio.Hyperlink`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="a2202-117">`load(option?: string | string[]): Visio.Hyperlink` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a2202-118">`load(option?: { select?: string; expand?: string; }): Visio.Hyperlink`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="a2202-118">`load(option?: { select?: string; expand?: string; }): Visio.Hyperlink` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a2202-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Hyperlink`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="a2202-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Hyperlink` - Only available on collection types.</span></span> <span data-ttu-id="a2202-120">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="a2202-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="a2202-121">top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="a2202-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a2202-122">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="a2202-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a2202-123">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="a2202-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="a2202-124">示例</span><span class="sxs-lookup"><span data-stu-id="a2202-124">Examples</span></span>

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          var hyperlink = shape.hyperlinks.getItem(0);
          hyperlink.load();
          return ctx.sync().then(function() {
              console.log(hyperlink.description);
              console.log(hyperlink.address);
              console.log(hyperlink.subAddress);
              console.log(hyperlink.extraInfo);
           });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.HyperlinkLoadOptions): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.HyperlinkLoadOptions
  - uid: visio.Visio.Hyperlink.load_1
    summary: '<span data-ttu-id="a2202-125">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="a2202-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a2202-126">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="a2202-126">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="a2202-127">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="a2202-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: visio.Visio.Hyperlink.load_2
    summary: '<span data-ttu-id="a2202-128">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="a2202-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a2202-129">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="a2202-129">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="a2202-130">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="a2202-130">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Hyperlink.subAddress
    summary: |-
      <span data-ttu-id="a2202-131">获取超链接对象的子地址。</span><span class="sxs-lookup"><span data-stu-id="a2202-131">Gets the sub-address of the Hyperlink object.</span></span> <span data-ttu-id="a2202-132">只读。</span><span class="sxs-lookup"><span data-stu-id="a2202-132">Read-only.</span></span>

      <span data-ttu-id="a2202-133">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a2202-133">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: subAddress
    fullName: subAddress
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly subAddress: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.toJSON
    summary: '<span data-ttu-id="a2202-134">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="a2202-134">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="a2202-135">.</span><span class="sxs-lookup"><span data-stu-id="a2202-135"></span></span> <span data-ttu-id="a2202-136">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="a2202-136"></span></span><!-- --><span data-ttu-id="a2202-137">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Visio. Hyperlink 对象是 API 对象, 但`toJSON`方法返回一个简单的 JavaScript 对象 (类型为`Visio.Interfaces.HyperlinkData`</span><span class="sxs-lookup"><span data-stu-id="a2202-137">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.Hyperlink object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.HyperlinkData`</span></span><!-- --><span data-ttu-id="a2202-138">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="a2202-138">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.HyperlinkData;'
      return:
        type:
          - visio.Visio.Interfaces.HyperlinkData
        description: ''