### YamlMime:UniversalReference
ms.openlocfilehash: de03b8ef82e95e3b4953cae2326679b0125ecb73
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976430"
items:
- uid: visio.Visio.PageView
  summary: >-
    <span data-ttu-id="1c2f7-101">表示 PageView 类。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-101">Represents the PageView class.</span></span>


    <span data-ttu-id="1c2f7-102">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1c2f7-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.PageView
  fullName: Visio.PageView
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.PageView.centerViewportOnShape
  - visio.Visio.PageView.fitToWindow
  - visio.Visio.PageView.getPosition
  - visio.Visio.PageView.getSelection
  - visio.Visio.PageView.isShapeInViewport
  - visio.Visio.PageView.load
  - visio.Visio.PageView.load_1
  - visio.Visio.PageView.load_2
  - visio.Visio.PageView.set
  - visio.Visio.PageView.set_1
  - visio.Visio.PageView.setPosition
  - visio.Visio.PageView.toJSON
  - visio.Visio.PageView.zoom
- uid: visio.Visio.PageView.centerViewportOnShape
  summary: >-
    <span data-ttu-id="1c2f7-103">平移 Visio 绘图，将指定的形状放置在视图中心位置。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-103">Pans the Visio drawing to place the specified shape in the center of the view.</span></span>


    <span data-ttu-id="1c2f7-104">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1c2f7-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: centerViewportOnShape(ShapeId)
  fullName: centerViewportOnShape(ShapeId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'centerViewportOnShape(ShapeId: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1c2f7-105\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c2f7-105\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var shape = activePage.shapes.getItem(0);\n    activePage.view.centerViewportOnShape(shape.Id);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: ShapeId
      description: <span data-ttu-id="1c2f7-106">在中心位置显示的形状的 ID。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-106">ShapeId to be seen in the center.</span></span>
      type:
      - number
- uid: visio.Visio.PageView.fitToWindow
  summary: >-
    <span data-ttu-id="1c2f7-107">让页面填满当前窗口。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-107">Fit Page to current window.</span></span>


    <span data-ttu-id="1c2f7-108">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1c2f7-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: fitToWindow()
  fullName: fitToWindow()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'fitToWindow(): void;'
    return:
      type:
      - void
      description: ''
- uid: visio.Visio.PageView.getPosition
  summary: >-
    <span data-ttu-id="1c2f7-109">返回在视图中指定页面位置的 Position 对象。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-109">Returns the position object that specifies the position of the page in the view.</span></span>


    <span data-ttu-id="1c2f7-110">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1c2f7-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getPosition()
  fullName: getPosition()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
    return:
      type:
      - OfficeExtension.ClientResult<Visio.Position>
      description: ''
- uid: visio.Visio.PageView.getSelection
  summary: >-
    <span data-ttu-id="1c2f7-111">表示页面中的 Selection 对象。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-111">Represents the Selection in the page.</span></span>


    <span data-ttu-id="1c2f7-112">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1c2f7-112">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getSelection()
  fullName: getSelection()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelection(): Visio.Selection;'
    return:
      type:
      - visio.Visio.Selection
      description: ''
- uid: visio.Visio.PageView.isShapeInViewport
  summary: >-
    <span data-ttu-id="1c2f7-113">检查形状是否在页面的视区内。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-113">To check if the shape is in view of the page or not.</span></span>


    <span data-ttu-id="1c2f7-114">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1c2f7-114">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: isShapeInViewport(Shape)
  fullName: isShapeInViewport(Shape)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
    parameters:
    - id: Shape
      description: <span data-ttu-id="1c2f7-115">要检查的形状。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-115">Shape to be checked.</span></span>
      type:
      - visio.Visio.Shape
- uid: visio.Visio.PageView.load
  summary: <span data-ttu-id="1c2f7-116">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1c2f7-117">读取属性之前，必须调用"context.sync()"。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-117">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1c2f7-118">除了此签名，此方法具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="1c2f7-118">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1c2f7-119">`load(option?: string | string[]): Visio.PageView`-其中选项是一个以逗号分隔的字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-119">`load(option?: string | string[]): Visio.PageView` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="1c2f7-120">`load(option?: { select?: string; expand?: string; }): Visio.PageView`-其中 option.select 是一个以逗号分隔的字符串，指定要加载的属性，options.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-120">`load(option?: { select?: string; expand?: string; }): Visio.PageView` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1c2f7-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView`-仅可对集合的类型。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView` - Only available on collection types.</span></span> <span data-ttu-id="1c2f7-122">它是类似于前一个签名。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="1c2f7-123">Option.top 指定集合项可在结果中包含的最大数目。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1c2f7-124">Option.skip 指定要跳过和结果中不包含的项的数目。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1c2f7-125">如果指定 option.top，则将跳过指定的数目的项后启动结果集。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.PageViewLoadOptions): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - visio.Visio.Interfaces.PageViewLoadOptions
- uid: visio.Visio.PageView.load_1
  summary: <span data-ttu-id="1c2f7-126">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1c2f7-127">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-127">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="1c2f7-128">以逗号分隔字符串或一个指定要加载的属性的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-128">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.PageView.load_2
  summary: <span data-ttu-id="1c2f7-129">队列设置命令加载指定的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1c2f7-130">您必须调用`context.sync()`阅读属性之前。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-130">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.PageView;'
    return:
      type:
      - visio.Visio.PageView
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="1c2f7-131">其中 propertyNamesAndPaths.select 是一个以逗号分隔的字符串，指定要加载的属性，propertyNamesAndPaths.expand 是一个以逗号分隔的字符串，指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-131">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.PageView.set
  summary: <span data-ttu-id="1c2f7-132">在同一时间设置对象的多个的属性。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1c2f7-133">您可以传递具有的相应属性的普通对象或相同类型的另一个 API 对象。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="1c2f7-134">此方法具有以下其他签名：</span><span class="sxs-lookup"><span data-stu-id="1c2f7-134">This method has the following additional signature:</span></span>


    `set(properties: Visio.PageView): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PageViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="1c2f7-135">具有对属性的对象调用 isomorphically 结构化的属性的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PageViewUpdateData
    - id: options
      description: <span data-ttu-id="1c2f7-136">提供一个选项以取消显示错误，如果属性对象会尝试设置任何只读属性。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.PageView.set_1
  summary: <span data-ttu-id="1c2f7-137">在基于现有加载对象的同一时间对象上设置多个属性。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.PageView): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - visio.Visio.PageView
- uid: visio.Visio.PageView.setPosition
  summary: >-
    <span data-ttu-id="1c2f7-138">在视图中设置页面的位置。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-138">Sets the position of the page in the view.</span></span>


    <span data-ttu-id="1c2f7-139">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1c2f7-139">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: setPosition(Position)
  fullName: setPosition(Position)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPosition(Position: Visio.Position): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: Position
      description: <span data-ttu-id="1c2f7-140">指定页面在视图中的新位置的位置对象。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-140">Position object that specifies the new position of the page in the view.</span></span>
      type:
      - visio.Visio.Position
- uid: visio.Visio.PageView.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageViewData;'
    return:
      type:
      - visio.Visio.Interfaces.PageViewData
      description: ''
- uid: visio.Visio.PageView.zoom
  summary: >-
    <span data-ttu-id="1c2f7-141">获取和设置页的缩放级别。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-141">Get and set Page's Zoom level.</span></span> <span data-ttu-id="1c2f7-142">值可以是 10 到 400 之间，表示缩放的百分比。</span><span class="sxs-lookup"><span data-stu-id="1c2f7-142">The value can be between 10 and 400 and denotes the percentage of zoom.</span></span>


    <span data-ttu-id="1c2f7-143">\[[API 集： 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="1c2f7-143">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: zoom
  fullName: zoom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'zoom: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1c2f7-144\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c2f7-144\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    activePage.view.zoom = 300;\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
