### YamlMime:UniversalReference
items:
  - uid: visio.Visio.ShapeView
    summary: |-
      <span data-ttu-id="c4fb8-101">表示 ShapeView 类。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-101">Represents the ShapeView class.</span></span>

      <span data-ttu-id="c4fb8-102">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="c4fb8-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.ShapeView
    fullName: Visio.ShapeView
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.ShapeView.addOverlay
      - visio.Visio.ShapeView.addOverlay_1
      - visio.Visio.ShapeView.context
      - visio.Visio.ShapeView.highlight
      - visio.Visio.ShapeView.load
      - visio.Visio.ShapeView.load_1
      - visio.Visio.ShapeView.load_2
      - visio.Visio.ShapeView.removeOverlay
      - visio.Visio.ShapeView.set
      - visio.Visio.ShapeView.set_1
      - visio.Visio.ShapeView.toJSON
  - uid: visio.Visio.ShapeView.addOverlay
    summary: |-
      <span data-ttu-id="c4fb8-103">在形状之上添加覆盖。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-103">Adds an overlay on top of the shape.</span></span>

      <span data-ttu-id="c4fb8-104">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="c4fb8-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'addOverlay(OverlayType, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    fullName: 'addOverlay(OverlayType, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addOverlay(OverlayType: Visio.OverlayType, Content: string, OverlayHorizontalAlignment: Visio.OverlayHorizontalAlignment, OverlayVerticalAlignment: Visio.OverlayVerticalAlignment, Width: number, Height: number): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c4fb8-105">示例</span><span class="sxs-lookup"><span data-stu-id="c4fb8-105">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              var overlayId=shape.view.addOverlay("Image", "Visio Online", "Center", "Middle", 50, 50);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: OverlayType
          description: <span data-ttu-id="c4fb8-106">覆盖类型。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-106">An Overlay Type.</span></span> <span data-ttu-id="c4fb8-107">可以是 "Text" 或 "Image"。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-107">Can be 'Text' or 'Image'.</span></span>
          type:
            - visio.Visio.OverlayType
        - id: Content
          description: <span data-ttu-id="c4fb8-108">覆盖的内容。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-108">Content of Overlay.</span></span>
          type:
            - string
        - id: OverlayHorizontalAlignment
          description: '<span data-ttu-id="c4fb8-109">重叠的水平对齐方式。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-109">Horizontal Alignment of Overlay.</span></span> <span data-ttu-id="c4fb8-110">可以是 "Left"、"Center" 或 "Right"。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-110">Can be ''Left'', ''Center'', or ''Right''.</span></span>'
          type:
            - visio.Visio.OverlayHorizontalAlignment
        - id: OverlayVerticalAlignment
          description: '<span data-ttu-id="c4fb8-111">重叠的垂直对齐方式。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-111">Vertical Alignment of Overlay.</span></span> <span data-ttu-id="c4fb8-112">可以是 '' Top ''、'' 中间 ''、'' 底端 ''。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-112">Can be ''Top'', ''Middle'', ''Bottom''.</span></span>'
          type:
            - visio.Visio.OverlayVerticalAlignment
        - id: Width
          description: <span data-ttu-id="c4fb8-113">覆盖宽度。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-113">Overlay Width.</span></span>
          type:
            - number
        - id: Height
          description: <span data-ttu-id="c4fb8-114">覆盖高度。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-114">Overlay Height.</span></span>
          type:
            - number
  - uid: visio.Visio.ShapeView.addOverlay_1
    summary: |-
      <span data-ttu-id="c4fb8-115">在形状之上添加覆盖。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-115">Adds an overlay on top of the shape.</span></span>

      <span data-ttu-id="c4fb8-116">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="c4fb8-116">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'addOverlay(OverlayTypeString, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    fullName: 'addOverlay(OverlayTypeString, Content, OverlayHorizontalAlignment, OverlayVerticalAlignment, Width, Height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addOverlay(OverlayTypeString: "Text" | "Image" | "Html", Content: string, OverlayHorizontalAlignment: "Left" | "Center" | "Right", OverlayVerticalAlignment: "Top" | "Middle" | "Bottom", Width: number, Height: number): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
      parameters:
        - id: OverlayTypeString
          description: <span data-ttu-id="c4fb8-117">覆盖类型。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-117">An Overlay Type.</span></span> <span data-ttu-id="c4fb8-118">可以是 "Text" 或 "Image"。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-118">Can be 'Text' or 'Image'.</span></span>
          type:
            - '"Text" | "Image" | "Html"'
        - id: Content
          description: <span data-ttu-id="c4fb8-119">覆盖的内容。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-119">Content of Overlay.</span></span>
          type:
            - string
        - id: OverlayHorizontalAlignment
          description: '<span data-ttu-id="c4fb8-120">重叠的水平对齐方式。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-120">Horizontal Alignment of Overlay.</span></span> <span data-ttu-id="c4fb8-121">可以是 "Left"、"Center" 或 "Right"。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-121">Can be ''Left'', ''Center'', or ''Right''.</span></span>'
          type:
            - '"Left" | "Center" | "Right"'
        - id: OverlayVerticalAlignment
          description: '<span data-ttu-id="c4fb8-122">重叠的垂直对齐方式。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-122">Vertical Alignment of Overlay.</span></span> <span data-ttu-id="c4fb8-123">可以是 '' Top ''、'' 中间 ''、'' 底端 ''。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-123">Can be ''Top'', ''Middle'', ''Bottom''.</span></span>'
          type:
            - '"Top" | "Middle" | "Bottom"'
        - id: Width
          description: <span data-ttu-id="c4fb8-124">覆盖宽度。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-124">Overlay Width.</span></span>
          type:
            - number
        - id: Height
          description: <span data-ttu-id="c4fb8-125">覆盖高度。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-125">Overlay Height.</span></span>
          type:
            - number
  - uid: visio.Visio.ShapeView.context
    summary: <span data-ttu-id="c4fb8-126">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-126">The request context associated with the object.</span></span> <span data-ttu-id="c4fb8-127">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-127">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: visio.Visio.ShapeView.highlight
    summary: |-
      <span data-ttu-id="c4fb8-128">表示形状周围的突出显示内容。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-128">Represents the highlight around the shape.</span></span>

      <span data-ttu-id="c4fb8-129">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="c4fb8-129">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: highlight
    fullName: highlight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlight: Visio.Highlight;'
      return:
        type:
          - visio.Visio.Highlight
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c4fb8-130">示例</span><span class="sxs-lookup"><span data-stu-id="c4fb8-130">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              shape.view.highlight = { color: "#E7E7E7", width: 100 };
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.ShapeView.load
    summary: <span data-ttu-id="c4fb8-131">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c4fb8-132">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-132">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c4fb8-133">除了此签名之外, 此方法还具有以下签名:</span><span class="sxs-lookup"><span data-stu-id="c4fb8-133">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c4fb8-134">`load(option?: string | string[]): Visio.ShapeView`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-134">`load(option?: string | string[]): Visio.ShapeView` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c4fb8-135">`load(option?: { select?: string; expand?: string; }): Visio.ShapeView`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-135">`load(option?: { select?: string; expand?: string; }): Visio.ShapeView` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c4fb8-136">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeView`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-136">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeView` - Only available on collection types.</span></span> <span data-ttu-id="c4fb8-137">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-137">It is similar to the preceding signature.</span></span> <span data-ttu-id="c4fb8-138">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-138">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c4fb8-139">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-139">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c4fb8-140">如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-140">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ShapeViewLoadOptions): Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.ShapeViewLoadOptions
  - uid: visio.Visio.ShapeView.load_1
    summary: '<span data-ttu-id="c4fb8-141">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-141">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c4fb8-142">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-142">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="c4fb8-143">一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: visio.Visio.ShapeView.load_2
    summary: '<span data-ttu-id="c4fb8-144">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c4fb8-145">在读取属性`context.sync()`之前, 必须先调用。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-145">You must call `context.sync()` before reading the properties.</span></span>'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.ShapeView;'
      return:
        type:
          - visio.Visio.ShapeView
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c4fb8-146">其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.ShapeView.removeOverlay
    summary: |-
      <span data-ttu-id="c4fb8-147">删除形状上的特定覆盖或所有覆盖。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-147">Removes particular overlay or all overlays on the Shape.</span></span>

      <span data-ttu-id="c4fb8-148">\[[API 集: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="c4fb8-148">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: removeOverlay(OverlayId)
    fullName: removeOverlay(OverlayId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeOverlay(OverlayId: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c4fb8-149">示例</span><span class="sxs-lookup"><span data-stu-id="c4fb8-149">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              shape.view.removeOverlay(1);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: OverlayId
          description: <span data-ttu-id="c4fb8-150">覆盖 ID。删除形状上特定 ID 的覆盖。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-150">An Overlay Id. Removes the specific overlay id from the shape.</span></span>
          type:
            - number
  - uid: visio.Visio.ShapeView.set
    summary: '<span data-ttu-id="c4fb8-151">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-151">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c4fb8-152">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-152">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c4fb8-153">此方法具有以下附加签名:</span><span class="sxs-lookup"><span data-stu-id="c4fb8-153">This method has the following additional signature:</span></span>

      `set(properties: Visio.ShapeView): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ShapeViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="c4fb8-154">一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-154">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.ShapeViewUpdateData
        - id: options
          description: '<span data-ttu-id="c4fb8-155">提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-155">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.ShapeView.set_1
    summary: '<span data-ttu-id="c4fb8-156">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-156">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.ShapeView): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - visio.Visio.ShapeView
  - uid: visio.Visio.ShapeView.toJSON
    summary: '<span data-ttu-id="c4fb8-157">重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c4fb8-157">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c4fb8-158">.</span><span class="sxs-lookup"><span data-stu-id="c4fb8-158"></span></span> <span data-ttu-id="c4fb8-159">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c4fb8-159"></span></span><!-- --><span data-ttu-id="c4fb8-160">反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始 ShapeView 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Visio.Interfaces.ShapeViewData`</span><span class="sxs-lookup"><span data-stu-id="c4fb8-160">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Visio.ShapeView object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Visio.Interfaces.ShapeViewData`</span></span><!-- --><span data-ttu-id="c4fb8-161">), 其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="c4fb8-161">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ShapeViewData;'
      return:
        type:
          - visio.Visio.Interfaces.ShapeViewData
        description: ''