### YamlMime:UniversalReference
ms.openlocfilehash: 871024b1f5fc48a59891b6e56cf8c1f8b6fe2b8b
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 10/10/2018
ms.locfileid: "25458052"
items:
- uid: office.OfficeExtension.Error
  summary: <span data-ttu-id="bd79c-101">返回 error 对象`context.sync()` <!-- -->，如果由于错误处理的请求时将被拒绝承诺。</span><span class="sxs-lookup"><span data-stu-id="bd79c-101">The error object returned by `context.sync()`<!-- -->, if a promise is rejected due to an error while processing the request.</span></span>
  name: OfficeExtension.Error
  fullName: office.OfficeExtension.Error
  langs:
  - typeScript
  type: class
  package: office
  remarks: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd79c-102\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd79c-102\">Examples</span></span>\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert text in to the beginning of the body.\n    // This will cause an OfficeExtension.Error.\n    body.insertText(0);\n\n    // Synchronize the document state by executing the queued-up commands,\n    // and return a promise to indicate task completion.\n    return context.sync();\n})\n.catch(function (error) {\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Error code and message: ' + error.toString());\n    }\n});\n```"
  children:
  - office.OfficeExtension.Error.code
  - office.OfficeExtension.Error.debugInfo
  - office.OfficeExtension.Error.innerError
  - office.OfficeExtension.Error.message
  - office.OfficeExtension.Error.name
  - office.OfficeExtension.Error.stack
  - office.OfficeExtension.Error.traceMessages
- uid: office.OfficeExtension.Error.code
  summary: <span data-ttu-id="bd79c-103">错误代码的字符串，如"InvalidArgument"。</span><span class="sxs-lookup"><span data-stu-id="bd79c-103">Error code string, such as "InvalidArgument".</span></span>
  name: code
  fullName: office.OfficeExtension.Error.code
  langs:
  - typeScript
  type: property
  syntax:
    content: 'code: string;'
    return:
      type:
      - string
- uid: office.OfficeExtension.Error.debugInfo
  summary: <span data-ttu-id="bd79c-104">调试信息 (有用详细日志记录的错误，即通过`JSON.stringify(...)` <!-- -->)。</span><span class="sxs-lookup"><span data-stu-id="bd79c-104">Debug info (useful for detailed logging of the error, i.e., via `JSON.stringify(...)`<!-- -->).</span></span>
  name: debugInfo
  fullName: office.OfficeExtension.Error.debugInfo
  langs:
  - typeScript
  type: property
  syntax:
    content: 'debugInfo: DebugInfo;'
    return:
      type:
      - office.OfficeExtension.DebugInfo
- uid: office.OfficeExtension.Error.innerError
  summary: <span data-ttu-id="bd79c-105">内部错误，如果适用。</span><span class="sxs-lookup"><span data-stu-id="bd79c-105">Inner error, if applicable.</span></span>
  name: innerError
  fullName: office.OfficeExtension.Error.innerError
  langs:
  - typeScript
  type: property
  syntax:
    content: 'innerError: Error;'
    return:
      type:
      - Error
- uid: office.OfficeExtension.Error.message
  summary: <span data-ttu-id="bd79c-106">从 Office 应用程序的主机，通过传递的错误消息。</span><span class="sxs-lookup"><span data-stu-id="bd79c-106">The error message passed through from the host Office application.</span></span>
  name: message
  fullName: office.OfficeExtension.Error.message
  langs:
  - typeScript
  type: property
  syntax:
    content: 'message: string;'
    return:
      type:
      - string
- uid: office.OfficeExtension.Error.name
  summary: '<span data-ttu-id="bd79c-107">错误名称:"OfficeExtension.Error"。</span><span class="sxs-lookup"><span data-stu-id="bd79c-107">Error name: "OfficeExtension.Error".</span></span>'
  name: name
  fullName: office.OfficeExtension.Error.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: office.OfficeExtension.Error.stack
  summary: <span data-ttu-id="bd79c-108">如果适用，则堆栈跟踪。</span><span class="sxs-lookup"><span data-stu-id="bd79c-108">Stack trace, if applicable.</span></span>
  name: stack
  fullName: office.OfficeExtension.Error.stack
  langs:
  - typeScript
  type: property
  syntax:
    content: 'stack: string;'
    return:
      type:
      - string
- uid: office.OfficeExtension.Error.traceMessages
  summary: <span data-ttu-id="bd79c-109">跟踪邮件 （如果有） 的已通过添加`context.trace()`之前调用的调用`context.sync()` <!-- -->。</span><span class="sxs-lookup"><span data-stu-id="bd79c-109">Trace messages (if any) that were added via a `context.trace()` invocation before calling `context.sync()`<!-- -->.</span></span> <span data-ttu-id="bd79c-110">如果出现错误，其中包含错误发生之前已执行的所有跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="bd79c-110">If there was an error, this contains all trace messages that were executed before the error occurred.</span></span> <span data-ttu-id="bd79c-111">这些邮件可帮助您监视程序执行顺序和检测错误的大小写。</span><span class="sxs-lookup"><span data-stu-id="bd79c-111">These messages can help you monitor the program execution sequence and detect the case of the error.</span></span>
  name: traceMessages
  fullName: office.OfficeExtension.Error.traceMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'traceMessages: Array<string>;'
    return:
      type:
      - Array<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"bd79c-112\">示例</span><span class=\"sxs-lookup\"><span data-stu-id=\"bd79c-112\">Examples</span></span>\n\n```javascript\n// The following example shows how you can instrument a batch of commands\n// to determine where an error occurred. The first batch successfully\n// inserts the first two paragraphs into the document and cause no errors.\n// The second batch successfully inserts the third and fourth paragraphs\n// but fails in the call to insert the fifth paragraph. All other commands\n// after the failed command in the batch are not executed, including the\n// command that adds the fifth trace message. In this case, the error\n// occurred after the fourth paragraph was inserted, and before adding the\n// fifth trace message.\n\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a commmand to insert the paragraph at the end of the document body.\n    // Start a batch of commands.\n    body.insertParagraph('1st paragraph', Word.InsertLocation.end);\n    // Queue a command for instrumenting this part of the batch.\n    context.trace('1st paragraph successful');\n\n    body.insertParagraph('2nd paragraph', Word.InsertLocation.end);\n    context.trace('2nd paragraph successful');\n\n    // Synchronize the document state by executing the queued-up commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        // Queue a commmand to insert the paragraph at the end of the document body.\n        // Start a new batch of commands.\n        body.insertParagraph('3rd paragraph', Word.InsertLocation.end);\n        context.trace('3rd paragraph successful');\n\n        body.insertParagraph('4th paragraph', Word.InsertLocation.end);\n        context.trace('4th paragraph successful');\n\n        // This command will cause an error. The trace messages in the queue up to\n        // this point will be available via Error.traceMessages.\n        body.insertParagraph(0, '5th paragraph', Word.InsertLocation.end);\n        // Queue a command for instrumenting this part of the batch.\n        // This trace message will not be set on Error.traceMessages.\n        context.trace('5th paragraph successful');\n    }).then(context.sync);\n})\n.catch(function (error) {\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Trace messages: ' + error.traceMessages);\n    }\n});\n\n// Output: \"Trace messages: 3rd paragraph successful,4th paragraph successful\"\n```"
