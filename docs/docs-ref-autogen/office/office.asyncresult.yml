### YamlMime:UniversalReference
items:
  - uid: office.Office.AsyncResult
    summary: |-
      <span data-ttu-id="32334-101">用于封装异步请求的结果的对象，包括状态和错误信息（如果请求失败）。</span><span class="sxs-lookup"><span data-stu-id="32334-101">An object which encapsulates the result of an asynchronous request, including status and error information if the request failed.</span></span>

      <span data-ttu-id="32334-102">当您传递给 "Async" `callback`方法的参数的函数执行时, 它会接收您可以从该`callback`函数的唯一参数访问的 AsyncResult 对象。</span><span class="sxs-lookup"><span data-stu-id="32334-102">When the function you pass to the `callback` parameter of an "Async" method executes, it receives an AsyncResult object that you can access from the `callback` function's only parameter.</span></span>
    name: Office.AsyncResult
    fullName: Office.AsyncResult
    langs:
      - typeScript
    type: interface
    package: office
    remarks: |-


      #### <a name="examples"></a><span data-ttu-id="32334-103">示例</span><span class="sxs-lookup"><span data-stu-id="32334-103">Examples</span></span>

      ```javascript
      // The following is an example applicable to content and task pane add-ins.
      // The example shows a call to the getSelectedDataAsync method of the Document object.
      Office.context.document.getSelectedDataAsync("text", {
              valueFormat: "unformatted",
              filterType: "all"
          },
          function (result) {
              if (result.status === "success") {
                  var dataValue = result.value; // Get selected data.
                  console.log('Selected data is ' + dataValue);
              } else {
                  var err = result.error;
                  console.log(err.name + ": " + err.message);
              }
          });
      // The anonymous function passed as the callback argument ( function (result){...}) has a single 
      // parameter named result that provides access to an AsyncResult object when the function executes.
      // When the call to the getSelectedDataAsync method completes, the callback function executes, 
      // and the following line of code accesses the value property of the AsyncResult object to 
      // return the data selected in the document:
      var dataValue = result.value;
      // Note that other lines of code in the function use the result parameter of the callback function 
      // to access the status and error properties of the AsyncResult object.
      ```
    children:
      - office.Office.AsyncResult.asyncContext
      - office.Office.AsyncResult.diagnostics
      - office.Office.AsyncResult.error
      - office.Office.AsyncResult.status
      - office.Office.AsyncResult.value
  - uid: office.Office.AsyncResult.asyncContext
    summary: '<span data-ttu-id="32334-104">获取与传入时状态相同的传递给调用`asyncContext`方法的可选参数的用户定义项。</span><span class="sxs-lookup"><span data-stu-id="32334-104">Gets the user-defined item passed to the optional `asyncContext` parameter of the invoked method in the same state as it was passed in.</span></span> <span data-ttu-id="32334-105">这将返回传递给调用方法的可选`asyncContext`参数的用户定义的项 (可以是任何 JavaScript 类型: String、Number、Boolean、Object、Array、Null 或未定义)。</span><span class="sxs-lookup"><span data-stu-id="32334-105">This returns the user-defined item (which can be of any JavaScript type: String, Number, Boolean, Object, Array, Null, or Undefined) passed to the optional `asyncContext` parameter of the invoked method.</span></span> <span data-ttu-id="32334-106">如果您未向  asyncContext 参数传递任何东西，则返回 Undefined 。</span><span class="sxs-lookup"><span data-stu-id="32334-106">Returns Undefined, if you didn''t pass anything to the asyncContext parameter.</span></span>'
    name: asyncContext
    fullName: asyncContext
    langs:
      - typeScript
    type: property
    syntax:
      content: 'asyncContext: any;'
      return:
        type:
          - any
        description: |-


          #### <a name="examples"></a><span data-ttu-id="32334-107">示例</span><span class="sxs-lookup"><span data-stu-id="32334-107">Examples</span></span>

          ```javascript
          function getDataWithContext() {
              var format = "Your data: ";
              Office.context.document.getSelectedDataAsync(
                  Office.CoercionType.Text, 
                  { asyncContext: format }, 
                  showDataWithContext);
          }

          function showDataWithContext(asyncResult) {
              write(asyncResult.asyncContext + asyncResult.value);
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.AsyncResult.diagnostics
    summary: '<span data-ttu-id="32334-108">如果发生错误, 则获取可能提供其他信息的对象。</span><span class="sxs-lookup"><span data-stu-id="32334-108">Gets an object that may provide additional information if an error occurred.</span></span>'
    remarks: |-
      <span data-ttu-id="32334-109">*支持的 api*</span><span class="sxs-lookup"><span data-stu-id="32334-109">*Supported APIs*</span></span>

      `Office.context.mailbox.item.getCallbackTokenAsync`<!-- --><span data-ttu-id="32334-110">, `Office.context.mailbox.item.getUserIdentityTokenAsync`</span><span class="sxs-lookup"><span data-stu-id="32334-110"></span></span>

      <span data-ttu-id="32334-111">*支持的错误*</span><span class="sxs-lookup"><span data-stu-id="32334-111">*Supported errors*</span></span> <table> <tr><th>`AsyncResult.error.name` </th><th>`AsyncResult.error.message` </th><th><span data-ttu-id="32334-112">返回的诊断对象的说明</span><span class="sxs-lookup"><span data-stu-id="32334-112">Description of diagnostics object returned</span></span> </th></tr> <tr><td><span data-ttu-id="32334-113"><strong>HTTPRequestFailure</strong></span><span class="sxs-lookup"><span data-stu-id="32334-113"><strong>HTTPRequestFailure</strong></span></span> </td><td><span data-ttu-id="32334-114">请求失败。</span><span class="sxs-lookup"><span data-stu-id="32334-114">The request has failed.</span></span> <span data-ttu-id="32334-115">请查看 HTTP 错误代码的 diagnostics 对象。</span><span class="sxs-lookup"><span data-stu-id="32334-115">Please look at the diagnostics object for the HTTP error code.</span></span> </td><td><span data-ttu-id="32334-116">JSON 对象中的 HTTP 错误代码, 例如,`{"HTTPCode":"401"}`</span><span class="sxs-lookup"><span data-stu-id="32334-116">The HTTP error code in a JSON object e.g., `{"HTTPCode":"401"}`</span></span> </td></tr> <tr><td><span data-ttu-id="32334-117"><strong>InternalServerError</strong></span><span class="sxs-lookup"><span data-stu-id="32334-117"><strong>InternalServerError</strong></span></span></td><td><span data-ttu-id="32334-118">Exchange 服务器返回错误。</span><span class="sxs-lookup"><span data-stu-id="32334-118">The Exchange server returned an error.</span></span> <span data-ttu-id="32334-119">有关详细信息, 请参阅 diagnostics 对象。</span><span class="sxs-lookup"><span data-stu-id="32334-119">Please look at the diagnostics object for more information.</span></span></td><td><span data-ttu-id="32334-120">JSON 对象中来自 Exchange 服务器的错误消息, 例如,`{"ErrorText": "The mailbox database is temporarily unavailable"}`</span><span class="sxs-lookup"><span data-stu-id="32334-120">The error message from the Exchange server in a JSON object e.g., `{"ErrorText": "The mailbox database is temporarily unavailable"}`</span></span></td></tr> </table>
    name: diagnostics
    fullName: diagnostics
    langs:
      - typeScript
    type: property
    syntax:
      content: 'diagnostics: any;'
      return:
        type:
          - any
  - uid: office.Office.AsyncResult.error
    summary: '<span data-ttu-id="32334-121">如果出现任何错误, 则获取一个提供错误说明的 " [Office." 错误](xref:office.Office.Error)对象。</span><span class="sxs-lookup"><span data-stu-id="32334-121">Gets an [Office.Error](xref:office.Office.Error) object that provides a description of the error, if any error occurred.</span></span>'
    name: error
    fullName: error
    langs:
      - typeScript
    type: property
    syntax:
      content: 'error: Office.Error;'
      return:
        type:
          - office.Office.Error
        description: |-


          #### <a name="examples"></a><span data-ttu-id="32334-122">示例</span><span class="sxs-lookup"><span data-stu-id="32334-122">Examples</span></span>

          ```javascript
          function getData() {
              Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write(asyncResult.error.message);
                  }
                  else {
                      write(asyncResult.value);
                  }
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.AsyncResult.status
    summary: '<span data-ttu-id="32334-123">获取异步操作的[AsyncResultStatus](xref:office.Office.AsyncResultStatus) 。</span><span class="sxs-lookup"><span data-stu-id="32334-123">Gets the [Office.AsyncResultStatus](xref:office.Office.AsyncResultStatus) of the asynchronous operation.</span></span>'
    name: status
    fullName: status
    langs:
      - typeScript
    type: property
    syntax:
      content: 'status: AsyncResultStatus;'
      return:
        type:
          - office.Office.AsyncResultStatus
        description: |-


          #### <a name="examples"></a><span data-ttu-id="32334-124">示例</span><span class="sxs-lookup"><span data-stu-id="32334-124">Examples</span></span>

          ```javascript
          function getData() {
              Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write(asyncResult.error.message);
                  }
                  else {
                      write(asyncResult.value);
                  }
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.AsyncResult.value
    summary: '<span data-ttu-id="32334-125">获取此异步操作的负载或内容（如有）。</span><span class="sxs-lookup"><span data-stu-id="32334-125">Gets the payload or content of this asynchronous operation, if any.</span></span>'
    remarks: |-
      <span data-ttu-id="32334-126">可以在作为参数传递给 "Async" 方法的 callback 参数的函数中访问 AsyncResult 对象, 如`getSelectedDataAsync` [Document](xref:office.Office.Document)对象的和`setSelectedDataAsync`方法。</span><span class="sxs-lookup"><span data-stu-id="32334-126">You access the AsyncResult object in the function passed as the argument to the callback parameter of an "Async" method, such as the `getSelectedDataAsync` and `setSelectedDataAsync` methods of the [Document](xref:office.Office.Document) object.</span></span>

      <span data-ttu-id="32334-127">**注意**: 对于特定的 "Async" 方法, value 属性的返回值取决于该方法的用途和上下文。</span><span class="sxs-lookup"><span data-stu-id="32334-127">**Note**: What the value property returns for a particular "Async" method varies depending on the purpose and context of that method.</span></span> <span data-ttu-id="32334-128">若要确定 value 属性为 "Async" 方法返回了什么内容，请参阅该方法主题的“回调值”部分。</span><span class="sxs-lookup"><span data-stu-id="32334-128">To determine what is returned by the value property for an "Async" method, refer to the "Callback value" section of the method's topic.</span></span>

      #### <a name="examples"></a><span data-ttu-id="32334-129">示例</span><span class="sxs-lookup"><span data-stu-id="32334-129">Examples</span></span>

      ```javascript
      function getData() {
          Office.context.document.getSelectedDataAsync(Office.CoercionType.Table, function(asyncResult) {
              if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                  write(asyncResult.error.message);
              }
              else {
                  write(asyncResult.value);
              }
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: T;'
      return:
        type:
          - T