### YamlMime:UniversalReference
items:
  - uid: office.Office.AddinCommands.Event
    summary: <span data-ttu-id="d07af-101">事件对象作为参数传递给由无 UI 调用的外接程序函数 (不小于命令按钮)。</span><span class="sxs-lookup"><span data-stu-id="d07af-101">The event object is passed as a parameter to add-in functions invoked by UI-less command buttons.</span></span> <span data-ttu-id="d07af-102">该对象允许外接程序确定单击了哪个按钮，并向主机发出信号说明已完成处理。</span><span class="sxs-lookup"><span data-stu-id="d07af-102">The object allows the add-in to identify which button was clicked and to signal the host that it has completed its processing.</span></span>
    remarks: |-
      <span data-ttu-id="d07af-103">有关详细支持信息, 请参阅[外接程序命令要求集](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets)。</span><span class="sxs-lookup"><span data-stu-id="d07af-103">See [Add-in commands requirement sets](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets) for more support information.</span></span>

      <span data-ttu-id="d07af-104">**[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: 受限</span><span class="sxs-lookup"><span data-stu-id="d07af-104">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: Restricted</span></span>

      <span data-ttu-id="d07af-105">**[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写或阅读</span><span class="sxs-lookup"><span data-stu-id="d07af-105">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>
    name: Office.AddinCommands.Event
    fullName: Office.AddinCommands.Event
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.AddinCommands.Event.completed
      - office.Office.AddinCommands.Event.source
  - uid: office.Office.AddinCommands.Event.completed
    summary: |-
      <span data-ttu-id="d07af-106">指示外接程序已完成处理, 并将自动关闭。</span><span class="sxs-lookup"><span data-stu-id="d07af-106">Indicates that the add-in has completed processing and will automatically be closed.</span></span>

      <span data-ttu-id="d07af-107">此方法必须在由以下函数调用的函数末尾调用。</span><span class="sxs-lookup"><span data-stu-id="d07af-107">This method must be called at the end of a function which was invoked by the following.</span></span>

      - <span data-ttu-id="d07af-108">无 UI 按钮 (即, 使用 Action 元素定义的外接程序命令, 其中 xsi: type 属性设置为 ExecuteFunction)</span><span class="sxs-lookup"><span data-stu-id="d07af-108">A UI-less button (i.e., an add-in command defined with an Action element where the xsi:type attribute is set to ExecuteFunction)</span></span>

      - <span data-ttu-id="d07af-109">[事件扩展点](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/extensionpoint#events)中定义的[事件](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/event)</span><span class="sxs-lookup"><span data-stu-id="d07af-109">An [event](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/event) defined in the [Events extension point](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/extensionpoint#events)</span></span><!-- --><span data-ttu-id="d07af-110">(例如, `ItemSend`事件</span><span class="sxs-lookup"><span data-stu-id="d07af-110">, e.g., an `ItemSend` event</span></span>

      <span data-ttu-id="d07af-111">\[[API 集: 邮箱 1.3](/office/dev/add-ins/reference/javascript-api-for-office)\]</span><span class="sxs-lookup"><span data-stu-id="d07af-111">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/javascript-api-for-office) \]</span></span>
    remarks: |-
      <span data-ttu-id="d07af-112">**[最低权限级别](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: 受限</span><span class="sxs-lookup"><span data-stu-id="d07af-112">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: Restricted</span></span>

      <span data-ttu-id="d07af-113">**[适用的 Outlook 模式](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: 撰写或阅读</span><span class="sxs-lookup"><span data-stu-id="d07af-113">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose or Read</span></span>

      <span data-ttu-id="d07af-114">邮箱1.3 没有参数, `options`而邮箱预览不支持`options`参数。</span><span class="sxs-lookup"><span data-stu-id="d07af-114">Mailbox 1.3 does not have the `options` parameter while Mailbox Preview does have support for `options` parameter.</span></span>

      #### <a name="examples"></a><span data-ttu-id="d07af-115">示例</span><span class="sxs-lookup"><span data-stu-id="d07af-115">Examples</span></span>

      ```javascript
      // For the following example, the processItem function is
      // defined in the FunctionFile referenced from the add-in manifest,
      // and maps to the FunctionName of the action in the associated button control.
      function processItem(event) {
          // Do some processing

          event.completed();
      }
      ```
      ```javascript
      // For the following example, the checkMessage function was
      // registered as an event handler for ItemSend.
      function checkMessage(event) {
          // Get the item being sent.
          var outgoingMsg = Office.context.mailbox.item;

          // Check if subject contains "BLOCK".
          outgoingMsg.subject.getAsync(function (result) {
              // Subject is in `result.value`.
              // If search term "BLOCK" is found, don't send message.
              const notFound = -1;
              var allowEvent = (result.value.indexOf('BLOCK') === notFound);
              event.completed({allowEvent: allowEvent});
          });
      }
      ```
    name: completed(options)
    fullName: completed(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'completed(options?: EventCompletedOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="d07af-116">可选。</span><span class="sxs-lookup"><span data-stu-id="d07af-116">Optional.</span></span> <span data-ttu-id="d07af-117">一个对象, 用于指定事件完成时的行为选项。</span><span class="sxs-lookup"><span data-stu-id="d07af-117">An object that specifies behavior options for when the event is completed.</span></span>'
          type:
            - office.Office.AddinCommands.EventCompletedOptions
  - uid: office.Office.AddinCommands.Event.source
    summary: <span data-ttu-id="d07af-118">有关触发调用此函数的控件的信息。</span><span class="sxs-lookup"><span data-stu-id="d07af-118">Information about the control that triggered calling this function.</span></span>
    remarks: |-
      <span data-ttu-id="d07af-119">仅在[要求集](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)邮箱1.3 和更高版本中的 Outlook 中支持此属性。</span><span class="sxs-lookup"><span data-stu-id="d07af-119">This property is only supported in Outlook in [requirement set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) Mailbox 1.3 and later.</span></span>

      #### <a name="examples"></a><span data-ttu-id="d07af-120">示例</span><span class="sxs-lookup"><span data-stu-id="d07af-120">Examples</span></span>

      ```javascript
      // In this example, consider a button defined in an add-in manifest as follows:
      //<Control xsi:type="Button" id="eventTestButton">
      //    <Label resid="eventButtonLabel" />
      //    <Tooltip resid="eventButtonTooltip" />
      //    <Supertip>
      //        <Title resid="eventSuperTipTitle" />
      //        <Description resid="eventSuperTipDescription" />
      //    </Supertip>
      //    <Icon>
      //        <bt:Image size="16" resid="blue-icon-16" />
      //        <bt:Image size="32" resid="blue-icon-32" />
      //        <bt:Image size="80" resid="blue-icon-80" />
      //    </Icon>
      //    <Action xsi:type="ExecuteFunction">
      //        <FunctionName>testEventObject</FunctionName>
      //    </Action>
      //</Control>

      // The button has an id attribute set to eventTestButton, and will invoke
      // the testEventObject function defined in the add-in.
      // That function looks like this:
      function testEventObject(event) {
          // The event object implements the Event interface.

          // This value will be "eventTestButton".
          var buttonId = event.source.id;

          // Signal to the host app that processing is complete.
          event.completed();
      }
      ```
      ```javascript
      // Function is used by two buttons:
      // button1 and button2
      function multiButton (event) {
          // Check which button was clicked.
          var buttonId = event.source.id;

          if (buttonId === 'button1') {
              doButton1Action();
          } else {
              doButton2Action();
          }

          event.completed();
      }
      ```
    name: source
    fullName: source
    langs:
      - typeScript
    type: property
    syntax:
      content: 'source:Source;'
      return:
        type:
          - office.Office.AddinCommands.Source