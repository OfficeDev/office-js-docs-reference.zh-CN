### YamlMime:TSType
name: Office.AddinCommands.Event
uid: office!Office.AddinCommands.Event:interface
package: office!
fullName: Office.AddinCommands.Event
summary: '`Event` 对象作为参数传递到由无用户界面命令按钮调用的外接程序函数。该对象允许外接程序确定单击了哪个按钮，并向主机发出信号说明已完成处理。'
remarks: >-
  有关详细支持信息，请参阅 [外接程序命令要求集](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets) 。


  **<!-- --> [Outlook)  (最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)**：受限


  **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**：撰写或阅读
isPreview: false
isDeprecated: false
type: interface
properties:
- name: source
  uid: office!Office.AddinCommands.Event#source:member
  package: office!
  fullName: source
  summary: 有关触发调用此函数的控件的信息。
  remarks: >-
    仅在 [要求集](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) 邮箱1.3 及更高版本中，此属性才受 Outlook 支持。


    #### <a name="examples"></a>示例


    ```javascript

    // In this example, consider a button defined in an add-in manifest as follows:

    //<Control xsi:type="Button" id="eventTestButton">

    //    <Label resid="eventButtonLabel" />

    //    <Tooltip resid="eventButtonTooltip" />

    //    <Supertip>

    //        <Title resid="eventSuperTipTitle" />

    //        <Description resid="eventSuperTipDescription" />

    //    </Supertip>

    //    <Icon>

    //        <bt:Image size="16" resid="blue-icon-16" />

    //        <bt:Image size="32" resid="blue-icon-32" />

    //        <bt:Image size="80" resid="blue-icon-80" />

    //    </Icon>

    //    <Action xsi:type="ExecuteFunction">

    //        <FunctionName>testEventObject</FunctionName>

    //    </Action>

    //</Control>


    // The button has an id attribute set to eventTestButton, and will invoke

    // the testEventObject function defined in the add-in.

    // That function looks like this:

    function testEventObject(event) {
        // The event object implements the Event interface.

        // This value will be "eventTestButton".
        var buttonId = event.source.id;

        // Signal to the host app that processing is complete.
        event.completed();
    }

    ```

    ```javascript

    // Function is used by two buttons:

    // button1 and button2

    function multiButton (event) {
        // Check which button was clicked.
        var buttonId = event.source.id;

        if (buttonId === 'button1') {
            doButton1Action();
        } else {
            doButton2Action();
        }

        event.completed();
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: source:Source;
    return:
      type: <xref uid="office!Office.AddinCommands.Source:interface" />
methods:
- name: completed(options)
  uid: office!Office.AddinCommands.Event#completed:member(1)
  package: office!
  fullName: completed(options)
  summary: >-
    指示外接程序已完成处理，并将自动关闭。


    此方法必须在由以下函数调用的函数末尾调用。


    - 一个无 UI 的按钮 (即，使用 `Action` `xsi:type` 属性设置为的元素定义的外接程序命令 `ExecuteFunction`<!-- -->)


    - [事件扩展点](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/extensionpoint#events)中定义的[事件](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/event)<!-- -->（例如， `ItemSend` 事件


    \[[API 集：邮箱 1.3](/office/dev/add-ins/reference/javascript-api-for-office)\]
  remarks: >-
    **[最低权限级别](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**：`Restricted`


    **[适用的 Outlook 模式](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**：撰写或阅读


    **注意**：此 `options` 参数是在邮箱1.8 中引入的。


    #### <a name="examples"></a>示例


    ```javascript

    // For the following example, the processItem function is

    // defined in the FunctionFile referenced from the add-in manifest,

    // and maps to the FunctionName of the action in the associated button control.

    function processItem(event) {
        // Do some processing

        event.completed();
    }

    ```

    ```javascript

    // For the following example, the checkMessage function was

    // registered as an event handler for ItemSend.

    function checkMessage(event) {
        // Get the item being sent.
        var outgoingMsg = Office.context.mailbox.item;

        // Check if subject contains "BLOCK".
        outgoingMsg.subject.getAsync(function (result) {
            // Subject is in `result.value`.
            // If search term "BLOCK" is found, don't send message.
            const notFound = -1;
            var allowEvent = (result.value.indexOf('BLOCK') === notFound);
            event.completed({allowEvent: allowEvent});
        });
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'completed(options?: EventCompletedOptions): void;'
    parameters:
    - id: options
      description: 可选。 一个对象，用于指定事件完成时的行为选项。
      type: <xref uid="office!Office.AddinCommands.EventCompletedOptions:interface" />
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: c429a311a9297dc9825912a311993f24cb53e211
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49151392"
