### YamlMime:UniversalReference
items:
  - uid: 'office!Office.Auth:interface'
    summary: '<span data-ttu-id="444d4-101">Office Auth namespace （即 "context.subname"）提供了一种方法，允许 Office 主机获取对加载项 web 应用程序的访问令牌。</span><span class="sxs-lookup"><span data-stu-id="444d4-101">The Office Auth namespace, Office.context.auth, provides a method that allows the Office host to obtain an access token to the add-in''s web application.</span></span> <span data-ttu-id="444d4-102">这也使加载项能够间接访问已登录用户的 Microsoft Graph 数据，而不需要用户第二次登录。</span><span class="sxs-lookup"><span data-stu-id="444d4-102">Indirectly, this also enables the add-in to access the signed-in user''s Microsoft Graph data without requiring the user to sign in a second time.</span></span>'
    isPreview: true
    name: Office.Auth
    fullName: Office.Auth
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.Auth#getAccessTokenAsync:member(1)'
      - 'office!Office.Auth#getAccessTokenAsync:member(2)'
  - uid: 'office!Office.Auth#getAccessTokenAsync:member(1)'
    summary: |-
      <span data-ttu-id="444d4-103">调用 Azure Active Directory V 2.0 终结点以获取令牌来访问加载项的 Web 应用程序。</span><span class="sxs-lookup"><span data-stu-id="444d4-103">Calls the Azure Active Directory V 2.0 endpoint to get an access token to your add-in's web application.</span></span> <span data-ttu-id="444d4-104">启用外接程序以标识用户。</span><span class="sxs-lookup"><span data-stu-id="444d4-104">Enables add-ins to identify users.</span></span> <span data-ttu-id="444d4-105">通过使用["代表" OAuth 流](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of)，服务器端代码可以使用此令牌访问加载项的 web 应用程序的 Microsoft Graph</span><span class="sxs-lookup"><span data-stu-id="444d4-105">Server side code can use this token to access Microsoft Graph for the add-in's web application by using the ["on behalf of" OAuth flow](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of)</span></span><!-- --><span data-ttu-id="444d4-106">.</span><span class="sxs-lookup"><span data-stu-id="444d4-106"></span></span>

      <span data-ttu-id="444d4-107">重要说明：在 Outlook 中，如果外接程序加载到 Outlook.com 或 Gmail 邮箱中，则此 API 不受支持。</span><span class="sxs-lookup"><span data-stu-id="444d4-107">Important: In Outlook, this API is not supported if the add-in is loaded in an Outlook.com or Gmail mailbox.</span></span>
    remarks: |-
      <span data-ttu-id="444d4-108">**主机**： Excel、OneNote、Outlook、PowerPoint、Word</span><span class="sxs-lookup"><span data-stu-id="444d4-108">**Hosts**: Excel, OneNote, Outlook, PowerPoint, Word</span></span>

      <span data-ttu-id="444d4-109">**要求集**： [IdentityAPI](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="444d4-109">**Requirement set**: [IdentityAPI](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)</span></span>

      <span data-ttu-id="444d4-110">此 API 需要将加载项桥接到 Azure 应用程序的单一登录配置。</span><span class="sxs-lookup"><span data-stu-id="444d4-110">This API requires a single sign-on configuration that bridges the add-in to an Azure application.</span></span> <span data-ttu-id="444d4-111">Office 用户使用组织帐户和 Microsoft 帐户登录。</span><span class="sxs-lookup"><span data-stu-id="444d4-111">Office users sign-in with Organizational Accounts and Microsoft Accounts.</span></span> <span data-ttu-id="444d4-112">Microsoft Azure 返回适用于两种用户帐户类型的令牌，以访问 Microsoft Graph 中的资源。</span><span class="sxs-lookup"><span data-stu-id="444d4-112">Microsoft Azure returns tokens intended for both user account types to access resources in the Microsoft Graph.</span></span>

      #### <a name="examples"></a><span data-ttu-id="444d4-113">示例</span><span class="sxs-lookup"><span data-stu-id="444d4-113">Examples</span></span>

      ```javascript
      Office.context.auth.getAccessTokenAsync(function(result) {
          if (result.status === "succeeded") {
              var token = result.value;
              // ...
          } else {
              console.log("Error obtaining token", result.error);
          }
      });
      ```
    isPreview: true
    name: 'getAccessTokenAsync(options, callback)'
    fullName: 'getAccessTokenAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAccessTokenAsync(options?: AuthOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="444d4-114">可选。</span><span class="sxs-lookup"><span data-stu-id="444d4-114">Optional.</span></span> <span data-ttu-id="444d4-115">接受 AuthOptions 对象以定义登录行为。</span><span class="sxs-lookup"><span data-stu-id="444d4-115">Accepts an AuthOptions object to define sign-on behaviors.</span></span>
          type:
            - 'office!Office.AuthOptions:interface'
        - id: callback
          description: '<span data-ttu-id="444d4-116">可选。</span><span class="sxs-lookup"><span data-stu-id="444d4-116">Optional.</span></span> <span data-ttu-id="444d4-117">接受可对用户 ID 使用分析令牌的回调方法，或使用 "代表" 流中的令牌来获取对 Microsoft Graph 的访问权限。</span><span class="sxs-lookup"><span data-stu-id="444d4-117">Accepts a callback method that can use parse the token for the user''s ID or use the token in the "on behalf of" flow to get access to Microsoft Graph.</span></span> <span data-ttu-id="444d4-118">如果 AsyncResult. status 为 "succeeded"，则为 AsyncResult。值为原始 AAD v。</span><span class="sxs-lookup"><span data-stu-id="444d4-118">If AsyncResult.status is "succeeded", then AsyncResult.value is the raw AAD v.</span></span> <span data-ttu-id="444d4-119">2.0 格式的访问令牌。</span><span class="sxs-lookup"><span data-stu-id="444d4-119">2.0-formatted access token.</span></span>'
          type:
            - 'office!Office.Auth#getAccessTokenAsync~0:complex'
  - uid: 'office!Office.Auth#getAccessTokenAsync:member(2)'
    summary: |-
      <span data-ttu-id="444d4-120">调用 Azure Active Directory V 2.0 终结点以获取令牌来访问加载项的 Web 应用程序。</span><span class="sxs-lookup"><span data-stu-id="444d4-120">Calls the Azure Active Directory V 2.0 endpoint to get an access token to your add-in's web application.</span></span> <span data-ttu-id="444d4-121">启用外接程序以标识用户。</span><span class="sxs-lookup"><span data-stu-id="444d4-121">Enables add-ins to identify users.</span></span> <span data-ttu-id="444d4-122">通过使用["代表" OAuth 流](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of)，服务器端代码可以使用此令牌访问加载项的 web 应用程序的 Microsoft Graph</span><span class="sxs-lookup"><span data-stu-id="444d4-122">Server side code can use this token to access Microsoft Graph for the add-in's web application by using the ["on behalf of" OAuth flow](https://docs.microsoft.com/azure/active-directory/develop/active-directory-v2-protocols-oauth-on-behalf-of)</span></span><!-- --><span data-ttu-id="444d4-123">.</span><span class="sxs-lookup"><span data-stu-id="444d4-123"></span></span>

      <span data-ttu-id="444d4-124">重要说明：在 Outlook 中，如果外接程序加载到 Outlook.com 或 Gmail 邮箱中，则此 API 不受支持。</span><span class="sxs-lookup"><span data-stu-id="444d4-124">Important: In Outlook, this API is not supported if the add-in is loaded in an Outlook.com or Gmail mailbox.</span></span>
    remarks: |-
      <span data-ttu-id="444d4-125">**主机**： Excel、OneNote、Outlook、PowerPoint、Word</span><span class="sxs-lookup"><span data-stu-id="444d4-125">**Hosts**: Excel, OneNote, Outlook, PowerPoint, Word</span></span>

      <span data-ttu-id="444d4-126">**要求集**： [IdentityAPI](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="444d4-126">**Requirement set**: [IdentityAPI](https://docs.microsoft.com/en-us/office/dev/add-ins/reference/requirement-sets/identity-api-requirement-sets)</span></span>

      <span data-ttu-id="444d4-127">此 API 需要将加载项桥接到 Azure 应用程序的单一登录配置。</span><span class="sxs-lookup"><span data-stu-id="444d4-127">This API requires a single sign-on configuration that bridges the add-in to an Azure application.</span></span> <span data-ttu-id="444d4-128">Office 用户使用组织帐户和 Microsoft 帐户登录。</span><span class="sxs-lookup"><span data-stu-id="444d4-128">Office users sign-in with Organizational Accounts and Microsoft Accounts.</span></span> <span data-ttu-id="444d4-129">Microsoft Azure 返回适用于两种用户帐户类型的令牌，以访问 Microsoft Graph 中的资源。</span><span class="sxs-lookup"><span data-stu-id="444d4-129">Microsoft Azure returns tokens intended for both user account types to access resources in the Microsoft Graph.</span></span>
    isPreview: true
    name: getAccessTokenAsync(callback)
    fullName: getAccessTokenAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAccessTokenAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="444d4-130">可选。</span><span class="sxs-lookup"><span data-stu-id="444d4-130">Optional.</span></span> <span data-ttu-id="444d4-131">接受可对用户 ID 使用分析令牌的回调方法，或使用 "代表" 流中的令牌来获取对 Microsoft Graph 的访问权限。</span><span class="sxs-lookup"><span data-stu-id="444d4-131">Accepts a callback method that can use parse the token for the user''s ID or use the token in the "on behalf of" flow to get access to Microsoft Graph.</span></span> <span data-ttu-id="444d4-132">如果 AsyncResult. status 为 "succeeded"，则为 AsyncResult。值为原始 AAD v。</span><span class="sxs-lookup"><span data-stu-id="444d4-132">If AsyncResult.status is "succeeded", then AsyncResult.value is the raw AAD v.</span></span> <span data-ttu-id="444d4-133">2.0 格式的访问令牌。</span><span class="sxs-lookup"><span data-stu-id="444d4-133">2.0-formatted access token.</span></span>'
          type:
            - 'office!Office.Auth#getAccessTokenAsync~1:complex'
references:
  - uid: 'office!Office.AuthOptions:interface'
    name: AuthOptions
  - uid: 'office!Office.Auth#getAccessTokenAsync~0:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.Auth#getAccessTokenAsync~1:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void