### YamlMime:UniversalReference
items:
  - uid: office.Office.TableData
    summary: '表示表或[TableBinding](xref:office.Office.TableBinding)中的数据<!-- -->.'
    name: Office.TableData
    fullName: Office.TableData
    langs:
      - typeScript
    type: class
    package: office
    children:
      - office.Office.TableData.(constructor)
      - office.Office.TableData.(constructor)_1
      - office.Office.TableData.headers
      - office.Office.TableData.rows
  - uid: office.Office.TableData.(constructor)
    summary: 构造`TableData`类的新实例
    name: '(constructor)(rows, headers)'
    fullName: '(constructor)(rows, headers)'
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(rows: any[][], headers: any[]);'
      parameters:
        - id: rows
          description: ''
          type:
            - 'any[][]'
        - id: headers
          description: ''
          type:
            - 'any[]'
  - uid: office.Office.TableData.(constructor)_1
    summary: 构造`TableData`类的新实例
    name: (constructor)()
    fullName: (constructor)()
    langs:
      - typeScript
    type: constructor
    syntax:
      content: constructor();
  - uid: office.Office.TableData.headers
    summary: 获取或设置表的标题。
    remarks: |-
      若要指定标题，你必须指定对应于表结构的数组的数组。 例如, 若要指定两列表的标题, 请将标头属性设置为\[ \["header1", "header2"\]\]。

      如果为标头属性指定 null (或在构造 TableData 对象时将该属性留空), 则在代码执行时将发生以下结果:

      - 如果插入新表，则将创建表的默认列标题。

      - 如果覆盖或更新现有表，则不会改动现有标题。

      #### <a name="examples"></a>示例

      ```javascript
      // The following example creates a single-column table with a header and three rows.
      function createTableData() {
          var tableData = new Office.TableData();
          tableData.headers = [['header1']];
          tableData.rows = [['row1'], ['row2'], ['row3']];
          return tableData;
      }
      ```
    name: headers
    fullName: headers
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headers: any[];'
      return:
        type:
          - 'any[]'
  - uid: office.Office.TableData.rows
    summary: '获取或设置表中的行。 返回包含表中数据的数组的数组。 如果没有任何行, 则返回一个空数组。'
    remarks: |-
      若要指定行，则必须指定对应于表结构的数组的数组。 例如, 若要在两列的表中指定两行字符串值, 请将 rows 属性设置为\[ \["a"、"b"\]、 \["c"、"d"\]\]。

      如果为 rows 属性指定 null (或在构造 TableData 对象时将该属性留空), 则在代码执行时将发生以下结果:

      - 如果插入新表，将插入一个空白行。

      - 如果覆盖或更新现有表，则不会改动现有行。

      #### <a name="examples"></a>示例

      ```javascript
      // The following example creates a single-column table with a header and three rows.
      function createTableData() {
          var tableData = new Office.TableData();
          tableData.headers = [['header1']];
          tableData.rows = [['row1'], ['row2'], ['row3']];
          return tableData;
      }
      ```
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rows: any[][];'
      return:
        type:
          - 'any[][]'