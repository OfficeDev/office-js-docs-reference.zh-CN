### YamlMime:UniversalReference
items:
  - uid: 'office!Office.Binding:interface'
    summary: |-
      <span data-ttu-id="ec8aa-101">表示对文档的某一部分的绑定。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-101">Represents a binding to a section of the document.</span></span>

      <span data-ttu-id="ec8aa-102">绑定对象公开所有绑定所拥有的功能，而不考虑类型。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-102">The Binding object exposes the functionality possessed by all bindings regardless of type.</span></span>

      <span data-ttu-id="ec8aa-103">永远不会直接调用 Binding 对象。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-103">The Binding object is never called directly.</span></span> <span data-ttu-id="ec8aa-104">它是表示每种绑定类型的对象的抽象父类： [MatrixBinding](xref:office!Office.MatrixBinding:interface)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-104">It is the abstract parent class of the objects that represent each type of binding: [Office.MatrixBinding](xref:office!Office.MatrixBinding:interface)</span></span><!-- --><span data-ttu-id="ec8aa-105">、 [TableBinding](xref:office!Office.TableBinding:interface)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-105">, [Office.TableBinding](xref:office!Office.TableBinding:interface)</span></span><!-- --><span data-ttu-id="ec8aa-106">或[textbinding 添加](xref:office!Office.TextBinding:interface)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-106">, or [Office.TextBinding](xref:office!Office.TextBinding:interface)</span></span><!-- --><span data-ttu-id="ec8aa-107">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-107"></span></span> <span data-ttu-id="ec8aa-108">所有这三个对象都继承了 Binding 对象中的 Binding.getdataasync 和 Binding.setdataasync 方法，这些方法允许您与绑定中的数据进行交互。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-108">All three of these objects inherit the getDataAsync and setDataAsync methods from the Binding object that enable to you interact with the data in the binding.</span></span> <span data-ttu-id="ec8aa-109">它们还继承 id 和 type 属性，以便查询这些属性值。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-109">They also inherit the id and type properties for querying those property values.</span></span> <span data-ttu-id="ec8aa-110">此外，MatrixBinding 和 TableBinding 对象揭示特定于矩阵和表的功能的其他方法，如对行和列计数。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-110">Additionally, the MatrixBinding and TableBinding objects expose additional methods for matrix- and table-specific features, such as counting the number of rows and columns.</span></span>
    remarks: |-
      <span data-ttu-id="ec8aa-111">**主机**： Excel、Word</span><span class="sxs-lookup"><span data-stu-id="ec8aa-111">**Hosts**: Excel, Word</span></span>

      <span data-ttu-id="ec8aa-112">**要求集**：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-112">**Requirement sets**:</span></span>

      - [<span data-ttu-id="ec8aa-113">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-113">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [<span data-ttu-id="ec8aa-114">TableBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-114">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [<span data-ttu-id="ec8aa-115">TextBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-115">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)
    name: Office.Binding
    fullName: Office.Binding
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.Binding#addHandlerAsync:member(1)'
      - 'office!Office.Binding#addHandlerAsync:member(2)'
      - 'office!Office.Binding#document:member'
      - 'office!Office.Binding#getDataAsync:member(1)'
      - 'office!Office.Binding#getDataAsync:member(2)'
      - 'office!Office.Binding#id:member'
      - 'office!Office.Binding#removeHandlerAsync:member(1)'
      - 'office!Office.Binding#removeHandlerAsync:member(2)'
      - 'office!Office.Binding#setDataAsync:member(1)'
      - 'office!Office.Binding#setDataAsync:member(2)'
      - 'office!Office.Binding#type:member'
  - uid: 'office!Office.Binding#addHandlerAsync:member(1)'
    summary: '<span data-ttu-id="ec8aa-116">将事件处理程序添加到指定的[Office 事件](xref:office!Office.EventType:enum)的对象。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-116">Adds an event handler to the object for the specified [Office.EventType](xref:office!Office.EventType:enum)</span></span><!-- --><span data-ttu-id="ec8aa-117">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-117"></span></span> <span data-ttu-id="ec8aa-118">支持的 EventTypes `Office.EventType.BindingDataChanged`是和`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-118">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="ec8aa-119">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-119"></span></span>'
    remarks: |-
      <span data-ttu-id="ec8aa-120">**要求集**： [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-120">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      <span data-ttu-id="ec8aa-121">只要每个事件处理程序函数的名称是唯一的，您就可以为指定的事件类型添加多个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-121">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="ec8aa-122">事件类型。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-122">The event type.</span></span> <span data-ttu-id="ec8aa-123">对于绑定，可以是`Office.EventType.BindingDataChanged`或`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-123">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="ec8aa-124">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-124"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="ec8aa-125">要添加的事件处理程序函数，其唯一的参数的类型为[BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface)或[BindingSelectionChangedEventArgs](xref:office!Office.BindingSelectionChangedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-125">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface) or [Office.BindingSelectionChangedEventArgs](xref:office!Office.BindingSelectionChangedEventArgs:interface)</span></span><!-- --><span data-ttu-id="ec8aa-126">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-126"></span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="ec8aa-127">提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-127">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="ec8aa-128">可选。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-128">Optional.</span></span> <span data-ttu-id="ec8aa-129">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ec8aa-129">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ec8aa-130">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-130"></span></span>'
          type:
            - 'office!Office.Binding#addHandlerAsync~0:complex'
  - uid: 'office!Office.Binding#addHandlerAsync:member(2)'
    summary: '<span data-ttu-id="ec8aa-131">将事件处理程序添加到指定的[Office 事件](xref:office!Office.EventType:enum)的对象。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-131">Adds an event handler to the object for the specified [Office.EventType](xref:office!Office.EventType:enum)</span></span><!-- --><span data-ttu-id="ec8aa-132">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-132"></span></span> <span data-ttu-id="ec8aa-133">支持的 EventTypes `Office.EventType.BindingDataChanged`是和`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-133">Supported EventTypes are `Office.EventType.BindingDataChanged` and `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="ec8aa-134">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-134"></span></span>'
    remarks: |-
      <span data-ttu-id="ec8aa-135">**要求集**： [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-135">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      <span data-ttu-id="ec8aa-136">只要每个事件处理程序函数的名称是唯一的，您就可以为指定的事件类型添加多个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-136">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="ec8aa-137">示例</span><span class="sxs-lookup"><span data-stu-id="ec8aa-137">Examples</span></span>

      ```javascript
      // The following code sample calls the select method of the Office object to access the binding
      // with ID "MyBinding", and then calls the addHandlerAsync method to add a handler function 
      // for the bindingDataChanged event of that binding.
      function addEventHandlerToBinding() {
          Office.select("bindings#MyBinding").addHandlerAsync(
              Office.EventType.BindingDataChanged, onBindingDataChanged);
      }

      function onBindingDataChanged(eventArgs) {
          write("Data has changed in binding: " + eventArgs.binding.id);
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
      ```javascript
      // To add an event handler for the BindingSelectionChanged event of a binding, 
      // use the addHandlerAsync method of the Binding object.
      // The event handler receives an argument of type BindingSelectionChangedEventArgs.
      function addEventHandlerToBinding() {
          Office.select("bindings#MyBinding").addHandlerAsync(
              Office.EventType.BindingSelectionChanged, onBindingSelectionChanged);
      }

      function onBindingSelectionChanged(eventArgs) {
          write(eventArgs.binding.id + " has been selected.");
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="ec8aa-138">事件类型。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-138">The event type.</span></span> <span data-ttu-id="ec8aa-139">对于绑定，可以是`Office.EventType.BindingDataChanged`或`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-139">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="ec8aa-140">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-140"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="ec8aa-141">要添加的事件处理程序函数，其唯一的参数的类型为[BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface)或[BindingSelectionChangedEventArgs](xref:office!Office.BindingSelectionChangedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-141">The event handler function to add, whose only parameter is of type [Office.BindingDataChangedEventArgs](xref:office!Office.BindingDataChangedEventArgs:interface) or [Office.BindingSelectionChangedEventArgs](xref:office!Office.BindingSelectionChangedEventArgs:interface)</span></span><!-- --><span data-ttu-id="ec8aa-142">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-142"></span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="ec8aa-143">可选。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-143">Optional.</span></span> <span data-ttu-id="ec8aa-144">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ec8aa-144">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ec8aa-145">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-145"></span></span>'
          type:
            - 'office!Office.Binding#addHandlerAsync~1:complex'
  - uid: 'office!Office.Binding#document:member'
    summary: <span data-ttu-id="ec8aa-146">获取与绑定关联的 Document 对象。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-146">Get the Document object associated with the binding.</span></span>
    name: document
    fullName: document
    langs:
      - typeScript
    type: property
    syntax:
      content: 'document: Office.Document;'
      return:
        type:
          - 'office!Office.Document:interface'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ec8aa-147">示例</span><span class="sxs-lookup"><span data-stu-id="ec8aa-147">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write(asyncResult.value.document.url);
          });

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.Binding#getDataAsync:member(1)'
    summary: <span data-ttu-id="ec8aa-148">返回绑定中包含的数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-148">Returns the data contained within the binding.</span></span>
    remarks: |-
      <span data-ttu-id="ec8aa-149">**要求集**：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-149">**Requirement sets**:</span></span>

      - <span data-ttu-id="ec8aa-150">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)（使用时`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-150">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="ec8aa-151">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-151"></span></span>

      - [<span data-ttu-id="ec8aa-152">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-152">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="ec8aa-153">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion)（使用时`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-153">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="ec8aa-154">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-154"></span></span>

      - <span data-ttu-id="ec8aa-155">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion)（使用时`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-155">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="ec8aa-156">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-156"></span></span>

      - [<span data-ttu-id="ec8aa-157">TableBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-157">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="ec8aa-158">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion)（使用时`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-158">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="ec8aa-159">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-159"></span></span>

      - [<span data-ttu-id="ec8aa-160">TextBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-160">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="ec8aa-161">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion)（使用时`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-161">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="ec8aa-162">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-162"></span></span>

      <span data-ttu-id="ec8aa-163">从 MatrixBinding 或 TableBinding 调用时，如果指定了可选的 startRow、startColumn、rowCount 和 columnCount 参数（并且它们指定了连续和有效的范围），则 Binding.getdataasync 方法将返回绑定值的子集。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-163">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>
    name: 'getDataAsync(options, callback)'
    fullName: 'getDataAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataAsync<T>(options?: GetBindingDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="ec8aa-164">提供有关如何获取绑定中的数据的选项。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-164">Provides options for how to get the data in a binding.</span></span>
          type:
            - 'office!Office.GetBindingDataOptions:interface'
        - id: callback
          description: '<span data-ttu-id="ec8aa-165">可选。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-165">Optional.</span></span> <span data-ttu-id="ec8aa-166">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ec8aa-166">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ec8aa-167">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-167"></span></span> <span data-ttu-id="ec8aa-168">结果`value`的属性为指定绑定中的值。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-168">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="ec8aa-169">如果指定`coercionType`了参数（且调用成功），则数据将以 CoercionType 枚举主题中所述的格式返回。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-169">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>'
          type:
            - 'office!Office.Binding#getDataAsync~0:complex'
      typeParameters:
        - id: T
  - uid: 'office!Office.Binding#getDataAsync:member(2)'
    summary: <span data-ttu-id="ec8aa-170">返回绑定中包含的数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-170">Returns the data contained within the binding.</span></span>
    remarks: |-
      <span data-ttu-id="ec8aa-171">**要求集**：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-171">**Requirement sets**:</span></span>

      - <span data-ttu-id="ec8aa-172">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)（使用时`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-172">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="ec8aa-173">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-173"></span></span>

      - [<span data-ttu-id="ec8aa-174">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-174">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="ec8aa-175">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion)（使用时`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-175">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="ec8aa-176">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-176"></span></span>

      - <span data-ttu-id="ec8aa-177">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion)（使用时`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-177">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="ec8aa-178">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-178"></span></span>

      - [<span data-ttu-id="ec8aa-179">TableBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-179">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="ec8aa-180">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion)（使用时`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-180">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="ec8aa-181">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-181"></span></span>

      - [<span data-ttu-id="ec8aa-182">TextBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-182">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="ec8aa-183">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion)（使用时`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-183">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="ec8aa-184">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-184"></span></span>

      <span data-ttu-id="ec8aa-185">从 MatrixBinding 或 TableBinding 调用时，如果指定了可选的 startRow、startColumn、rowCount 和 columnCount 参数（并且它们指定了连续和有效的范围），则 Binding.getdataasync 方法将返回绑定值的子集。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-185">When called from a MatrixBinding or TableBinding, the getDataAsync method will return a subset of the bound values if the optional startRow, startColumn, rowCount, and columnCount parameters are specified (and they specify a contiguous and valid range).</span></span>

      #### <a name="examples"></a><span data-ttu-id="ec8aa-186">示例</span><span class="sxs-lookup"><span data-stu-id="ec8aa-186">Examples</span></span>

      ```javascript
      function showBindingData() {
          Office.select("bindings#MyBinding").getDataAsync(function (asyncResult) {
              write(asyncResult.value)
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // There is an important difference in behavior between using the "table" and "matrix" coercionType with the
      // Binding.getDataAsync method, with respect to data formatted with header rows, as shown in the following
      // two examples. These code examples show event handler functions for the Binding.SelectionChanged event.

      // If you specify the "table" coercionType, the TableData.rows property ( result.value.rows in the following
      // code example) returns an array that contains only the body rows of the table. So, its 0th row will be the
      // first non-header row in the table.
      function selectionChanged(evtArgs) { 
          Office.select("bindings#TableTranslate").getDataAsync(
              { coercionType: 'table', 
                startRow: evtArgs.startRow, 
                startCol: 0, 
                rowCount: 1, 
                columnCount: 1 },  
              function (result) { 
                  if (result.status == 'succeeded') { 
                      write("Image to find: " + result.value.rows[0][0]); 
                  } 
                  else 
                      write(result.error.message); 
          }); 
      }     
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message; 
      }

      // However, if you specify the "matrix" coercionType, result.value in the following code example returns an array
      // that contains the table header in the 0th row. If the table header contains multiple rows, then these are all
      // included in the result.value matrix as separate rows before the table body rows are included.
      function selectionChanged(evtArgs) { 
          Office.select("bindings#TableTranslate").getDataAsync(
              { coercionType: 'matrix', 
                startRow: evtArgs.startRow, 
                startCol: 0, 
                rowCount: 1, 
                columnCount: 1 },  
              function (result) { 
                  if (result.status == 'succeeded') { 
                      write("Image to find: " + result.value[1][0]); 
                  } 
                  else 
                      write(result.error.message); 
          }); 
      }     
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getDataAsync(callback)
    fullName: getDataAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataAsync<T>(callback?: (result: AsyncResult<T>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="ec8aa-187">可选。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-187">Optional.</span></span> <span data-ttu-id="ec8aa-188">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ec8aa-188">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ec8aa-189">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-189"></span></span> <span data-ttu-id="ec8aa-190">结果`value`的属性为指定绑定中的值。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-190">The `value` property of the result is the values in the specified binding.</span></span> <span data-ttu-id="ec8aa-191">如果指定`coercionType`了参数（且调用成功），则数据将以 CoercionType 枚举主题中所述的格式返回。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-191">If the `coercionType` parameter is specified (and the call is successful), the data is returned in the format described in the CoercionType enumeration topic.</span></span>'
          type:
            - 'office!Office.Binding#getDataAsync~1:complex'
      typeParameters:
        - id: T
  - uid: 'office!Office.Binding#id:member'
    summary: '<span data-ttu-id="ec8aa-192">一个在同一[Office Document](xref:office!Office.Document:interface)对象中的绑定之间唯一标识此绑定的字符串。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-192">A string that uniquely identifies this binding among the bindings in the same [Office.Document](xref:office!Office.Document:interface) object.</span></span>'
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ec8aa-193">示例</span><span class="sxs-lookup"><span data-stu-id="ec8aa-193">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write(asyncResult.value.id);
          });

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.Binding#removeHandlerAsync:member(1)'
    summary: <span data-ttu-id="ec8aa-194">从绑定移除指定事件类型的指定处理程序。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-194">Removes the specified handler from the binding for the specified event type.</span></span>
    remarks: '<span data-ttu-id="ec8aa-195">**要求集**： [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-195">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>'
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="ec8aa-196">事件类型。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-196">The event type.</span></span> <span data-ttu-id="ec8aa-197">对于绑定，可以是`Office.EventType.BindingDataChanged`或`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-197">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="ec8aa-198">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-198"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: options
          description: <span data-ttu-id="ec8aa-199">提供用于确定要删除的事件处理程序或处理程序的选项。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-199">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - 'office!Office.RemoveHandlerOptions:interface'
        - id: callback
          description: '<span data-ttu-id="ec8aa-200">可选。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-200">Optional.</span></span> <span data-ttu-id="ec8aa-201">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ec8aa-201">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ec8aa-202">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-202"></span></span>'
          type:
            - 'office!Office.Binding#removeHandlerAsync~0:complex'
  - uid: 'office!Office.Binding#removeHandlerAsync:member(2)'
    summary: <span data-ttu-id="ec8aa-203">从绑定移除指定事件类型的指定处理程序。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-203">Removes the specified handler from the binding for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="ec8aa-204">**要求集**： [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-204">**Requirement set**: [BindingEvents](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#bindingevents)</span></span>

      #### <a name="examples"></a><span data-ttu-id="ec8aa-205">示例</span><span class="sxs-lookup"><span data-stu-id="ec8aa-205">Examples</span></span>

      ```javascript
      function removeEventHandlerFromBinding() {
          Office.select("bindings#MyBinding").removeHandlerAsync(
              Office.EventType.BindingDataChanged, {handler:onBindingDataChanged});
      }
      ```
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="ec8aa-206">事件类型。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-206">The event type.</span></span> <span data-ttu-id="ec8aa-207">对于绑定，可以是`Office.EventType.BindingDataChanged`或`Office.EventType.BindingSelectionChanged`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-207">For bindings, it can be `Office.EventType.BindingDataChanged` or `Office.EventType.BindingSelectionChanged`</span></span><!-- --><span data-ttu-id="ec8aa-208">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-208"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: callback
          description: '<span data-ttu-id="ec8aa-209">可选。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-209">Optional.</span></span> <span data-ttu-id="ec8aa-210">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ec8aa-210">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ec8aa-211">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-211"></span></span>'
          type:
            - 'office!Office.Binding#removeHandlerAsync~1:complex'
  - uid: 'office!Office.Binding#setDataAsync:member(1)'
    summary: <span data-ttu-id="ec8aa-212">将数据写入指定的绑定对象表示的文档的绑定部分。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-212">Writes data to the bound section of the document represented by the specified binding object.</span></span>
    remarks: |-
      <span data-ttu-id="ec8aa-213">**要求集**：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-213">**Requirement sets**:</span></span>

      - <span data-ttu-id="ec8aa-214">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)（使用时`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-214">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="ec8aa-215">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-215"></span></span>

      - [<span data-ttu-id="ec8aa-216">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-216">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="ec8aa-217">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion)（使用时`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-217">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="ec8aa-218">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-218"></span></span>

      - <span data-ttu-id="ec8aa-219">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion)（使用时`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-219">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="ec8aa-220">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-220"></span></span>

      - [<span data-ttu-id="ec8aa-221">TableBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-221">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="ec8aa-222">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion)（使用时`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-222">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="ec8aa-223">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-223"></span></span>

      - [<span data-ttu-id="ec8aa-224">TextBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-224">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="ec8aa-225">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion)（使用时`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-225">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="ec8aa-226">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-226"></span></span>

      <span data-ttu-id="ec8aa-227">为数据传递的值包含要在绑定中写入的数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-227">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="ec8aa-228">传递的值的类型决定将要写入的内容，如下表中所示。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-228">The kind of value passed determines what will be written as described in the following table.</span></span>

      <table> <tr> <th><span data-ttu-id="ec8aa-229">`data`增值</span><span class="sxs-lookup"><span data-stu-id="ec8aa-229">`data` value</span></span></th> <th><span data-ttu-id="ec8aa-230">写入的数据</span><span class="sxs-lookup"><span data-stu-id="ec8aa-230">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="ec8aa-231">字符串</span><span class="sxs-lookup"><span data-stu-id="ec8aa-231">A string</span></span></td> <td><span data-ttu-id="ec8aa-232">将写入可以强制为 string 的纯文本或任何内容。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-232">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-233">数组的数组（“矩阵”）</span><span class="sxs-lookup"><span data-stu-id="ec8aa-233">An array of arrays ("matrix")</span></span></td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- --><span data-ttu-id="ec8aa-234">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-234"></span></span> <span data-ttu-id="ec8aa-235">若要写入包含三行的单个列，请传递如下所示的数组：`[["R1C1"], ["R2C1"], ["R3C1"]]`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-235">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`</span></span><!-- --><span data-ttu-id="ec8aa-236">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-236"></span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-237">一个`TableData`对象</span><span class="sxs-lookup"><span data-stu-id="ec8aa-237">A `TableData` object</span></span></td> <td><span data-ttu-id="ec8aa-238">将写入带标题的表格数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-238">A table with headers will be written.</span></span></td> </tr> </table>

      <span data-ttu-id="ec8aa-239">此外，这些特定于应用程序的操作在将数据写入绑定时适用。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-239">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="ec8aa-240">对于 Word，指定的数据被写入绑定，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-240">For Word, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="ec8aa-241">`data`增值</span><span class="sxs-lookup"><span data-stu-id="ec8aa-241">`data` value</span></span></th> <th><span data-ttu-id="ec8aa-242">写入的数据</span><span class="sxs-lookup"><span data-stu-id="ec8aa-242">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="ec8aa-243">字符串</span><span class="sxs-lookup"><span data-stu-id="ec8aa-243">A string</span></span></td> <td><span data-ttu-id="ec8aa-244">写入指定的文本。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-244">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-245">数组的数组（"矩阵"）或`TableData`对象</span><span class="sxs-lookup"><span data-stu-id="ec8aa-245">An array of arrays ("matrix") or a `TableData` object</span></span></td> <td><span data-ttu-id="ec8aa-246">写入 Word 表格。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-246">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-247">HTML</span><span class="sxs-lookup"><span data-stu-id="ec8aa-247">HTML</span></span></td> <td><span data-ttu-id="ec8aa-248">写入指定的 HTML。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-248">The specified HTML is written.</span></span> <span data-ttu-id="ec8aa-249">如果您写入的任何 HTML 均有效，则 Word 将引发错误。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-249">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="ec8aa-250">Word 将尽可能多的写入 HTML，并将省略任何无效数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-250">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-251">Office Open XML ("Open XML")</span><span class="sxs-lookup"><span data-stu-id="ec8aa-251">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="ec8aa-252">写入指定的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-252">The specified the XML is written.</span></span></td> </tr> </table>

      <span data-ttu-id="ec8aa-253">对于 Excel，按如下所示，指定的 data 写入绑定：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-253">For Excel, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="ec8aa-254">`data`增值</span><span class="sxs-lookup"><span data-stu-id="ec8aa-254">`data` value</span></span></th> <th><span data-ttu-id="ec8aa-255">写入的数据</span><span class="sxs-lookup"><span data-stu-id="ec8aa-255">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="ec8aa-256">字符串</span><span class="sxs-lookup"><span data-stu-id="ec8aa-256">A string</span></span></td> <td><span data-ttu-id="ec8aa-257">将指定的文本作为第一个绑定单元格的值插入。您还可以指定一个有效公式，将该公式添加到绑定的单元格。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-257">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="ec8aa-258">例如，将 data 设置为 `"=SUM(A1:A5)"` 将计算指定范围中值的总数。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-258">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="ec8aa-259">但是，当在绑定单元格中设置公式时，设置后将无法从绑定单元格读取添加的公式（或任何已有公式）。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-259">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="ec8aa-260">如果您在绑定单元格上调用 Binding.getDataAsync 方法以读取其数据，方法可能仅返回在单元格中显示的数据（即公式的结果）。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-260">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-261">数组的数组（“矩阵”），形状与指定绑定的形状完全匹配</span><span class="sxs-lookup"><span data-stu-id="ec8aa-261">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="ec8aa-262">写入一组行和列。您还可以指定包含有效公式的数组的数组，以将它们添加到绑定的单元格。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-262">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="ec8aa-263">例如，将数据设置为`[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]`将这两个公式添加到包含两个单元格的绑定。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-263">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="ec8aa-264">就像在单个绑定单元格上设置公式一样，不能使用`Binding.getDataAsync`方法从绑定中读取添加的公式（或任何预先存在的公式），它只返回在绑定单元格中显示的数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-264">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-265">一个`TableData`对象，并且表的形状与绑定表匹配。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-265">A `TableData` object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="ec8aa-266">写入一组指定的行和/或标题（如果不会覆盖周围单元格中的其他数据）。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-266">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="ec8aa-267">**注意**：如果在传递给*Data*参数的 TableData 对象中指定了公式，则由于 Excel 的 "计算列" 功能（它会自动在列中重复公式），因此可能无法获得预期的结果。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-267">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="ec8aa-268">若要在要将包含公式的*数据*写入绑定表时解决此情况，请尝试将数据指定为数组的数组（而不是 TableData 对象），并将该*CoercionType*指定为 Microsoft. matrix 或 "matrix"。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-268">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>

      <span data-ttu-id="ec8aa-269">对于 web 上的 Excel：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-269">For Excel on the web:</span></span>

      - <span data-ttu-id="ec8aa-270">对此方法的单个调用中，传递给 data 参数的值中的单元格总数不能超过20000。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-270">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      - <span data-ttu-id="ec8aa-271">传递给 cellFormat 参数的格式组的数量不能超过100。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-271">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="ec8aa-272">每个格式设置组由应用于特定单元格范围的一组格式组成。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-272">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>

      <span data-ttu-id="ec8aa-273">在其他所有情况下，都会返回错误。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-273">In all other cases, an error is returned.</span></span>

      <span data-ttu-id="ec8aa-274">如果指定了可选的 startRow 和 startColumn 参数，并且它们指定一个有效的范围，则 Binding.setdataasync 方法将在表或矩阵绑定的子集内写入数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-274">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>

      <span data-ttu-id="ec8aa-275">在传递给 setDataAsync 方法的回调函数中，您可以使用 AsyncResult 对象的属性返回以下信息。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-275">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="ec8aa-276">属性</span><span class="sxs-lookup"><span data-stu-id="ec8aa-276">Property</span></span></th> <th><span data-ttu-id="ec8aa-277">用于...</span><span class="sxs-lookup"><span data-stu-id="ec8aa-277">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="ec8aa-278">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="ec8aa-278">AsyncResult.value</span></span></td> <td><span data-ttu-id="ec8aa-279">始终返回 undefined，这是因为没有要检索的对象或数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-279">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-280">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="ec8aa-280">AsyncResult.status</span></span></td> <td><span data-ttu-id="ec8aa-281">确定操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-281">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-282">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="ec8aa-282">AsyncResult.error</span></span></td> <td><span data-ttu-id="ec8aa-283">如果操作失败，则访问提供错误信息的 Error 对象。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-283">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-284">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="ec8aa-284">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="ec8aa-285">在 AsyncResult 对象中未经改动的返回的任何类型的用户定义项。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-285">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
    name: 'setDataAsync(data, options, callback)'
    fullName: 'setDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDataAsync(data: TableData | any, options?: SetBindingDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: |-
            <span data-ttu-id="ec8aa-286">当前选择中要设置的数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-286">The data to be set in the current selection.</span></span> <span data-ttu-id="ec8aa-287">可能的数据类型（按主机）：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-287">Possible data types by host:</span></span>

            <span data-ttu-id="ec8aa-288">string： web 和 Windows 上的 Excel 以及仅在 web 和 Windows 上的 Word</span><span class="sxs-lookup"><span data-stu-id="ec8aa-288">string: Excel on the web and Windows, and Word on the web and Windows only</span></span>

            <span data-ttu-id="ec8aa-289">数组的数组：仅 Excel 和 Word</span><span class="sxs-lookup"><span data-stu-id="ec8aa-289">array of arrays: Excel and Word only</span></span>

            [<span data-ttu-id="ec8aa-290">TableData</span><span class="sxs-lookup"><span data-stu-id="ec8aa-290">Office.TableData</span></span>](xref:office!Office.TableData:class)<!-- --><span data-ttu-id="ec8aa-291">：仅限 Excel 和 Word</span><span class="sxs-lookup"><span data-stu-id="ec8aa-291">: Excel and Word only</span></span>

            <span data-ttu-id="ec8aa-292">HTML：仅限 web 上的 Word 和 Windows</span><span class="sxs-lookup"><span data-stu-id="ec8aa-292">HTML: Word on the web and Windows only</span></span>

            <span data-ttu-id="ec8aa-293">Office Open XML：仅限 Word</span><span class="sxs-lookup"><span data-stu-id="ec8aa-293">Office Open XML: Word only</span></span>
          type:
            - 'office!Office.Binding#setDataAsync~0:complex'
        - id: options
          description: <span data-ttu-id="ec8aa-294">提供有关如何设置绑定中的数据的选项。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-294">Provides options for how to set the data in a binding.</span></span>
          type:
            - 'office!Office.SetBindingDataOptions:interface'
        - id: callback
          description: '<span data-ttu-id="ec8aa-295">可选。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-295">Optional.</span></span> <span data-ttu-id="ec8aa-296">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ec8aa-296">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ec8aa-297">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-297"></span></span>'
          type:
            - 'office!Office.Binding#setDataAsync~1:complex'
  - uid: 'office!Office.Binding#setDataAsync:member(2)'
    summary: <span data-ttu-id="ec8aa-298">将数据写入指定的绑定对象表示的文档的绑定部分。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-298">Writes data to the bound section of the document represented by the specified binding object.</span></span>
    remarks: |-
      <span data-ttu-id="ec8aa-299">**要求集**：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-299">**Requirement sets**:</span></span>

      - <span data-ttu-id="ec8aa-300">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion)（使用时`Office.CoercionType.Html`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-300">[HtmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#htmlcoercion) (when using `Office.CoercionType.Html`</span></span><!-- --><span data-ttu-id="ec8aa-301">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-301"></span></span>

      - [<span data-ttu-id="ec8aa-302">MatrixBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-302">MatrixBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - <span data-ttu-id="ec8aa-303">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion)（使用时`Office.CoercionType.Matrix`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-303">[MatrixCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixcoercion) (when using `Office.CoercionType.Matrix`</span></span><!-- --><span data-ttu-id="ec8aa-304">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-304"></span></span>

      - <span data-ttu-id="ec8aa-305">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion)（使用时`Office.CoercionType.Ooxml`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-305">[OoxmlCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#ooxmlcoercion) (when using `Office.CoercionType.Ooxml`</span></span><!-- --><span data-ttu-id="ec8aa-306">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-306"></span></span>

      - [<span data-ttu-id="ec8aa-307">TableBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-307">TableBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - <span data-ttu-id="ec8aa-308">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion)（使用时`Office.CoercionType.Table`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-308">[TableCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablecoercion) (when using `Office.CoercionType.Table`</span></span><!-- --><span data-ttu-id="ec8aa-309">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-309"></span></span>

      - [<span data-ttu-id="ec8aa-310">TextBindings</span><span class="sxs-lookup"><span data-stu-id="ec8aa-310">TextBindings</span></span>](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      - <span data-ttu-id="ec8aa-311">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion)（使用时`Office.CoercionType.Text`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-311">[TextCoercion](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textcoercion) (when using `Office.CoercionType.Text`</span></span><!-- --><span data-ttu-id="ec8aa-312">)</span><span class="sxs-lookup"><span data-stu-id="ec8aa-312"></span></span>

      <span data-ttu-id="ec8aa-313">为数据传递的值包含要在绑定中写入的数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-313">The value passed for data contains the data to be written in the binding.</span></span> <span data-ttu-id="ec8aa-314">传递的值的类型决定将要写入的内容，如下表中所示。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-314">The kind of value passed determines what will be written as described in the following table.</span></span>

      <table> <tr> <th><span data-ttu-id="ec8aa-315">`data`增值</span><span class="sxs-lookup"><span data-stu-id="ec8aa-315">`data` value</span></span></th> <th><span data-ttu-id="ec8aa-316">写入的数据</span><span class="sxs-lookup"><span data-stu-id="ec8aa-316">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="ec8aa-317">字符串</span><span class="sxs-lookup"><span data-stu-id="ec8aa-317">A string</span></span></td> <td><span data-ttu-id="ec8aa-318">将写入可以强制为 string 的纯文本或任何内容。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-318">Plain text or anything that can be coerced to a string will be written.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-319">数组的数组（“矩阵”）</span><span class="sxs-lookup"><span data-stu-id="ec8aa-319">An array of arrays ("matrix")</span></span></td> <td>Tabular data without headers will be written. For example, to write data to three rows in two columns, you can pass an array like this: `[["R1C1", "R1C2"], ["R2C1", "R2C2"], ["R3C1", "R3C2"]]`<!-- --><span data-ttu-id="ec8aa-320">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-320"></span></span> <span data-ttu-id="ec8aa-321">若要写入包含三行的单个列，请传递如下所示的数组：`[["R1C1"], ["R2C1"], ["R3C1"]]`</span><span class="sxs-lookup"><span data-stu-id="ec8aa-321">To write a single column of three rows, pass an array like this: `[["R1C1"], ["R2C1"], ["R3C1"]]`</span></span><!-- --><span data-ttu-id="ec8aa-322">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-322"></span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-323">一个`TableData`对象</span><span class="sxs-lookup"><span data-stu-id="ec8aa-323">A `TableData` object</span></span></td> <td><span data-ttu-id="ec8aa-324">将写入带标题的表格数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-324">A table with headers will be written.</span></span></td> </tr> </table>

      <span data-ttu-id="ec8aa-325">此外，这些特定于应用程序的操作在将数据写入绑定时适用。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-325">Additionally, these application-specific actions apply when writing data to a binding.</span></span> <span data-ttu-id="ec8aa-326">对于 Word，指定的数据被写入绑定，如下所示：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-326">For Word, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="ec8aa-327">`data`增值</span><span class="sxs-lookup"><span data-stu-id="ec8aa-327">`data` value</span></span></th> <th><span data-ttu-id="ec8aa-328">写入的数据</span><span class="sxs-lookup"><span data-stu-id="ec8aa-328">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="ec8aa-329">字符串</span><span class="sxs-lookup"><span data-stu-id="ec8aa-329">A string</span></span></td> <td><span data-ttu-id="ec8aa-330">写入指定的文本。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-330">The specified text is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-331">数组的数组（"矩阵"）或`TableData`对象</span><span class="sxs-lookup"><span data-stu-id="ec8aa-331">An array of arrays ("matrix") or a `TableData` object</span></span></td> <td><span data-ttu-id="ec8aa-332">写入 Word 表格。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-332">A Word table is written.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-333">HTML</span><span class="sxs-lookup"><span data-stu-id="ec8aa-333">HTML</span></span></td> <td><span data-ttu-id="ec8aa-334">写入指定的 HTML。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-334">The specified HTML is written.</span></span> <span data-ttu-id="ec8aa-335">如果您写入的任何 HTML 均有效，则 Word 将引发错误。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-335">If any of the HTML you write is invalid, Word will not raise an error.</span></span> <span data-ttu-id="ec8aa-336">Word 将尽可能多的写入 HTML，并将省略任何无效数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-336">Word will write as much of the HTML as it can and will omit any invalid data.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-337">Office Open XML ("Open XML")</span><span class="sxs-lookup"><span data-stu-id="ec8aa-337">Office Open XML ("Open XML")</span></span></td> <td><span data-ttu-id="ec8aa-338">写入指定的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-338">The specified the XML is written.</span></span></td> </tr> </table>

      <span data-ttu-id="ec8aa-339">对于 Excel，按如下所示，指定的 data 写入绑定：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-339">For Excel, the specified data is written to the binding as follows:</span></span>

      <table> <tr> <th><span data-ttu-id="ec8aa-340">`data`增值</span><span class="sxs-lookup"><span data-stu-id="ec8aa-340">`data` value</span></span></th> <th><span data-ttu-id="ec8aa-341">写入的数据</span><span class="sxs-lookup"><span data-stu-id="ec8aa-341">Data written</span></span></th> </tr> <tr> <td><span data-ttu-id="ec8aa-342">字符串</span><span class="sxs-lookup"><span data-stu-id="ec8aa-342">A string</span></span></td> <td><span data-ttu-id="ec8aa-343">将指定的文本作为第一个绑定单元格的值插入。您还可以指定一个有效公式，将该公式添加到绑定的单元格。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-343">The specified text is inserted as the value of the first bound cell.You can also specify a valid formula to add that formula to the bound cell.</span></span> <span data-ttu-id="ec8aa-344">例如，将 data 设置为 `"=SUM(A1:A5)"` 将计算指定范围中值的总数。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-344">For example, setting data to `"=SUM(A1:A5)"` will total the values in the specified range.</span></span> <span data-ttu-id="ec8aa-345">但是，当在绑定单元格中设置公式时，设置后将无法从绑定单元格读取添加的公式（或任何已有公式）。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-345">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="ec8aa-346">如果您在绑定单元格上调用 Binding.getDataAsync 方法以读取其数据，方法可能仅返回在单元格中显示的数据（即公式的结果）。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-346">If you call the Binding.getDataAsync method on the bound cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-347">数组的数组（“矩阵”），形状与指定绑定的形状完全匹配</span><span class="sxs-lookup"><span data-stu-id="ec8aa-347">An array of arrays ("matrix"), and the shape exactly matches the shape of the binding specified</span></span></td> <td><span data-ttu-id="ec8aa-348">写入一组行和列。您还可以指定包含有效公式的数组的数组，以将它们添加到绑定的单元格。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-348">The set of rows and columns are written.You can also specify an array of arrays that contain valid formulas to add them to the bound cells.</span></span> <span data-ttu-id="ec8aa-349">例如，将数据设置为`[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]`将这两个公式添加到包含两个单元格的绑定。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-349">For example, setting data to `[["=SUM(A1:A5)","=AVERAGE(A1:A5)"]]` will add those two formulas to a binding that contains two cells.</span></span> <span data-ttu-id="ec8aa-350">就像在单个绑定单元格上设置公式一样，不能使用`Binding.getDataAsync`方法从绑定中读取添加的公式（或任何预先存在的公式），它只返回在绑定单元格中显示的数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-350">Just as when setting a formula on a single bound cell, you can't read the added formulas (or any pre-existing formulas) from the binding with the `Binding.getDataAsync` method - it returns only the data displayed in the bound cells.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-351">一个`TableData`对象，并且表的形状与绑定表匹配。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-351">A `TableData` object, and the shape of the table matches the bound table.</span></span></td> <td><span data-ttu-id="ec8aa-352">写入一组指定的行和/或标题（如果不会覆盖周围单元格中的其他数据）。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-352">The specified set of rows and/or headers are written, if no other data in surrounding cells will be overwritten.</span></span> <span data-ttu-id="ec8aa-353">**注意**：如果在传递给*Data*参数的 TableData 对象中指定了公式，则由于 Excel 的 "计算列" 功能（它会自动在列中重复公式），因此可能无法获得预期的结果。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-353">**Note**: If you specify formulas in the TableData object you pass for the *data* parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="ec8aa-354">若要在要将包含公式的*数据*写入绑定表时解决此情况，请尝试将数据指定为数组的数组（而不是 TableData 对象），并将该*CoercionType*指定为 Microsoft. matrix 或 "matrix"。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-354">To work around this when you want to write *data* that contains formulas to a bound table, try specifying the data as an array of arrays (instead of a TableData object), and specify the *coercionType* as Microsoft.Office.Matrix or "matrix".</span></span></td> </tr> </table>

      <span data-ttu-id="ec8aa-355">对于 web 上的 Excel：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-355">For Excel on the web:</span></span>

      - <span data-ttu-id="ec8aa-356">对此方法的单个调用中，传递给 data 参数的值中的单元格总数不能超过20000。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-356">The total number of cells in the value passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      - <span data-ttu-id="ec8aa-357">传递给 cellFormat 参数的格式组的数量不能超过100。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-357">The number of formatting groups passed to the cellFormat parameter can't exceed 100.</span></span> <span data-ttu-id="ec8aa-358">每个格式设置组由应用于特定单元格范围的一组格式组成。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-358">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span>

      <span data-ttu-id="ec8aa-359">在其他所有情况下，都会返回错误。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-359">In all other cases, an error is returned.</span></span>

      <span data-ttu-id="ec8aa-360">如果指定了可选的 startRow 和 startColumn 参数，并且它们指定一个有效的范围，则 Binding.setdataasync 方法将在表或矩阵绑定的子集内写入数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-360">The setDataAsync method will write data in a subset of a table or matrix binding if the optional startRow and startColumn parameters are specified, and they specify a valid range.</span></span>

      <span data-ttu-id="ec8aa-361">在传递给 setDataAsync 方法的回调函数中，您可以使用 AsyncResult 对象的属性返回以下信息。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-361">In the callback function passed to the setDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="ec8aa-362">属性</span><span class="sxs-lookup"><span data-stu-id="ec8aa-362">Property</span></span></th> <th><span data-ttu-id="ec8aa-363">用于...</span><span class="sxs-lookup"><span data-stu-id="ec8aa-363">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="ec8aa-364">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="ec8aa-364">AsyncResult.value</span></span></td> <td><span data-ttu-id="ec8aa-365">始终返回 undefined，这是因为没有要检索的对象或数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-365">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-366">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="ec8aa-366">AsyncResult.status</span></span></td> <td><span data-ttu-id="ec8aa-367">确定操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-367">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-368">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="ec8aa-368">AsyncResult.error</span></span></td> <td><span data-ttu-id="ec8aa-369">如果操作失败，则访问提供错误信息的 Error 对象。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-369">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="ec8aa-370">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="ec8aa-370">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="ec8aa-371">在 AsyncResult 对象中未经改动的返回的任何类型的用户定义项。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-371">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="ec8aa-372">示例</span><span class="sxs-lookup"><span data-stu-id="ec8aa-372">Examples</span></span>

      ```javascript
      function setBindingData() {
          Office.select("bindings#MyBinding").setDataAsync('Hello World!', function (asyncResult) { });
      }

      // Specifying the optional coercionType parameter lets you specify the kind of data you want to write to a binding.
      // For example, in Word if you want to write HTML to a text binding, you can specify the coercionType parameter 
      // as "html" as shown in the following example, which uses HTML <b> tags to make "Hello" bold.
      function writeHtmlData() {
          Office.select("bindings#myBinding").setDataAsync(
              "<b>Hello</b> World!", {coercionType: "html"}, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  write('Error: ' + asyncResult.error.message);
              }
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In this example, the call to setDataAsync passes the data parameter as an array of arrays
      // (to create a single column of three rows), and specifies the data structure with the 
      // coercionType parameter as a "matrix".
      function writeBoundDataMatrix() {
          Office.select("bindings#myBinding").setDataAsync(
              [['Berlin'],['Munich'],['Duisburg']],{ coercionType: "matrix" }, function (asyncResult) {
              if (asyncResult.status == "failed") {
                  write('Error: ' + asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // In the writeBoundDataTable function in this example, the call to setDataAsync passes the data parameter 
      // as a TableData object (to write three columns and three rows), and specifies the data structure
      // with the coercionType parameter as a "table".

      // In the updateTableData function, the call to setDataAsync again passes the data parameter as a TableData object,
      // but as a single column with a new header and three rows, to update the values in the last column 
      // of the table created with the writeBoundDataTable function. The optional zero-based startColumn parameter 
      // is specified as 2 to replace the values in the third column of the table.
      function writeBoundDataTable() {
          // Create a TableData object.
          var myTable = new Office.TableData();
          myTable.headers = ['First Name', 'Last Name', 'Grade'];
          myTable.rows = [['Kim', 'Abercrombie', 'A'], ['Junmin','Hao', 'C'],['Toni','Poe','B']];

          // Set myTable in the binding.
          Office.select("bindings#myBinding").setDataAsync(myTable, { coercionType: "table" }, 
              function (asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write('Error: '+ asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }
          });
      }

      // Replace last column with different data.
      function updateTableData() {
          var newTable = new Office.TableData();
          newTable.headers = ["Gender"];
          newTable.rows = [["M"],["M"],["F"]];
          Office.select("bindings#myBinding").setDataAsync(newTable, { coercionType: "table", startColumn:2 }, 
              function (asyncResult) {
                  if (asyncResult.status == Office.AsyncResultStatus.Failed) {
                      write('Error: '+ asyncResult.error.message);
              } else {
                  write('Bound data: ' + asyncResult.value);
              }     
          });   
      }

      // In this example, the following call passes two formatting groups to cellFormat.
      Office.select("bindings#myBinding").setDataAsync([['Berlin'],['Munich'],['Duisburg']],
        {cellFormat:[{cells: {row: 1}, format: {fontColor: "yellow"}}, 
            {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}]}, 
        function (asyncResult){});
      ```
    name: 'setDataAsync(data, callback)'
    fullName: 'setDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setDataAsync(data: TableData | any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: |-
            <span data-ttu-id="ec8aa-373">当前选择中要设置的数据。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-373">The data to be set in the current selection.</span></span> <span data-ttu-id="ec8aa-374">可能的数据类型（按主机）：</span><span class="sxs-lookup"><span data-stu-id="ec8aa-374">Possible data types by host:</span></span>

            <span data-ttu-id="ec8aa-375">string： web 和 Windows 上的 Excel 以及仅在 web 和 Windows 上的 Word</span><span class="sxs-lookup"><span data-stu-id="ec8aa-375">string: Excel on the web and Windows, and Word on the web and Windows only</span></span>

            <span data-ttu-id="ec8aa-376">数组的数组：仅 Excel 和 Word</span><span class="sxs-lookup"><span data-stu-id="ec8aa-376">array of arrays: Excel and Word only</span></span>

            `TableData`<!-- --><span data-ttu-id="ec8aa-377">：仅限 Excel 和 Word</span><span class="sxs-lookup"><span data-stu-id="ec8aa-377">: Excel and Word only</span></span>

            <span data-ttu-id="ec8aa-378">HTML：仅限 web 上的 Word 和 Windows</span><span class="sxs-lookup"><span data-stu-id="ec8aa-378">HTML: Word on the web and Windows only</span></span>

            <span data-ttu-id="ec8aa-379">Office Open XML：仅限 Word</span><span class="sxs-lookup"><span data-stu-id="ec8aa-379">Office Open XML: Word only</span></span>
          type:
            - 'office!Office.Binding#setDataAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="ec8aa-380">可选。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-380">Optional.</span></span> <span data-ttu-id="ec8aa-381">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ec8aa-381">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ec8aa-382">.</span><span class="sxs-lookup"><span data-stu-id="ec8aa-382"></span></span>'
          type:
            - 'office!Office.Binding#setDataAsync~3:complex'
  - uid: 'office!Office.Binding#type:member'
    summary: <span data-ttu-id="ec8aa-383">获取绑定的类型。</span><span class="sxs-lookup"><span data-stu-id="ec8aa-383">Gets the type of the binding.</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'type: Office.BindingType;'
      return:
        type:
          - 'office!Office.BindingType:enum'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ec8aa-384">示例</span><span class="sxs-lookup"><span data-stu-id="ec8aa-384">Examples</span></span>

          ```javascript
          Office.context.document.bindings.getByIdAsync("MyBinding", function (asyncResult) { 
              write(asyncResult.value.type); 
          }) 

          // Function that writes to a div with id='message' on the page. 
          function write(message){ 
              document.getElementById('message').innerText += message;  
          }
          ```
references:
  - uid: 'office!Office.EventType:enum'
    name: Office.EventType
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.Binding#addHandlerAsync~0:complex'
    name: '(result: Office.AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Binding#addHandlerAsync~1:complex'
    name: '(result: Office.AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Document:interface'
    name: Office.Document
  - uid: 'office!Office.GetBindingDataOptions:interface'
    name: GetBindingDataOptions
  - uid: 'office!Office.Binding#getDataAsync~0:complex'
    name: '(result: AsyncResult<T>) => void'
    fullName: '(result: Office.AsyncResult<T>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <T>) => void
        fullName: <T>) => void
  - uid: 'office!Office.Binding#getDataAsync~1:complex'
    name: '(result: AsyncResult<T>) => void'
    fullName: '(result: Office.AsyncResult<T>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <T>) => void
        fullName: <T>) => void
  - uid: 'office!Office.RemoveHandlerOptions:interface'
    name: RemoveHandlerOptions
  - uid: 'office!Office.Binding#removeHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Binding#removeHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Binding#setDataAsync~0:complex'
    name: TableData | any
    fullName: Office.TableData | any
    spec.typeScript:
      - uid: 'office!Office.TableData:class'
        name: TableData
        fullName: Office.TableData
      - name: ' | any'
        fullName: ' | any'
  - uid: 'office!Office.SetBindingDataOptions:interface'
    name: SetBindingDataOptions
  - uid: 'office!Office.Binding#setDataAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Binding#setDataAsync~2:complex'
    name: TableData | any
    fullName: Office.TableData | any
    spec.typeScript:
      - uid: 'office!Office.TableData:class'
        name: TableData
        fullName: Office.TableData
      - name: ' | any'
        fullName: ' | any'
  - uid: 'office!Office.Binding#setDataAsync~3:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.BindingType:enum'
    name: Office.BindingType