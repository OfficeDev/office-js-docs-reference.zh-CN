### YamlMime:TSType
name: Office.Bindings
uid: office!Office.Bindings:interface
package: office!
fullName: Office.Bindings
summary: 表示外接程序在文档中所具有的绑定。
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: document
  uid: office!Office.Bindings#document:member
  package: office!
  fullName: document
  summary: 获取一个 [Office.Document](xref:office!Office.Document:interface) 对象，该对象表示与此集合绑定相关联的文档。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'document: Document;'
    return:
      type: <xref uid="office!Office.Document:interface" />
methods:
- name: addFromNamedItemAsync(itemName, bindingType, options, callback)
  uid: office!Office.Bindings#addFromNamedItemAsync:member(1)
  package: office!
  fullName: addFromNamedItemAsync(itemName, bindingType, options, callback)
  summary: 根据文档中的命名对象创建绑定。
  remarks: "**要求集**：\n\n- [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)\n\n- [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)\n\n- [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)\n\n对于 Excel，名称列表参数可以引用已命名的区域或表。\n\n默认情况下，在 Excel 中添加表会为你添加的第一个表分配名称“Table1”，为你添加的第二个表分配名称“Table2”，以此类推。 若要在 Excel UI 中为表分配有意义的名称，请使用功能区的 \"表格工具 \\| 设计\" 选项卡上的 \"表格名称\" 属性。\n\n**注意**：在 Excel 中，当指定表作为已命名项目时，必须完全限定该名称以在表名称中包括工作表名称，格式如下： \"Sheet1！Table1\n\n对于 Word，\"名称名称\" 参数是指格式文本内容控件的 Title 属性。  (无法绑定到格式文本内容控件) 以外的内容控件。\n\n默认情况下，内容控件没有分配标题值。 若要在 Word UI 中分配有意义的名称，请从功能区的“开发人员”选项卡上的“控件”组中插入一个“格式文本”内容控件，并使用“控件”组中的“属性”命令显示“内容控件属性”对话框。 然后将内容控件的“标题”属性设置为需要从代码中引用的名称。\n\n**注意**：在 Word 中，如果有多个格式文本内容控件具有相同的 Title 属性值 (名称) ，并且您尝试使用此 (方法绑定到其中一个内容控件。通过将其名称指定为 \"用户名称\" 参数) ，该操作将失败。\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n// The following example adds a binding to the myRange named item in Excel as a \"matrix\" binding,\n// and assigns the binding's id as myMatrix.\nfunction bindNamedItem() {\n    Office.context.document.bindings.addFromNamedItemAsync(\n        \"myRange\", \"matrix\", {id:'myMatrix'}, function (result) {\n        if (result.status == 'succeeded'){\n            write('Added new binding with type: ' + result.value.type + ' and id: ' + result.value.id);\n            }\n        else\n            write('Error: ' + result.error.message);\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// The following example adds a binding to the Table1 named item in Excel as a \"table\" binding,\n// and assigns the binding's id as myTable.\nfunction bindNamedItem() {\n    Office.context.document.bindings.addFromNamedItemAsync(\n        \"Table1\", \"table\", {id:'myTable'}, function (result) {\n        if (result.status == 'succeeded'){\n            write('Added new binding with type: ' + result.value.type + ' and id: ' + result.value.id);\n            }\n        else\n            write('Error: ' + result.error.message);\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// The following example creates a text binding in Word to a rich text content control named \"FirstName\",\n// assigns the id \"firstName\", and then displays that information.\nfunction bindContentControl() {\n    Office.context.document.bindings.addFromNamedItemAsync('FirstName', \n        Office.BindingType.Text, {id:'firstName'},\n        function (result) {\n            if (result.status === Office.AsyncResultStatus.Succeeded) {\n                write('Control bound. Binding.id: '\n                    + result.value.id + ' Binding.type: ' + result.value.type);\n            } else {\n                write('Error:', result.error.message);\n            }\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromNamedItemAsync(itemName: string, bindingType: BindingType, options?: AddBindingFromNamedItemOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
    parameters:
    - id: itemName
      description: 文档中可绑定对象的名称。 例如，Excel 中的 "MyExpenses" 表。
      type: string
    - id: bindingType
      description: 数据的 [BindingType](xref:office!Office.BindingType:enum) 。 如果所选的对象无法强制转换为指定的类型，则此方法返回 null。
      type: <xref uid="office!Office.BindingType:enum" />
    - id: options
      description: 提供用于配置所创建的绑定的选项。
      type: <xref uid="office!Office.AddBindingFromNamedItemOptions:interface" />
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是表示指定的已命名项目的 Binding 对象。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: addFromNamedItemAsync(itemName, bindingType, callback)
  uid: office!Office.Bindings#addFromNamedItemAsync:member(2)
  package: office!
  fullName: addFromNamedItemAsync(itemName, bindingType, callback)
  summary: 根据文档中的命名对象创建绑定。
  remarks: >-
    [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->， [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->， [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)


    对于 Excel，名称列表参数可以引用已命名的区域或表。


    默认情况下，在 Excel 中添加表会为你添加的第一个表分配名称“Table1”，为你添加的第二个表分配名称“Table2”，以此类推。 若要在 Excel UI 中为表分配有意义的名称，请使用功能区的 "表格工具 \| 设计" 选项卡上的 "表格名称" 属性。


    **注意**：在 Excel 中，当指定表作为已命名项目时，必须完全限定该名称以在表名称中包括工作表名称，格式如下： "Sheet1！Table1


    对于 Word，"名称名称" 参数是指格式文本内容控件的 Title 属性。  (无法绑定到格式文本内容控件) 以外的内容控件。


    默认情况下，内容控件没有分配标题值。 若要在 Word UI 中分配有意义的名称，请从功能区的“开发人员”选项卡上的“控件”组中插入一个“格式文本”内容控件，并使用“控件”组中的“属性”命令显示“内容控件属性”对话框。 然后将内容控件的“标题”属性设置为需要从代码中引用的名称。


    **注意**：在 Word 中，如果有多个格式文本内容控件具有相同的 Title 属性值 (名称) ，并且您尝试使用此 (方法绑定到其中一个内容控件。通过将其名称指定为 "用户名称" 参数) ，该操作将失败。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromNamedItemAsync(itemName: string, bindingType: BindingType, callback?: (result: AsyncResult<Binding>) => void): void;'
    parameters:
    - id: itemName
      description: 文档中可绑定对象的名称。 例如，Excel 中的 "MyExpenses" 表。
      type: string
    - id: bindingType
      description: 数据的 [BindingType](xref:office!Office.BindingType:enum) 。 如果所选的对象无法强制转换为指定的类型，则此方法返回 null。
      type: <xref uid="office!Office.BindingType:enum" />
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是表示指定的已命名项目的 Binding 对象。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: addFromPromptAsync(bindingType, options, callback)
  uid: office!Office.Bindings#addFromPromptAsync:member(1)
  package: office!
  fullName: addFromPromptAsync(bindingType, options, callback)
  summary: 通过提示用户在文档中进行选择来创建绑定。
  remarks: "**要求集**： [不在集合中](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)\n\n将指定类型的绑定对象添加到 Bindings 集合，该集合将用所提供的 id 进行标识。如果无法绑定指定选择，则该方法会失败。\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction addBindingFromPrompt() {\n    Office.context.document.bindings.addFromPromptAsync(\n        Office.BindingType.Text, \n        { id: 'MyBinding', promptText: 'Select text to bind to.' },\n        function (asyncResult) {\n            write('Added new binding with type: ' + asyncResult.value.type + ' and id: ' + asyncResult.value.id);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromPromptAsync(bindingType: BindingType, options?: AddBindingFromPromptOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
    parameters:
    - id: bindingType
      description: 指定要创建的绑定对象的类型。 必需。 如果所选的对象无法强制转换为指定的类型，则返回 null。
      type: <xref uid="office!Office.BindingType:enum" />
    - id: options
      description: 提供用于配置提示和标识所创建的绑定的选项。
      type: <xref uid="office!Office.AddBindingFromPromptOptions:interface" />
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是代表用户指定的选定内容的 Binding 对象。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: addFromPromptAsync(bindingType, callback)
  uid: office!Office.Bindings#addFromPromptAsync:member(2)
  package: office!
  fullName: addFromPromptAsync(bindingType, callback)
  summary: 通过提示用户在文档中进行选择来创建绑定。
  remarks: >-
    **要求集**： [不在集合中](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)


    将指定类型的绑定对象添加到 Bindings 集合，该集合将用所提供的 id 进行标识。如果无法绑定指定选择，则该方法会失败。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromPromptAsync(bindingType: BindingType, callback?: (result: AsyncResult<Binding>) => void): void;'
    parameters:
    - id: bindingType
      description: 指定要创建的绑定对象的类型。 必需。 如果所选的对象无法强制转换为指定的类型，则返回 null。
      type: <xref uid="office!Office.BindingType:enum" />
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是代表用户指定的选定内容的 Binding 对象。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: addFromSelectionAsync(bindingType, options, callback)
  uid: office!Office.Bindings#addFromSelectionAsync:member(1)
  package: office!
  fullName: addFromSelectionAsync(bindingType, options, callback)
  summary: 根据用户的当前选择创建绑定。
  remarks: "**要求集**：\n\n- [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)\n\n- [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)\n\n- [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)\n\n将指定类型的绑定对象添加到 Bindings 集合，该集合将用提供的 id 标识。\n\n注意在 Excel 中，如果您调用在现有绑定的 Binding.id 中传递的 addFromSelectionAsync 方法，则会使用该绑定的类型，并且不能通过为 bindingType 参数指定不同的值来更改其类型。 如果需要使用现有 id 并更改 bindingType，请先调用 Bindings.releaseByIdAsync 方法释放该绑定，然后调用 addFromSelectionAsync 方法重新建立新类型的绑定。\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction addBindingFromSelection() {\n    Office.context.document.bindings.addFromSelectionAsync(Office.BindingType.Text, { id: 'MyBinding' }, \n        function (asyncResult) {\n        write('Added new binding with type: ' + asyncResult.value.type + ' and id: ' + asyncResult.value.id);\n        }\n    );\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromSelectionAsync(bindingType: BindingType, options?: AddBindingFromSelectionOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
    parameters:
    - id: bindingType
      description: 指定要创建的绑定对象的类型。 必需。 如果所选的对象无法强制转换为指定的类型，则返回 null。
      type: <xref uid="office!Office.BindingType:enum" />
    - id: options
      description: 提供用于标识所创建的绑定的选项。
      type: <xref uid="office!Office.AddBindingFromSelectionOptions:interface" />
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是代表用户指定的选定内容的 Binding 对象。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: addFromSelectionAsync(bindingType, callback)
  uid: office!Office.Bindings#addFromSelectionAsync:member(2)
  package: office!
  fullName: addFromSelectionAsync(bindingType, callback)
  summary: 根据用户的当前选择创建绑定。
  remarks: >-
    **要求集**：


    - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)


    - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)


    - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)


    将指定类型的绑定对象添加到 Bindings 集合，该集合将用提供的 id 标识。


    注意在 Excel 中，如果您调用在现有绑定的 Binding.id 中传递的 addFromSelectionAsync 方法，则会使用该绑定的类型，并且不能通过为 bindingType 参数指定不同的值来更改其类型。 如果需要使用现有 id 并更改 bindingType，请先调用 Bindings.releaseByIdAsync 方法释放该绑定，然后调用 addFromSelectionAsync 方法重新建立新类型的绑定。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addFromSelectionAsync(bindingType: BindingType, callback?: (result: AsyncResult<Binding>) => void): void;'
    parameters:
    - id: bindingType
      description: 指定要创建的绑定对象的类型。 必需。 如果所选的对象无法强制转换为指定的类型，则返回 null。
      type: <xref uid="office!Office.BindingType:enum" />
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是代表用户指定的选定内容的 Binding 对象。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAllAsync(options, callback)
  uid: office!Office.Bindings#getAllAsync:member(1)
  package: office!
  fullName: getAllAsync(options, callback)
  summary: 获取先前创建的所有绑定。
  remarks: >-
    **要求集**：


    - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)


    - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)


    - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAllAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Binding[]>) => void): void;'
    parameters:
    - id: options
      description: 提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是一个数组，其中包含为所引用的绑定对象创建的每个绑定。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />[]&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAllAsync(callback)
  uid: office!Office.Bindings#getAllAsync:member(2)
  package: office!
  fullName: getAllAsync(callback)
  summary: 获取先前创建的所有绑定。
  remarks: "**要求集**：\n\n- [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)\n\n- [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)\n\n- [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction displayAllBindingNames() {\n    Office.context.document.bindings.getAllAsync(function (asyncResult) {\n        var bindingString = '';\n        for (var i in asyncResult.value) {\n            bindingString += asyncResult.value[i].id + '\\n';\n        }\n        write('Existing bindings: ' + bindingString);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAllAsync(callback?: (result: AsyncResult<Binding[]>) => void): void;'
    parameters:
    - id: callback
      description: 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是一个数组，其中包含为所引用的绑定对象创建的每个绑定。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />[]&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getByIdAsync(id, options, callback)
  uid: office!Office.Bindings#getByIdAsync:member(1)
  package: office!
  fullName: getByIdAsync(id, options, callback)
  summary: 根据其名称检索绑定
  remarks: >-
    **要求集**：


    - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)


    - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)


    - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)


    如果不存在指定的 id，则会失败。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
    parameters:
    - id: id
      description: 指定 binding 对象的唯一名称。 必需。
      type: string
    - id: options
      description: 提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是由调用中的 id 指定的 Binding 对象。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getByIdAsync(id, callback)
  uid: office!Office.Bindings#getByIdAsync:member(2)
  package: office!
  fullName: getByIdAsync(id, callback)
  summary: 根据其名称检索绑定
  remarks: "**要求集**：\n\n- [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)\n\n- [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)\n\n- [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)\n\n如果不存在指定的 id，则会失败。\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction displayBindingType() {\n    Office.context.document.bindings.getByIdAsync('MyBinding', function (asyncResult) {\n        write('Retrieved binding with type: ' + asyncResult.value.type + ' and id: ' + asyncResult.value.id);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getByIdAsync(id: string, callback?: (result: AsyncResult<Binding>) => void): void;'
    parameters:
    - id: id
      description: 指定 binding 对象的唯一名称。 必需。
      type: string
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. `value`结果的属性是由调用中的 id 指定的 Binding 对象。
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Binding:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: releaseByIdAsync(id, options, callback)
  uid: office!Office.Bindings#releaseByIdAsync:member(1)
  package: office!
  fullName: releaseByIdAsync(id, options, callback)
  summary: 从文档中删除绑定
  remarks: >-
    **要求集**：


    - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)


    - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)


    - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)


    如果不存在指定的 id，则会失败。
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'releaseByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: id
      description: 指定要用于标识绑定对象的唯一名称。 必需。
      type: string
    - id: options
      description: 提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: releaseByIdAsync(id, callback)
  uid: office!Office.Bindings#releaseByIdAsync:member(2)
  package: office!
  fullName: releaseByIdAsync(id, callback)
  summary: 从文档中删除绑定
  remarks: "**要求集**：\n\n- [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)\n\n- [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)\n\n- [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)\n\n如果不存在指定的 id，则会失败。\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nOffice.context.document.bindings.releaseByIdAsync(\"MyBinding\", function (asyncResult) { \n    write(\"Released MyBinding!\"); \n}); \n// Function that writes to a div with id='message' on the page. \nfunction write(message){ \n    document.getElementById('message').innerText += message;  \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'releaseByIdAsync(id: string, callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: id
      description: 指定要用于标识绑定对象的唯一名称。 必需。
      type: string
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: a69cd855cb78868d9bdd65af4356123a2fc43010
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49251638"
