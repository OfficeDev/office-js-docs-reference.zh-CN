### YamlMime:UniversalReference
items:
  - uid: 'office!OfficeExtension.ClientRequestContext:class'
    summary: 一个抽象的 RequestContext 对象，可促进对主机 Office 应用程序的请求。 `Excel.run`和`Word.run`方法提供请求上下文。
    name: OfficeExtension.ClientRequestContext
    fullName: OfficeExtension.ClientRequestContext
    langs:
      - typeScript
    type: class
    package: office!
    children:
      - 'office!OfficeExtension.ClientRequestContext:constructor(1)'
      - 'office!OfficeExtension.ClientRequestContext#debugInfo:member'
      - 'office!OfficeExtension.ClientRequestContext#load:member(1)'
      - 'office!OfficeExtension.ClientRequestContext#loadRecursive:member(1)'
      - 'office!OfficeExtension.ClientRequestContext#requestHeaders:member'
      - 'office!OfficeExtension.ClientRequestContext#sync:member(1)'
      - 'office!OfficeExtension.ClientRequestContext#trace:member(1)'
      - 'office!OfficeExtension.ClientRequestContext#trackedObjects:member'
  - uid: 'office!OfficeExtension.ClientRequestContext:constructor(1)'
    summary: 构造`ClientRequestContext`类的新实例
    name: (constructor)(url)
    fullName: (constructor)(url)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(url?: string);'
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: 'office!OfficeExtension.ClientRequestContext#debugInfo:member'
    summary: 调式信息
    name: debugInfo
    fullName: debugInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly debugInfo: RequestContextDebugInfo;'
      return:
        type:
          - 'office!OfficeExtension.RequestContextDebugInfo:interface'
  - uid: 'office!OfficeExtension.ClientRequestContext#load:member(1)'
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前，必须先调用。
    name: 'load(object, option)'
    fullName: 'load(object, option)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: 已加载其属性的对象。
          type:
            - 'office!OfficeExtension.ClientObject:class'
        - id: option
          description: '一个用逗号分隔的字符串或字符串数组，用于指定要加载的属性或 LoadOption 对象的[officeextension.error](xref:office!OfficeExtension.LoadOption:interface) 。'
          type:
            - 'office!OfficeExtension.ClientRequestContext#load~0:complex'
  - uid: 'office!OfficeExtension.ClientRequestContext#loadRecursive:member(1)'
    summary: |-
      对命令进行排队，以以递归方式加载对象的指定属性及其导航属性。

      在读取属性`context.sync()`之前，必须先调用。
    name: 'loadRecursive(object, options, maxDepth)'
    fullName: 'loadRecursive(object, options, maxDepth)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: 要加载的对象。
          type:
            - 'office!OfficeExtension.ClientObject:class'
        - id: options
          description: '这些类型的加载选项的键值对，例如`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`'
          type:
            - 'office!OfficeExtension.ClientRequestContext#loadRecursive~0:complex'
        - id: maxDepth
          description: 最大递归深度。
          type:
            - number
  - uid: 'office!OfficeExtension.ClientRequestContext#requestHeaders:member'
    summary: 请求标头
    name: requestHeaders
    fullName: requestHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requestHeaders: { [name: string]: string };'
      return:
        type:
          - '{ [name: string]: string }'
  - uid: 'office!OfficeExtension.ClientRequestContext#sync:member(1)'
    summary: 通过在请求上下文中执行排队和检索加载的 Office 对象的属性以在代码中使用，来同步 JavaScript 代理对象和 Office 文档之间的状态。 此方法返回一个承诺，该承诺在同步完成时进行解析。
    name: sync(passThroughValue)
    fullName: sync(passThroughValue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sync<T>(passThroughValue?: T): Promise<T>;'
      return:
        type:
          - 'office!OfficeExtension.ClientRequestContext#sync~0:complex'
        description: ''
      parameters:
        - id: passThroughValue
          description: ''
          type:
            - T
      typeParameters:
        - id: T
  - uid: 'office!OfficeExtension.ClientRequestContext#trace:member(1)'
    summary: 向队列中添加跟踪消息。 如果由于错误而拒绝`context.sync()`返回的承诺，则会将 "traceMessages" 数组添加到 officeextension.error 对象，其中包含已执行的所有跟踪消息。 这些消息可帮助您监视程序执行序列并检测错误的原因。
    name: trace(message)
    fullName: trace(message)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'trace(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
  - uid: 'office!OfficeExtension.ClientRequestContext#trackedObjects:member'
    summary: 根据文档中的周围更改进行自动调整而跟踪的对象的集合。
    name: trackedObjects
    fullName: trackedObjects
    langs:
      - typeScript
    type: property
    syntax:
      content: 'trackedObjects: TrackedObjects;'
      return:
        type:
          - 'office!OfficeExtension.TrackedObjects:class'
references:
  - uid: 'office!OfficeExtension.RequestContextDebugInfo:interface'
    name: RequestContextDebugInfo
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: ClientObject
  - uid: 'office!OfficeExtension.ClientRequestContext#load~0:complex'
    name: 'string | string[] | LoadOption'
    fullName: 'string | string[] | OfficeExtension.LoadOption'
    spec.typeScript:
      - name: 'string | string[] | '
        fullName: 'string | string[] | '
      - uid: 'office!OfficeExtension.LoadOption:interface'
        name: LoadOption
        fullName: OfficeExtension.LoadOption
  - uid: 'office!OfficeExtension.ClientRequestContext#loadRecursive~0:complex'
    name: '{ [typeName: string]: string | string[] | LoadOption }'
    fullName: '{ [typeName: string]: string | string[] | OfficeExtension.LoadOption }'
    spec.typeScript:
      - name: '{ [typeName: string]: string | string[] | '
        fullName: '{ [typeName: string]: string | string[] | '
      - uid: 'office!OfficeExtension.LoadOption:interface'
        name: LoadOption
        fullName: OfficeExtension.LoadOption
      - name: ' }'
        fullName: ' }'
  - uid: 'office!OfficeExtension.ClientRequestContext#sync~0:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'office!OfficeExtension.TrackedObjects:class'
    name: TrackedObjects