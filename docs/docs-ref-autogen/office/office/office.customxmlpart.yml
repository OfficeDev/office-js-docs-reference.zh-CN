### YamlMime:UniversalReference
items:
  - uid: 'office!Office.CustomXmlPart:interface'
    summary: '<span data-ttu-id="ebd43-101">表示[CustomXmlParts](xref:office!Office.CustomXmlParts:interface)集合中的单个 CustomXMLPart。</span><span class="sxs-lookup"><span data-stu-id="ebd43-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office!Office.CustomXmlParts:interface) collection.</span></span>'
    remarks: '<span data-ttu-id="ebd43-102">**主机**： Word</span><span class="sxs-lookup"><span data-stu-id="ebd43-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlPart
    fullName: Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.CustomXmlPart#addHandlerAsync:member(1)'
      - 'office!Office.CustomXmlPart#addHandlerAsync:member(2)'
      - 'office!Office.CustomXmlPart#builtIn:member'
      - 'office!Office.CustomXmlPart#deleteAsync:member(1)'
      - 'office!Office.CustomXmlPart#deleteAsync:member(2)'
      - 'office!Office.CustomXmlPart#getNodesAsync:member(1)'
      - 'office!Office.CustomXmlPart#getNodesAsync:member(2)'
      - 'office!Office.CustomXmlPart#getXmlAsync:member(1)'
      - 'office!Office.CustomXmlPart#getXmlAsync:member(2)'
      - 'office!Office.CustomXmlPart#id:member'
      - 'office!Office.CustomXmlPart#namespaceManager:member'
      - 'office!Office.CustomXmlPart#removeHandlerAsync:member(1)'
      - 'office!Office.CustomXmlPart#removeHandlerAsync:member(2)'
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync:member(1)'
    summary: <span data-ttu-id="ebd43-103">使用指定的事件类型将事件处理程序添加到对象。</span><span class="sxs-lookup"><span data-stu-id="ebd43-103">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="ebd43-104">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="ebd43-105">只要每个事件处理程序函数的名称是唯一的，您就可以为指定的事件类型添加多个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ebd43-105">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="ebd43-106">指定要添加事件的类型。</span><span class="sxs-lookup"><span data-stu-id="ebd43-106">Specifies the type of event to add.</span></span> <span data-ttu-id="ebd43-107">对于 CustomXmlPart 对象，可将事件 "参数指定为`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="ebd43-107">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="ebd43-108">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="ebd43-108"></span></span><!-- --><span data-ttu-id="ebd43-109">，并`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="ebd43-109">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="ebd43-110">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-110"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="ebd43-111">要添加的事件处理程序函数，其唯一的参数的类型为[NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="ebd43-111">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span></span><!-- --><span data-ttu-id="ebd43-112">、 [NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="ebd43-112">, [Office.NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span></span><!-- --><span data-ttu-id="ebd43-113">或[NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="ebd43-113">, or [Office.NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span></span>'
          type:
            - '(result: any) => void'
        - id: options
          description: '<span data-ttu-id="ebd43-114">提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="ebd43-114">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="ebd43-115">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-115">Optional.</span></span> <span data-ttu-id="ebd43-116">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-116">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-117">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-117"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#addHandlerAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync:member(2)'
    summary: <span data-ttu-id="ebd43-118">使用指定的事件类型将事件处理程序添加到对象。</span><span class="sxs-lookup"><span data-stu-id="ebd43-118">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="ebd43-119">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-119">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="ebd43-120">只要每个事件处理程序函数的名称是唯一的，您就可以为指定的事件类型添加多个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ebd43-120">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="ebd43-121">示例</span><span class="sxs-lookup"><span data-stu-id="ebd43-121">Examples</span></span>

      ```javascript
      // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeDeletedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                  write("A node has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeInsertedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                  write("A node has been inserted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeReplacedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                  write("A node has been replaced.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="ebd43-122">指定要添加事件的类型。</span><span class="sxs-lookup"><span data-stu-id="ebd43-122">Specifies the type of event to add.</span></span> <span data-ttu-id="ebd43-123">对于 CustomXmlPart 对象，可将事件 "参数指定为`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="ebd43-123">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="ebd43-124">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="ebd43-124"></span></span><!-- --><span data-ttu-id="ebd43-125">，并`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="ebd43-125">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="ebd43-126">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-126"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: '<span data-ttu-id="ebd43-127">要添加的事件处理程序函数，其唯一的参数的类型为[NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="ebd43-127">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office!Office.NodeDeletedEventArgs:interface)</span></span><!-- --><span data-ttu-id="ebd43-128">、 [NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="ebd43-128">, [Office.NodeInsertedEventArgs](xref:office!Office.NodeInsertedEventArgs:interface)</span></span><!-- --><span data-ttu-id="ebd43-129">或[NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span><span class="sxs-lookup"><span data-stu-id="ebd43-129">, or [Office.NodeReplacedEventArgs](xref:office!Office.NodeReplacedEventArgs:interface)</span></span>'
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="ebd43-130">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-130">Optional.</span></span> <span data-ttu-id="ebd43-131">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-131">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-132">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-132"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#addHandlerAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#builtIn:member'
    summary: '<span data-ttu-id="ebd43-133">如果内置了自定义 XML 部件，则为 True; 否则为 false。否则为 false。</span><span class="sxs-lookup"><span data-stu-id="ebd43-133">True, if the custom XML part is built in; otherwise false.</span></span>'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ebd43-134">示例</span><span class="sxs-lookup"><span data-stu-id="ebd43-134">Examples</span></span>

          ```javascript
          function showXMLPartBuiltIn() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.builtIn);
              });
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.CustomXmlPart#deleteAsync:member(1)'
    summary: <span data-ttu-id="ebd43-135">删除自定义 XML 部件。</span><span class="sxs-lookup"><span data-stu-id="ebd43-135">Deletes the Custom XML Part.</span></span>
    remarks: '<span data-ttu-id="ebd43-136">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-136">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'deleteAsync(options, callback)'
    fullName: 'deleteAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="ebd43-137">提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="ebd43-137">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="ebd43-138">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-138">Optional.</span></span> <span data-ttu-id="ebd43-139">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-139">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-140">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-140"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#deleteAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#deleteAsync:member(2)'
    summary: <span data-ttu-id="ebd43-141">删除自定义 XML 部件。</span><span class="sxs-lookup"><span data-stu-id="ebd43-141">Deletes the Custom XML Part.</span></span>
    remarks: |-
      <span data-ttu-id="ebd43-142">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-142">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="ebd43-143">示例</span><span class="sxs-lookup"><span data-stu-id="ebd43-143">Examples</span></span>

      ```javascript
      function deleteXMLPart() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.deleteAsync(function (eventArgs) {
                  write("The XML Part has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: deleteAsync(callback)
    fullName: deleteAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="ebd43-144">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-144">Optional.</span></span> <span data-ttu-id="ebd43-145">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-145">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-146">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-146"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#deleteAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync:member(1)'
    summary: <span data-ttu-id="ebd43-147">异步获取此自定义 XML 部件中与指定 XPath 匹配的任何 CustomXmlNodes。</span><span class="sxs-lookup"><span data-stu-id="ebd43-147">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: '<span data-ttu-id="ebd43-148">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-148">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="ebd43-149">返回指定你想要的节点的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="ebd43-149">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="ebd43-150">必需。</span><span class="sxs-lookup"><span data-stu-id="ebd43-150">Required.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="ebd43-151">提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="ebd43-151">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="ebd43-152">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-152">Optional.</span></span> <span data-ttu-id="ebd43-153">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-153">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-154">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-154"></span></span> <span data-ttu-id="ebd43-155">结果`value`的属性是 CustomXmlNode 对象的数组，这些对象代表传递给 xpath 参数的 xpath 表达式指定的节点。</span><span class="sxs-lookup"><span data-stu-id="ebd43-155">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getNodesAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync:member(2)'
    summary: <span data-ttu-id="ebd43-156">异步获取此自定义 XML 部件中与指定 XPath 匹配的任何 CustomXmlNodes。</span><span class="sxs-lookup"><span data-stu-id="ebd43-156">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: |-
      <span data-ttu-id="ebd43-157">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-157">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="ebd43-158">示例</span><span class="sxs-lookup"><span data-stu-id="ebd43-158">Examples</span></span>

      ```javascript
      function showXmlNodeType() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node.nodeType);
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="ebd43-159">返回指定你想要的节点的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="ebd43-159">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="ebd43-160">必需。</span><span class="sxs-lookup"><span data-stu-id="ebd43-160">Required.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="ebd43-161">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-161">Optional.</span></span> <span data-ttu-id="ebd43-162">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-162">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-163">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-163"></span></span> <span data-ttu-id="ebd43-164">结果`value`的属性是 CustomXmlNode 对象的数组，这些对象代表传递给 xpath 参数的 xpath 表达式指定的节点。</span><span class="sxs-lookup"><span data-stu-id="ebd43-164">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getNodesAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync:member(1)'
    summary: <span data-ttu-id="ebd43-165">异步获取此自定义 XML 部件内的 XML。</span><span class="sxs-lookup"><span data-stu-id="ebd43-165">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: '<span data-ttu-id="ebd43-166">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-166">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="ebd43-167">提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="ebd43-167">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="ebd43-168">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-168">Optional.</span></span> <span data-ttu-id="ebd43-169">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-169">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-170">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-170"></span></span> <span data-ttu-id="ebd43-171">结果`value`的属性是一个字符串，其中包含引用的 CustomXmlPart 对象的 XML。</span><span class="sxs-lookup"><span data-stu-id="ebd43-171">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getXmlAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync:member(2)'
    summary: <span data-ttu-id="ebd43-172">异步获取此自定义 XML 部件内的 XML。</span><span class="sxs-lookup"><span data-stu-id="ebd43-172">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="ebd43-173">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-173">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="ebd43-174">示例</span><span class="sxs-lookup"><span data-stu-id="ebd43-174">Examples</span></span>

      ```javascript
      function showXMLPartInnerXML() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getXmlAsync(function (eventArgs) {
                  write(eventArgs.value);
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="ebd43-175">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-175">Optional.</span></span> <span data-ttu-id="ebd43-176">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-176">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-177">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-177"></span></span> <span data-ttu-id="ebd43-178">结果`value`的属性是一个字符串，其中包含引用的 CustomXmlPart 对象的 XML。</span><span class="sxs-lookup"><span data-stu-id="ebd43-178">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - 'office!Office.CustomXmlPart#getXmlAsync~1:complex'
  - uid: 'office!Office.CustomXmlPart#id:member'
    summary: <span data-ttu-id="ebd43-179">获取 CustomXMLPart 的 GUID。</span><span class="sxs-lookup"><span data-stu-id="ebd43-179">Gets the GUID of the CustomXMLPart.</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ebd43-180">示例</span><span class="sxs-lookup"><span data-stu-id="ebd43-180">Examples</span></span>

          ```javascript
          function showXMLPartBuiltId() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.id);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: 'office!Office.CustomXmlPart#namespaceManager:member'
    summary: '<span data-ttu-id="ebd43-181">获取命名空间前缀映射的集合（[CustomXmlPrefixMappings](xref:office!Office.CustomXmlPrefixMappings:interface)</span><span class="sxs-lookup"><span data-stu-id="ebd43-181">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office!Office.CustomXmlPrefixMappings:interface)</span></span><!-- --><span data-ttu-id="ebd43-182">）用于当前 CustomXmlPart。</span><span class="sxs-lookup"><span data-stu-id="ebd43-182">) used against the current CustomXmlPart.</span></span>'
    name: namespaceManager
    fullName: namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - 'office!Office.CustomXmlPrefixMappings:interface'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="ebd43-183">示例</span><span class="sxs-lookup"><span data-stu-id="ebd43-183">Examples</span></span>

          ```javascript
          function setXMLPartNamespaceManagerNamespace() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.namespaceManager.addNamespaceAsync("myPrefix", "myNamespace");
              });
          }
          ```
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync:member(1)'
    summary: <span data-ttu-id="ebd43-184">删除指定事件类型的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ebd43-184">Removes an event handler for the specified event type.</span></span>
    remarks: '<span data-ttu-id="ebd43-185">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-185">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="ebd43-186">指定要移除事件的类型。</span><span class="sxs-lookup"><span data-stu-id="ebd43-186">Specifies the type of event to remove.</span></span> <span data-ttu-id="ebd43-187">对于 CustomXmlPart 对象，可将事件 "参数指定为`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="ebd43-187">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="ebd43-188">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="ebd43-188"></span></span><!-- --><span data-ttu-id="ebd43-189">，并`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="ebd43-189">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="ebd43-190">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-190"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: <span data-ttu-id="ebd43-191">要删除的处理程序的名称。</span><span class="sxs-lookup"><span data-stu-id="ebd43-191">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: options
          description: <span data-ttu-id="ebd43-192">提供用于确定要删除的事件处理程序或处理程序的选项。</span><span class="sxs-lookup"><span data-stu-id="ebd43-192">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - 'office!Office.RemoveHandlerOptions:interface'
        - id: callback
          description: '<span data-ttu-id="ebd43-193">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-193">Optional.</span></span> <span data-ttu-id="ebd43-194">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-194">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-195">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-195"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#removeHandlerAsync~0:complex'
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync:member(2)'
    summary: <span data-ttu-id="ebd43-196">删除指定事件类型的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ebd43-196">Removes an event handler for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="ebd43-197">**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="ebd43-197">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="ebd43-198">示例</span><span class="sxs-lookup"><span data-stu-id="ebd43-198">Examples</span></span>

      ```javascript
      function removeNodeInsertedEventHandler() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}",
              function (result) {
                  var xmlPart = result.value;
                  xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});
          });
      }
      ```
    name: 'removeHandlerAsync(eventType, handler, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="ebd43-199">指定要移除事件的类型。</span><span class="sxs-lookup"><span data-stu-id="ebd43-199">Specifies the type of event to remove.</span></span> <span data-ttu-id="ebd43-200">对于 CustomXmlPart 对象，可将事件 "参数指定为`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="ebd43-200">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="ebd43-201">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="ebd43-201"></span></span><!-- --><span data-ttu-id="ebd43-202">，并`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="ebd43-202">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="ebd43-203">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-203"></span></span>'
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: <span data-ttu-id="ebd43-204">要删除的处理程序的名称。</span><span class="sxs-lookup"><span data-stu-id="ebd43-204">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="ebd43-205">可选。</span><span class="sxs-lookup"><span data-stu-id="ebd43-205">Optional.</span></span> <span data-ttu-id="ebd43-206">回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "</span><span class="sxs-lookup"><span data-stu-id="ebd43-206">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office!Office.AsyncResult:interface)</span></span><!-- --><span data-ttu-id="ebd43-207">.</span><span class="sxs-lookup"><span data-stu-id="ebd43-207"></span></span>'
          type:
            - 'office!Office.CustomXmlPart#removeHandlerAsync~1:complex'
references:
  - uid: 'office!Office.EventType:enum'
    name: Office.EventType
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#addHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#deleteAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#deleteAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#getNodesAsync~0:complex'
    name: '(result: AsyncResult<CustomXmlNode[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlNode[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlNode:interface'
        name: CustomXmlNode
        fullName: Office.CustomXmlNode
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.CustomXmlPart#getNodesAsync~1:complex'
    name: '(result: AsyncResult<CustomXmlNode[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlNode[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlNode:interface'
        name: CustomXmlNode
        fullName: Office.CustomXmlNode
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.CustomXmlPart#getXmlAsync~0:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlPart#getXmlAsync~1:complex'
    name: '(result: AsyncResult<string>) => void'
    fullName: '(result: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'office!Office.CustomXmlPrefixMappings:interface'
    name: CustomXmlPrefixMappings
  - uid: 'office!Office.RemoveHandlerOptions:interface'
    name: RemoveHandlerOptions
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.CustomXmlPart#removeHandlerAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void