### YamlMime:UniversalReference
items:
  - uid: 'office!Office.CustomXmlParts:interface'
    summary: 表示 CustomXmlPart 对象的集合。
    remarks: '**主机**： Word'
    name: Office.CustomXmlParts
    fullName: Office.CustomXmlParts
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.CustomXmlParts#addAsync:member(1)'
      - 'office!Office.CustomXmlParts#addAsync:member(2)'
      - 'office!Office.CustomXmlParts#getByIdAsync:member(1)'
      - 'office!Office.CustomXmlParts#getByIdAsync:member(2)'
      - 'office!Office.CustomXmlParts#getByNamespaceAsync:member(1)'
      - 'office!Office.CustomXmlParts#getByNamespaceAsync:member(2)'
  - uid: 'office!Office.CustomXmlParts#addAsync:member(1)'
    summary: 将新的自定义 XML 部件异步添加到文件中。
    remarks: '**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: 'addAsync(xml, options, callback)'
    fullName: 'addAsync(xml, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: 要添加到新创建的自定义 XML 部件的 XML。
          type:
            - string
        - id: options
          description: 提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. 结果`value`的属性是新创建的 CustomXmlPart 对象。'
          type:
            - 'office!Office.CustomXmlParts#addAsync~0:complex'
  - uid: 'office!Office.CustomXmlParts#addAsync:member(2)'
    summary: 将新的自定义 XML 部件异步添加到文件中。
    remarks: |-
      **要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      function addXMLPart() {
          Office.context.document.customXmlParts.addAsync(
              '<root categoryId="1" xmlns="http://tempuri.org"><item name="Cheap Item" price="$193.95"/><item name="Expensive Item" price="$931.88"/></root>',
              function (result) {});
      }

      function addXMLPartandHandler() {
          Office.context.document.customXmlParts.addAsync(
              "<testns:book xmlns:testns='http://testns.com'><testns:page number='1'>Hello</testns:page><testns:page number='2'>world!</testns:page></testns:book>",
              function(r) { r.value.addHandlerAsync(Office.EventType.DataNodeDeleted,
                  function(a) {write(a.type)
                  },
                      function(s) {write(s.status)
                      });
              });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'addAsync(xml, callback)'
    fullName: 'addAsync(xml, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(xml: string, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: 要添加到新创建的自定义 XML 部件的 XML。
          type:
            - string
        - id: callback
          description: '可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. 结果`value`的属性是新创建的 CustomXmlPart 对象。'
          type:
            - 'office!Office.CustomXmlParts#addAsync~1:complex'
  - uid: 'office!Office.CustomXmlParts#getByIdAsync:member(1)'
    summary: 以异步方式获取指定的自定义 XML 部件的 id。
    remarks: |-
      **要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      function showXMLPartInnerXML() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getXmlAsync({}, function (eventArgs) {
                  write(eventArgs.value);
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getByIdAsync(id, options, callback)'
    fullName: 'getByIdAsync(id, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: 自定义 XML 部件的 GUID（包括前后括号）。
          type:
            - string
        - id: options
          description: 提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. 结果`value`的属性是一个 CustomXmlPart 对象，该对象表示指定的自定义 XML 部件。 如果没有具有指定 id 的自定义 XML 部件，该方法将返回 null。'
          type:
            - 'office!Office.CustomXmlParts#getByIdAsync~0:complex'
  - uid: 'office!Office.CustomXmlParts#getByIdAsync:member(2)'
    summary: 以异步方式获取指定的自定义 XML 部件的 id。
    remarks: '**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: 'getByIdAsync(id, callback)'
    fullName: 'getByIdAsync(id, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByIdAsync(id: string, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: 自定义 XML 部件的 GUID（包括前后括号）。
          type:
            - string
        - id: callback
          description: '可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. 结果`value`的属性是一个 CustomXmlPart 对象，该对象表示指定的自定义 XML 部件。 如果没有具有指定 id 的自定义 XML 部件，该方法将返回 null。'
          type:
            - 'office!Office.CustomXmlParts#getByIdAsync~1:complex'
  - uid: 'office!Office.CustomXmlParts#getByNamespaceAsync:member(1)'
    summary: 以异步方式获取指定的自定义 XML 部件的命名空间。
    remarks: '**要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: 'getByNamespaceAsync(ns, options, callback)'
    fullName: 'getByNamespaceAsync(ns, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByNamespaceAsync(ns: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: ns
          description: 命名空间 URI。
          type:
            - string
        - id: options
          description: 提供一个选项，用于保留任何类型的未更改的上下文数据，以供在回调中使用。
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: '可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. 结果`value`的属性是与指定的命名空间匹配的 CustomXmlPart 对象的数组。'
          type:
            - 'office!Office.CustomXmlParts#getByNamespaceAsync~0:complex'
  - uid: 'office!Office.CustomXmlParts#getByNamespaceAsync:member(2)'
    summary: 以异步方式获取指定的自定义 XML 部件的命名空间。
    remarks: |-
      **要求集**： [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      function showXMLPartsInNamespace() {
          Office.context.document.customXmlParts.getByNamespaceAsync(
              "http://tempuri.org", 
              function (eventArgs) {
                  write("Found " + eventArgs.value.length + " parts with this namespace");
          }); 
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getByNamespaceAsync(ns, callback)'
    fullName: 'getByNamespaceAsync(ns, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByNamespaceAsync(ns: string, callback?: (result: AsyncResult<CustomXmlPart[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: ns
          description: 命名空间 URI。
          type:
            - string
        - id: callback
          description: '可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->. 结果`value`的属性是与指定的命名空间匹配的 CustomXmlPart 对象的数组。'
          type:
            - 'office!Office.CustomXmlParts#getByNamespaceAsync~1:complex'
references:
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.CustomXmlParts#addAsync~0:complex'
    name: '(result: AsyncResult<CustomXmlPart>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlPart>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlPart:interface'
        name: CustomXmlPart
        fullName: Office.CustomXmlPart
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.CustomXmlParts#addAsync~1:complex'
    name: '(result: AsyncResult<CustomXmlPart>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlPart>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlPart:interface'
        name: CustomXmlPart
        fullName: Office.CustomXmlPart
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.CustomXmlParts#getByIdAsync~0:complex'
    name: '(result: AsyncResult<CustomXmlPart>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlPart>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlPart:interface'
        name: CustomXmlPart
        fullName: Office.CustomXmlPart
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.CustomXmlParts#getByIdAsync~1:complex'
    name: '(result: AsyncResult<CustomXmlPart>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlPart>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlPart:interface'
        name: CustomXmlPart
        fullName: Office.CustomXmlPart
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.CustomXmlParts#getByNamespaceAsync~0:complex'
    name: '(result: AsyncResult<CustomXmlPart[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlPart[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlPart:interface'
        name: CustomXmlPart
        fullName: Office.CustomXmlPart
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.CustomXmlParts#getByNamespaceAsync~1:complex'
    name: '(result: AsyncResult<CustomXmlPart[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.CustomXmlPart[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.CustomXmlPart:interface'
        name: CustomXmlPart
        fullName: Office.CustomXmlPart
      - name: '[]>) => void'
        fullName: '[]>) => void'