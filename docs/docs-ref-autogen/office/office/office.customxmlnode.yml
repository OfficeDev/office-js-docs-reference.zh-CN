### YamlMime:UniversalReference
items:
  - uid: office.Office.CustomXmlNode
    summary: 表示文档中的树中的 XML 节点。
    remarks: '**主机**: Word'
    name: Office.CustomXmlNode
    fullName: Office.CustomXmlNode
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.CustomXmlNode.getNodesAsync
      - office.Office.CustomXmlNode.getNodesAsync_1
      - office.Office.CustomXmlNode.getNodeValueAsync
      - office.Office.CustomXmlNode.getNodeValueAsync_1
      - office.Office.CustomXmlNode.getTextAsync
      - office.Office.CustomXmlNode.getTextAsync_1
      - office.Office.CustomXmlNode.getXmlAsync
      - office.Office.CustomXmlNode.getXmlAsync_1
      - office.Office.CustomXmlNode.setNodeValueAsync
      - office.Office.CustomXmlNode.setNodeValueAsync_1
      - office.Office.CustomXmlNode.setTextAsync
      - office.Office.CustomXmlNode.setTextAsync_1
      - office.Office.CustomXmlNode.setXmlAsync
      - office.Office.CustomXmlNode.setXmlAsync_1
      - office.Office.CustomXmlNode.baseName
      - office.Office.CustomXmlNode.namespaceUri
      - office.Office.CustomXmlNode.nodeType
  - uid: office.Office.CustomXmlNode.getNodesAsync
    summary: 获取与 XPath 表达式关联的节点。
    remarks: '**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: 指定要获取的节点的 XPath 表达式。 必需。
          type:
            - string
        - id: options
          description: '提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->. 结果`value`的属性是 CustomXmlNode 对象的数组, 这些对象代表传递给`xPath`参数的 XPath 表达式指定的节点。'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlNode.getNodesAsync_1
    summary: 获取与 XPath 表达式关联的节点。
    remarks: |-
      **要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      function showXmlChildNodes() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getNodesAsync('*', function (nodeResults) {
                          write(nodeResults.value.length + " childNodes");
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: 指定要获取的节点的 XPath 表达式。 必需。
          type:
            - string
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->. 结果`value`的属性是 CustomXmlNode 对象的数组, 这些对象代表传递给`xPath`参数的 XPath 表达式指定的节点。'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlNode.getNodeValueAsync
    summary: 获取节点值。
    remarks: '**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: 'getNodeValueAsync(options, callback)'
    fullName: 'getNodeValueAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->. 结果`value`的属性是一个字符串, 其中包含引用的节点的值。'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getNodeValueAsync_1
    summary: 获取节点值。
    remarks: |-
      **要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      function showXmlNodeValues() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getNodeValueAsync(function (asyncResult) {
                          write(asyncResult.value);
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getNodeValueAsync(callback)
    fullName: getNodeValueAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodeValueAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->. 结果`value`的属性是一个字符串, 其中包含引用的节点的值。'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getTextAsync
    summary: 获取自定义 XML 部件中的 XML 节点的文本。
    remarks: |-
      **要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      // Get the built-in core properties XML part by using its ID. This results in a call to Word.
      Office.context.document.customXmlParts.getByIdAsync(
          "{6C3C8BC8-F283-45AE-878A-BAB7291924A1}", function (getByIdAsyncResult) {
          
          // Access the XML part.
          var xmlPart = getByIdAsyncResult.value;
          
          // Add namespaces to the namespace manager. These two calls result in two calls to Word.
          xmlPart.namespaceManager.addNamespaceAsync(
              'cp',
              'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',
              function () {
              xmlPart.namespaceManager.addNamespaceAsync(
                  'dc', 
                  'http://purl.org/dc/elements/1.1/', 
                  function () {

                  // Get XML nodes by using an Xpath expression. This results in a call to Word.
                  xmlPart.getNodesAsync("/cp:coreProperties/dc:title", function (getNodesAsyncResult) {
                      
                      // Get the first node returned by using the Xpath expression. 
                      var node = getNodesAsyncResult.value[0];
                      
                      // Get the text value of the node and use the asyncContext. This results in a call to Word. 
                      // The results are logged to the browser console.
                      node.getTextAsync({asyncContext: "StateNormal"}, function (getTextAsyncResult) {
                        console.log("Text of the title element = " + getTextAsyncResult.value;
                        console.log("The asyncContext value = " + getTextAsyncResult.asyncContext;
                      });
                  });
              });
          });
      });
      ```
    name: 'getTextAsync(options, callback)'
    fullName: 'getTextAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->. 结果`value`的属性是一个字符串, 其中包含引用节点的内部文本。'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getTextAsync_1
    summary: 获取自定义 XML 部件中的 XML 节点的文本。
    remarks: '**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: getTextAsync(callback)
    fullName: getTextAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->. 结果`value`的属性是一个字符串, 其中包含引用节点的内部文本。'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getXmlAsync
    summary: 获取节点的 XML。
    remarks: '**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->. 结果`value`的属性是一个字符串, 其中包含引用的节点的 XML。'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getXmlAsync_1
    summary: 获取节点的 XML。
    remarks: |-
      **要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      function showXmlNodeInnerXml() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getXmlAsync(function (asyncResult) {
                          write(asyncResult.value);
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->. 结果`value`的属性是一个字符串, 其中包含引用的节点的 XML。'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.setNodeValueAsync
    summary: 设置节点值。
    remarks: '**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: 'setNodeValueAsync(value, options, callback)'
    fullName: 'setNodeValueAsync(value, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: 要在节点上设置的值
          type:
            - string
        - id: options
          description: '提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->.'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setNodeValueAsync_1
    summary: 设置节点值。
    remarks: |-
      **要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      function setXmlNodeValue() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node);
                      node.setNodeValueAsync("item number" + i, function (result) { });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'setNodeValueAsync(value, callback)'
    fullName: 'setNodeValueAsync(value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNodeValueAsync(value: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: 要在节点上设置的值
          type:
            - string
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->.'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setTextAsync
    summary: 异步设置自定义 XML 部件中 XML 节点的文本。
    remarks: |-
      **要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      // Learn how to set the text value of a node in a custom XML part from the following example.

      // Get the built-in core properties XML part by using its ID. This results in a call to Word.
      Office.context.document.customXmlParts.getByIdAsync(
          "{6C3C8BC8-F283-45AE-878A-BAB7291924A1}",
          function (getByIdAsyncResult) {
          
          // Access the XML part.
          var xmlPart = getByIdAsyncResult.value;
          
          // Add namespaces to the namespace manager. These two calls result in two calls to Word.
          xmlPart.namespaceManager.addNamespaceAsync(
              'cp', 
              'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', 
              function () {
              xmlPart.namespaceManager.addNamespaceAsync(
                  'dc', 
                  'http://purl.org/dc/elements/1.1/', 
                  function () {

                  // Get XML nodes by using an Xpath expression. This results in a call to the host.
                  xmlPart.getNodesAsync("/cp:coreProperties/dc:subject", function (getNodesAsyncResult) {
                      
                      // Get the first node returned by using the Xpath expression.
                      // This will be the subject element in this example.
                      var subjectNode = getNodesAsyncResult.value[0];
                      
                      // Set the text value of the subject node and use the asyncContext. 
                      // This results in a call to the host.  The results are logged to the browser console.
                      subjectNode.setTextAsync(
                          "newSubject", 
                          {asyncContext: "StateNormal"}, 
                          function (setTextAsyncResult) {
                              console.log("The status of the call: " + setTextAsyncResult.status);
                              console.log("The asyncContext value = " + setTextAsyncResult.asyncContext);
                      });
                  });
              });
          });
      });
      ```
    name: 'setTextAsync(text, options, callback)'
    fullName: 'setTextAsync(text, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: text
          description: 必需。 XML 节点的文本值。
          type:
            - string
        - id: options
          description: '提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->.'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setTextAsync_1
    summary: 异步设置自定义 XML 部件中 XML 节点的文本。
    remarks: '**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: 'setTextAsync(text, callback)'
    fullName: 'setTextAsync(text, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTextAsync(text: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: text
          description: 必需。 XML 节点的文本值。
          type:
            - string
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->.'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setXmlAsync
    summary: 设置节点 XML。
    remarks: |-
      **要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)

      #### <a name="examples"></a>示例

      ```javascript
      function setXmlNodeInnerXml() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.setXmlAsync("<childNode>" + i + "</childNode>");
                  }
              });
          });
      }
      ```
    name: 'setXmlAsync(xml, options, callback)'
    fullName: 'setXmlAsync(xml, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: 要在节点上设置的 XML
          type:
            - string
        - id: options
          description: '提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->.'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setXmlAsync_1
    summary: 设置节点 XML。
    remarks: '**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)'
    name: 'setXmlAsync(xml, callback)'
    fullName: 'setXmlAsync(xml, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXmlAsync(xml: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: 要在节点上设置的 XML
          type:
            - string
        - id: callback
          description: '可选。 回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "<!-- -->.'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.baseName
    summary: 获取不带命名空间前缀的节点的基名称（如有）。
    name: baseName
    fullName: baseName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'baseName: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          function showXmlNodeBaseNames() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.baseName);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlNode.namespaceUri
    summary: 检索 CustomXMLPart 的字符串 GUID。
    name: namespaceUri
    fullName: namespaceUri
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceUri: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          function showXmlNamespaceUri() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.namespaceUri);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlNode.nodeType
    summary: 获取 CustomXMLNode 的类型。
    name: nodeType
    fullName: nodeType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nodeType: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          function showXmlNodeType() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.nodeType);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```