### YamlMime:UniversalReference
ms.openlocfilehash: 23b7483ce952c74d17ee7e8fd2f70b9ad37ed7cc
ms.sourcegitcommit: b05ee546d9dfbc914c8d1c594d9b206b04780bbc
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 11/22/2018
ms.locfileid: "26647845"
items:
- uid: office.Office.Settings
  summary: 表示作为名称/值对存储在主机文档中的任务窗格或内容外接程序的自定义设置。
  remarks: >-
    <table><tr><td>主机</td><td>Access、Excel、PowerPoint 和 Word</td></tr>


    <tr><td>要求集</td><td>设置</td></tr></table>


    使用 Settings 对象的方法创建的设置将保存每个加载项和每个文档。 即，它们是仅供创建它们的外接程序并且只能从保存它们的文档。


    设置的名称为 string，而值可以是 string、 number、 boolean、 null、 对象或数组。


    Settings 对象的 Document 对象下一部分会自动加载，可通过外接程序被激活时调用该对象设置属性。


    开发人员，负责调用 saveAsync 方法后添加或删除设置保存在文档中的设置。
  name: Office.Settings
  fullName: Office.Settings
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Settings.addHandlerAsync
  - office.Office.Settings.get
  - office.Office.Settings.refreshAsync
  - office.Office.Settings.remove
  - office.Office.Settings.removeHandlerAsync
  - office.Office.Settings.saveAsync
  - office.Office.Settings.set
- uid: office.Office.Settings.addHandlerAsync
  summary: >-
    添加 settingsChanged 事件的事件处理程序。


    重要说明： 外接程序的代码可以注册的加载项运行的任何 Excel 客户端中，但仅当外接程序将加载包含在 Excel Online 中，打开电子表格时，将触发该事件时 settingsChanged 事件的处理程序和编辑多个用户电子表格 （共同创作）。 因此，实际上 settingsChanged 事件只支持 Excel Online 中共同创作方案。
  remarks: "<table><tr><td>要求集</td><td>设置</td></tr></table>\n\n只要每个事件处理程序函数的名称是唯一的您可以添加为指定的 eventType 的多个事件处理程序。\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction addSelectionChangedEventHandler() {\n    Office.context.document.settings.addHandlerAsync(Office.EventType.SettingsChanged, MyHandler);\n}\n\nfunction MyHandler(eventArgs) {\n    write('Event raised: ' + eventArgs.type);\n    doSomethingWithSettings(eventArgs.settings);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: 指定要添加的事件的类型。必需。
      type:
      - Office.EventType
    - id: handler
      description: 事件处理程序函数添加，其唯一参数是类型[Office.SettingsChangedEventArgs](xref:office.Office.SettingsChangedEventArgs)的<!-- -->。 必需。
      type:
      - any
    - id: options
      description: 提供用于保留不变，用于在回调中的任何类型的上下文数据的选项。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: >-
        可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。


        <table> <tr> <th>属性</th> <th>用于...</th> </tr> <tr> <td>AsyncResult.value</td> <td>始终返回 undefined，因为没有数据或对象来检索添加事件处理程序时。</td> </tr> <tr> <td>AsyncResult.status</td> <td>确定操作是成功还是失败。</td> </tr> <tr> <td>AsyncResult.error</td> <td>如果操作失败，则访问提供错误信息的 Error 对象。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>在 AsyncResult 对象中未经改动的返回的任何类型的用户定义项。</td> </tr> </table>


        **支持详细信息**


        下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。


        有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。


        *支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> </td><td> Y </td><td> </td></tr> </table>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Settings.get
  summary: 检索指定设置。
  remarks: "<table><tr><td>要求集</td><td>设置</td></tr></table>\n\n**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th><th> Office for Mac? </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>PowerPoint</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> </table>\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction displayMySetting() {\n    write('Current value for mySetting: ' + Office.context.document.settings.get('mySetting'));\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: get(name)
  fullName: get
  langs:
  - typeScript
  type: method
  syntax:
    content: 'get(name: string): any;'
    return:
      type:
      - any
      description: 一个对象，将属性名称映射到 JSON 序列化值。
    parameters:
    - id: name
      description: ''
      type:
      - string
- uid: office.Office.Settings.refreshAsync
  summary: 读取文档中保存的所有设置并刷新内容或任务窗格外接程序在内存中保留的这些设置的副本。
  remarks: "<table><tr><td>要求集</td><td>设置</td></tr></table>\n\n此方法可在 Excel、 Word 和 PowerPoint coauthoring 方案时的相同的加载项的多个实例正在对同一文档。 因为每一加载项运行正常加载文档中的设置的内存中副本针对在用户打开它，每个用户所使用的值可以获取同步的设置的时间。每当外接程序的实例调用 Settings.saveAsync 方法以持续的所有文档的该用户的设置，则可以发生此错误。 为 settingsChanged 事件的外接程序从事件处理程序调用 refreshAsync 方法将刷新所有用户的设置值。\n\n在传递给 refreshAsync 方法的回调函数中，您可以使用 AsyncResult 对象的属性返回以下信息。\n\n<table> <tr> <th>属性</th> <th>用于...</th> </tr> <tr> <td>AsyncResult.value</td> <td>访问包含刷新后的值的 Settings 对象。</td> </tr> <tr> <td>AsyncResult.status</td> <td>确定操作是成功还是失败。</td> </tr> <tr> <td>AsyncResult.error</td> <td>如果操作失败，则访问提供错误信息的 Error 对象。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>在 AsyncResult 对象中未经改动的返回的任何类型的用户定义项。</td> </tr> </table>\n\n**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> </td></tr> <tr><td><strong>PowerPoint</strong></td><td> Y </td><td> Y </td><td> </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction refreshSettings() {\n    Office.context.document.settings.refreshAsync(function (asyncResult) {\n        write('Settings refreshed with status: ' + asyncResult.status);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: refreshAsync(callback)
  fullName: refreshAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAsync(callback?: (result: AsyncResult<Office.Settings>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。 `value`属性的结果是使用刷新值[Office.Settings](xref:office.Office.Settings)对象。
      type:
      - '(result: AsyncResult<Office.Settings>) => void'
- uid: office.Office.Settings.remove
  summary: >-
    移除指定设置。


    重要说明： 注意 Settings.remove 方法影响设置属性包的内存中副本。 若要保留在文档中，在调用 Settings.remove 方法后，然后外接程序已关闭，某些点指定的设置的删除操作必须调用 Settings.saveAsync 方法。
  remarks: >-
    <table><tr><td>要求集</td><td>设置</td></tr></table>


    null 是设置的有效值。因此，将 null 分配给设置不会将它从设置属性包中删除。


    **支持详细信息**


    下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。


    有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。


    *支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th><th> Office for Mac? </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>PowerPoint</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> </table>

    #### <a name="examples"></a>示例


    ```javascript

    function removeMySetting() {
        Office.context.document.settings.remove('mySetting');
    }

    ```
  name: remove(name)
  fullName: remove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'remove(name: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: name
      description: ''
      type:
      - string
- uid: office.Office.Settings.removeHandlerAsync
  summary: 删除 settingsChanged 事件的事件处理程序。
  remarks: "<table><tr><td>要求集</td><td>设置</td></tr></table>\n\n如果调用 removeHandlerAsync 方法时省略了可选 handler 参数，则将删除为指定的 eventType 的所有事件处理程序。\n\n当执行您传递给 callback 形参的函数时，它会接收您可以从回调函数的唯一参数访问的 AsyncResult 对象。\n\n在传递给 removeHandlerAsync 方法的回调函数中，您可以使用 AsyncResult 对象的属性返回以下信息。\n\n**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> </td><td> Y </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction removeSettingsChangedEventHandler() {\n    Office.context.document.settings.removeHandlerAsync(Office.EventType.SettingsChanged, MyHandler);\n}\n\nfunction MyHandler(eventArgs) {\n    write('Event raised: ' + eventArgs.type);\n    doSomethingWithSettings(eventArgs.settings);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: 指定要移除事件的类型。必需。
      type:
      - Office.EventType
    - id: options
      description: 提供选项以确定哪些事件处理程序或处理程序将删除。
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Settings.saveAsync
  summary: 将设置属性包的内存副本保留到文档中。
  remarks: "外接程序之前保存的所有设置都会在外接程序初始化时加载。因此，在会话的生存期内，你可以只使用 set 和 get 方法来处理设置属性包的内存中副本。如果你希望保留设置以便在下次使用外接程序时使用，请使用 saveAsync 方法。\n\n注意： 这种 saveAsync 方法保留到文档文件内存中设置属性包。 但是，仅当用户 （或自动恢复设置） 将文档保存到文件系统时保存对文档文件本身的更改。 RefreshAsync 方法才有用 coauthoring 方案时相同的加载项的其他实例可能更改设置，并应进行这些更改可用于所有实例中。\n\n<table> <tr> <th>属性</th> <th>用于...</th> </tr> <tr> <td>AsyncResult.value</td> <td>始终返回 undefined，因为没有要检索数据或对象。</td> </tr> <tr> <td>AsyncResult.status</td> <td>确定操作是成功还是失败。</td> </tr> <tr> <td>AsyncResult.error</td> <td>如果操作失败，则访问提供错误信息的 Error 对象。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>在 AsyncResult 对象中未经改动的返回的任何类型的用户定义项。</td> </tr> </table>\n\n**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th><th> Office for Mac? </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>PowerPoint</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> </table>\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction persistSettings() {\n    Office.context.document.settings.saveAsync(function (asyncResult) {\n        write('Settings saved with status: ' + asyncResult.status);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: saveAsync(options, callback)
  fullName: saveAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(options?: SaveSettingsOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 提供用于保存设置选项。
      type:
      - office.Office.SaveSettingsOptions
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Settings.set
  summary: >-
    设置或创建指定设置。


    重要说明： 注意 Settings.set 方法影响设置属性包的内存中副本。 若要确保，添加或更改设置将可供外接程序的下次打开文档时，在某些点之后调用 Settings.set 方法且之前关闭外接程序，必须调用 Settings.saveAsync 方法以持续在文档中的设置。
  remarks: >-
    <table><tr><td>要求集</td><td>设置</td></tr></table>


    Set 方法创建指定名称的新设置，如果它不存在，或在设置属性包的内存中副本中设置指定名称的现有设置。 调用 Settings.saveAsync 方法后，值存储在文档中为其数据类型的序列化的 JSON 表示形式。 适用于每一加载项的设置最多为 2 MB。


    **支持详细信息**


    下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。


    有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。


    *支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th><th> Office for Mac? </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>PowerPoint</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td><td> Y </td></tr> </table>

    #### <a name="examples"></a>示例


    ```javascript

    function setMySetting() {
        Office.context.document.settings.set('mySetting', 'mySetting value');
    }

    ```
  name: set(name, value)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(name: string, value: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: name
      description: ''
      type:
      - string
    - id: value
      description: 指定要存储的值。
      type:
      - any
