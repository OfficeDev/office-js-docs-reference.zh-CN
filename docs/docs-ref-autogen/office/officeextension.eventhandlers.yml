### YamlMime:UniversalReference
ms.openlocfilehash: 15c55ef9b4aeb979d50f77d5282fac4b86e081b7
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 11/09/2018
ms.locfileid: "26226188"
items:
- uid: office.OfficeExtension.EventHandlers
  name: OfficeExtension.EventHandlers
  fullName: OfficeExtension.EventHandlers
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.OfficeExtension.EventHandlers.constructor
  - office.OfficeExtension.EventHandlers.add
  - office.OfficeExtension.EventHandlers.remove
- uid: office.OfficeExtension.EventHandlers.constructor
  summary: <span data-ttu-id="17f06-101">构造的[事件处理](xref:office.OfficeExtension.EventHandlers)类的新实例</span><span class="sxs-lookup"><span data-stu-id="17f06-101">Constructs a new instance of the [EventHandlers](xref:office.OfficeExtension.EventHandlers) class</span></span>
  name: constructor(context, parentObject, name, eventInfo)
  fullName: constructor
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(context: ClientRequestContext, parentObject: ClientObject, name: string, eventInfo: EventInfo<T>);'
    parameters:
    - id: context
      description: ''
      type:
      - office.OfficeExtension.ClientRequestContext
    - id: parentObject
      description: ''
      type:
      - office.OfficeExtension.ClientObject
    - id: name
      description: ''
      type:
      - string
    - id: eventInfo
      description: ''
      type:
      - EventInfo<T>
- uid: office.OfficeExtension.EventHandlers.add
  name: add(handler)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(handler: (args: T) => Promise<any>): EventHandlerResult<T>;'
    return:
      type:
      - EventHandlerResult<T>
      description: ''
    parameters:
    - id: handler
      description: ''
      type:
      - '(args: T) => Promise<any>'
- uid: office.OfficeExtension.EventHandlers.remove
  name: remove(handler)
  fullName: remove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'remove(handler: (args: T) => Promise<any>): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: handler
      description: ''
      type:
      - '(args: T) => Promise<any>'
