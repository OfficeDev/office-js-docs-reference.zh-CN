### YamlMime:TSPackage
uid: office!
name: office
type: package
summary: ''
interfaces:
- office!Office.Actions:interface
- office!Office.AddBindingFromNamedItemOptions:interface
- office!Office.AddBindingFromPromptOptions:interface
- office!Office.AddBindingFromSelectionOptions:interface
- office!Office.Addin:interface
- office!Office.AddinCommands.Event:interface
- office!Office.AddinCommands.EventCompletedOptions:interface
- office!Office.AddinCommands.Source:interface
- office!Office.AsyncContextOptions:interface
- office!Office.AsyncResult:interface
- office!Office.Auth:interface
- office!Office.AuthOptions:interface
- office!Office.Binding:interface
- office!Office.BindingDataChangedEventArgs:interface
- office!Office.Bindings:interface
- office!Office.BindingSelectionChangedEventArgs:interface
- office!Office.Context:interface
- office!Office.ContextInformation:interface
- office!Office.Control:interface
- office!Office.CustomXmlNode:interface
- office!Office.CustomXmlPart:interface
- office!Office.CustomXmlParts:interface
- office!Office.CustomXmlPrefixMappings:interface
- office!Office.Dialog:interface
- office!Office.DialogOptions:interface
- office!Office.DialogParentMessageReceivedEventArgs:interface
- office!Office.Document:interface
- office!Office.DocumentSelectionChangedEventArgs:interface
- office!Office.Error:interface
- office!Office.File:interface
- office!Office.FileProperties:interface
- office!Office.GetBindingDataOptions:interface
- office!Office.GetFileOptions:interface
- office!Office.GetSelectedDataOptions:interface
- office!Office.GoToByIdOptions:interface
- office!Office.IPromiseConstructor:interface
- office!Office.MatrixBinding:interface
- office!Office.NodeDeletedEventArgs:interface
- office!Office.NodeInsertedEventArgs:interface
- office!Office.NodeReplacedEventArgs:interface
- office!Office.OfficeTheme:interface
- office!Office.RangeCoordinates:interface
- office!Office.RangeFormatConfiguration:interface
- office!Office.RemoveHandlerOptions:interface
- office!Office.RequirementSetSupport:interface
- office!Office.Ribbon:interface
- office!Office.RibbonUpdaterData:interface
- office!Office.SaveSettingsOptions:interface
- office!Office.SetBindingDataOptions:interface
- office!Office.SetSelectedDataOptions:interface
- office!Office.Settings:interface
- office!Office.SettingsChangedEventArgs:interface
- office!Office.Slice:interface
- office!Office.Tab:interface
- office!Office.TableBinding:interface
- office!Office.TextBinding:interface
- office!Office.UI:interface
- office!Office.VisibilityModeChangedMessage:interface
- office!OfficeExtension.DebugInfo:interface
- office!OfficeExtension.EmbeddedOptions:interface
- office!OfficeExtension.EventInfo:interface
- office!OfficeExtension.LoadOption:interface
- office!OfficeExtension.RequestContextDebugInfo:interface
- office!OfficeExtension.RequestUrlAndHeaderInfo:interface
- office!OfficeExtension.RunOptions:interface
- office!OfficeExtension.UpdateOptions:interface
enums:
- office!Office.ActiveView:enum
- office!Office.AsyncResultStatus:enum
- office!Office.BindingType:enum
- office!Office.CoercionType:enum
- office!Office.CustomXMLNodeType:enum
- office!Office.DocumentMode:enum
- office!Office.EventType:enum
- office!Office.FileType:enum
- office!Office.FilterType:enum
- office!Office.GoToType:enum
- office!Office.HostType:enum
- office!Office.Index:enum
- office!Office.InitializationReason:enum
- office!Office.PlatformType:enum
- office!Office.ProjectProjectFields:enum
- office!Office.ProjectResourceFields:enum
- office!Office.ProjectTaskFields:enum
- office!Office.ProjectViewTypes:enum
- office!Office.SelectionMode:enum
- office!Office.StartupBehavior:enum
- office!Office.Table:enum
- office!Office.ValueFormat:enum
- office!Office.VisibilityMode:enum
classes:
- office!Office.TableData:class
- office!OfficeExtension.ClientObject:class
- office!OfficeExtension.ClientRequestContext:class
- office!OfficeExtension.ClientResult:class
- office!OfficeExtension.EmbeddedSession:class
- office!OfficeExtension.Error:class
- office!OfficeExtension.ErrorCodes:class
- office!OfficeExtension.EventHandlerResult:class
- office!OfficeExtension.EventHandlers:class
- office!OfficeExtension.TrackedObjects:class
functions:
- name: Office.initialize(reason)
  uid: office!Office.initialize:function(1)
  package: office!
  summary: >-
    加载运行时环境和外接程序准备好开始与应用和托管文档交互时发生。


    Initialize 事件侦听器函数的 reason 参数返回一个 `InitializationReason` 枚举值，该值指定初始化的发生方式。 任务窗格外接程序或内容外接程序可以通过下列两种方式进行初始化：


    - 用户刚刚将其从 Office 主机应用程序功能区的 "插入" 选项卡上的 "外接程序" 下拉列表的 "最近使用的外接程序" 部分插入，或从 "插入外接程序" 对话框中插入。


    - 用户打开已包含外接程序的文档。


    *注意*： initialize 事件侦听器函数的 reason 参数仅返回 `InitializationReason` 任务窗格和内容外接程序的枚举值。它不会返回 Outlook 外接程序的值。
  remarks: "**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅 [运行 Office 加载项的要求](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Windows 版 Office </th><th> Web 浏览器中的 Office </th><th> iPad 版 Office </th><th> 移动设备上的 Outlook </th><th> Mac 版 Office </th></tr> <tr><td><strong> Excel </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> Y </td></tr> <tr><td><strong> Outlook </strong></td><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y </td></tr> <tr><td><strong> PowerPoint </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> Y </td></tr> <tr><td><strong> 项目 </strong></td><td> Y </td><td> </td><td> </td><td> </td><td> Y </td></tr> <tr><td><strong> Word </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> Y </td></tr> </table>\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\n// You can use the value of the InitializationEnumeration to implement different logic for\n// when the add-in is first inserted versus when it is already part of the document.\n// The following example shows some simple logic that uses the value of the reason parameter\n// to display how the task pane or content add-in was initialized.\nOffice.initialize = function (reason) {\n    // Checks for the DOM to load using the jQuery ready function.\n    $(document).ready(function () {\n    // After the DOM is loaded, code specific to the add-in can run.\n    // Display initialization reason.\n    if (reason == \"inserted\")\n    write(\"The add-in was just inserted.\");\n\n    if (reason == \"documentOpened\")\n    write(\"The add-in is already part of the document.\");\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function initialize(reason: InitializationReason): void;'
    parameters:
    - id: reason
      description: 指示应用程序的初始化方式。
      type: <xref uid="office!Office.InitializationReason:enum" />
    return:
      type: void
      description: ''
- name: Office.isSetSupported(name, minVersion)
  uid: office!Office.isSetSupported:function(1)
  package: office!
  summary: 检查主机 Office 应用程序是否支持指定的要求集。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function isSetSupported(name: string, minVersion?: string): boolean;'
    parameters:
    - id: name
      description: 集名称;例如，"MatrixBindings"。
      type: string
    - id: minVersion
      description: 所需的最低版本;例如，"1.4"。
      type: string
    return:
      type: boolean
      description: ''
- name: Office.onReady(callback)
  uid: office!Office.onReady:function(1)
  package: office!
  summary: 确保 Office JavaScript Api 已准备就绪，可供外接程序调用。 如果该框架尚未初始化，则回拨或承诺将一直等到 Office 主机准备好接受 API 调用。 请注意，虽然此 API 适用于 Office 外接程序，但也可在外接程序外使用。 在这种情况下，一旦 Office.js 确定它在 Office 主机应用程序外部运行，它将调用回调并为主机和平台解析 "null" 承诺。
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function onReady(callback?: (info: { host: HostType, platform: PlatformType }) => any): Promise<{ host: HostType, platform: PlatformType }>;'
    parameters:
    - id: callback
      description: 一个可选的回调方法，它将接收主机和平台信息。 此外，外接程序可能只需要等待由函数返回的承诺来解决，而不是使用回调。
      type: '(info: { host: <xref uid="office!Office.HostType:enum" />, platform: <xref uid="office!Office.PlatformType:enum" /> }) =&gt; any'
    return:
      type: 'Promise&lt;{ host: <xref uid="office!Office.HostType:enum" />, platform: <xref uid="office!Office.PlatformType:enum" /> }&gt;'
      description: 完成初始化后，包含主机和平台信息的承诺。
- name: Office.select(expression, callback)
  uid: office!Office.select:function(1)
  package: office!
  summary: 返回表达式中所述的对象承诺。 仅在方法失败时调用回调。
  remarks: >-
    **支持详细信息**


    下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。


    有关 Office 主机应用程序和服务器要求的详细信息，请参阅 [运行 Office 加载项的要求](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *支持的主机（按平台）* <table> <tr><th> </th><th> Windows 版 Office </th><th> Web 浏览器中的 Office </th><th> iPad 版 Office </th></tr> <tr><td><strong> Excel </strong></td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong> Word </strong></td><td> Y </td><td> </td><td> Y </td></tr> </table>


    #### <a name="examples"></a>示例


    ```javascript

    // The following code example uses the select method to retrieve a binding with the id "cities" from

    // the Bindings collection, and then calls the addHandlerAsync method to add an event handler for the

    // dataChanged event of the binding.

    function addBindingDataChangedEventHandler() {
        Office.select("bindings#cities", function onError(){}).addHandlerAsync(Office.EventType.BindingDataChanged,
        function (eventArgs) {
            doSomethingWithBinding(eventArgs.binding);
        });
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function select(expression: string, callback?: (result: AsyncResult<any>) => void): Binding;'
    parameters:
    - id: expression
      description: 要检索的对象。 示例 "bindings \# BindingName" 检索名为 "BindingName" 的绑定的绑定承诺
      type: string
    - id: callback
      description: 可选。 回调返回时调用的函数，其唯一的参数的类型为 " [Office. AsyncResult](xref:office!Office.AsyncResult:interface) "<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;any&gt;) =&gt; void'
    return:
      type: <xref uid="office!Office.Binding:interface" />
      description: ''
- name: Office.useShortNamespace(useShortNamespace)
  uid: office!Office.useShortNamespace:function(1)
  package: office!
  summary: 切换 `Office` 完整 `Microsoft.Office.WebExtension` 命名空间的别名。
  remarks: "**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅 [运行 Office 加载项的要求](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Windows 版 Office </th><th> Web 浏览器中的 Office </th><th> iPad 版 Office </th><th> 移动设备上的 Outlook </th><th> Mac 版 Office </th></tr> <tr><td><strong> Excel </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong> Outlook </strong></td><td> Y </td><td> Y </td><td> </td><td> Y </td><td> Y </td></tr> <tr><td><strong> PowerPoint </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> <tr><td><strong> 项目 </strong></td><td> Y </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong> Word </strong></td><td> Y </td><td> Y </td><td> Y </td><td> </td><td> </td></tr> </table>\n\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction startUsingShortNamespace() {\n    if (typeof Office === 'undefined') {\n        Microsoft.Office.WebExtension.useShortNamespace(true);\n    }\n    else {\n        Office.useShortNamespace(true);\n    }\n    write('Office alias is now ' + typeof Office);\n}\n\nfunction stopUsingShortNamespace() {\n    if (typeof Office === 'undefined') {\n        Microsoft.Office.WebExtension.useShortNamespace(false);\n    }\n    else {\n        Office.useShortNamespace(false);\n    }\n    write('Office alias is now ' + typeof Office);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function useShortNamespace(useShortNamespace: boolean): void;'
    parameters:
    - id: useShortNamespace
      description: 如果为 True，则使用快捷方式别名;否则设置为 false 以禁用它。 默认值为 true。
      type: boolean
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 857c715bbcafb17c20df32383d9c9c44e38699d0
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: zh-CN
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49265953"
