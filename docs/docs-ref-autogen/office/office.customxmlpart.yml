### YamlMime:UniversalReference
items:
  - uid: office.Office.CustomXmlPart
    summary: '<span data-ttu-id="c5a86-101">表示[CustomXmlParts](xref:office.Office.CustomXmlParts)集合中的单个 CustomXMLPart。</span><span class="sxs-lookup"><span data-stu-id="c5a86-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) collection.</span></span>'
    remarks: '<span data-ttu-id="c5a86-102">**主机**: Word</span><span class="sxs-lookup"><span data-stu-id="c5a86-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlPart
    fullName: Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.CustomXmlPart.addHandlerAsync
      - office.Office.CustomXmlPart.addHandlerAsync_1
      - office.Office.CustomXmlPart.deleteAsync
      - office.Office.CustomXmlPart.deleteAsync_1
      - office.Office.CustomXmlPart.getNodesAsync
      - office.Office.CustomXmlPart.getNodesAsync_1
      - office.Office.CustomXmlPart.getXmlAsync
      - office.Office.CustomXmlPart.getXmlAsync_1
      - office.Office.CustomXmlPart.removeHandlerAsync
      - office.Office.CustomXmlPart.removeHandlerAsync_1
      - office.Office.CustomXmlPart.builtIn
      - office.Office.CustomXmlPart.id
      - office.Office.CustomXmlPart.namespaceManager
  - uid: office.Office.CustomXmlPart.addHandlerAsync
    summary: <span data-ttu-id="c5a86-103">使用指定的事件类型将事件处理程序添加到对象。</span><span class="sxs-lookup"><span data-stu-id="c5a86-103">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="c5a86-104">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="c5a86-105">只要每个事件处理程序函数的名称是唯一的, 您就可以为指定的事件类型添加多个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="c5a86-105">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="c5a86-106">指定要添加事件的类型。</span><span class="sxs-lookup"><span data-stu-id="c5a86-106">Specifies the type of event to add.</span></span> <span data-ttu-id="c5a86-107">对于 CustomXmlPart 对象, 可将事件 "参数指定为`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="c5a86-107">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="c5a86-108">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="c5a86-108"></span></span><!-- --><span data-ttu-id="c5a86-109">, 并`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="c5a86-109">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="c5a86-110">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-110"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="c5a86-111">要添加的事件处理程序函数, 其唯一的参数的类型为[NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="c5a86-111">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="c5a86-112">、 [NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="c5a86-112">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="c5a86-113">或[NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="c5a86-113">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: options
          description: '<span data-ttu-id="c5a86-114">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="c5a86-114">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="c5a86-115">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-115">Optional.</span></span> <span data-ttu-id="c5a86-116">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-116">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-117">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-117"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.addHandlerAsync_1
    summary: <span data-ttu-id="c5a86-118">使用指定的事件类型将事件处理程序添加到对象。</span><span class="sxs-lookup"><span data-stu-id="c5a86-118">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="c5a86-119">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-119">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="c5a86-120">只要每个事件处理程序函数的名称是唯一的, 您就可以为指定的事件类型添加多个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="c5a86-120">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="c5a86-121">示例</span><span class="sxs-lookup"><span data-stu-id="c5a86-121">Examples</span></span>

      ```javascript
      // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeDeletedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                  write("A node has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeInsertedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                  write("A node has been inserted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeReplacedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                  write("A node has been replaced.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="c5a86-122">指定要添加事件的类型。</span><span class="sxs-lookup"><span data-stu-id="c5a86-122">Specifies the type of event to add.</span></span> <span data-ttu-id="c5a86-123">对于 CustomXmlPart 对象, 可将事件 "参数指定为`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="c5a86-123">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="c5a86-124">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="c5a86-124"></span></span><!-- --><span data-ttu-id="c5a86-125">, 并`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="c5a86-125">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="c5a86-126">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-126"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="c5a86-127">要添加的事件处理程序函数, 其唯一的参数的类型为[NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="c5a86-127">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="c5a86-128">、 [NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="c5a86-128">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="c5a86-129">或[NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="c5a86-129">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="c5a86-130">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-130">Optional.</span></span> <span data-ttu-id="c5a86-131">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-131">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-132">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-132"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync
    summary: <span data-ttu-id="c5a86-133">删除自定义 XML 部件。</span><span class="sxs-lookup"><span data-stu-id="c5a86-133">Deletes the Custom XML Part.</span></span>
    remarks: '<span data-ttu-id="c5a86-134">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-134">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'deleteAsync(options, callback)'
    fullName: 'deleteAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="c5a86-135">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="c5a86-135">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="c5a86-136">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-136">Optional.</span></span> <span data-ttu-id="c5a86-137">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-137">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-138">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-138"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync_1
    summary: <span data-ttu-id="c5a86-139">删除自定义 XML 部件。</span><span class="sxs-lookup"><span data-stu-id="c5a86-139">Deletes the Custom XML Part.</span></span>
    remarks: |-
      <span data-ttu-id="c5a86-140">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-140">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="c5a86-141">示例</span><span class="sxs-lookup"><span data-stu-id="c5a86-141">Examples</span></span>

      ```javascript
      function deleteXMLPart() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.deleteAsync(function (eventArgs) {
                  write("The XML Part has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: deleteAsync(callback)
    fullName: deleteAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="c5a86-142">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-142">Optional.</span></span> <span data-ttu-id="c5a86-143">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-143">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-144">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-144"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync
    summary: <span data-ttu-id="c5a86-145">异步获取此自定义 XML 部件中与指定 XPath 匹配的任何 CustomXmlNodes。</span><span class="sxs-lookup"><span data-stu-id="c5a86-145">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: '<span data-ttu-id="c5a86-146">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-146">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="c5a86-147">返回指定你想要的节点的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="c5a86-147">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="c5a86-148">必需。</span><span class="sxs-lookup"><span data-stu-id="c5a86-148">Required.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="c5a86-149">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="c5a86-149">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="c5a86-150">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-150">Optional.</span></span> <span data-ttu-id="c5a86-151">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-151">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-152">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-152"></span></span> <span data-ttu-id="c5a86-153">结果`value`的属性是 CustomXmlNode 对象的数组, 这些对象代表传递给 xpath 参数的 xpath 表达式指定的节点。</span><span class="sxs-lookup"><span data-stu-id="c5a86-153">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync_1
    summary: <span data-ttu-id="c5a86-154">异步获取此自定义 XML 部件中与指定 XPath 匹配的任何 CustomXmlNodes。</span><span class="sxs-lookup"><span data-stu-id="c5a86-154">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>
    remarks: |-
      <span data-ttu-id="c5a86-155">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-155">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="c5a86-156">示例</span><span class="sxs-lookup"><span data-stu-id="c5a86-156">Examples</span></span>

      ```javascript
      function showXmlNodeType() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node.nodeType);
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: <span data-ttu-id="c5a86-157">返回指定你想要的节点的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="c5a86-157">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="c5a86-158">必需。</span><span class="sxs-lookup"><span data-stu-id="c5a86-158">Required.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="c5a86-159">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-159">Optional.</span></span> <span data-ttu-id="c5a86-160">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-160">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-161">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-161"></span></span> <span data-ttu-id="c5a86-162">结果`value`的属性是 CustomXmlNode 对象的数组, 这些对象代表传递给 xpath 参数的 xpath 表达式指定的节点。</span><span class="sxs-lookup"><span data-stu-id="c5a86-162">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync
    summary: <span data-ttu-id="c5a86-163">异步获取此自定义 XML 部件内的 XML。</span><span class="sxs-lookup"><span data-stu-id="c5a86-163">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: '<span data-ttu-id="c5a86-164">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-164">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="c5a86-165">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="c5a86-165">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="c5a86-166">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-166">Optional.</span></span> <span data-ttu-id="c5a86-167">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-167">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-168">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-168"></span></span> <span data-ttu-id="c5a86-169">结果`value`的属性是一个字符串, 其中包含引用的 CustomXmlPart 对象的 XML。</span><span class="sxs-lookup"><span data-stu-id="c5a86-169">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync_1
    summary: <span data-ttu-id="c5a86-170">异步获取此自定义 XML 部件内的 XML。</span><span class="sxs-lookup"><span data-stu-id="c5a86-170">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="c5a86-171">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-171">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="c5a86-172">示例</span><span class="sxs-lookup"><span data-stu-id="c5a86-172">Examples</span></span>

      ```javascript
      function showXMLPartInnerXML() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getXmlAsync(function (eventArgs) {
                  write(eventArgs.value);
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="c5a86-173">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-173">Optional.</span></span> <span data-ttu-id="c5a86-174">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-175">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-175"></span></span> <span data-ttu-id="c5a86-176">结果`value`的属性是一个字符串, 其中包含引用的 CustomXmlPart 对象的 XML。</span><span class="sxs-lookup"><span data-stu-id="c5a86-176">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync
    summary: <span data-ttu-id="c5a86-177">删除指定事件类型的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="c5a86-177">Removes an event handler for the specified event type.</span></span>
    remarks: '<span data-ttu-id="c5a86-178">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-178">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="c5a86-179">指定要移除事件的类型。</span><span class="sxs-lookup"><span data-stu-id="c5a86-179">Specifies the type of event to remove.</span></span> <span data-ttu-id="c5a86-180">对于 CustomXmlPart 对象, 可将事件 "参数指定为`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="c5a86-180">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="c5a86-181">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="c5a86-181"></span></span><!-- --><span data-ttu-id="c5a86-182">, 并`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="c5a86-182">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="c5a86-183">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-183"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: <span data-ttu-id="c5a86-184">要删除的处理程序的名称。</span><span class="sxs-lookup"><span data-stu-id="c5a86-184">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: options
          description: <span data-ttu-id="c5a86-185">提供用于确定要删除的事件处理程序或处理程序的选项。</span><span class="sxs-lookup"><span data-stu-id="c5a86-185">Provides options to determine which event handler or handlers are removed.</span></span>
          type:
            - office.Office.RemoveHandlerOptions
        - id: callback
          description: '<span data-ttu-id="c5a86-186">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-186">Optional.</span></span> <span data-ttu-id="c5a86-187">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-187">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-188">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-188"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync_1
    summary: <span data-ttu-id="c5a86-189">删除指定事件类型的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="c5a86-189">Removes an event handler for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="c5a86-190">**要求集**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="c5a86-190">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="c5a86-191">示例</span><span class="sxs-lookup"><span data-stu-id="c5a86-191">Examples</span></span>

      ```javascript
      function removeNodeInsertedEventHandler() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}",
              function (result) {
                  var xmlPart = result.value;
                  xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});
          });
      }
      ```
    name: 'removeHandlerAsync(eventType, handler, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="c5a86-192">指定要移除事件的类型。</span><span class="sxs-lookup"><span data-stu-id="c5a86-192">Specifies the type of event to remove.</span></span> <span data-ttu-id="c5a86-193">对于 CustomXmlPart 对象, 可将事件 "参数指定为`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="c5a86-193">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="c5a86-194">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="c5a86-194"></span></span><!-- --><span data-ttu-id="c5a86-195">, 并`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="c5a86-195">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="c5a86-196">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-196"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: <span data-ttu-id="c5a86-197">要删除的处理程序的名称。</span><span class="sxs-lookup"><span data-stu-id="c5a86-197">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="c5a86-198">可选。</span><span class="sxs-lookup"><span data-stu-id="c5a86-198">Optional.</span></span> <span data-ttu-id="c5a86-199">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="c5a86-199">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="c5a86-200">.</span><span class="sxs-lookup"><span data-stu-id="c5a86-200"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.builtIn
    summary: '<span data-ttu-id="c5a86-201">如果内置了自定义 XML 部件, 则为 True; 否则为 false。否则为 false。</span><span class="sxs-lookup"><span data-stu-id="c5a86-201">True, if the custom XML part is built in; otherwise false.</span></span>'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c5a86-202">示例</span><span class="sxs-lookup"><span data-stu-id="c5a86-202">Examples</span></span>

          ```javascript
          function showXMLPartBuiltIn() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.builtIn);
              });
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.id
    summary: <span data-ttu-id="c5a86-203">获取 CustomXMLPart 的 GUID。</span><span class="sxs-lookup"><span data-stu-id="c5a86-203">Gets the GUID of the CustomXMLPart.</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c5a86-204">示例</span><span class="sxs-lookup"><span data-stu-id="c5a86-204">Examples</span></span>

          ```javascript
          function showXMLPartBuiltId() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.id);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.namespaceManager
    summary: '<span data-ttu-id="c5a86-205">获取命名空间前缀映射的集合 ([CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span><span class="sxs-lookup"><span data-stu-id="c5a86-205">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span></span><!-- --><span data-ttu-id="c5a86-206">) 用于当前 CustomXmlPart。</span><span class="sxs-lookup"><span data-stu-id="c5a86-206">) used against the current CustomXmlPart.</span></span>'
    name: namespaceManager
    fullName: namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - office.Office.CustomXmlPrefixMappings
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c5a86-207">示例</span><span class="sxs-lookup"><span data-stu-id="c5a86-207">Examples</span></span>

          ```javascript
          function setXMLPartNamespaceManagerNamespace() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.namespaceManager.addNamespaceAsync("myPrefix", "myNamespace");
              });
          }
          ```