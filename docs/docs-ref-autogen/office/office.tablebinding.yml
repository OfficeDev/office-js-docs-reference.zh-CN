### YamlMime:UniversalReference
items:
  - uid: office.Office.TableBinding
    summary: '<span data-ttu-id="847c1-101">表示两个维度的行和列的绑定，标题可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-101">Represents a binding in two dimensions of rows and columns, optionally with headers.</span></span>'
    remarks: |-
      <span data-ttu-id="847c1-102">TableBinding 对象从对象`id`继承属性`type` 、属性`getDataAsync` 、方法和`setDataAsync`方法。 [](xref:office.Office.Binding)</span><span class="sxs-lookup"><span data-stu-id="847c1-102">The TableBinding object inherits the `id` property, `type` property, `getDataAsync` method, and `setDataAsync` method from the [Office.Binding](xref:office.Office.Binding) object.</span></span>

      <span data-ttu-id="847c1-103">对于 Excel, 请注意, 在建立表绑定后, 用户添加到表中的每个新行都将自动包含在绑定和行计数增加中。</span><span class="sxs-lookup"><span data-stu-id="847c1-103">For Excel, note that after you establish a table binding, each new row a user adds to the table is automatically included in the binding and rowCount increases.</span></span>
    name: Office.TableBinding
    fullName: Office.TableBinding
    langs:
      - typeScript
    type: interface
    extends:
      - 'Binding '
    package: office
    children:
      - office.Office.TableBinding.addColumnsAsync
      - office.Office.TableBinding.addColumnsAsync_1
      - office.Office.TableBinding.addRowsAsync
      - office.Office.TableBinding.addRowsAsync_1
      - office.Office.TableBinding.clearFormatsAsync
      - office.Office.TableBinding.clearFormatsAsync_1
      - office.Office.TableBinding.deleteAllDataValuesAsync
      - office.Office.TableBinding.deleteAllDataValuesAsync_1
      - office.Office.TableBinding.getFormatsAsync
      - office.Office.TableBinding.getFormatsAsync_1
      - office.Office.TableBinding.setFormatsAsync
      - office.Office.TableBinding.setFormatsAsync_1
      - office.Office.TableBinding.setTableOptionsAsync
      - office.Office.TableBinding.setTableOptionsAsync_1
      - office.Office.TableBinding.columnCount
      - office.Office.TableBinding.hasHeaders
      - office.Office.TableBinding.rowCount
  - uid: office.Office.TableBinding.addColumnsAsync
    summary: <span data-ttu-id="847c1-104">将指定的数据作为其他列添加到表中。</span><span class="sxs-lookup"><span data-stu-id="847c1-104">Adds the specified data to the table as additional columns.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-105">若要添加一个或多个指定数据和标头值的列, 请将 TableData 对象作为 data 参数传递。</span><span class="sxs-lookup"><span data-stu-id="847c1-105">To add one or more columns specifying the values of the data and headers, pass a TableData object as the data parameter.</span></span> <span data-ttu-id="847c1-106">若要添加仅指定数据的一个或多个列，请将数组的数组（“矩阵”）以 data 参数形式传递。</span><span class="sxs-lookup"><span data-stu-id="847c1-106">To add one or more columns specifying only the data, pass an array of arrays ("matrix") as the data parameter.</span></span>

      <span data-ttu-id="847c1-107">addColumnsAsync 操作的成功或失败是原子操作。</span><span class="sxs-lookup"><span data-stu-id="847c1-107">The success or failure of an addColumnsAsync operation is atomic.</span></span> <span data-ttu-id="847c1-108">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span><span class="sxs-lookup"><span data-stu-id="847c1-108">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="847c1-109">作为 data 参数传递的数组中的每一行的行数必须与要更新的表的行数相同。</span><span class="sxs-lookup"><span data-stu-id="847c1-109">Each row in the array you pass as the data argument must have the same number of rows as the table being updated.</span></span> <span data-ttu-id="847c1-110">如果没有，整个操作都会失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-110">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="847c1-p104">数组中的每行和每个单元格都必须成功将该行或单元格添加到表中的新增列中。如果出于任何原因任意行或单元格未能添加成功，则整个操作将失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-p104">Each row and cell in the array must successfully add that row or cell to the table in the newly added column(s). If any row or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="847c1-113">如果将 TableData 对象作为 data 参数传递, 则标头行的数目必须与要更新的表的数目相匹配。</span><span class="sxs-lookup"><span data-stu-id="847c1-113">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="847c1-114">Excel Online 的其他注解: 在对此方法的单个调用中, 传递给 data 参数的 TableData 对象中的单元格总数不能超过20000。</span><span class="sxs-lookup"><span data-stu-id="847c1-114">Additional remark for Excel Online: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      #### <a name="examples"></a><span data-ttu-id="847c1-115">示例</span><span class="sxs-lookup"><span data-stu-id="847c1-115">Examples</span></span>

      ```javascript
      // The following example adds a single column with three rows to a bound table with the id "myTable"
      // by passing a TableData object as the data argument of the addColumnsAsync method. To succeed,
      // the table being updated must have three rows.

      // Add a column to a binding of type table by passing a TableData object.
      function addColumns() {
          var myTable = new Office.TableData();
          myTable.headers = [["Cities"]];
          myTable.rows = [["Berlin"], ["Roma"], ["Tokyo"]];

          Office.context.document.bindings.getByIdAsync("myTable", function (result) {
              result.value.addColumnsAsync(myTable);
          });
      }

      // The following example adds a single column with three rows to a bound table with the id myTable
      // by passing an array of arrays ("matrix") as the data argument of the addColumnsAsync method.
      // To succeed, the table being updated must have three rows.

      // Add a column to a binding of type table by passing an array of arrays.
      function addColumns() {
          var myTable = [["Berlin"], ["Roma"], ["Tokyo"]];

          Office.context.document.bindings.getByIdAsync("myTable", function (result) {
              result.value.addColumnsAsync(myTable);
          });
      }
      ```
    name: 'addColumnsAsync(tableData, options, callback)'
    fullName: 'addColumnsAsync(tableData, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addColumnsAsync(tableData: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableData
          description: '<span data-ttu-id="847c1-116">数组的数组 ("矩阵") 或 TableData 对象, 其中包含要添加到表中的一个或多个数据列。</span><span class="sxs-lookup"><span data-stu-id="847c1-116">An array of arrays ("matrix") or a TableData object that contains one or more columns of data to add to the table.</span></span> <span data-ttu-id="847c1-117">必需。</span><span class="sxs-lookup"><span data-stu-id="847c1-117">Required.</span></span>'
          type:
            - 'TableData | any[][]'
        - id: options
          description: '<span data-ttu-id="847c1-118">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="847c1-118">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="847c1-119">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-119">Optional.</span></span> <span data-ttu-id="847c1-120">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-120">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-121">.</span><span class="sxs-lookup"><span data-stu-id="847c1-121"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.addColumnsAsync_1
    summary: <span data-ttu-id="847c1-122">将指定的数据作为其他列添加到表中。</span><span class="sxs-lookup"><span data-stu-id="847c1-122">Adds the specified data to the table as additional columns.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-123">若要添加一个或多个指定数据和标头值的列, 请将 TableData 对象作为 data 参数传递。</span><span class="sxs-lookup"><span data-stu-id="847c1-123">To add one or more columns specifying the values of the data and headers, pass a TableData object as the data parameter.</span></span> <span data-ttu-id="847c1-124">若要添加仅指定数据的一个或多个列，请将数组的数组（“矩阵”）以 data 参数形式传递。</span><span class="sxs-lookup"><span data-stu-id="847c1-124">To add one or more columns specifying only the data, pass an array of arrays ("matrix") as the data parameter.</span></span>

      <span data-ttu-id="847c1-125">addColumnsAsync 操作的成功或失败是原子操作。</span><span class="sxs-lookup"><span data-stu-id="847c1-125">The success or failure of an addColumnsAsync operation is atomic.</span></span> <span data-ttu-id="847c1-126">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span><span class="sxs-lookup"><span data-stu-id="847c1-126">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="847c1-127">作为 data 参数传递的数组中的每一行的行数必须与要更新的表的行数相同。</span><span class="sxs-lookup"><span data-stu-id="847c1-127">Each row in the array you pass as the data argument must have the same number of rows as the table being updated.</span></span> <span data-ttu-id="847c1-128">如果没有，整个操作都会失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-128">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="847c1-p110">数组中的每行和每个单元格都必须成功将该行或单元格添加到表中的新增列中。如果出于任何原因任意行或单元格未能添加成功，则整个操作将失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-p110">Each row and cell in the array must successfully add that row or cell to the table in the newly added column(s). If any row or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="847c1-131">如果将 TableData 对象作为 data 参数传递, 则标头行的数目必须与要更新的表的数目相匹配。</span><span class="sxs-lookup"><span data-stu-id="847c1-131">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="847c1-132">Excel Online 的其他注解: 在对此方法的单个调用中, 传递给 data 参数的 TableData 对象中的单元格总数不能超过20000。</span><span class="sxs-lookup"><span data-stu-id="847c1-132">Additional remark for Excel Online: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>
    name: 'addColumnsAsync(tableData, callback)'
    fullName: 'addColumnsAsync(tableData, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addColumnsAsync(tableData: TableData | any[][], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableData
          description: '<span data-ttu-id="847c1-133">数组的数组 ("矩阵") 或 TableData 对象, 其中包含要添加到表中的一个或多个数据列。</span><span class="sxs-lookup"><span data-stu-id="847c1-133">An array of arrays ("matrix") or a TableData object that contains one or more columns of data to add to the table.</span></span> <span data-ttu-id="847c1-134">必需。</span><span class="sxs-lookup"><span data-stu-id="847c1-134">Required.</span></span>'
          type:
            - 'TableData | any[][]'
        - id: callback
          description: '<span data-ttu-id="847c1-135">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-135">Optional.</span></span> <span data-ttu-id="847c1-136">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-136">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-137">.</span><span class="sxs-lookup"><span data-stu-id="847c1-137"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.addRowsAsync
    summary: <span data-ttu-id="847c1-138">将指定的数据作为附加行添加到表中。</span><span class="sxs-lookup"><span data-stu-id="847c1-138">Adds the specified data to the table as additional rows.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-139">addRowsAsync 操作的成功或失败是原子操作。</span><span class="sxs-lookup"><span data-stu-id="847c1-139">The success or failure of an addRowsAsync operation is atomic.</span></span> <span data-ttu-id="847c1-140">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span><span class="sxs-lookup"><span data-stu-id="847c1-140">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="847c1-141">作为 data 参数传递的数组中的每一行必须与要更新的表具有相同的列数。</span><span class="sxs-lookup"><span data-stu-id="847c1-141">Each row in the array you pass as the data argument must have the same number of columns as the table being updated.</span></span> <span data-ttu-id="847c1-142">如果没有，整个操作都会失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-142">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="847c1-143">数组中的每个列和单元格必须在新添加的行中将该列或单元格成功添加到表中。</span><span class="sxs-lookup"><span data-stu-id="847c1-143">Each column and cell in the array must successfully add that column or cell to the table in the newly added rows(s).</span></span> <span data-ttu-id="847c1-144">如果由于任何原因而无法设置任何列或单元格, 则整个操作将失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-144">If any column or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="847c1-145">如果将 TableData 对象作为 data 参数传递, 则标头行的数目必须与要更新的表的数目相匹配。</span><span class="sxs-lookup"><span data-stu-id="847c1-145">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="847c1-146">Excel Online 的其他注解: 在对此方法的单个调用中, 传递给 data 参数的 TableData 对象中的单元格总数不能超过20000。</span><span class="sxs-lookup"><span data-stu-id="847c1-146">Additional remark for Excel Online: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>

      #### <a name="examples"></a><span data-ttu-id="847c1-147">示例</span><span class="sxs-lookup"><span data-stu-id="847c1-147">Examples</span></span>

      ```javascript
      function addRowsToTable() {
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              var binding = asyncResult.value;
              binding.addRowsAsync([["6", "k"], ["7", "j"]]);
          });
      }
      ```
    name: 'addRowsAsync(rows, options, callback)'
    fullName: 'addRowsAsync(rows, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addRowsAsync(rows: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rows
          description: '<span data-ttu-id="847c1-148">数组的数组 ("矩阵") 或 TableData 对象, 其中包含要添加到表中的一个或多个数据行。</span><span class="sxs-lookup"><span data-stu-id="847c1-148">An array of arrays ("matrix") or a TableData object that contains one or more rows of data to add to the table.</span></span> <span data-ttu-id="847c1-149">必需。</span><span class="sxs-lookup"><span data-stu-id="847c1-149">Required.</span></span>'
          type:
            - 'TableData | any[][]'
        - id: options
          description: '<span data-ttu-id="847c1-150">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="847c1-150">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="847c1-151">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-151">Optional.</span></span> <span data-ttu-id="847c1-152">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-152">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-153">.</span><span class="sxs-lookup"><span data-stu-id="847c1-153"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.addRowsAsync_1
    summary: <span data-ttu-id="847c1-154">将指定的数据作为附加行添加到表中。</span><span class="sxs-lookup"><span data-stu-id="847c1-154">Adds the specified data to the table as additional rows.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-155">addRowsAsync 操作的成功或失败是原子操作。</span><span class="sxs-lookup"><span data-stu-id="847c1-155">The success or failure of an addRowsAsync operation is atomic.</span></span> <span data-ttu-id="847c1-156">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span><span class="sxs-lookup"><span data-stu-id="847c1-156">That is, the entire add columns operation must succeed, or it will be completely rolled back (and the AsyncResult.status property returned to the callback will report failure):</span></span>

      - <span data-ttu-id="847c1-157">作为 data 参数传递的数组中的每一行必须与要更新的表具有相同的列数。</span><span class="sxs-lookup"><span data-stu-id="847c1-157">Each row in the array you pass as the data argument must have the same number of columns as the table being updated.</span></span> <span data-ttu-id="847c1-158">如果没有，整个操作都会失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-158">If not, the entire operation will fail.</span></span>

      - <span data-ttu-id="847c1-159">数组中的每个列和单元格必须在新添加的行中将该列或单元格成功添加到表中。</span><span class="sxs-lookup"><span data-stu-id="847c1-159">Each column and cell in the array must successfully add that column or cell to the table in the newly added rows(s).</span></span> <span data-ttu-id="847c1-160">如果由于任何原因而无法设置任何列或单元格, 则整个操作将失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-160">If any column or cell fails to be set for any reason, the entire operation will fail.</span></span>

      - <span data-ttu-id="847c1-161">如果将 TableData 对象作为 data 参数传递, 则标头行的数目必须与要更新的表的数目相匹配。</span><span class="sxs-lookup"><span data-stu-id="847c1-161">If you pass a TableData object as the data argument, the number of header rows must match that of the table being updated.</span></span>

      <span data-ttu-id="847c1-162">Excel Online 的其他注解: 在对此方法的单个调用中, 传递给 data 参数的 TableData 对象中的单元格总数不能超过20000。</span><span class="sxs-lookup"><span data-stu-id="847c1-162">Additional remark for Excel Online: The total number of cells in the TableData object passed to the data parameter can't exceed 20,000 in a single call to this method.</span></span>
    name: 'addRowsAsync(rows, callback)'
    fullName: 'addRowsAsync(rows, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addRowsAsync(rows: TableData | any[][], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: rows
          description: '<span data-ttu-id="847c1-163">数组的数组 ("矩阵") 或 TableData 对象, 其中包含要添加到表中的一个或多个数据行。</span><span class="sxs-lookup"><span data-stu-id="847c1-163">An array of arrays ("matrix") or a TableData object that contains one or more rows of data to add to the table.</span></span> <span data-ttu-id="847c1-164">必需。</span><span class="sxs-lookup"><span data-stu-id="847c1-164">Required.</span></span>'
          type:
            - 'TableData | any[][]'
        - id: callback
          description: '<span data-ttu-id="847c1-165">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-165">Optional.</span></span> <span data-ttu-id="847c1-166">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-166">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-167">.</span><span class="sxs-lookup"><span data-stu-id="847c1-167"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.clearFormatsAsync
    summary: <span data-ttu-id="847c1-168">清除绑定表中的格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-168">Clears formatting on the bound table.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-169">有关详细信息, 请参阅[设置 Excel 外接程序中表格的格式](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)。</span><span class="sxs-lookup"><span data-stu-id="847c1-169">See [Format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) for more information.</span></span>

      #### <a name="examples"></a><span data-ttu-id="847c1-170">示例</span><span class="sxs-lookup"><span data-stu-id="847c1-170">Examples</span></span>

      ```javascript
      // The following example shows how to clear the formatting of the bound table with an ID of "myBinding":
      Office.select("bindings#myBinding").clearFormatsAsync();
      ```
    name: 'clearFormatsAsync(options, callback)'
    fullName: 'clearFormatsAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFormatsAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="847c1-171">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="847c1-171">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="847c1-172">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-172">Optional.</span></span> <span data-ttu-id="847c1-173">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-173">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-174">.</span><span class="sxs-lookup"><span data-stu-id="847c1-174"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.clearFormatsAsync_1
    summary: <span data-ttu-id="847c1-175">清除绑定表中的格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-175">Clears formatting on the bound table.</span></span>
    remarks: '<span data-ttu-id="847c1-176">有关详细信息, 请参阅[设置 Excel 外接程序中表格的格式](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)。</span><span class="sxs-lookup"><span data-stu-id="847c1-176">See [Format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table) for more information.</span></span>'
    name: clearFormatsAsync(callback)
    fullName: clearFormatsAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFormatsAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="847c1-177">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-177">Optional.</span></span> <span data-ttu-id="847c1-178">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-178">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-179">.</span><span class="sxs-lookup"><span data-stu-id="847c1-179"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.deleteAllDataValuesAsync
    summary: '<span data-ttu-id="847c1-180">删除表中的所有非标题行及其值，对主机应用程序进行相应切换。</span><span class="sxs-lookup"><span data-stu-id="847c1-180">Deletes all non-header rows and their values in the table, shifting appropriately for the host application.</span></span>'
    remarks: |-
      <span data-ttu-id="847c1-181">在 Excel 中，如果表没有标题行，则此方法将删除表。</span><span class="sxs-lookup"><span data-stu-id="847c1-181">In Excel, if the table has no header row, this method will delete the table itself.</span></span>

      #### <a name="examples"></a><span data-ttu-id="847c1-182">示例</span><span class="sxs-lookup"><span data-stu-id="847c1-182">Examples</span></span>

      ```javascript
      function deleteAllRowsFromTable() {
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              var binding = asyncResult.value;
              binding.deleteAllDataValuesAsync();
          });
      }
      ```
    name: 'deleteAllDataValuesAsync(options, callback)'
    fullName: 'deleteAllDataValuesAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAllDataValuesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="847c1-183">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="847c1-183">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="847c1-184">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-184">Optional.</span></span> <span data-ttu-id="847c1-185">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-185">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-186">.</span><span class="sxs-lookup"><span data-stu-id="847c1-186"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.deleteAllDataValuesAsync_1
    summary: '<span data-ttu-id="847c1-187">删除表中的所有非标题行及其值，对主机应用程序进行相应切换。</span><span class="sxs-lookup"><span data-stu-id="847c1-187">Deletes all non-header rows and their values in the table, shifting appropriately for the host application.</span></span>'
    remarks: '<span data-ttu-id="847c1-188">在 Excel 中，如果表没有标题行，则此方法将删除表。</span><span class="sxs-lookup"><span data-stu-id="847c1-188">In Excel, if the table has no header row, this method will delete the table itself.</span></span>'
    name: deleteAllDataValuesAsync(callback)
    fullName: deleteAllDataValuesAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAllDataValuesAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="847c1-189">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-189">Optional.</span></span> <span data-ttu-id="847c1-190">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-190">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-191">.</span><span class="sxs-lookup"><span data-stu-id="847c1-191"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.getFormatsAsync
    summary: <span data-ttu-id="847c1-192">获取表中指定项的格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-192">Gets the formatting on specified items in the table.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-193">**返回的格式结构**</span><span class="sxs-lookup"><span data-stu-id="847c1-193">**Returned format structure**</span></span>

      <span data-ttu-id="847c1-194">返回值数组中的每个 JavaScript 对象都具有以下格式:`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="847c1-194">Each JavaScript object in the return value array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="847c1-195">该`cells:`属性使用下列值之一指定要设置格式的区域:</span><span class="sxs-lookup"><span data-stu-id="847c1-195">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="847c1-196">**单元格属性中支持的范围**</span><span class="sxs-lookup"><span data-stu-id="847c1-196">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="847c1-197">单元格范围设置</span><span class="sxs-lookup"><span data-stu-id="847c1-197">cells range settings</span></span></th> <th><span data-ttu-id="847c1-198">说明</span><span class="sxs-lookup"><span data-stu-id="847c1-198">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="847c1-199">指定一个范围, 该范围是表中从零开始的第 n 行数据。</span><span class="sxs-lookup"><span data-stu-id="847c1-199">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="847c1-200">指定一个范围, 该范围是表中从零开始的第 n 列数据。</span><span class="sxs-lookup"><span data-stu-id="847c1-200">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="847c1-201">指定作为表的第 i 行和 jth 列的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="847c1-201">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="847c1-202">指定整个表格，包括列标题、数据和总数（如果有）。</span><span class="sxs-lookup"><span data-stu-id="847c1-202">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="847c1-203">仅指定表中的数据（不含标题和总数）。</span><span class="sxs-lookup"><span data-stu-id="847c1-203">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="847c1-204">仅指定标题行。</span><span class="sxs-lookup"><span data-stu-id="847c1-204">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="847c1-205">该`format:`属性指定对应于 Excel 中的 "设置单元格格式" 对话框 (右键单击 " &gt;设置单元格格式" 或 "主页&gt;格式&gt;单元格格式" 单元格) 中可用设置的子集的值。</span><span class="sxs-lookup"><span data-stu-id="847c1-205">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>
    name: 'getFormatsAsync(cellReference, formats, options, callback)'
    fullName: 'getFormatsAsync(cellReference, formats, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormatsAsync(cellReference?: any, formats?: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellReference
          description: '<span data-ttu-id="847c1-206">一个包含名称/值对的对象文本, 用于指定要从其获取格式的单元格范围。</span><span class="sxs-lookup"><span data-stu-id="847c1-206">An object literal containing name-value pairs that specify the range of cells to get formatting from.</span></span>'
          type:
            - any
        - id: formats
          description: <span data-ttu-id="847c1-207">指定要获取的格式属性的数组。</span><span class="sxs-lookup"><span data-stu-id="847c1-207">An array specifying the format properties to get.</span></span>
          type:
            - 'any[]'
        - id: options
          description: '<span data-ttu-id="847c1-208">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="847c1-208">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="847c1-209">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-209">Optional.</span></span> <span data-ttu-id="847c1-210">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-210">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-211">.</span><span class="sxs-lookup"><span data-stu-id="847c1-211"></span></span> <span data-ttu-id="847c1-212">结果`value`的属性是一个数组, 其中包含一个或多个指定其对应单元格的格式的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="847c1-212">The `value` property of the result is an array containing one or more JavaScript objects specifying the formatting of their corresponding cells.</span></span>'
          type:
            - '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
  - uid: office.Office.TableBinding.getFormatsAsync_1
    summary: <span data-ttu-id="847c1-213">获取表中指定项的格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-213">Gets the formatting on specified items in the table.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-214">**返回的格式结构**</span><span class="sxs-lookup"><span data-stu-id="847c1-214">**Returned format structure**</span></span>

      <span data-ttu-id="847c1-215">返回值数组中的每个 JavaScript 对象都具有以下格式:`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="847c1-215">Each JavaScript object in the return value array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="847c1-216">该`cells:`属性使用下列值之一指定要设置格式的区域:</span><span class="sxs-lookup"><span data-stu-id="847c1-216">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="847c1-217">**单元格属性中支持的范围**</span><span class="sxs-lookup"><span data-stu-id="847c1-217">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="847c1-218">单元格范围设置</span><span class="sxs-lookup"><span data-stu-id="847c1-218">cells range settings</span></span></th> <th><span data-ttu-id="847c1-219">说明</span><span class="sxs-lookup"><span data-stu-id="847c1-219">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="847c1-220">指定一个范围, 该范围是表中从零开始的第 n 行数据。</span><span class="sxs-lookup"><span data-stu-id="847c1-220">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="847c1-221">指定一个范围, 该范围是表中从零开始的第 n 列数据。</span><span class="sxs-lookup"><span data-stu-id="847c1-221">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="847c1-222">指定作为表的第 i 行和 jth 列的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="847c1-222">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="847c1-223">指定整个表格，包括列标题、数据和总数（如果有）。</span><span class="sxs-lookup"><span data-stu-id="847c1-223">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="847c1-224">仅指定表中的数据（不含标题和总数）。</span><span class="sxs-lookup"><span data-stu-id="847c1-224">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="847c1-225">仅指定标题行。</span><span class="sxs-lookup"><span data-stu-id="847c1-225">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="847c1-226">该`format:`属性指定对应于 Excel 中的 "设置单元格格式" 对话框 (右键单击 " &gt;设置单元格格式" 或 "主页&gt;格式&gt;单元格格式" 单元格) 中可用设置的子集的值。</span><span class="sxs-lookup"><span data-stu-id="847c1-226">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>
    name: 'getFormatsAsync(cellReference, formats, callback)'
    fullName: 'getFormatsAsync(cellReference, formats, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFormatsAsync(cellReference?: any, formats?: any[], callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellReference
          description: '<span data-ttu-id="847c1-227">一个包含名称/值对的对象文本, 用于指定要从其获取格式的单元格范围。</span><span class="sxs-lookup"><span data-stu-id="847c1-227">An object literal containing name-value pairs that specify the range of cells to get formatting from.</span></span>'
          type:
            - any
        - id: formats
          description: <span data-ttu-id="847c1-228">指定要获取的格式属性的数组。</span><span class="sxs-lookup"><span data-stu-id="847c1-228">An array specifying the format properties to get.</span></span>
          type:
            - 'any[]'
        - id: callback
          description: '<span data-ttu-id="847c1-229">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-229">Optional.</span></span> <span data-ttu-id="847c1-230">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-230">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-231">.</span><span class="sxs-lookup"><span data-stu-id="847c1-231"></span></span> <span data-ttu-id="847c1-232">结果`value`的属性是一个数组, 其中包含一个或多个指定其对应单元格的格式的 JavaScript 对象。</span><span class="sxs-lookup"><span data-stu-id="847c1-232">The `value` property of the result is an array containing one or more JavaScript objects specifying the formatting of their corresponding cells.</span></span>'
          type:
            - '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
  - uid: office.Office.TableBinding.setFormatsAsync
    summary: <span data-ttu-id="847c1-233">设置表格中指定项目和数据的格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-233">Sets formatting on specified items and data in the table.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-234">**指定 cellFormat 参数**</span><span class="sxs-lookup"><span data-stu-id="847c1-234">**Specifying the cellFormat parameter**</span></span>

      <span data-ttu-id="847c1-235">使用 cellFormat 参数设置或更改单元格格式值, 如宽度、高度、字体、背景、对齐方式等。</span><span class="sxs-lookup"><span data-stu-id="847c1-235">Use the cellFormat parameter to set or change cell formatting values, such as width, height, font, background, alignment, and so on.</span></span> <span data-ttu-id="847c1-236">作为 cellFormat 参数传递的值是一个数组, 其中包含一个或多个 JavaScript 对象的列表, 这些对象指定要定位的单元格 (`cells:`</span><span class="sxs-lookup"><span data-stu-id="847c1-236">The value you pass as the cellFormat parameter is an array that contains a list of one or more JavaScript objects that specify which cells to target (`cells:`</span></span><!-- --><span data-ttu-id="847c1-237">) 和格式 (`format:`</span><span class="sxs-lookup"><span data-stu-id="847c1-237">) and the formats (`format:`</span></span><!-- --><span data-ttu-id="847c1-238">) 以应用于它们。</span><span class="sxs-lookup"><span data-stu-id="847c1-238">) to apply to them.</span></span>

      <span data-ttu-id="847c1-239">cellFormat 数组中的每个 JavaScript 对象都具有以下格式:`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="847c1-239">Each JavaScript object in the cellFormat array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="847c1-240">该`cells:`属性使用下列值之一指定要设置格式的区域:</span><span class="sxs-lookup"><span data-stu-id="847c1-240">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="847c1-241">**单元格属性中支持的范围**</span><span class="sxs-lookup"><span data-stu-id="847c1-241">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="847c1-242">单元格范围设置</span><span class="sxs-lookup"><span data-stu-id="847c1-242">cells range settings</span></span></th> <th><span data-ttu-id="847c1-243">说明</span><span class="sxs-lookup"><span data-stu-id="847c1-243">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="847c1-244">指定一个范围, 该范围是表中从零开始的第 n 行数据。</span><span class="sxs-lookup"><span data-stu-id="847c1-244">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="847c1-245">指定一个范围, 该范围是表中从零开始的第 n 列数据。</span><span class="sxs-lookup"><span data-stu-id="847c1-245">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="847c1-246">指定作为表的第 i 行和 jth 列的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="847c1-246">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="847c1-247">指定整个表格，包括列标题、数据和总数（如果有）。</span><span class="sxs-lookup"><span data-stu-id="847c1-247">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="847c1-248">仅指定表中的数据（不含标题和总数）。</span><span class="sxs-lookup"><span data-stu-id="847c1-248">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="847c1-249">仅指定标题行。</span><span class="sxs-lookup"><span data-stu-id="847c1-249">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="847c1-250">该`format:`属性指定对应于 Excel 中的 "设置单元格格式" 对话框 (右键单击 " &gt;设置单元格格式" 或 "主页&gt;格式&gt;单元格格式" 单元格) 中可用设置的子集的值。</span><span class="sxs-lookup"><span data-stu-id="847c1-250">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>

      <span data-ttu-id="847c1-251">将`format:`属性的值指定为 JavaScript 对象文本中的一个或多个属性名称/值对的列表。</span><span class="sxs-lookup"><span data-stu-id="847c1-251">You specify the value of the `format:` property as a list of one or more property name - value pairs in a JavaScript object literal.</span></span> <span data-ttu-id="847c1-252">属性名称指定要设置的格式属性的名称，值则指定属性值。</span><span class="sxs-lookup"><span data-stu-id="847c1-252">The property name specifies the name of the formatting property to set, and value specifies the property value.</span></span> <span data-ttu-id="847c1-253">您可以为给定的格式指定多个值，如字体的颜色及大小。</span><span class="sxs-lookup"><span data-stu-id="847c1-253">You can specify multiple values for a given format, such as both a font's color and size.</span></span>

      <span data-ttu-id="847c1-254">以下是三`format:`个属性值示例:</span><span class="sxs-lookup"><span data-stu-id="847c1-254">Here's three `format:` property value examples:</span></span>

      `//Set cells: font color to green and size to 15 points.`

      `format: {fontColor : "green", fontSize : 15}`

      `//Set cells: border to dotted blue.`

      `format: {borderStyle: "dotted", borderColor: "blue"}`

      `//Set cells: background to red and alignment to centered.`

      `format: {backgroundColor: "red", alignHorizontal: "center"}`

      <span data-ttu-id="847c1-255">您可以通过在`numberFormat:`属性中指定数字格式 "code" 字符串来指定数字格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-255">You can specify number formats by specifying the number formatting "code" string in the `numberFormat:` property.</span></span> <span data-ttu-id="847c1-256">你可以指定的数字格式字符串对应于你可以使用“设置单元格格式”对话框“数字”选项卡上的“自定义”类别在 Excel 中设置的字符串。</span><span class="sxs-lookup"><span data-stu-id="847c1-256">The number format strings you can specify correspond to those you can set in Excel using the Custom category on the Number tab of the Format Cells dialog box.</span></span> <span data-ttu-id="847c1-257">此示例演示如何将数字格式设置为带两个小数位的百分数形式：</span><span class="sxs-lookup"><span data-stu-id="847c1-257">This example shows how to format a number as a percentage with two decimal places:</span></span>

      `format: {numberFormat:"0.00%"}`

      <span data-ttu-id="847c1-258">有关更多详细信息, 请参阅如何[创建自定义数字格式](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span><span class="sxs-lookup"><span data-stu-id="847c1-258">For more detail, see how to [Create a custom number format](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span></span><!-- --><span data-ttu-id="847c1-259">.</span><span class="sxs-lookup"><span data-stu-id="847c1-259"></span></span>

      <span data-ttu-id="847c1-260">若要在写入数据时设置表的格式, 请使用`Document.setSelectedDataAsync`或`TableBinding.setDataAsync`方法的 tableOptions 和 cellFormat 可选参数。</span><span class="sxs-lookup"><span data-stu-id="847c1-260">To set formatting on tables when writing data, use the tableOptions and cellFormat optional parameters of the `Document.setSelectedDataAsync` or `TableBinding.setDataAsync` methods.</span></span>

      <span data-ttu-id="847c1-261">将格式设置为`Document.setSelectedDataAsync`和`TableBinding.setDataAsync`方法的可选参数仅在首次写入数据时才会运行设置格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-261">Setting formatting with the optional parameters of the `Document.setSelectedDataAsync` and `TableBinding.setDataAsync` methods only works to set formatting when writing data the first time.</span></span> <span data-ttu-id="847c1-262">若要在写入数据后更改格式，请使用下列方法：</span><span class="sxs-lookup"><span data-stu-id="847c1-262">To make formatting changes after writing data, use the following methods:</span></span>

      - <span data-ttu-id="847c1-263">若要更新单元格格式 (如字体颜色和样式), `TableBinding.setFormatsAsync`请使用方法 (此方法)。</span><span class="sxs-lookup"><span data-stu-id="847c1-263">To update cell formatting, such as font color and style, use the `TableBinding.setFormatsAsync` method (this method).</span></span>

      - <span data-ttu-id="847c1-264">若要更新表格选项 (如镶边行和筛选按钮), 请`TableBinding.setTableOptions`使用方法。</span><span class="sxs-lookup"><span data-stu-id="847c1-264">To update table options, such as banded rows and filter buttons, use the `TableBinding.setTableOptions` method.</span></span>

      - <span data-ttu-id="847c1-265">若要清除格式设置, `TableBinding.clearFormats`请使用方法。</span><span class="sxs-lookup"><span data-stu-id="847c1-265">To clear formatting, use the `TableBinding.clearFormats` method.</span></span>

      <span data-ttu-id="847c1-266">有关更多详细信息和示例, 请参阅[如何设置 Excel 外接程序中表的格式](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span><span class="sxs-lookup"><span data-stu-id="847c1-266">For more details and examples, see [How to format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span></span><!-- --><span data-ttu-id="847c1-267">.</span><span class="sxs-lookup"><span data-stu-id="847c1-267"></span></span>

      #### <a name="examples"></a><span data-ttu-id="847c1-268">示例</span><span class="sxs-lookup"><span data-stu-id="847c1-268">Examples</span></span>

      ```javascript
      // Specifying a single target
      // The following example shows a cellFormat value that sets the font color of the header row to red.
      Office.select("bindings#myBinding").setFormatsAsync(
          [{cells: Office.Table.Headers, format: {fontColor: "red"}}], 
          function (asyncResult){});

      // Specifying multiple targets
      // The setFormatsAsync method can support formatting multiple targets within the bound table in a 
      // single function call. To do that, you pass a list of objects in the cellFormat array 
      // for each target that you want to format.
      // For example, the following line of code will set the font color of the first row yellow, 
      // and the fourth cell in the third row to have a white border and bold text.
      Office.select("bindings#myBinding").setFormatsAsync(
          [{cells: {row: 1}, format: {fontColor: "yellow"}}, 
              {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}], 
          function (asyncResult){});

      // Additional remarks for Excel Online
      // The number of formatting groups passed to the cellFormat parameter can't exceed 100. 
      // A single formatting group consists of a set of formatting applied to a specified range of cells. 
      // For example, the following call passes two formatting groups to cellFormat.
      Office.select("bindings#myBinding").setFormatsAsync(
          [{cells: {row: 1}, format: {fontColor: "yellow"}}, 
              {cells: {row: 3, column: 4}, format: {borderColor: "white", fontStyle: "bold"}}], 
          function (asyncResult){});
      ```
    name: 'setFormatsAsync(cellFormat, options, callback)'
    fullName: 'setFormatsAsync(cellFormat, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormatsAsync(cellFormat: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellFormat
          description: <span data-ttu-id="847c1-269">包含指定针对哪些单元格以及适用格式的一个或多个 JavaScript 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="847c1-269">An array that contains one or more JavaScript objects that specify which cells to target and the formatting to apply to them.</span></span>
          type:
            - 'any[]'
        - id: options
          description: '<span data-ttu-id="847c1-270">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="847c1-270">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="847c1-271">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-271">Optional.</span></span> <span data-ttu-id="847c1-272">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-272">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-273">.</span><span class="sxs-lookup"><span data-stu-id="847c1-273"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.setFormatsAsync_1
    summary: <span data-ttu-id="847c1-274">设置表格中指定项目和数据的格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-274">Sets formatting on specified items and data in the table.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-275">**指定 cellFormat 参数**</span><span class="sxs-lookup"><span data-stu-id="847c1-275">**Specifying the cellFormat parameter**</span></span>

      <span data-ttu-id="847c1-276">使用 cellFormat 参数设置或更改单元格格式值, 如宽度、高度、字体、背景、对齐方式等。</span><span class="sxs-lookup"><span data-stu-id="847c1-276">Use the cellFormat parameter to set or change cell formatting values, such as width, height, font, background, alignment, and so on.</span></span> <span data-ttu-id="847c1-277">作为 cellFormat 参数传递的值是一个数组, 其中包含一个或多个 JavaScript 对象的列表, 这些对象指定要定位的单元格 (`cells:`</span><span class="sxs-lookup"><span data-stu-id="847c1-277">The value you pass as the cellFormat parameter is an array that contains a list of one or more JavaScript objects that specify which cells to target (`cells:`</span></span><!-- --><span data-ttu-id="847c1-278">) 和格式 (`format:`</span><span class="sxs-lookup"><span data-stu-id="847c1-278">) and the formats (`format:`</span></span><!-- --><span data-ttu-id="847c1-279">) 以应用于它们。</span><span class="sxs-lookup"><span data-stu-id="847c1-279">) to apply to them.</span></span>

      <span data-ttu-id="847c1-280">cellFormat 数组中的每个 JavaScript 对象都具有以下格式:`{cells:{ cell_range }, format:{ format_definition }}`</span><span class="sxs-lookup"><span data-stu-id="847c1-280">Each JavaScript object in the cellFormat array has this form: `{cells:{ cell_range }, format:{ format_definition }}`</span></span>

      <span data-ttu-id="847c1-281">该`cells:`属性使用下列值之一指定要设置格式的区域:</span><span class="sxs-lookup"><span data-stu-id="847c1-281">The `cells:` property specifies the range you want format using one of the following values:</span></span>

      <span data-ttu-id="847c1-282">**单元格属性中支持的范围**</span><span class="sxs-lookup"><span data-stu-id="847c1-282">**Supported ranges in cells property**</span></span>

      <table> <tr> <th><span data-ttu-id="847c1-283">单元格范围设置</span><span class="sxs-lookup"><span data-stu-id="847c1-283">cells range settings</span></span></th> <th><span data-ttu-id="847c1-284">说明</span><span class="sxs-lookup"><span data-stu-id="847c1-284">Description</span></span></th> </tr> <tr> <td>`{row: n}`</td> <td><span data-ttu-id="847c1-285">指定一个范围, 该范围是表中从零开始的第 n 行数据。</span><span class="sxs-lookup"><span data-stu-id="847c1-285">Specifies the range that is the zero-based nth row of data in the table.</span></span></td> </tr> <tr> <td>`{column: n}`</td> <td><span data-ttu-id="847c1-286">指定一个范围, 该范围是表中从零开始的第 n 列数据。</span><span class="sxs-lookup"><span data-stu-id="847c1-286">Specifies the range that is the zero-based nth column of data in the table.</span></span></td> </tr> <tr> <td>`{row: i, column: j}`</td> <td><span data-ttu-id="847c1-287">指定作为表的第 i 行和 jth 列的单个单元格。</span><span class="sxs-lookup"><span data-stu-id="847c1-287">Specifies the single cell that is the ith row and jth column of the table.</span></span></td> </tr> <tr> <td>`Office.Table.All`</td> <td><span data-ttu-id="847c1-288">指定整个表格，包括列标题、数据和总数（如果有）。</span><span class="sxs-lookup"><span data-stu-id="847c1-288">Specifies the entire table, including column headers, data, and totals (if any).</span></span></td> </tr> <tr> <td>`Office.Table.Data`</td> <td><span data-ttu-id="847c1-289">仅指定表中的数据（不含标题和总数）。</span><span class="sxs-lookup"><span data-stu-id="847c1-289">Specifies only the data in the table (no headers and totals).</span></span></td> </tr> <tr> <td>`Office.Table.Headers`</td> <td><span data-ttu-id="847c1-290">仅指定标题行。</span><span class="sxs-lookup"><span data-stu-id="847c1-290">Specifies only the header row.</span></span></td> </tr> </table>

      <span data-ttu-id="847c1-291">该`format:`属性指定对应于 Excel 中的 "设置单元格格式" 对话框 (右键单击 " &gt;设置单元格格式" 或 "主页&gt;格式&gt;单元格格式" 单元格) 中可用设置的子集的值。</span><span class="sxs-lookup"><span data-stu-id="847c1-291">The `format:` property specifies values that correspond to a subset of the settings available in the Format Cells dialog box in Excel (Right-click &gt; Format Cells or Home &gt; Format &gt; Format Cells).</span></span>

      <span data-ttu-id="847c1-292">将`format:`属性的值指定为 JavaScript 对象文本中的一个或多个属性名称/值对的列表。</span><span class="sxs-lookup"><span data-stu-id="847c1-292">You specify the value of the `format:` property as a list of one or more property name - value pairs in a JavaScript object literal.</span></span> <span data-ttu-id="847c1-293">属性名称指定要设置的格式属性的名称，值则指定属性值。</span><span class="sxs-lookup"><span data-stu-id="847c1-293">The property name specifies the name of the formatting property to set, and value specifies the property value.</span></span> <span data-ttu-id="847c1-294">您可以为给定的格式指定多个值，如字体的颜色及大小。</span><span class="sxs-lookup"><span data-stu-id="847c1-294">You can specify multiple values for a given format, such as both a font's color and size.</span></span>

      <span data-ttu-id="847c1-295">以下是三`format:`个属性值示例:</span><span class="sxs-lookup"><span data-stu-id="847c1-295">Here's three `format:` property value examples:</span></span>

      `//Set cells: font color to green and size to 15 points.`

      `format: {fontColor : "green", fontSize : 15}`

      `//Set cells: border to dotted blue.`

      `format: {borderStyle: "dotted", borderColor: "blue"}`

      `//Set cells: background to red and alignment to centered.`

      `format: {backgroundColor: "red", alignHorizontal: "center"}`

      <span data-ttu-id="847c1-296">您可以通过在`numberFormat:`属性中指定数字格式 "code" 字符串来指定数字格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-296">You can specify number formats by specifying the number formatting "code" string in the `numberFormat:` property.</span></span> <span data-ttu-id="847c1-297">你可以指定的数字格式字符串对应于你可以使用“设置单元格格式”对话框“数字”选项卡上的“自定义”类别在 Excel 中设置的字符串。</span><span class="sxs-lookup"><span data-stu-id="847c1-297">The number format strings you can specify correspond to those you can set in Excel using the Custom category on the Number tab of the Format Cells dialog box.</span></span> <span data-ttu-id="847c1-298">此示例演示如何将数字格式设置为带两个小数位的百分数形式：</span><span class="sxs-lookup"><span data-stu-id="847c1-298">This example shows how to format a number as a percentage with two decimal places:</span></span>

      `format: {numberFormat:"0.00%"}`

      <span data-ttu-id="847c1-299">有关更多详细信息, 请参阅如何[创建自定义数字格式](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span><span class="sxs-lookup"><span data-stu-id="847c1-299">For more detail, see how to [Create a custom number format](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)</span></span><!-- --><span data-ttu-id="847c1-300">.</span><span class="sxs-lookup"><span data-stu-id="847c1-300"></span></span>

      <span data-ttu-id="847c1-301">若要在写入数据时设置表的格式, 请使用`Document.setSelectedDataAsync`或`TableBinding.setDataAsync`方法的 tableOptions 和 cellFormat 可选参数。</span><span class="sxs-lookup"><span data-stu-id="847c1-301">To set formatting on tables when writing data, use the tableOptions and cellFormat optional parameters of the `Document.setSelectedDataAsync` or `TableBinding.setDataAsync` methods.</span></span>

      <span data-ttu-id="847c1-302">将格式设置为`Document.setSelectedDataAsync`和`TableBinding.setDataAsync`方法的可选参数仅在首次写入数据时才会运行设置格式。</span><span class="sxs-lookup"><span data-stu-id="847c1-302">Setting formatting with the optional parameters of the `Document.setSelectedDataAsync` and `TableBinding.setDataAsync` methods only works to set formatting when writing data the first time.</span></span> <span data-ttu-id="847c1-303">若要在写入数据后更改格式，请使用下列方法：</span><span class="sxs-lookup"><span data-stu-id="847c1-303">To make formatting changes after writing data, use the following methods:</span></span>

      - <span data-ttu-id="847c1-304">若要更新单元格格式 (如字体颜色和样式), `TableBinding.setFormatsAsync`请使用方法 (此方法)。</span><span class="sxs-lookup"><span data-stu-id="847c1-304">To update cell formatting, such as font color and style, use the `TableBinding.setFormatsAsync` method (this method).</span></span>

      - <span data-ttu-id="847c1-305">若要更新表格选项 (如镶边行和筛选按钮), 请`TableBinding.setTableOptions`使用方法。</span><span class="sxs-lookup"><span data-stu-id="847c1-305">To update table options, such as banded rows and filter buttons, use the `TableBinding.setTableOptions` method.</span></span>

      - <span data-ttu-id="847c1-306">若要清除格式设置, `TableBinding.clearFormats`请使用方法。</span><span class="sxs-lookup"><span data-stu-id="847c1-306">To clear formatting, use the `TableBinding.clearFormats` method.</span></span>

      <span data-ttu-id="847c1-307">有关更多详细信息和示例, 请参阅[如何设置 Excel 外接程序中表的格式](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span><span class="sxs-lookup"><span data-stu-id="847c1-307">For more details and examples, see [How to format tables in add-ins for Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)</span></span><!-- --><span data-ttu-id="847c1-308">.</span><span class="sxs-lookup"><span data-stu-id="847c1-308"></span></span>
    name: 'setFormatsAsync(cellFormat, callback)'
    fullName: 'setFormatsAsync(cellFormat, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormatsAsync(cellFormat: any[], callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cellFormat
          description: <span data-ttu-id="847c1-309">包含指定针对哪些单元格以及适用格式的一个或多个 JavaScript 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="847c1-309">An array that contains one or more JavaScript objects that specify which cells to target and the formatting to apply to them.</span></span>
          type:
            - 'any[]'
        - id: callback
          description: '<span data-ttu-id="847c1-310">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-310">Optional.</span></span> <span data-ttu-id="847c1-311">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-311">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-312">.</span><span class="sxs-lookup"><span data-stu-id="847c1-312"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.setTableOptionsAsync
    summary: <span data-ttu-id="847c1-313">更新绑定表上的表格式选项。</span><span class="sxs-lookup"><span data-stu-id="847c1-313">Updates table formatting options on the bound table.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-314">**要求集**:[不在集合中](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="847c1-314">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="847c1-315">在传递给 goToByIdAsync 方法的回调函数中，您可以使用 AsyncResult 对象的属性返回以下信息。</span><span class="sxs-lookup"><span data-stu-id="847c1-315">In the callback function passed to the goToByIdAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="847c1-316">属性</span><span class="sxs-lookup"><span data-stu-id="847c1-316">Property</span></span></th> <th><span data-ttu-id="847c1-317">用于...</span><span class="sxs-lookup"><span data-stu-id="847c1-317">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="847c1-318">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="847c1-318">AsyncResult.value</span></span></td> <td><span data-ttu-id="847c1-319">始终返回 undefined, 这是因为在设置格式时没有要检索的数据或对象。</span><span class="sxs-lookup"><span data-stu-id="847c1-319">Always returns undefined because there is no data or object to retrieve when setting formats.</span></span></td> </tr> <tr> <td><span data-ttu-id="847c1-320">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="847c1-320">AsyncResult.status</span></span></td> <td><span data-ttu-id="847c1-321">确定操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-321">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="847c1-322">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="847c1-322">AsyncResult.error</span></span></td> <td><span data-ttu-id="847c1-323">如果操作失败，则访问提供错误信息的 Error 对象。</span><span class="sxs-lookup"><span data-stu-id="847c1-323">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="847c1-324">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="847c1-324">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="847c1-325">在 AsyncResult 对象中未经改动的返回的任何类型的用户定义项。</span><span class="sxs-lookup"><span data-stu-id="847c1-325">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>

      #### <a name="examples"></a><span data-ttu-id="847c1-326">示例</span><span class="sxs-lookup"><span data-stu-id="847c1-326">Examples</span></span>

      ```javascript
      // The following example shows how to:
      // 1. Create an object literal that specifies the table formatting options to update on the bound table.
      // 2. Call setTableOptions on a previously bound table (with an id of myBinding) passing the object
      //    with formatting setting as the tableOptions parameter.
      function updateTableFormatting(){
          var tableOptions = {bandedRows: true, filterButton: false, style: "TableStyleMedium3"}; 

          Office.select("bindings#myBinding").setTableOptionsAsync(tableOptions, function(asyncResult){});
      }
      ```
    name: 'setTableOptionsAsync(tableOptions, options, callback)'
    fullName: 'setTableOptionsAsync(tableOptions, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTableOptionsAsync(tableOptions: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableOptions
          description: <span data-ttu-id="847c1-327">包含定义要应用的表选项的属性名称 - 值对列表的对象文字。</span><span class="sxs-lookup"><span data-stu-id="847c1-327">An object literal containing a list of property name-value pairs that define the table options to apply.</span></span>
          type:
            - any
        - id: options
          description: '<span data-ttu-id="847c1-328">提供一个选项, 用于保留任何类型的未更改的上下文数据, 以供在回调中使用。</span><span class="sxs-lookup"><span data-stu-id="847c1-328">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="847c1-329">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-329">Optional.</span></span> <span data-ttu-id="847c1-330">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-330">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-331">.</span><span class="sxs-lookup"><span data-stu-id="847c1-331"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.setTableOptionsAsync_1
    summary: <span data-ttu-id="847c1-332">更新绑定表上的表格式选项。</span><span class="sxs-lookup"><span data-stu-id="847c1-332">Updates table formatting options on the bound table.</span></span>
    remarks: |-
      <span data-ttu-id="847c1-333">**要求集**:[不在集合中](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span><span class="sxs-lookup"><span data-stu-id="847c1-333">**Requirement set**: [Not in a set](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)</span></span>

      <span data-ttu-id="847c1-334">在传递给 goToByIdAsync 方法的回调函数中，您可以使用 AsyncResult 对象的属性返回以下信息。</span><span class="sxs-lookup"><span data-stu-id="847c1-334">In the callback function passed to the goToByIdAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>

      <table> <tr> <th><span data-ttu-id="847c1-335">属性</span><span class="sxs-lookup"><span data-stu-id="847c1-335">Property</span></span></th> <th><span data-ttu-id="847c1-336">用于...</span><span class="sxs-lookup"><span data-stu-id="847c1-336">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id="847c1-337">AsyncResult.value</span><span class="sxs-lookup"><span data-stu-id="847c1-337">AsyncResult.value</span></span></td> <td><span data-ttu-id="847c1-338">始终返回 undefined, 这是因为在设置格式时没有要检索的数据或对象。</span><span class="sxs-lookup"><span data-stu-id="847c1-338">Always returns undefined because there is no data or object to retrieve when setting formats.</span></span></td> </tr> <tr> <td><span data-ttu-id="847c1-339">AsyncResult.status</span><span class="sxs-lookup"><span data-stu-id="847c1-339">AsyncResult.status</span></span></td> <td><span data-ttu-id="847c1-340">确定操作是成功还是失败。</span><span class="sxs-lookup"><span data-stu-id="847c1-340">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id="847c1-341">AsyncResult.error</span><span class="sxs-lookup"><span data-stu-id="847c1-341">AsyncResult.error</span></span></td> <td><span data-ttu-id="847c1-342">如果操作失败，则访问提供错误信息的 Error 对象。</span><span class="sxs-lookup"><span data-stu-id="847c1-342">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id="847c1-343">AsyncResult.asyncContext</span><span class="sxs-lookup"><span data-stu-id="847c1-343">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id="847c1-344">在 AsyncResult 对象中未经改动的返回的任何类型的用户定义项。</span><span class="sxs-lookup"><span data-stu-id="847c1-344">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>
    name: 'setTableOptionsAsync(tableOptions, callback)'
    fullName: 'setTableOptionsAsync(tableOptions, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTableOptionsAsync(tableOptions: any, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: tableOptions
          description: <span data-ttu-id="847c1-345">包含定义要应用的表选项的属性名称 - 值对列表的对象文字。</span><span class="sxs-lookup"><span data-stu-id="847c1-345">An object literal containing a list of property name-value pairs that define the table options to apply.</span></span>
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="847c1-346">可选。</span><span class="sxs-lookup"><span data-stu-id="847c1-346">Optional.</span></span> <span data-ttu-id="847c1-347">回调返回时调用的函数, 其唯一的参数的类型为 " [Office. AsyncResult](xref:office.Office.AsyncResult) "</span><span class="sxs-lookup"><span data-stu-id="847c1-347">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="847c1-348">.</span><span class="sxs-lookup"><span data-stu-id="847c1-348"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.TableBinding.columnCount
    summary: '<span data-ttu-id="847c1-349">获取 TableBinding 中的列数, 作为整数值。</span><span class="sxs-lookup"><span data-stu-id="847c1-349">Gets the number of columns in the TableBinding, as an integer value.</span></span>'
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnCount: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="847c1-350">示例</span><span class="sxs-lookup"><span data-stu-id="847c1-350">Examples</span></span>

          ```javascript
          function showBindingColumnCount() {
              Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
                  write("Column: " + asyncResult.value.columnCount);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.TableBinding.hasHeaders
    summary: '<span data-ttu-id="847c1-351">如果表具有标头, 则为 True; 否则为 false。否则为 false。</span><span class="sxs-lookup"><span data-stu-id="847c1-351">True, if the table has headers; otherwise false.</span></span>'
    name: hasHeaders
    fullName: hasHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hasHeaders: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="847c1-352">示例</span><span class="sxs-lookup"><span data-stu-id="847c1-352">Examples</span></span>

          ```javascript
          function showBindingHasHeaders() {
              Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
                  write("Binding has headers: " + asyncResult.value.hasHeaders);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.TableBinding.rowCount
    summary: '<span data-ttu-id="847c1-353">获取 TableBinding 中的行数, 作为整数值。</span><span class="sxs-lookup"><span data-stu-id="847c1-353">Gets the number of rows in the TableBinding, as an integer value.</span></span>'
    remarks: |-
      <span data-ttu-id="847c1-354">通过在 excel 2013 和 excel Online (使用 "插入" 选项卡上的 "表") 中选择单行来插入空表格时, 两个 Office 主机应用程序都会创建一行标题, 后跟一个空行。</span><span class="sxs-lookup"><span data-stu-id="847c1-354">When you insert an empty table by selecting a single row in Excel 2013 and Excel Online (using Table on the Insert tab), both Office host applications create a single row of headers followed by a single blank row.</span></span> <span data-ttu-id="847c1-355">但是, 如果外接程序的脚本为此新插入的表创建了绑定 (例如, 使用的是[](xref:office.Office.Bindings)</span><span class="sxs-lookup"><span data-stu-id="847c1-355">However, if your add-in's script creates a binding for this newly inserted table (for example, by using the [Office.Bindings](xref:office.Office.Bindings)</span></span><!-- --><span data-ttu-id="847c1-356">. addFromSelectionAsync 方法), 然后检查 rowCount 属性的值, 返回的值将因电子表格在 Excel 2013 或 excel Online 中是否打开而异。</span><span class="sxs-lookup"><span data-stu-id="847c1-356">.addFromSelectionAsync method), and then checks the value of the rowCount property, the value returned will differ depending whether the spreadsheet is open in Excel 2013 or Excel Online.</span></span>

      - <span data-ttu-id="847c1-357">在桌面上的 Excel 中, rowCount 将返回 0 (标头后面的空白行不计算在内)。</span><span class="sxs-lookup"><span data-stu-id="847c1-357">In Excel on the desktop, rowCount will return 0 (the blank row following the headers is not counted).</span></span>

      - <span data-ttu-id="847c1-358">在 Excel Online 中, rowCount 将返回 1 (标头后面的空白行被计算在内)。</span><span class="sxs-lookup"><span data-stu-id="847c1-358">In Excel Online, rowCount will return 1 (the blank row following the headers is counted).</span></span>

      <span data-ttu-id="847c1-359">可通过检查是否存在 rowCount == 1 在脚本中解决返回值不同的问题，如果存在，再检查行是否包含所有空字符串。</span><span class="sxs-lookup"><span data-stu-id="847c1-359">You can work around this difference in your script by checking if rowCount == 1, and if so, then checking if the row contains all empty strings.</span></span>

      <span data-ttu-id="847c1-360">在 Access 相关内容外接程序中, 出于性能原因, rowCount 属性始终返回-1。</span><span class="sxs-lookup"><span data-stu-id="847c1-360">In content add-ins for Access, for performance reasons the rowCount property always returns -1.</span></span>

      #### <a name="examples"></a><span data-ttu-id="847c1-361">示例</span><span class="sxs-lookup"><span data-stu-id="847c1-361">Examples</span></span>

      ```javascript
      function showBindingRowCount() {
          Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
              write("Rows: " + asyncResult.value.rowCount);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rowCount: number;'
      return:
        type:
          - number