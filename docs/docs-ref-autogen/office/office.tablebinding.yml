### YamlMime:UniversalReference
ms.openlocfilehash: 360f50cf67308317d80ece2018ec9150a3f828b5
ms.sourcegitcommit: 31847d2ea6be78b8f473dfbfb0a575fdecd877be
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 11/13/2018
ms.locfileid: "26298342"
items:
- uid: office.Office.TableBinding
  summary: 表示两个维度的行和列的绑定，标题可选。
  remarks: >-
    <table><tr><td>要求集</td><td>TableBindings</td></tr></table>


    TableBinding 对象继承`id`属性，`type`属性，`getDataAsync`方法，并`setDataAsync`从[Office.Binding](xref:office.Office.Binding)对象的方法。


    对于 Excel，请注意，建立表绑定后，用户将添加到表每个新行都会自动包括绑定和 rowCount 增加。
  name: Office.TableBinding
  fullName: Office.TableBinding
  langs:
  - typeScript
  type: interface
  extends:
  - Binding
  package: office
  children:
  - office.Office.TableBinding.addColumnsAsync
  - office.Office.TableBinding.addRowsAsync
  - office.Office.TableBinding.clearFormatsAsync
  - office.Office.TableBinding.columnCount
  - office.Office.TableBinding.deleteAllDataValuesAsync
  - office.Office.TableBinding.getFormatsAsync
  - office.Office.TableBinding.hasHeaders
  - office.Office.TableBinding.rowCount
  - office.Office.TableBinding.setFormatsAsync
  - office.Office.TableBinding.setTableOptionsAsync
- uid: office.Office.TableBinding.addColumnsAsync
  summary: 将指定的数据作为附加列添加到表中。
  remarks: >-
    若要添加一个或多个列指定的数据和标头的值，作为 data 形参传递 TableData 对象。 若要添加一个或多个指定的数据的列，传递 data 参数作为数组的数组 （"矩阵"）。


    原子 addColumnsAsync 操作成功与否。 也就是说，整个添加列操作必须成功，或它将被完全回滚 （和返回给回调的 AsyncResult.status 属性将报告故障）：


    - 作为 data 参数传递的数组中的每一行必须为要更新的表的同一行数。 如果没有，则整个操作将失败。


    - 数组中的每行和每个单元格都必须成功将该行或单元格添加到表中的新增列中。如果出于任何原因任意行或单元格未能添加成功，则整个操作将失败。


    - 如果您将 data 参数作为传递 TableData 对象，标题行数必须匹配被更新的表的。


    Excel online 的其他备注： TableData 对象传递给数据参数中的单元格的总数目不能超过 20000 中单个调用此方法。


    **支持详细信息**


    下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。


    有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。


    *支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> </table>

    #### <a name="examples"></a>示例


    ```javascript

    // The following example adds a single column with three rows to a bound table with the id "myTable"

    // by passing a TableData object as the data argument of the addColumnsAsync method. To succeed,

    // the table being updated must have three rows.


    // Add a column to a binding of type table by passing a TableData object.

    function addColumns() {
        var myTable = new Office.TableData();
        myTable.headers = [["Cities"]];
        myTable.rows = [["Berlin"], ["Roma"], ["Tokyo"]];

        Office.context.document.bindings.getByIdAsync("myTable", function (result) {
            result.value.addColumnsAsync(myTable);
        });
    }


    // The following example adds a single column with three rows to a bound table with the id myTable

    // by passing an array of arrays ("matrix") as the data argument of the addColumnsAsync method.

    // To succeed, the table being updated must have three rows.


    // Add a column to a binding of type table by passing an array of arrays.

    function addColumns() {
        var myTable = [["Berlin"], ["Roma"], ["Tokyo"]];

        Office.context.document.bindings.getByIdAsync("myTable", function (result) {
            result.value.addColumnsAsync(myTable);
        });
    }

    ```
  name: addColumnsAsync(tableData, options, callback)
  fullName: addColumnsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addColumnsAsync(tableData: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: tableData
      description: 数组的数组 （"矩阵"） 或 TableData 对象，其中包含要添加到表的数据的一个或多个列。 必需。
      type:
      - TableData | any[][]
    - id: options
      description: 提供用于保留不变，用于在回调中的任何类型的上下文数据的选项。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.addRowsAsync
  summary: 将指定的数据作为其他行添加到表中。
  remarks: >-
    原子 addRowsAsync 操作成功与否。 也就是说，整个添加列操作必须成功，或它将被完全回滚 （和返回给回调的 AsyncResult.status 属性将报告故障）：


    - 作为 data 参数传递的数组中的每一行都必须具有要更新的表相同的列数。 如果没有，则整个操作将失败。


    - 每个列和数组中的单元格必须成功的列或单元格的表中添加新添加的行 (s)。 如果任何列或单元格设置出于任何原因失败，则整个操作将失败。


    - 如果您将 data 参数作为传递 TableData 对象，标题行数必须匹配被更新的表的。


    Excel online 的其他备注： TableData 对象传递给数据参数中的单元格的总数目不能超过 20000 中单个调用此方法。


    **支持详细信息**


    下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。


    有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。


    *支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> </table>

    #### <a name="examples"></a>示例


    ```javascript

    function addRowsToTable() {
        Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
            var binding = asyncResult.value;
            binding.addRowsAsync([["6", "k"], ["7", "j"]]);
        });
    }

    ```
  name: addRowsAsync(rows, options, callback)
  fullName: addRowsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addRowsAsync(rows: TableData | any[][], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: rows
      description: 数组的数组 （"矩阵"） 或 TableData 对象，其中包含要添加到表的数据的一个或多个行。 必需。
      type:
      - TableData | any[][]
    - id: options
      description: 提供用于保留不变，用于在回调中的任何类型的上下文数据的选项。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.clearFormatsAsync
  summary: 清除绑定表中的格式。
  remarks: >-
    有关详细信息，请参阅[在 Excel 加载项的格式表](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)。


    **支持详细信息**


    下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。


    有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。


    *支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> </table>

    #### <a name="examples"></a>示例


    ```javascript

    // The following example shows how to clear the formatting of the bound table with an ID of "myBinding":

    Office.select("bindings#myBinding").clearFormatsAsync();

    ```
  name: clearFormatsAsync(options, callback)
  fullName: clearFormatsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearFormatsAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 提供用于保留不变，用于在回调中的任何类型的上下文数据的选项。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.columnCount
  summary: 获取中 TableBinding，作为整数值的列数。
  remarks: "**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此属性。空的单元格表示相应的 Office 主机应用程序不支持此属性。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> </table>\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction showBindingColumnCount() {\n    Office.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n        write(\"Column: \" + asyncResult.value.columnCount);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: columnCount
  fullName: columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'columnCount: number;'
    return:
      type:
      - number
- uid: office.Office.TableBinding.deleteAllDataValuesAsync
  summary: 删除表中的所有非标题行及其值，对主机应用程序进行相应切换。
  remarks: >-
    在 Excel 中，如果表没有标题行，则此方法将删除表。


    **支持详细信息**


    下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。


    有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。


    *支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> </table>

    #### <a name="examples"></a>示例


    ```javascript

    function deleteAllRowsFromTable() {
        Office.context.document.bindings.getByIdAsync("myBinding", function (asyncResult) {
            var binding = asyncResult.value;
            binding.deleteAllDataValuesAsync();
        });
    }

    ```
  name: deleteAllDataValuesAsync(options, callback)
  fullName: deleteAllDataValuesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAllDataValuesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 提供用于保留不变，用于在回调中的任何类型的上下文数据的选项。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.getFormatsAsync
  summary: 获取上表中的指定项的格式。
  remarks: >-
    **返回格式结构**


    返回值数组中的每个 JavaScript 对象具有此窗体：`{cells:{ cell_range }, format:{ format_definition }}`


    `cells:`属性指定您想要使用下列值之一的格式的范围：


    **单元格属性中支持的范围**


    <table> <tr> <th>单元格范围设置</th> <th>说明</th> </tr> <tr> <td>`{row: n}`</td> <td>指定从零开始的第 n 个行，则表中数据的范围。</td> </tr> <tr> <td>`{column: n}`</td> <td>指定是从零开始的第 n 个列的表中数据的范围。</td> </tr> <tr> <td>`{row: i, column: j}`</td> <td>指定的单个单元格的表格的第 i 行和 jth 列。</td> </tr> <tr> <td>`Office.Table.All`</td> <td>指定整个表格，包括列标题、数据和总数（如果有）。</td> </tr> <tr> <td>`Office.Table.Data`</td> <td>仅指定表中的数据（不含标题和总数）。</td> </tr> <tr> <td>`Office.Table.Headers`</td> <td>仅指定标题行。</td> </tr> </table>


    `format:`属性指定在 Excel 中的值对应于单元格格式对话框中可用的设置的子集框 (右键单击&gt;单元格格式或家&gt;格式&gt;单元格格式)。
  name: getFormatsAsync(cellReference, formats, options, callback)
  fullName: getFormatsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFormatsAsync(cellReference?: any, formats?: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult< ({ cells: any, format: any})[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cellReference
      description: 一个文本，包含指定要获取格式的单元格范围的名称 / 值对的对象。
      type:
      - any
    - id: formats
      description: 指定要获取的格式属性数组。
      type:
      - any[]
    - id: options
      description: 提供用于保留不变，用于在回调中的任何类型的上下文数据的选项。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。 `value`结果属性是包含一个或多个指定其对应的单元格的格式的 JavaScript 对象的数组。
      type:
      - '(result: AsyncResult< ({ cells: any, format: any})[]>) => void'
- uid: office.Office.TableBinding.hasHeaders
  summary: 如果表有标题;否则为 false。
  remarks: "**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此属性。空的单元格表示相应的 Office 主机应用程序不支持此属性。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> </table>\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction showBindingHasHeaders() {\n    Office.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n        write(\"Binding has headers: \" + asyncResult.value.hasHeaders);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: hasHeaders
  fullName: hasHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hasHeaders: boolean;'
    return:
      type:
      - boolean
- uid: office.Office.TableBinding.rowCount
  summary: 获取中 TableBinding，作为整数值的行数。
  remarks: "通过选择 Excel 2013 and Excel Online 中的单个行插入的空白表格时 （在插入选项卡上使用多个表），这两个 Office 主机应用程序可以创建单个跟空一行的标题行。 但是，如果外接程序的脚本将创建的绑定此新插入了表 (例如，通过使用[Office.Bindings](xref:office.Office.Bindings)<!-- -->.addFromSelectionAsync 方法)，然后检查值返回的值将不同的 rowCount 属性，根据是否在 Excel 2013 或 Excel Online 中打开电子表格。\n\n- 在桌面上 Excel 中，rowCount 将返回的 0 （关注标头的空白行不计数）。\n\n- 在 Excel Online 中，rowCount 将返回的 1 （关注标头的空白行计算在内）。\n\n您可以通过检查是否变通解决此脚本差异 rowCount = = 1，并且如果是这样，再检查行是否包含所有空字符串。\n\n加载项中内容的访问，出于性能原因，rowCount 属性始终返回-1。\n\n**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此属性。空的单元格表示相应的 Office 主机应用程序不支持此属性。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>访问</strong></td><td> </td><td> Y </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> <tr><td><strong>Word</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> </table>\n#### <a name=\"examples\"></a>示例\n\n```javascript\nfunction showBindingRowCount() {\n    Office.context.document.bindings.getByIdAsync(\"myBinding\", function (asyncResult) {\n        write(\"Rows: \" + asyncResult.value.rowCount);\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: rowCount
  fullName: rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rowCount: number;'
    return:
      type:
      - number
- uid: office.Office.TableBinding.setFormatsAsync
  summary: 设置指定的项目和表中的数据的格式。
  remarks: "**指定 cellFormat 参数**\n\n使用 cellFormat 参数设置或更改单元格格式值，如宽度、 高度、 字体、 背景、 对齐方式，等等。 传递的 cellFormat 参数是一个数组，包含一组一个或多个 JavaScript 对象的指定的到目标单元格的值 (`cells:`<!-- -->) 和格式 (`format:`<!-- -->) 要应用于它们。\n\nCellFormat 数组中的每个 JavaScript 对象具有此窗体：`{cells:{ cell_range }, format:{ format_definition }}`\n\n`cells:`属性指定您想要使用下列值之一的格式的范围：\n\n**单元格属性中支持的范围**\n\n<table> <tr> <th>单元格范围设置</th> <th>说明</th> </tr> <tr> <td>`{row: n}`</td> <td>指定从零开始的第 n 个行，则表中数据的范围。</td> </tr> <tr> <td>`{column: n}`</td> <td>指定是从零开始的第 n 个列的表中数据的范围。</td> </tr> <tr> <td>`{row: i, column: j}`</td> <td>指定的单个单元格的表格的第 i 行和 jth 列。</td> </tr> <tr> <td>`Office.Table.All`</td> <td>指定整个表格，包括列标题、数据和总数（如果有）。</td> </tr> <tr> <td>`Office.Table.Data`</td> <td>仅指定表中的数据（不含标题和总数）。</td> </tr> <tr> <td>`Office.Table.Headers`</td> <td>仅指定标题行。</td> </tr> </table>\n\n`format:`属性指定在 Excel 中的值对应于单元格格式对话框中可用的设置的子集框 (右键单击&gt;单元格格式或家&gt;格式&gt;单元格格式)。\n\n指定的值的`format:`的一个或多个属性名称-值对的 JavaScript 对象文本列表的属性。 属性名称指定要设置的格式属性的名称和值指定的属性值。 您可以指定多个值，对于给定的格式，例如字体的颜色和大小。\n\n下面是三个`format:`属性值的示例：\n\n`//Set cells: font color to green and size to 15 points.`\n\n`format: {fontColor : \"green\", fontSize : 15}`\n\n`//Set cells: border to dotted blue.`\n\n`format: {borderStyle: \"dotted\", borderColor: \"blue\"}`\n\n`//Set cells: background to red and alignment to centered.`\n\n`format: {backgroundColor: \"red\", alignHorizontal: \"center\"}`\n\n您可以通过指定的数字格式\"代码\"字符串中的指定的数字格式`numberFormat:`属性。 你可以指定的数字格式字符串对应于你可以使用“设置单元格格式”对话框“数字”选项卡上的“自定义”类别在 Excel 中设置的字符串。 此示例演示如何将数字格式设置为带两个小数位的百分数形式：\n\n`format: {numberFormat:\"0.00%\"}`\n\n有关详细信息，请参阅如何[创建自定义数字格式](https://support.office.com/article/create-or-delete-a-custom-number-format-78f2a361-936b-4c03-8772-09fab54be7f4)<!-- -->。\n\n若要设置格式表写入数据时，使用 tableOptions 和 cellFormat 可选参数的`Document.setSelectedDataAsync`或`TableBinding.setDataAsync`方法。\n\n设置格式的可选参数与`Document.setSelectedDataAsync`和`TableBinding.setDataAsync`方法仅适用于若要设置格式时编写数据第一个时间。 若要编写数据后进行格式更改，请使用以下方法：\n\n- 若要更新单元格格式，例如字体颜色和样式，使用`TableBinding.setFormatsAsync`方法 （此方法）。\n\n- 若要更新表选项，例如，带状行和筛选器按钮，使用`TableBinding.setTableOptions`方法。\n\n- 若要清除格式，请使用`TableBinding.clearFormats`方法。\n\n有关详细信息和示例，请参阅[How to Excel 加载项中的表的格式](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables#format-a-table)<!-- -->。\n\n**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> </table>\n#### <a name=\"examples\"></a>示例\n\n```javascript\n// Specifying a single target\n// The following example shows a cellFormat value that sets the font color of the header row to red.\nOffice.select(\"bindings#myBinding\").setFormatsAsync(\n    [{cells: Office.Table.Headers, format: {fontColor: \"red\"}}], \n    function (asyncResult){});\n\n// Specifying multiple targets\n// The setFormatsAsync method can support formatting multiple targets within the bound table in a \n// single function call. To do that, you pass a list of objects in the cellFormat array \n// for each target that you want to format.\n// For example, the following line of code will set the font color of the first row yellow, \n// and the fourth cell in the third row to have a white border and bold text.\nOffice.select(\"bindings#myBinding\").setFormatsAsync(\n    [{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n        {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}], \n    function (asyncResult){});\n\n// Additional remarks for Excel Online\n// The number of formatting groups passed to the cellFormat parameter can't exceed 100. \n// A single formatting group consists of a set of formatting applied to a specified range of cells. \n// For example, the following call passes two formatting groups to cellFormat.\nOffice.select(\"bindings#myBinding\").setFormatsAsync(\n    [{cells: {row: 1}, format: {fontColor: \"yellow\"}}, \n        {cells: {row: 3, column: 4}, format: {borderColor: \"white\", fontStyle: \"bold\"}}], \n    function (asyncResult){});\n```"
  name: setFormatsAsync(cellFormat, options, callback)
  fullName: setFormatsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setFormatsAsync(cellFormat: any[], options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cellFormat
      description: 包含指定目标和要应用于它们的格式的单元格的一个或多个 JavaScript 对象的数组。
      type:
      - any[]
    - id: options
      description: 提供用于保留不变，用于在回调中的任何类型的上下文数据的选项。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.TableBinding.setTableOptionsAsync
  summary: 更新绑定表上的表格式选项。
  remarks: "<table><tr><td>主机</td><td>Excel</td></tr>\n\n<tr><td>要求集</td><td>不在集合中</td></tr></table>\n\n在传递给 goToByIdAsync 方法的回调函数中，您可以使用 AsyncResult 对象的属性返回以下信息。\n\n<table> <tr> <th>属性</th> <th>用于...</th> </tr> <tr> <td>AsyncResult.value</td> <td>始终返回 undefined，因为没有数据或要设置格式时检索对象。</td> </tr> <tr> <td>AsyncResult.status</td> <td>确定操作是成功还是失败。</td> </tr> <tr> <td>AsyncResult.error</td> <td>如果操作失败，则访问提供错误信息的 Error 对象。</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>在 AsyncResult 对象中未经改动的返回的任何类型的用户定义项。</td> </tr> </table>\n\n**支持详细信息**\n\n下列矩阵中的大写字母 Y 表示相应的 Office 主机应用程序支持此方法。空的单元格表示相应的 Office 主机应用程序不支持此方法。\n\n有关 Office 主机应用程序和服务器要求的详细信息，请参阅[Requirements for Office 加载项运行](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->。\n\n*支持的主机（按平台）* <table> <tr><th> </th><th> Office for Windows Desktop </th><th> Office Online（在浏览器中） </th><th> Office for iPad </th></tr> <tr><td><strong>Excel</strong></td><td> Y </td><td> Y </td><td> Y </td></tr> </table>\n#### <a name=\"examples\"></a>示例\n\n```javascript\n// The following example shows how to:\n// 1. Create an object literal that specifies the table formatting options to update on the bound table.\n// 2. Call setTableOptions on a previously bound table (with an id of myBinding) passing the object\n//    with formatting setting as the tableOptions parameter.\nfunction updateTableFormatting(){\n    var tableOptions = {bandedRows: true, filterButton: false, style: \"TableStyleMedium3\"}; \n\n    Office.select(\"bindings#myBinding\").setTableOptionsAsync(tableOptions, function(asyncResult){});\n}\n```"
  name: setTableOptionsAsync(tableOptions, options, callback)
  fullName: setTableOptionsAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTableOptionsAsync(tableOptions: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: tableOptions
      description: 包含列表定义要应用的表选项的属性名称 / 值对的对象文字。
      type:
      - any
    - id: options
      description: 提供用于保留不变，用于在回调中的任何类型的上下文数据的选项。
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: 可选。 在回调返回时调用的其唯一参数的类型[Office.AsyncResult](xref:office.Office.AsyncResult)函数<!-- -->。
      type:
      - '(result: AsyncResult<void>) => void'
