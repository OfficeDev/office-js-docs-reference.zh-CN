### YamlMime:UniversalReference
items:
  - uid: word_release.Word.Range
    summary: |-
      表示文档中的一个连续区域。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: Word.Range
    fullName: Word.Range
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word_release
    children:
      - word_release.Word.Range.clear
      - word_release.Word.Range.compareLocationWith
      - word_release.Word.Range.contentControls
      - word_release.Word.Range.context
      - word_release.Word.Range.delete
      - word_release.Word.Range.expandTo
      - word_release.Word.Range.expandToOrNullObject
      - word_release.Word.Range.font
      - word_release.Word.Range.getHtml
      - word_release.Word.Range.getHyperlinkRanges
      - word_release.Word.Range.getNextTextRange
      - word_release.Word.Range.getNextTextRangeOrNullObject
      - word_release.Word.Range.getOoxml
      - word_release.Word.Range.getRange
      - word_release.Word.Range.getRange_1
      - word_release.Word.Range.getTextRanges
      - word_release.Word.Range.hyperlink
      - word_release.Word.Range.inlinePictures
      - word_release.Word.Range.insertBreak
      - word_release.Word.Range.insertBreak_1
      - word_release.Word.Range.insertContentControl
      - word_release.Word.Range.insertFileFromBase64
      - word_release.Word.Range.insertFileFromBase64_1
      - word_release.Word.Range.insertHtml
      - word_release.Word.Range.insertHtml_1
      - word_release.Word.Range.insertInlinePictureFromBase64
      - word_release.Word.Range.insertInlinePictureFromBase64_1
      - word_release.Word.Range.insertOoxml
      - word_release.Word.Range.insertOoxml_1
      - word_release.Word.Range.insertParagraph
      - word_release.Word.Range.insertParagraph_1
      - word_release.Word.Range.insertTable
      - word_release.Word.Range.insertTable_1
      - word_release.Word.Range.insertText
      - word_release.Word.Range.insertText_1
      - word_release.Word.Range.intersectWith
      - word_release.Word.Range.intersectWithOrNullObject
      - word_release.Word.Range.isEmpty
      - word_release.Word.Range.lists
      - word_release.Word.Range.load
      - word_release.Word.Range.load_1
      - word_release.Word.Range.load_2
      - word_release.Word.Range.paragraphs
      - word_release.Word.Range.parentBody
      - word_release.Word.Range.parentContentControl
      - word_release.Word.Range.parentContentControlOrNullObject
      - word_release.Word.Range.parentTable
      - word_release.Word.Range.parentTableCell
      - word_release.Word.Range.parentTableCellOrNullObject
      - word_release.Word.Range.parentTableOrNullObject
      - word_release.Word.Range.search
      - word_release.Word.Range.select
      - word_release.Word.Range.select_1
      - word_release.Word.Range.set
      - word_release.Word.Range.set_1
      - word_release.Word.Range.split
      - word_release.Word.Range.style
      - word_release.Word.Range.styleBuiltIn
      - word_release.Word.Range.tables
      - word_release.Word.Range.text
      - word_release.Word.Range.toJSON
      - word_release.Word.Range.track
      - word_release.Word.Range.untrack
  - uid: word_release.Word.Range.clear
    summary: |-
      清除 range 对象的内容。 用户可以对已清除的内容执行撤消操作。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to clear the contents of the proxy range object.
              range.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Range.compareLocationWith
    summary: |-
      比较此范围与另一范围的位置。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: compareLocationWith(range)
    fullName: compareLocationWith(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'compareLocationWith(range: Word.Range): OfficeExtension.ClientResult<Word.LocationRelation>;'
      return:
        type:
          - OfficeExtension.ClientResult<Word.LocationRelation>
        description: ''
      parameters:
        - id: range
          description: 必需。 要与此范围进行比较的范围。
          type:
            - Word.Range
  - uid: word_release.Word.Range.contentControls
    summary: |-
      获取范围中的内容控件对象的集合。 只读。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word_release.Word.Range.context
    summary: 与该对象关联的请求上下文。 这会将加载项的进程连接到 Office 主机应用程序的进程。
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word_release.Word.Range.delete
    summary: |-
      从文档中删除区域及其内容。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to delete the range object.
              range.delete();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Deleted the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Range.expandTo
    summary: |-
      返回从此 range 进行任一方向扩展的新 range，以便覆盖另一 range。 此 range 不变。 如果两个区域没有 union, 则引发。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: expandTo(range)
    fullName: expandTo(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'expandTo(range: Word.Range): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: range
          description: 必需。 另一个区域。
          type:
            - Word.Range
  - uid: word_release.Word.Range.expandToOrNullObject
    summary: |-
      返回从此 range 进行任一方向扩展的新 range，以便覆盖另一 range。 此 range 不变。 如果两个区域没有 union, 则返回 null 对象。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: expandToOrNullObject(range)
    fullName: expandToOrNullObject(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'expandToOrNullObject(range: Word.Range): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: range
          description: 必需。 另一个区域。
          type:
            - Word.Range
  - uid: word_release.Word.Range.font
    summary: |-
      获取区域的文本格式。 使用此对象获取和设置字体名称、大小、颜色和其他属性。 只读。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
  - uid: word_release.Word.Range.getHtml
    summary: |-
      获取 range 对象的 HTML 表示形式。 在网页或 HTML 查看器中呈现时, 格式设置将与文档的格式相匹配, 但不完全相同。 对于不同平台 (Windows、Mac 等) 上的同一文档, 此方法不会返回完全相同的 HTML。 如果您需要完全保真度或跨平台的一致性, 请`Range.getOoxml()`使用并将返回的 XML 转换为 HTML。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to get the HTML of the current selection.
              var html = range.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The HTML read from the document was: ' + html.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Range.getHyperlinkRanges
    summary: |-
      获取相应范围内的超链接子范围。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getHyperlinkRanges()
    fullName: getHyperlinkRanges()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHyperlinkRanges(): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: ''
  - uid: word_release.Word.Range.getNextTextRange
    summary: |-
      使用标点符号和/或其他结束标记获取下一个文本范围。 如果此文本范围是最后一个, 则引发。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'getNextTextRange(endingMarks, trimSpacing)'
    fullName: 'getNextTextRange(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextTextRange(endingMarks: string[], trimSpacing?: boolean): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: endingMarks
          description: 必需。 作为字符串数组的标点符号和/或其他结束标记。
          type:
            - 'string[]'
        - id: trimSpacing
          description: '可选。 指示是否从返回的范围的开头和末尾裁切间距字符 (空格、制表符、分栏符和段落结束标记)。 默认值为 false, 表示包含区域开头和结尾处的间距字符。'
          type:
            - boolean
  - uid: word_release.Word.Range.getNextTextRangeOrNullObject
    summary: |-
      使用标点符号和/或其他结束标记获取下一个文本范围。 如果此文本范围是最后一个, 则返回 null 对象。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'getNextTextRangeOrNullObject(endingMarks, trimSpacing)'
    fullName: 'getNextTextRangeOrNullObject(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextTextRangeOrNullObject(endingMarks: string[], trimSpacing?: boolean): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: endingMarks
          description: 必需。 作为字符串数组的标点符号和/或其他结束标记。
          type:
            - 'string[]'
        - id: trimSpacing
          description: '可选。 指示是否从返回的范围的开头和末尾裁切间距字符 (空格、制表符、分栏符和段落结束标记)。 默认值为 false, 表示包含区域开头和结尾处的间距字符。'
          type:
            - boolean
  - uid: word_release.Word.Range.getOoxml
    summary: |-
      获取 range 对象的 OOXML 表示形式。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to get the OOXML of the current selection.
              var ooxml = range.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The OOXML read from the document was:  ' + ooxml.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Range.getRange
    summary: |-
      克隆相应范围，或获取该范围的起点/终点作为一个新范围。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocation
          description: 可选。 范围位置可以是 "整体"、"Start"、"End"、"After" 或 "Content"。
          type:
            - word.Word.RangeLocation
  - uid: word_release.Word.Range.getRange_1
    summary: |-
      克隆相应范围，或获取该范围的起点/终点作为一个新范围。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocationString
          description: 可选。 范围位置可以是 "整体"、"Start"、"End"、"After" 或 "Content"。
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: word_release.Word.Range.getTextRanges
    summary: |-
      使用标点符号和/或其他结束标记获取区域中的文本子范围。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'getTextRanges(endingMarks, trimSpacing)'
    fullName: 'getTextRanges(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: |-


          #### <a name="examples"></a>示例

          ```typescript
          await Word.run(async (context) => {
            // Gets the complete sentence (as range) associated with the insertion point.
            let sentences = context.document
              .getSelection()
              .getTextRanges(["."] /* Using the "." as delimiter */, false /*means without trimming spaces*/);
            sentences.load("$none");
            await context.sync();

            // Expands the range to the end of the paragraph to get all the complete sentences.
            let sentencesToTheEndOfParagraph = sentences.items[0]
              .getRange()
              .expandTo(
                context.document
                  .getSelection()
                  .paragraphs.getFirst()
                  .getRange("End")
              )
              .getTextRanges(["."], false /* Don't trim spaces*/);
            sentencesToTheEndOfParagraph.load("text");
            await context.sync();

            for (let i = 0; i < sentencesToTheEndOfParagraph.items.length; i++) {
              console.log(sentencesToTheEndOfParagraph.items[i].text);
            }
          });
          ```
      parameters:
        - id: endingMarks
          description: 必需。 作为字符串数组的标点符号和/或其他结束标记。
          type:
            - 'string[]'
        - id: trimSpacing
          description: '可选。 指示是否裁切区域集合中返回的区域的开始和结束处的间距字符 (空格、制表符、分栏符和段落结束标记)。 默认值为 false, 表示区域集合中包含区域的开头和结尾处的间距字符。'
          type:
            - boolean
  - uid: word_release.Word.Range.hyperlink
    summary: |-
      获取 range 内的第一个超链接，或在 range 内设置超链接。 在 range 内设置新的超链接将删除 range 内的所有超链接。 使用 "\#" 将地址部分与可选位置部分分开。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: hyperlink
    fullName: hyperlink
    langs:
      - typeScript
    type: property
    syntax:
      content: 'hyperlink: string;'
      return:
        type:
          - string
  - uid: word_release.Word.Range.inlinePictures
    summary: |-
      获取 range 中的一组 inlinePicture 对象。 只读。

      \[[API 集: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - word.Word.InlinePictureCollection
  - uid: word_release.Word.Range.insertBreak
    summary: |-
      在主文档的指定位置插入分隔符。 insertLocation 的可取值为“Before”或“After”。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: 必需。 要添加的分隔符类型。
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: 必需。 值可以为“Before”或“After”。
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Range.insertBreak_1
    summary: |-
      在主文档的指定位置插入分隔符。 insertLocation 的可取值为“Before”或“After”。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert a page break after the selected text.
              range.insertBreak('page', 'After');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Inserted a page break after the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: 必需。 要添加的分隔符类型。
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: 必需。 值可以为“Before”或“After”。
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Range.insertContentControl
    summary: |-
      使用富文本内容控件封装 range 对象。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert a content control around the selected text,
              // and create a proxy content control object. We'll update the properties
              // on the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = "Customer-Address";
              myContentControl.title = "Enter Customer Address Here:";
              myContentControl.style = "Normal";
              myContentControl.insertText("One Microsoft Way, Redmond, WA 98052", 'Replace');
              myContentControl.cannotEdit = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped a content control around the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
              let results = context.document.body.search("Contractor");
              results.load("font/bold");

              // Check to make sure these content controls haven't been added yet.
              let customerContentControls = context.document.contentControls.getByTag("customer");
              customerContentControls.load("text");
              await context.sync();

            if (customerContentControls.items.length === 0) {
              for (var i = 0; i < results.items.length; i++) { 
                  results.items[i].font.bold = true;
                  var cc = results.items[i].insertContentControl();
                  cc.tag = "customer";  // This value is used in the next step of this sample.
                  cc.title = "Customer Name " + i;
              }
            }
              await context.sync();
          });
          ```
  - uid: word_release.Word.Range.insertFileFromBase64
    summary: |-
      在指定位置插入 document。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert base64 encoded .docx at the beginning of the range.
              // You'll need to implement getBase64() to make this work.
              range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: 必需。 .Docx 文件的 base64 编码内容。
          type:
            - string
        - id: insertLocation
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Range.insertFileFromBase64_1
    summary: |-
      在指定位置插入 document。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: 必需。 .Docx 文件的 base64 编码内容。
          type:
            - string
        - id: insertLocationString
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Range.insertHtml
    summary: |-
      在指定位置插入 HTML。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: 必需。 要插入的 HTML。
          type:
            - string
        - id: insertLocation
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Range.insertHtml_1
    summary: |-
      在指定位置插入 HTML。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: html
          description: 必需。 要插入的 HTML。
          type:
            - string
        - id: insertLocationString
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Range.insertInlinePictureFromBase64
    summary: |-
      在指定位置插入图片。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: 必需。 要插入的 base64 编码的图像。
          type:
            - string
        - id: insertLocation
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Range.insertInlinePictureFromBase64_1
    summary: |-
      在指定位置插入图片。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: 必需。 要插入的 base64 编码的图像。
          type:
            - string
        - id: insertLocationString
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Range.insertOoxml
    summary: |-
      在指定位置插入 OOXML。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert OOXML in to the beginning of the range.
              range.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: 必需。 要插入的 OOXML。
          type:
            - string
        - id: insertLocation
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Range.insertOoxml_1
    summary: |-
      在指定位置插入 OOXML。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: 必需。 要插入的 OOXML。
          type:
            - string
        - id: insertLocationString
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Range.insertParagraph
    summary: |-
      在指定位置插入段落。 insertLocation 值可以为“Before”或“After”。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert the paragraph after the range.
              range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: 必需。 要插入的段落文本。
          type:
            - string
        - id: insertLocation
          description: 必需。 值可以为“Before”或“After”。
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Range.insertParagraph_1
    summary: |-
      在指定位置插入段落。 insertLocation 值可以为“Before”或“After”。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: 必需。 要插入的段落文本。
          type:
            - string
        - id: insertLocationString
          description: 必需。 值可以为“Before”或“After”。
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Range.insertTable
    summary: |-
      插入包含指定行数和列数的 table。 insertLocation 值可以为“Before”或“After”。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: 必需。 表格的行数。
          type:
            - number
        - id: columnCount
          description: 必需。 表格的列数。
          type:
            - number
        - id: insertLocation
          description: 必需。 值可以为“Before”或“After”。
          type:
            - Word.InsertLocation
        - id: values
          description: 可选的二维数组。 如果指定数组中的对应字符串，则填充单元格。
          type:
            - 'string[][]'
  - uid: word_release.Word.Range.insertTable_1
    summary: |-
      插入包含指定行数和列数的 table。 insertLocation 值可以为“Before”或“After”。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: 必需。 表格的行数。
          type:
            - number
        - id: columnCount
          description: 必需。 表格的列数。
          type:
            - number
        - id: insertLocationString
          description: 必需。 值可以为“Before”或“After”。
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: 可选的二维数组。 如果指定数组中的对应字符串，则填充单元格。
          type:
            - 'string[][]'
  - uid: word_release.Word.Range.insertText
    summary: |-
      在指定位置插入文本。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert the paragraph at the end of the range.
              range.insertText('New text inserted into the range.', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: 必需。 要插入的文本。
          type:
            - string
        - id: insertLocation
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Range.insertText_1
    summary: |-
      在指定位置插入文本。 InsertLocation 值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: text
          description: 必需。 要插入的文本。
          type:
            - string
        - id: insertLocationString
          description: 必需。 该值可以是 "Replace"、"Start"、"End"、"Before" 或 "After"。
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Range.intersectWith
    summary: |-
      返回新 range 作为此 range 与另一 range 的交集。 此 range 不变。 如果两个区域不重叠或相邻, 则引发。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: intersectWith(range)
    fullName: intersectWith(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'intersectWith(range: Word.Range): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: range
          description: 必需。 另一个区域。
          type:
            - Word.Range
  - uid: word_release.Word.Range.intersectWithOrNullObject
    summary: |-
      返回新 range 作为此 range 与另一 range 的交集。 此 range 不变。 如果两个区域不重叠或相邻, 则返回 null 对象。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: intersectWithOrNullObject(range)
    fullName: intersectWithOrNullObject(range)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'intersectWithOrNullObject(range: Word.Range): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: range
          description: 必需。 另一个区域。
          type:
            - Word.Range
  - uid: word_release.Word.Range.isEmpty
    summary: |-
      检查 range 长度是否为零。 只读。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: isEmpty
    fullName: isEmpty
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEmpty: boolean;'
      return:
        type:
          - boolean
  - uid: word_release.Word.Range.lists
    summary: |-
      获取 range 中的一组 list 对象。 只读。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: lists
    fullName: lists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lists: Word.ListCollection;'
      return:
        type:
          - word.Word.ListCollection
  - uid: word_release.Word.Range.load
    summary: 将命令加入队列以加载对象的指定属性。 在读取属性之前，你必须调用“context.sync()”。
    remarks: |-
      除了此签名之外, 此方法还具有以下签名:

      `load(option?: string | string[]): Word.Range`-Where 选项是一个逗号分隔的字符串或一个字符串数组, 用于指定要加载的属性。

      `load(option?: { select?: string; expand?: string; }): Word.Range`-Where 选项。选择是一个用逗号分隔的字符串, 用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串, 用于指定要加载的导航属性。

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range`-仅适用于集合类型。 它类似于前面的签名。 Top 指定结果中可包含的集合项的最大数量。 选项。 skip 指定要跳过且不包含在结果中的项目数。 如果指定了 top 选项, 则在跳过指定数目的项目后将启动结果集。
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.RangeLoadOptions): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.RangeLoadOptions
  - uid: word_release.Word.Range.load_1
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: propertyNames
          description: '一个以逗号分隔的字符串或字符串数组, 用于指定要加载的属性。'
          type:
            - 'string | string[]'
  - uid: word_release.Word.Range.load_2
    summary: '将命令加入队列以加载对象的指定属性。 在读取属性`context.sync()`之前, 必须先调用。'
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '其中, propertyNamesAndPaths 是用逗号分隔的字符串, 用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串, 用于指定要加载的导航属性。'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word_release.Word.Range.paragraphs
    summary: |-
      获取范围中的段落对象的集合。 只读。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
  - uid: word_release.Word.Range.parentBody
    summary: |-
      获取 range 的父正文。 只读。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word_release.Word.Range.parentContentControl
    summary: |-
      获取包含该范围的内容控件。 如果没有父内容控件, 将引发此异常。 只读。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Range.parentContentControlOrNullObject
    summary: |-
      获取包含该范围的内容控件。 如果没有父内容控件, 则返回 null 对象。 只读。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Range.parentTable
    summary: |-
      获取包含 range 的 table。 如果表中不包含此项, 则引发。 只读。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word_release.Word.Range.parentTableCell
    summary: |-
      获取包含 range 的 tableCell。 如果表格单元格中不包含此项, 则会引发此异常。 只读。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word_release.Word.Range.parentTableCellOrNullObject
    summary: |-
      获取包含 range 的 tableCell。 如果未包含在 tableCell 中，则此关系返回空对象。 只读。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word_release.Word.Range.parentTableOrNullObject
    summary: |-
      获取包含 range 的 table。 如果未包含在 table 中，则此关系返回空对象。 只读。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word_release.Word.Range.search
    summary: |-
      在 range 对象的作用域上使用指定的 SearchOptions 执行搜索。 搜索结果是 range 对象的集合。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: searchText
          description: 必需。 搜索文本。
          type:
            - string
        - id: searchOptions
          description: 可选。 用于搜索的选项。
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word_release.Word.Range.select
    summary: |-
      选择并在 Word UI 中导航到区域。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>示例

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Queue a command to select the HTML that was inserted.
              range.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: 可选。 选择模式可以为“Select”、“Start”或“End”。 “Select”为默认值。
          type:
            - Word.SelectionMode
  - uid: word_release.Word.Range.select_1
    summary: |-
      选择并在 Word UI 中导航到区域。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: 可选。 选择模式可以为“Select”、“Start”或“End”。 “Select”为默认值。
          type:
            - '"Select" | "Start" | "End"'
  - uid: word_release.Word.Range.set
    summary: 同时设置一个对象的多个属性。 您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。
    remarks: |-
      此方法具有以下附加签名:

      `set(properties: Word.Range): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '一个 JavaScript 对象, 其属性的结构 isomorphically 为在其上调用方法的对象的属性。'
          type:
            - Interfaces.RangeUpdateData
        - id: options
          description: '提供一个选项, 以在 properties 对象尝试设置任何只读属性时禁止显示错误。'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: word_release.Word.Range.set_1
    summary: 基于现有加载的对象同时设置该对象的多个属性。
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Word.Range
  - uid: word_release.Word.Range.split
    summary: |-
      使用分隔符将相应范围拆分为各个子范围。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)'
    fullName: 'split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: delimiters
          description: 必需。 字符串数组形式的分隔符。
          type:
            - 'string[]'
        - id: multiParagraphs
          description: '可选。 指示返回的子区域是否可以包含多个段落。 默认值为 false, 表示段落边界也用作分隔符。'
          type:
            - boolean
        - id: trimDelimiters
          description: '可选。 指示是否要裁切区域集合中区域的分隔符。 默认值为 false, 表示在 range 集合中返回的区域中包含分隔符。'
          type:
            - boolean
        - id: trimSpacing
          description: '可选。 指示是否裁切区域集合中返回的区域的开始和结束处的间距字符 (空格、制表符、分栏符和段落结束标记)。 默认值为 false, 表示区域集合中包含区域的开头和结尾处的间距字符。'
          type:
            - boolean
  - uid: word_release.Word.Range.style
    summary: |-
      获取或设置区域的样式名称。 请对自定义样式和本地化样式名称使用此属性。 若要使用可以在区域设置之间移植的嵌入样式，请参阅“styleBuiltIn”属性。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word_release.Word.Range.styleBuiltIn
    summary: |-
      获取或设置 range 的嵌入样式名称。请对可以在区域设置之间移植的嵌入样式使用此属性。若要使用自定义样式或本地化样式名称，请参阅“style”属性。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
  - uid: word_release.Word.Range.tables
    summary: |-
      获取 range 中的一组 table 对象。 只读。

      \[[API 集: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type:
          - Word.TableCollection
  - uid: word_release.Word.Range.text
    summary: |-
      获取区域的文本。 只读。

      \[[API 集: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: word_release.Word.Range.toJSON
    summary: '重写 JavaScript `toJSON()`方法, 以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->反过来, 也会调用传递`toJSON`给它的对象的方法。尽管原始的 Word Range 对象是 API 对象, 但`toJSON`方法返回一个无格式的 JavaScript 对象 (类型为`Word.Interfaces.RangeData`<!-- -->), 其中包含原始对象中所有已加载的子属性的浅表副本。'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.RangeData;'
      return:
        type:
          - Word.Interfaces.RangeData
        description: ''
  - uid: word_release.Word.Range.track
    summary: 根据文档中的相应更改来跟踪对象，以便进行自动调整。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 如果你在“.sync”调用之间和按顺序执行“.run”批处理之外使用此对象，并且在对象上设置属性或调用方法时出现“InvalidObjectPath”错误，则需要在首次创建对象时为跟踪的对象集合添加对象。
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
  - uid: word_release.Word.Range.untrack
    summary: 释放与此对象关联的内存（如果先前已跟踪过）。 此调用是 context.trackedObjects.add(thisObject) 的缩写。 拥有许多跟踪对象会降低主机应用程序的速度，因此请在使用完毕后释放所添加的任何对象。 在内存释放生效之前，你需要调用“context.sync()”。
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''