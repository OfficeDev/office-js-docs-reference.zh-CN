### YamlMime:UniversalReference
items:
  - uid: 'word!Word.Paragraph:class'
    summary: |-
      <span data-ttu-id="93279-101">表示选定内容、区域、内容控件或文档正文中的单个段落。</span><span class="sxs-lookup"><span data-stu-id="93279-101">Represents a single paragraph in a selection, range, content control, or document body.</span></span>

      <span data-ttu-id="93279-102">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Paragraph
    fullName: Word.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.Paragraph#alignment:member'
      - 'word!Word.Paragraph#attachToList:member(1)'
      - 'word!Word.Paragraph#clear:member(1)'
      - 'word!Word.Paragraph#contentControls:member'
      - 'word!Word.Paragraph#context:member'
      - 'word!Word.Paragraph#delete:member(1)'
      - 'word!Word.Paragraph#detachFromList:member(1)'
      - 'word!Word.Paragraph#firstLineIndent:member'
      - 'word!Word.Paragraph#font:member'
      - 'word!Word.Paragraph#getHtml:member(1)'
      - 'word!Word.Paragraph#getNext:member(1)'
      - 'word!Word.Paragraph#getNextOrNullObject:member(1)'
      - 'word!Word.Paragraph#getOoxml:member(1)'
      - 'word!Word.Paragraph#getPrevious:member(1)'
      - 'word!Word.Paragraph#getPreviousOrNullObject:member(1)'
      - 'word!Word.Paragraph#getRange:member(1)'
      - 'word!Word.Paragraph#getRange:member(2)'
      - 'word!Word.Paragraph#getTextRanges:member(1)'
      - 'word!Word.Paragraph#inlinePictures:member'
      - 'word!Word.Paragraph#insertBreak:member(1)'
      - 'word!Word.Paragraph#insertBreak:member(2)'
      - 'word!Word.Paragraph#insertContentControl:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(1)'
      - 'word!Word.Paragraph#insertFileFromBase64:member(2)'
      - 'word!Word.Paragraph#insertHtml:member(1)'
      - 'word!Word.Paragraph#insertHtml:member(2)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
      - 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
      - 'word!Word.Paragraph#insertOoxml:member(1)'
      - 'word!Word.Paragraph#insertOoxml:member(2)'
      - 'word!Word.Paragraph#insertParagraph:member(1)'
      - 'word!Word.Paragraph#insertParagraph:member(2)'
      - 'word!Word.Paragraph#insertTable:member(1)'
      - 'word!Word.Paragraph#insertTable:member(2)'
      - 'word!Word.Paragraph#insertText:member(1)'
      - 'word!Word.Paragraph#insertText:member(2)'
      - 'word!Word.Paragraph#isLastParagraph:member'
      - 'word!Word.Paragraph#isListItem:member'
      - 'word!Word.Paragraph#leftIndent:member'
      - 'word!Word.Paragraph#lineSpacing:member'
      - 'word!Word.Paragraph#lineUnitAfter:member'
      - 'word!Word.Paragraph#lineUnitBefore:member'
      - 'word!Word.Paragraph#list:member'
      - 'word!Word.Paragraph#listItem:member'
      - 'word!Word.Paragraph#listItemOrNullObject:member'
      - 'word!Word.Paragraph#listOrNullObject:member'
      - 'word!Word.Paragraph#load:member(1)'
      - 'word!Word.Paragraph#load:member(2)'
      - 'word!Word.Paragraph#load:member(3)'
      - 'word!Word.Paragraph#outlineLevel:member'
      - 'word!Word.Paragraph#parentBody:member'
      - 'word!Word.Paragraph#parentContentControl:member'
      - 'word!Word.Paragraph#parentContentControlOrNullObject:member'
      - 'word!Word.Paragraph#parentTable:member'
      - 'word!Word.Paragraph#parentTableCell:member'
      - 'word!Word.Paragraph#parentTableCellOrNullObject:member'
      - 'word!Word.Paragraph#parentTableOrNullObject:member'
      - 'word!Word.Paragraph#rightIndent:member'
      - 'word!Word.Paragraph#search:member(1)'
      - 'word!Word.Paragraph#select:member(1)'
      - 'word!Word.Paragraph#select:member(2)'
      - 'word!Word.Paragraph#set:member(1)'
      - 'word!Word.Paragraph#set:member(2)'
      - 'word!Word.Paragraph#spaceAfter:member'
      - 'word!Word.Paragraph#spaceBefore:member'
      - 'word!Word.Paragraph#split:member(1)'
      - 'word!Word.Paragraph#startNewList:member(1)'
      - 'word!Word.Paragraph#style:member'
      - 'word!Word.Paragraph#styleBuiltIn:member'
      - 'word!Word.Paragraph#tableNestingLevel:member'
      - 'word!Word.Paragraph#text:member'
      - 'word!Word.Paragraph#toJSON:member(1)'
      - 'word!Word.Paragraph#track:member(1)'
      - 'word!Word.Paragraph#untrack:member(1)'
  - uid: 'word!Word.Paragraph#alignment:member'
    summary: |-
      <span data-ttu-id="93279-103">获取或设置段落的对齐方式。</span><span class="sxs-lookup"><span data-stu-id="93279-103">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id="93279-104">可取值为“left”、“centered”、“right”或“justified”。</span><span class="sxs-lookup"><span data-stu-id="93279-104">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>

      <span data-ttu-id="93279-105">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - 'word!Word.Paragraph#alignment~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-106">示例</span><span class="sxs-lookup"><span data-stu-id="93279-106">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Centers last paragraph alignment.
            context.document.body.paragraphs.getLast().alignment = "Centered";

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#attachToList:member(1)'
    summary: |-
      <span data-ttu-id="93279-p102">将 paragraph 加入指定级别的现有 list。如果 paragraph 无法加入 list 或已是 listItem，则无法执行此方法。</span><span class="sxs-lookup"><span data-stu-id="93279-p102">Lets the paragraph join an existing list at the specified level. Fails if the paragraph cannot join the list or if the paragraph is already a list item.</span></span>

      <span data-ttu-id="93279-109">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-109">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'attachToList(listId, level)'
    fullName: 'attachToList(listId, level)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'attachToList(listId: number, level: number): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: ''
      parameters:
        - id: listId
          description: <span data-ttu-id="93279-110">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-110">Required.</span></span> <span data-ttu-id="93279-111">现有列表的 ID。</span><span class="sxs-lookup"><span data-stu-id="93279-111">The ID of an existing list.</span></span>
          type:
            - number
        - id: level
          description: <span data-ttu-id="93279-112">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-112">Required.</span></span> <span data-ttu-id="93279-113">列表中的级别。</span><span class="sxs-lookup"><span data-stu-id="93279-113">The level in the list.</span></span>
          type:
            - number
  - uid: 'word!Word.Paragraph#clear:member(1)'
    summary: |-
      <span data-ttu-id="93279-114">清除 paragraph 对象的内容。</span><span class="sxs-lookup"><span data-stu-id="93279-114">Clears the contents of the paragraph object.</span></span> <span data-ttu-id="93279-115">用户可以对已清除的内容执行撤消操作。</span><span class="sxs-lookup"><span data-stu-id="93279-115">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="93279-116">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-117">示例</span><span class="sxs-lookup"><span data-stu-id="93279-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to clear the contents of the first paragraph.
                  paragraphs.items[0].clear();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Cleared the contents of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#contentControls:member'
    summary: |-
      <span data-ttu-id="93279-118">获取段落中的内容控件对象的集合。</span><span class="sxs-lookup"><span data-stu-id="93279-118">Gets the collection of content control objects in the paragraph.</span></span> <span data-ttu-id="93279-119">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-119">Read-only.</span></span>

      <span data-ttu-id="93279-120">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
  - uid: 'word!Word.Paragraph#context:member'
    summary: <span data-ttu-id="93279-121">与该对象关联的请求上下文。</span><span class="sxs-lookup"><span data-stu-id="93279-121">The request context associated with the object.</span></span> <span data-ttu-id="93279-122">这会将加载项的进程连接到 Office 主机应用程序的进程。</span><span class="sxs-lookup"><span data-stu-id="93279-122">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.Paragraph#delete:member(1)'
    summary: |-
      <span data-ttu-id="93279-123">从文档中删除段落及其内容。</span><span class="sxs-lookup"><span data-stu-id="93279-123">Deletes the paragraph and its content from the document.</span></span>

      <span data-ttu-id="93279-124">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-125">示例</span><span class="sxs-lookup"><span data-stu-id="93279-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to delete the first paragraph.
                  paragraphs.items[0].delete();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Deleted the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#detachFromList:member(1)'
    summary: |-
      <span data-ttu-id="93279-126">如果此段落是列表项目的话，从列表中移出此段落。</span><span class="sxs-lookup"><span data-stu-id="93279-126">Moves this paragraph out of its list, if the paragraph is a list item.</span></span>

      <span data-ttu-id="93279-127">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: detachFromList()
    fullName: detachFromList()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'detachFromList(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'word!Word.Paragraph#firstLineIndent:member'
    summary: |-
      <span data-ttu-id="93279-p108">获取或设置首行缩进或悬挂缩进的大小（以磅值表示）。用正数设置首行缩进的尺寸，用负数设置悬挂缩进的尺寸。</span><span class="sxs-lookup"><span data-stu-id="93279-p108">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>

      <span data-ttu-id="93279-130">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: firstLineIndent
    fullName: firstLineIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstLineIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#font:member'
    summary: |-
      <span data-ttu-id="93279-131">获取段落的文本格式。</span><span class="sxs-lookup"><span data-stu-id="93279-131">Gets the text format of the paragraph.</span></span> <span data-ttu-id="93279-132">使用此对象获取和设置字体名称、大小、颜色和其他属性。</span><span class="sxs-lookup"><span data-stu-id="93279-132">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="93279-133">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-133">Read-only.</span></span>

      <span data-ttu-id="93279-134">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-134">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - 'word!Word.Font:class'
  - uid: 'word!Word.Paragraph#getHtml:member(1)'
    summary: |-
      <span data-ttu-id="93279-135">获取段落对象的 HTML 表示形式。</span><span class="sxs-lookup"><span data-stu-id="93279-135">Gets an HTML representation of the paragraph object.</span></span> <span data-ttu-id="93279-136">在网页或 HTML 查看器中呈现时，格式设置将与文档的格式设置完全匹配，但不完全匹配。</span><span class="sxs-lookup"><span data-stu-id="93279-136">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="93279-137">此方法不会为不同平台（Windows、Mac、web 上的 Word 等）上的同一文档返回完全相同的 HTML。</span><span class="sxs-lookup"><span data-stu-id="93279-137">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word for the web, etc.).</span></span> <span data-ttu-id="93279-138">如果您需要完全保真度或跨平台的一致性，请`Paragraph.getOoxml()`使用并将返回的 XML 转换为 HTML。</span><span class="sxs-lookup"><span data-stu-id="93279-138">If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="93279-139">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-139">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getHtml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-140">示例</span><span class="sxs-lookup"><span data-stu-id="93279-140">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the HTML of the first paragraph.
                  var html = paragraphs.items[0].getHtml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph HTML: ' + html.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#getNext:member(1)'
    summary: |-
      <span data-ttu-id="93279-141">获取下一个段落。</span><span class="sxs-lookup"><span data-stu-id="93279-141">Gets the next paragraph.</span></span> <span data-ttu-id="93279-142">如果该段落是最后一个段落，则引发错误。</span><span class="sxs-lookup"><span data-stu-id="93279-142">Throws an error if the paragraph is the last one.</span></span>

      <span data-ttu-id="93279-143">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-143">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getNext()
    fullName: getNext()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNext(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#getNextOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="93279-144">获取下一个段落。</span><span class="sxs-lookup"><span data-stu-id="93279-144">Gets the next paragraph.</span></span> <span data-ttu-id="93279-145">如果该段落是最后一个，则返回 null 对象。</span><span class="sxs-lookup"><span data-stu-id="93279-145">Returns a null object if the paragraph is the last one.</span></span>

      <span data-ttu-id="93279-146">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-146">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getNextOrNullObject()
    fullName: getNextOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextOrNullObject(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#getOoxml:member(1)'
    summary: |-
      <span data-ttu-id="93279-147">获取 paragraph 对象的 Office Open XML (OOXML) 表示形式。</span><span class="sxs-lookup"><span data-stu-id="93279-147">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>

      <span data-ttu-id="93279-148">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - 'word!Word.Paragraph#getOoxml~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-149">示例</span><span class="sxs-lookup"><span data-stu-id="93279-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the OOXML of the first paragraph.
                  var ooxml = paragraphs.items[0].getOoxml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph OOXML: ' + ooxml.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#getPrevious:member(1)'
    summary: |-
      <span data-ttu-id="93279-150">获取上一个段落。</span><span class="sxs-lookup"><span data-stu-id="93279-150">Gets the previous paragraph.</span></span> <span data-ttu-id="93279-151">如果该段落是第一个段落，则引发错误。</span><span class="sxs-lookup"><span data-stu-id="93279-151">Throws an error if the paragraph is the first one.</span></span>

      <span data-ttu-id="93279-152">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-152">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getPrevious()
    fullName: getPrevious()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrevious(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#getPreviousOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="93279-153">获取上一个段落。</span><span class="sxs-lookup"><span data-stu-id="93279-153">Gets the previous paragraph.</span></span> <span data-ttu-id="93279-154">如果该段落是第一个，则返回 null 对象。</span><span class="sxs-lookup"><span data-stu-id="93279-154">Returns a null object if the paragraph is the first one.</span></span>

      <span data-ttu-id="93279-155">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-155">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getPreviousOrNullObject()
    fullName: getPreviousOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreviousOrNullObject(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-156">示例</span><span class="sxs-lookup"><span data-stu-id="93279-156">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue commands to create a proxy object for the next-to-last paragraph.
                  var indexOfLastParagraph = paragraphs.items.length - 1;
                  var precedingParagraph = paragraphs.items[indexOfLastParagraph].getPreviousOrNullObject();

                  // Queue a command to load the text of the preceding paragraph.
                  context.load(precedingParagraph, 'text');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      if (precedingParagraph.isNullObject) {
                          console.log('There are no paragraphs before the current one.');
                      } else {
                          console.log('The preceding paragraph is: ' + precedingParagraph.text);
                      }
                  });
              });
          }).catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#getRange:member(1)'
    summary: |-
      <span data-ttu-id="93279-157">获取整个段落或段落的起点/终点，作为一个范围。</span><span class="sxs-lookup"><span data-stu-id="93279-157">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>

      <span data-ttu-id="93279-158">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-158">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="93279-159">可选。</span><span class="sxs-lookup"><span data-stu-id="93279-159">Optional.</span></span> <span data-ttu-id="93279-160">范围位置可以是 "整体"、"Start"、"End"、"After" 或 "Content"。</span><span class="sxs-lookup"><span data-stu-id="93279-160">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - 'word!Word.RangeLocation:enum'
  - uid: 'word!Word.Paragraph#getRange:member(2)'
    summary: |-
      <span data-ttu-id="93279-161">获取整个段落或段落的起点/终点，作为一个范围。</span><span class="sxs-lookup"><span data-stu-id="93279-161">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>

      <span data-ttu-id="93279-162">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-162">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="93279-163">可选。</span><span class="sxs-lookup"><span data-stu-id="93279-163">Optional.</span></span> <span data-ttu-id="93279-164">范围位置可以是 "整体"、"Start"、"End"、"After" 或 "Content"。</span><span class="sxs-lookup"><span data-stu-id="93279-164">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: 'word!Word.Paragraph#getTextRanges:member(1)'
    summary: |-
      <span data-ttu-id="93279-165">使用标点符号和/或其他结束标记获取段落中的文本范围。</span><span class="sxs-lookup"><span data-stu-id="93279-165">Gets the text ranges in the paragraph by using punctuation marks and/or other ending marks.</span></span>

      <span data-ttu-id="93279-166">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-166">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getTextRanges(endingMarks, trimSpacing)'
    fullName: 'getTextRanges(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="93279-167">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-167">Required.</span></span> <span data-ttu-id="93279-168">作为字符串数组的标点符号和/或其他结束标记。</span><span class="sxs-lookup"><span data-stu-id="93279-168">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="93279-169">可选。</span><span class="sxs-lookup"><span data-stu-id="93279-169">Optional.</span></span> <span data-ttu-id="93279-170">指示是否裁切区域集合中返回的区域的开始和结束处的间距字符（空格、制表符、分栏符和段落结束标记）。</span><span class="sxs-lookup"><span data-stu-id="93279-170">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="93279-171">默认值为 false，表示区域集合中包含区域的开头和结尾处的间距字符。</span><span class="sxs-lookup"><span data-stu-id="93279-171">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.Paragraph#inlinePictures:member'
    summary: |-
      <span data-ttu-id="93279-172">获取段落中 InlinePicture 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="93279-172">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id="93279-173">集合不包括浮动图像。</span><span class="sxs-lookup"><span data-stu-id="93279-173">The collection does not include floating images.</span></span> <span data-ttu-id="93279-174">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-174">Read-only.</span></span>

      <span data-ttu-id="93279-175">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-175">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - 'word!Word.InlinePictureCollection:class'
  - uid: 'word!Word.Paragraph#insertBreak:member(1)'
    summary: |-
      <span data-ttu-id="93279-176">在主文档的指定位置插入分隔符。</span><span class="sxs-lookup"><span data-stu-id="93279-176">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="93279-177">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-177">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-178">示例</span><span class="sxs-lookup"><span data-stu-id="93279-178">Examples</span></span>

          ```typescript
          Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, "After");

            await context.sync();
            console.log("success");
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, "After");

            await context.sync();
            console.log("success");
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="93279-179">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-179">Required.</span></span> <span data-ttu-id="93279-180">要添加到文档的分隔符类型。</span><span class="sxs-lookup"><span data-stu-id="93279-180">The break type to add to the document.</span></span>
          type:
            - 'word!Word.BreakType:enum'
        - id: insertLocation
          description: <span data-ttu-id="93279-181">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-181">Required.</span></span> <span data-ttu-id="93279-182">值可以为“Before”或“After”。</span><span class="sxs-lookup"><span data-stu-id="93279-182">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertBreak:member(2)'
    summary: |-
      <span data-ttu-id="93279-183">在主文档的指定位置插入分隔符。</span><span class="sxs-lookup"><span data-stu-id="93279-183">Inserts a break at the specified location in the main document.</span></span>

      <span data-ttu-id="93279-184">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-184">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-185">示例</span><span class="sxs-lookup"><span data-stu-id="93279-185">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert a page break after the first paragraph.
                  paragraph.insertBreak('page', 'After');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a page break after the paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="93279-186">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-186">Required.</span></span> <span data-ttu-id="93279-187">要添加到文档的分隔符类型。</span><span class="sxs-lookup"><span data-stu-id="93279-187">The break type to add to the document.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="93279-188">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-188">Required.</span></span> <span data-ttu-id="93279-189">值可以为“Before”或“After”。</span><span class="sxs-lookup"><span data-stu-id="93279-189">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertContentControl:member(1)'
    summary: |-
      <span data-ttu-id="93279-190">使用富文本内容控件封装 paragraph 对象。</span><span class="sxs-lookup"><span data-stu-id="93279-190">Wraps the paragraph object with a rich text content control.</span></span>

      <span data-ttu-id="93279-191">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-191">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-192">示例</span><span class="sxs-lookup"><span data-stu-id="93279-192">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to wrap the first paragraph in a rich text content control.
                  paragraph.insertContentControl();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Wrapped the first paragraph in a content control.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="93279-193">将文档插入到指定位置的段落中。</span><span class="sxs-lookup"><span data-stu-id="93279-193">Inserts a document into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-194">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-194">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="93279-195">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-195">Required.</span></span> <span data-ttu-id="93279-196">.Docx 文件的 base64 编码内容。</span><span class="sxs-lookup"><span data-stu-id="93279-196">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="93279-197">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-197">Required.</span></span> <span data-ttu-id="93279-198">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-198">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertFileFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="93279-199">将文档插入到指定位置的段落中。</span><span class="sxs-lookup"><span data-stu-id="93279-199">Inserts a document into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-200">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-200">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="93279-201">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-201">Required.</span></span> <span data-ttu-id="93279-202">.Docx 文件的 base64 编码内容。</span><span class="sxs-lookup"><span data-stu-id="93279-202">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="93279-203">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-203">Required.</span></span> <span data-ttu-id="93279-204">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-204">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertHtml:member(1)'
    summary: |-
      <span data-ttu-id="93279-205">将 HTML 插入到段落中的指定位置。</span><span class="sxs-lookup"><span data-stu-id="93279-205">Inserts HTML into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-206">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-206">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-207">示例</span><span class="sxs-lookup"><span data-stu-id="93279-207">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert HTML content at the end of the first paragraph.
                  paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted HTML content at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="93279-208">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-208">Required.</span></span> <span data-ttu-id="93279-209">要插入到段落中的 HTML。</span><span class="sxs-lookup"><span data-stu-id="93279-209">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="93279-210">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-210">Required.</span></span> <span data-ttu-id="93279-211">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-211">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertHtml:member(2)'
    summary: |-
      <span data-ttu-id="93279-212">将 HTML 插入到段落中的指定位置。</span><span class="sxs-lookup"><span data-stu-id="93279-212">Inserts HTML into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-213">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-213">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="93279-214">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-214">Required.</span></span> <span data-ttu-id="93279-215">要插入到段落中的 HTML。</span><span class="sxs-lookup"><span data-stu-id="93279-215">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="93279-216">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-216">Required.</span></span> <span data-ttu-id="93279-217">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-217">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(1)'
    summary: |-
      <span data-ttu-id="93279-218">将图片插入到段落中的指定位置。</span><span class="sxs-lookup"><span data-stu-id="93279-218">Inserts a picture into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-219">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-219">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-220">示例</span><span class="sxs-lookup"><span data-stu-id="93279-220">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  var b64encodedImg = "iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC";

                  // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.
                  paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Added an image to the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="93279-221">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-221">Required.</span></span> <span data-ttu-id="93279-222">要插入的 base64 编码的图像。</span><span class="sxs-lookup"><span data-stu-id="93279-222">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="93279-223">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-223">Required.</span></span> <span data-ttu-id="93279-224">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-224">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertInlinePictureFromBase64:member(2)'
    summary: |-
      <span data-ttu-id="93279-225">将图片插入到段落中的指定位置。</span><span class="sxs-lookup"><span data-stu-id="93279-225">Inserts a picture into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-226">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-226">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - 'word!Word.InlinePicture:class'
        description: ''
      parameters:
        - id: base64EncodedImage
          description: <span data-ttu-id="93279-227">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-227">Required.</span></span> <span data-ttu-id="93279-228">要插入的 base64 编码的图像。</span><span class="sxs-lookup"><span data-stu-id="93279-228">The base64 encoded image to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="93279-229">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-229">Required.</span></span> <span data-ttu-id="93279-230">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-230">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertOoxml:member(1)'
    summary: |-
      <span data-ttu-id="93279-231">将 OOXML 插入到段落中的指定位置。</span><span class="sxs-lookup"><span data-stu-id="93279-231">Inserts OOXML into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-232">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-232">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="93279-233">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-233">Required.</span></span> <span data-ttu-id="93279-234">要在段落中插入的 OOXML。</span><span class="sxs-lookup"><span data-stu-id="93279-234">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="93279-235">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-235">Required.</span></span> <span data-ttu-id="93279-236">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-236">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertOoxml:member(2)'
    summary: |-
      <span data-ttu-id="93279-237">将 OOXML 插入到段落中的指定位置。</span><span class="sxs-lookup"><span data-stu-id="93279-237">Inserts OOXML into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-238">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-238">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="93279-239">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-239">Required.</span></span> <span data-ttu-id="93279-240">要在段落中插入的 OOXML。</span><span class="sxs-lookup"><span data-stu-id="93279-240">The OOXML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="93279-241">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-241">Required.</span></span> <span data-ttu-id="93279-242">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-242">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertParagraph:member(1)'
    summary: |-
      <span data-ttu-id="93279-243">在指定位置插入段落。</span><span class="sxs-lookup"><span data-stu-id="93279-243">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-244">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-244">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-245">示例</span><span class="sxs-lookup"><span data-stu-id="93279-245">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert the paragraph after the current paragraph.
                  paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a new paragraph at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Second sentence, let's insert it as a paragraph after the previously inserted one.
            let secondSentence = context.document.body.insertParagraph(
              "This is the first text with a custom style.",
              "End"
            );
            secondSentence.font.set({
              bold: false,
              italic: true,
              name: "Berlin Sans FB",
              color: "blue",
              size: 30
            });

            await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="93279-246">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-246">Required.</span></span> <span data-ttu-id="93279-247">要插入的段落文本。</span><span class="sxs-lookup"><span data-stu-id="93279-247">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="93279-248">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-248">Required.</span></span> <span data-ttu-id="93279-249">值可以为“Before”或“After”。</span><span class="sxs-lookup"><span data-stu-id="93279-249">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertParagraph:member(2)'
    summary: |-
      <span data-ttu-id="93279-250">在指定位置插入段落。</span><span class="sxs-lookup"><span data-stu-id="93279-250">Inserts a paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-251">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-251">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="93279-252">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-252">Required.</span></span> <span data-ttu-id="93279-253">要插入的段落文本。</span><span class="sxs-lookup"><span data-stu-id="93279-253">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="93279-254">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-254">Required.</span></span> <span data-ttu-id="93279-255">值可以为“Before”或“After”。</span><span class="sxs-lookup"><span data-stu-id="93279-255">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#insertTable:member(1)'
    summary: |-
      <span data-ttu-id="93279-256">插入包含指定行数和列数的 table。</span><span class="sxs-lookup"><span data-stu-id="93279-256">Inserts a table with the specified number of rows and columns.</span></span>

      <span data-ttu-id="93279-257">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-257">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="93279-258">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-258">Required.</span></span> <span data-ttu-id="93279-259">表格的行数。</span><span class="sxs-lookup"><span data-stu-id="93279-259">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="93279-260">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-260">Required.</span></span> <span data-ttu-id="93279-261">表格的列数。</span><span class="sxs-lookup"><span data-stu-id="93279-261">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: <span data-ttu-id="93279-262">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-262">Required.</span></span> <span data-ttu-id="93279-263">值可以为“Before”或“After”。</span><span class="sxs-lookup"><span data-stu-id="93279-263">The value can be 'Before' or 'After'.</span></span>
          type:
            - 'word!Word.InsertLocation:enum'
        - id: values
          description: <span data-ttu-id="93279-264">可选的二维数组。</span><span class="sxs-lookup"><span data-stu-id="93279-264">Optional 2D array.</span></span> <span data-ttu-id="93279-265">如果指定数组中的对应字符串，则填充单元格。</span><span class="sxs-lookup"><span data-stu-id="93279-265">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: 'word!Word.Paragraph#insertTable:member(2)'
    summary: |-
      <span data-ttu-id="93279-266">插入包含指定行数和列数的 table。</span><span class="sxs-lookup"><span data-stu-id="93279-266">Inserts a table with the specified number of rows and columns.</span></span>

      <span data-ttu-id="93279-267">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-267">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="93279-268">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-268">Required.</span></span> <span data-ttu-id="93279-269">表格的行数。</span><span class="sxs-lookup"><span data-stu-id="93279-269">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="93279-270">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-270">Required.</span></span> <span data-ttu-id="93279-271">表格的列数。</span><span class="sxs-lookup"><span data-stu-id="93279-271">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: <span data-ttu-id="93279-272">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-272">Required.</span></span> <span data-ttu-id="93279-273">值可以为“Before”或“After”。</span><span class="sxs-lookup"><span data-stu-id="93279-273">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: <span data-ttu-id="93279-274">可选的二维数组。</span><span class="sxs-lookup"><span data-stu-id="93279-274">Optional 2D array.</span></span> <span data-ttu-id="93279-275">如果指定数组中的对应字符串，则填充单元格。</span><span class="sxs-lookup"><span data-stu-id="93279-275">Cells are filled if the corresponding strings are specified in the array.</span></span>
          type:
            - 'string[][]'
  - uid: 'word!Word.Paragraph#insertText:member(1)'
    summary: |-
      <span data-ttu-id="93279-276">将文本插入到段落中的指定位置。</span><span class="sxs-lookup"><span data-stu-id="93279-276">Inserts text into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-277">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-277">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-278">示例</span><span class="sxs-lookup"><span data-stu-id="93279-278">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert text into the end of the paragraph.
                  paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted text at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Replace the last paragraph.
            let range = context.document.body.paragraphs.getLast().insertText("Just replaced the last paragraph!", "Replace");
            range.font.highlightColor = "black";
            range.font.color = "white";

            await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="93279-279">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-279">Required.</span></span> <span data-ttu-id="93279-280">要插入的文本。</span><span class="sxs-lookup"><span data-stu-id="93279-280">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="93279-281">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-281">Required.</span></span> <span data-ttu-id="93279-282">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-282">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - 'word!Word.InsertLocation:enum'
  - uid: 'word!Word.Paragraph#insertText:member(2)'
    summary: |-
      <span data-ttu-id="93279-283">将文本插入到段落中的指定位置。</span><span class="sxs-lookup"><span data-stu-id="93279-283">Inserts text into the paragraph at the specified location.</span></span>

      <span data-ttu-id="93279-284">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-284">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - 'word!Word.Range:class'
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="93279-285">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-285">Required.</span></span> <span data-ttu-id="93279-286">要插入的文本。</span><span class="sxs-lookup"><span data-stu-id="93279-286">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="93279-287">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-287">Required.</span></span> <span data-ttu-id="93279-288">此值可以为“Replace”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-288">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: 'word!Word.Paragraph#isLastParagraph:member'
    summary: |-
      <span data-ttu-id="93279-289">指明 paragraph 是其父正文内的最后一个段落。</span><span class="sxs-lookup"><span data-stu-id="93279-289">Indicates the paragraph is the last one inside its parent body.</span></span> <span data-ttu-id="93279-290">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-290">Read-only.</span></span>

      <span data-ttu-id="93279-291">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-291">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isLastParagraph
    fullName: isLastParagraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isLastParagraph: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Paragraph#isListItem:member'
    summary: |-
      <span data-ttu-id="93279-292">检查 paragraph 是否为 listItem。</span><span class="sxs-lookup"><span data-stu-id="93279-292">Checks whether the paragraph is a list item.</span></span> <span data-ttu-id="93279-293">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-293">Read-only.</span></span>

      <span data-ttu-id="93279-294">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-294">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isListItem
    fullName: isListItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isListItem: boolean;'
      return:
        type:
          - boolean
  - uid: 'word!Word.Paragraph#leftIndent:member'
    summary: |-
      <span data-ttu-id="93279-295">获取或设置段落的向左缩进值（以磅值表示）。</span><span class="sxs-lookup"><span data-stu-id="93279-295">Gets or sets the left indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="93279-296">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-296">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: leftIndent
    fullName: leftIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftIndent: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-297">示例</span><span class="sxs-lookup"><span data-stu-id="93279-297">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Indents the first paragraph.
            context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points

            return context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineSpacing:member'
    summary: |-
      <span data-ttu-id="93279-298">获取或设置指定段落的行间距（以磅值表示）。</span><span class="sxs-lookup"><span data-stu-id="93279-298">Gets or sets the line spacing, in points, for the specified paragraph.</span></span> <span data-ttu-id="93279-299">在 Word UI 中，该值应除以 12。</span><span class="sxs-lookup"><span data-stu-id="93279-299">In the Word UI, this value is divided by 12.</span></span>

      <span data-ttu-id="93279-300">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-300">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineSpacing
    fullName: lineSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineSpacing: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-301">示例</span><span class="sxs-lookup"><span data-stu-id="93279-301">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjusts line spacing.
            context.document.body.paragraphs.getFirst().lineSpacing = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#lineUnitAfter:member'
    summary: |-
      <span data-ttu-id="93279-302">获取或设置段落后面的网格线中的间距量。</span><span class="sxs-lookup"><span data-stu-id="93279-302">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>

      <span data-ttu-id="93279-303">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-303">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitAfter
    fullName: lineUnitAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitAfter: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#lineUnitBefore:member'
    summary: |-
      <span data-ttu-id="93279-304">获取或设置段落前面的网格线中的间隔量。</span><span class="sxs-lookup"><span data-stu-id="93279-304">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>

      <span data-ttu-id="93279-305">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-305">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitBefore
    fullName: lineUnitBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#list:member'
    summary: |-
      <span data-ttu-id="93279-306">获取 paragraph 所属的 List。</span><span class="sxs-lookup"><span data-stu-id="93279-306">Gets the List to which this paragraph belongs.</span></span> <span data-ttu-id="93279-307">如果段落不在列表中，则会引发错误。</span><span class="sxs-lookup"><span data-stu-id="93279-307">Throws an error if the paragraph is not in a list.</span></span> <span data-ttu-id="93279-308">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-308">Read-only.</span></span>

      <span data-ttu-id="93279-309">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-309">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: list
    fullName: list
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly list: Word.List;'
      return:
        type:
          - 'word!Word.List:class'
  - uid: 'word!Word.Paragraph#listItem:member'
    summary: |-
      <span data-ttu-id="93279-310">获取 paragraph 的 ListItem。</span><span class="sxs-lookup"><span data-stu-id="93279-310">Gets the ListItem for the paragraph.</span></span> <span data-ttu-id="93279-311">如果段落不是列表的一部分，则会引发错误。</span><span class="sxs-lookup"><span data-stu-id="93279-311">Throws an error if the paragraph is not part of a list.</span></span> <span data-ttu-id="93279-312">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-312">Read-only.</span></span>

      <span data-ttu-id="93279-313">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-313">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listItem
    fullName: listItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listItem: Word.ListItem;'
      return:
        type:
          - 'word!Word.ListItem:class'
  - uid: 'word!Word.Paragraph#listItemOrNullObject:member'
    summary: |-
      <span data-ttu-id="93279-314">获取 paragraph 的 ListItem。</span><span class="sxs-lookup"><span data-stu-id="93279-314">Gets the ListItem for the paragraph.</span></span> <span data-ttu-id="93279-315">如果 paragraph 未包含在 list 中，则此关系返回空对象。</span><span class="sxs-lookup"><span data-stu-id="93279-315">Returns a null object if the paragraph is not part of a list.</span></span> <span data-ttu-id="93279-316">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-316">Read-only.</span></span>

      <span data-ttu-id="93279-317">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-317">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listItemOrNullObject
    fullName: listItemOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listItemOrNullObject: Word.ListItem;'
      return:
        type:
          - 'word!Word.ListItem:class'
  - uid: 'word!Word.Paragraph#listOrNullObject:member'
    summary: |-
      <span data-ttu-id="93279-318">获取 paragraph 所属的 List。</span><span class="sxs-lookup"><span data-stu-id="93279-318">Gets the List to which this paragraph belongs.</span></span> <span data-ttu-id="93279-319">如果 paragraph 未包含在 list 中，则此关系返回空对象。</span><span class="sxs-lookup"><span data-stu-id="93279-319">Returns a null object if the paragraph is not in a list.</span></span> <span data-ttu-id="93279-320">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-320">Read-only.</span></span>

      <span data-ttu-id="93279-321">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-321">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listOrNullObject
    fullName: listOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listOrNullObject: Word.List;'
      return:
        type:
          - 'word!Word.List:class'
  - uid: 'word!Word.Paragraph#load:member(1)'
    summary: <span data-ttu-id="93279-322">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="93279-322">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="93279-323">在读取属性之前，你必须调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="93279-323">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="93279-324">除了此签名之外，此方法还具有以下签名：</span><span class="sxs-lookup"><span data-stu-id="93279-324">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="93279-325">`load(option?: string | string[]): Word.Paragraph`-Where 选项是一个逗号分隔的字符串或一个字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="93279-325">`load(option?: string | string[]): Word.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="93279-326">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`-Where 选项。选择是一个用逗号分隔的字符串，用于指定要加载的属性和选项。 expand 是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="93279-326">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="93279-327">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`-仅适用于集合类型。</span><span class="sxs-lookup"><span data-stu-id="93279-327">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="93279-328">它类似于前面的签名。</span><span class="sxs-lookup"><span data-stu-id="93279-328">It is similar to the preceding signature.</span></span> <span data-ttu-id="93279-329">Top 指定结果中可包含的集合项的最大数量。</span><span class="sxs-lookup"><span data-stu-id="93279-329">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="93279-330">选项。 skip 指定要跳过且不包含在结果中的项目数。</span><span class="sxs-lookup"><span data-stu-id="93279-330">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="93279-331">如果指定了 top 选项，则在跳过指定数目的项目后将启动结果集。</span><span class="sxs-lookup"><span data-stu-id="93279-331">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.Interfaces.ParagraphLoadOptions:interface'
  - uid: 'word!Word.Paragraph#load:member(2)'
    summary: <span data-ttu-id="93279-332">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="93279-332">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="93279-333">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="93279-333">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNames
          description: <span data-ttu-id="93279-334">一个以逗号分隔的字符串或字符串数组，用于指定要加载的属性。</span><span class="sxs-lookup"><span data-stu-id="93279-334">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
          type:
            - 'string | string[]'
  - uid: 'word!Word.Paragraph#load:member(3)'
    summary: <span data-ttu-id="93279-335">将命令加入队列以加载对象的指定属性。</span><span class="sxs-lookup"><span data-stu-id="93279-335">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="93279-336">在读取属性`context.sync()`之前，必须先调用。</span><span class="sxs-lookup"><span data-stu-id="93279-336">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="93279-337">其中，propertyNamesAndPaths 是用逗号分隔的字符串，用于指定要加载的属性和 propertyNamesAndPaths。扩展是一个用逗号分隔的字符串，用于指定要加载的导航属性。</span><span class="sxs-lookup"><span data-stu-id="93279-337">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'word!Word.Paragraph#outlineLevel:member'
    summary: |-
      <span data-ttu-id="93279-338">获取或设置段落的大纲级别。</span><span class="sxs-lookup"><span data-stu-id="93279-338">Gets or sets the outline level for the paragraph.</span></span>

      <span data-ttu-id="93279-339">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-339">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: outlineLevel
    fullName: outlineLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineLevel: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#parentBody:member'
    summary: |-
      <span data-ttu-id="93279-340">获取 paragraph 的父正文。</span><span class="sxs-lookup"><span data-stu-id="93279-340">Gets the parent body of the paragraph.</span></span> <span data-ttu-id="93279-341">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-341">Read-only.</span></span>

      <span data-ttu-id="93279-342">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-342">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - 'word!Word.Body:class'
  - uid: 'word!Word.Paragraph#parentContentControl:member'
    summary: |-
      <span data-ttu-id="93279-343">获取包含段落的内容控件。</span><span class="sxs-lookup"><span data-stu-id="93279-343">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="93279-344">如果没有父内容控件，则会引发错误。</span><span class="sxs-lookup"><span data-stu-id="93279-344">Throws an error if there isn't a parent content control.</span></span> <span data-ttu-id="93279-345">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-345">Read-only.</span></span>

      <span data-ttu-id="93279-346">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-346">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Paragraph#parentContentControlOrNullObject:member'
    summary: |-
      <span data-ttu-id="93279-347">获取包含段落的内容控件。</span><span class="sxs-lookup"><span data-stu-id="93279-347">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="93279-348">如果没有父内容控件，则返回 null 对象。</span><span class="sxs-lookup"><span data-stu-id="93279-348">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="93279-349">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-349">Read-only.</span></span>

      <span data-ttu-id="93279-350">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-350">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
  - uid: 'word!Word.Paragraph#parentTable:member'
    summary: |-
      <span data-ttu-id="93279-351">获取包含 paragraph 的 table。</span><span class="sxs-lookup"><span data-stu-id="93279-351">Gets the table that contains the paragraph.</span></span> <span data-ttu-id="93279-352">如果表中不包含该错误，则会引发错误。</span><span class="sxs-lookup"><span data-stu-id="93279-352">Throws an error if it is not contained in a table.</span></span> <span data-ttu-id="93279-353">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-353">Read-only.</span></span>

      <span data-ttu-id="93279-354">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-354">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
  - uid: 'word!Word.Paragraph#parentTableCell:member'
    summary: |-
      <span data-ttu-id="93279-355">获取包含 paragraph 的 tableCell。</span><span class="sxs-lookup"><span data-stu-id="93279-355">Gets the table cell that contains the paragraph.</span></span> <span data-ttu-id="93279-356">如果表单元格中不包含错误，则会引发错误。</span><span class="sxs-lookup"><span data-stu-id="93279-356">Throws an error if it is not contained in a table cell.</span></span> <span data-ttu-id="93279-357">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-357">Read-only.</span></span>

      <span data-ttu-id="93279-358">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-358">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
  - uid: 'word!Word.Paragraph#parentTableCellOrNullObject:member'
    summary: |-
      <span data-ttu-id="93279-359">获取包含 paragraph 的 tableCell。</span><span class="sxs-lookup"><span data-stu-id="93279-359">Gets the table cell that contains the paragraph.</span></span> <span data-ttu-id="93279-360">如果未包含在 tableCell 中，则此关系返回空对象。</span><span class="sxs-lookup"><span data-stu-id="93279-360">Returns a null object if it is not contained in a table cell.</span></span> <span data-ttu-id="93279-361">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-361">Read-only.</span></span>

      <span data-ttu-id="93279-362">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-362">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - 'word!Word.TableCell:class'
  - uid: 'word!Word.Paragraph#parentTableOrNullObject:member'
    summary: |-
      <span data-ttu-id="93279-363">获取包含 paragraph 的 table。</span><span class="sxs-lookup"><span data-stu-id="93279-363">Gets the table that contains the paragraph.</span></span> <span data-ttu-id="93279-364">如果未包含在 table 中，则此关系返回空对象。</span><span class="sxs-lookup"><span data-stu-id="93279-364">Returns a null object if it is not contained in a table.</span></span> <span data-ttu-id="93279-365">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-365">Read-only.</span></span>

      <span data-ttu-id="93279-366">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-366">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type:
          - 'word!Word.Table:class'
  - uid: 'word!Word.Paragraph#rightIndent:member'
    summary: |-
      <span data-ttu-id="93279-367">获取或设置段落的向右缩进值（以磅值表示）。</span><span class="sxs-lookup"><span data-stu-id="93279-367">Gets or sets the right indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="93279-368">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-368">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: rightIndent
    fullName: rightIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightIndent: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#search:member(1)'
    summary: |-
      <span data-ttu-id="93279-369">在段落对象的作用域上使用指定的 SearchOptions 执行搜索。</span><span class="sxs-lookup"><span data-stu-id="93279-369">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id="93279-370">搜索结果是 range 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="93279-370">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="93279-371">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-371">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="93279-372">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-372">Required.</span></span> <span data-ttu-id="93279-373">搜索文本。</span><span class="sxs-lookup"><span data-stu-id="93279-373">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="93279-374">可选。</span><span class="sxs-lookup"><span data-stu-id="93279-374">Optional.</span></span> <span data-ttu-id="93279-375">用于搜索的选项。</span><span class="sxs-lookup"><span data-stu-id="93279-375">Options for the search.</span></span>
          type:
            - 'word!Word.Paragraph#search~0:complex'
  - uid: 'word!Word.Paragraph#select:member(1)'
    summary: |-
      <span data-ttu-id="93279-376">选择并在 Word UI 中导航到段落。</span><span class="sxs-lookup"><span data-stu-id="93279-376">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="93279-377">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-377">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-378">示例</span><span class="sxs-lookup"><span data-stu-id="93279-378">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a command to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the last paragraph a create a
                  // proxy paragraph object.
                  var paragraph = paragraphs.items[paragraphs.items.length - 1];

                  // Queue a command to select the paragraph. The Word UI will
                  // move to the selected paragraph.
                  paragraph.select();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Selected the last paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // If select is called with no parameters, it selects the object.
            context.document.body.paragraphs.getLast().select();

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.
            context.document.body.paragraphs.getLast().select("End");

            await context.sync();
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="93279-379">可选。</span><span class="sxs-lookup"><span data-stu-id="93279-379">Optional.</span></span> <span data-ttu-id="93279-380">选择模式可以为“Select”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-380">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="93279-381">“Select”为默认值。</span><span class="sxs-lookup"><span data-stu-id="93279-381">''Select'' is the default.</span></span>'
          type:
            - 'word!Word.SelectionMode:enum'
  - uid: 'word!Word.Paragraph#select:member(2)'
    summary: |-
      <span data-ttu-id="93279-382">选择并在 Word UI 中导航到段落。</span><span class="sxs-lookup"><span data-stu-id="93279-382">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="93279-383">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-383">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="93279-384">可选。</span><span class="sxs-lookup"><span data-stu-id="93279-384">Optional.</span></span> <span data-ttu-id="93279-385">选择模式可以为“Select”、“Start”或“End”。</span><span class="sxs-lookup"><span data-stu-id="93279-385">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="93279-386">“Select”为默认值。</span><span class="sxs-lookup"><span data-stu-id="93279-386">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: 'word!Word.Paragraph#set:member(1)'
    summary: '<span data-ttu-id="93279-387">同时设置一个对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="93279-387">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="93279-388">您可以传递具有相应属性的纯对象或相同类型的其他 API 对象。</span><span class="sxs-lookup"><span data-stu-id="93279-388">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="93279-389">此方法具有以下附加签名：</span><span class="sxs-lookup"><span data-stu-id="93279-389">This method has the following additional signature:</span></span>

      `set(properties: Word.Paragraph): void`

      #### <a name="examples"></a><span data-ttu-id="93279-390">示例</span><span class="sxs-lookup"><span data-stu-id="93279-390">Examples</span></span>

      ```typescript
      await Word.run(async (context) => {
        const paragraph = context.document.body.paragraphs.getFirst();
        paragraph.set({
          leftIndent: 30,
          font: {
            bold: true,
            color: "red"
          }
        });

        await context.sync();
      });
      ```
      ```typescript
      await Word.run(async (context) => {
        const firstParagraph = context.document.body.paragraphs.getFirst();
        const secondParagraph = firstParagraph.getNext();
        firstParagraph.load("text, font/color, font/bold, leftIndent");

        await context.sync();

        secondParagraph.set(firstParagraph);

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: <span data-ttu-id="93279-391">一个 JavaScript 对象，其属性的结构 isomorphically 为在其上调用方法的对象的属性。</span><span class="sxs-lookup"><span data-stu-id="93279-391">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
          type:
            - 'word!Word.Interfaces.ParagraphUpdateData:interface'
        - id: options
          description: <span data-ttu-id="93279-392">提供一个选项，以在 properties 对象尝试设置任何只读属性时禁止显示错误。</span><span class="sxs-lookup"><span data-stu-id="93279-392">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
          type:
            - 'word!OfficeExtension.UpdateOptions:interface'
  - uid: 'word!Word.Paragraph#set:member(2)'
    summary: '<span data-ttu-id="93279-393">基于现有加载的对象同时设置该对象的多个属性。</span><span class="sxs-lookup"><span data-stu-id="93279-393">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'word!Word.Paragraph:class'
  - uid: 'word!Word.Paragraph#spaceAfter:member'
    summary: |-
      <span data-ttu-id="93279-394">获取或设置段落后面的间距（以磅值表示）。</span><span class="sxs-lookup"><span data-stu-id="93279-394">Gets or sets the spacing, in points, after the paragraph.</span></span>

      <span data-ttu-id="93279-395">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-395">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceAfter
    fullName: spaceAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceAfter: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-396">示例</span><span class="sxs-lookup"><span data-stu-id="93279-396">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjust space between paragraphs.
            context.document.body.paragraphs.getFirst().spaceAfter = 20;

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#spaceBefore:member'
    summary: |-
      <span data-ttu-id="93279-397">获取或设置段落前面的间距（以磅值表示）。</span><span class="sxs-lookup"><span data-stu-id="93279-397">Gets or sets the spacing, in points, before the paragraph.</span></span>

      <span data-ttu-id="93279-398">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-398">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceBefore
    fullName: spaceBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceBefore: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#split:member(1)'
    summary: |-
      <span data-ttu-id="93279-399">使用分隔符将段落拆分为多个子范围。</span><span class="sxs-lookup"><span data-stu-id="93279-399">Splits the paragraph into child ranges by using delimiters.</span></span>

      <span data-ttu-id="93279-400">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-400">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'split(delimiters, trimDelimiters, trimSpacing)'
    fullName: 'split(delimiters, trimDelimiters, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'split(delimiters: string[], trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - 'word!Word.RangeCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-401">示例</span><span class="sxs-lookup"><span data-stu-id="93279-401">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraph = context.document.body.paragraphs.getFirst();
            let words = paragraph.split([" "], true /* trimDelimiters*/, true /* trimSpaces */);
            words.load("text");

            await context.sync();

            for (let i = 0; i < words.items.length; i++) {
              if (i >= 1) {
                words.items[i - 1].font.highlightColor = "#FFFFFF";
              }
              words.items[i].font.highlightColor = "#FFFF00";

              await context.sync();
              await pause(200);
            }
          });
          ```
      parameters:
        - id: delimiters
          description: <span data-ttu-id="93279-402">必需。</span><span class="sxs-lookup"><span data-stu-id="93279-402">Required.</span></span> <span data-ttu-id="93279-403">字符串数组形式的分隔符。</span><span class="sxs-lookup"><span data-stu-id="93279-403">The delimiters as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimDelimiters
          description: <span data-ttu-id="93279-404">可选。</span><span class="sxs-lookup"><span data-stu-id="93279-404">Optional.</span></span> <span data-ttu-id="93279-405">指示是否要裁切区域集合中区域的分隔符。</span><span class="sxs-lookup"><span data-stu-id="93279-405">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="93279-406">默认值为 false，表示在 range 集合中返回的区域中包含分隔符。</span><span class="sxs-lookup"><span data-stu-id="93279-406">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>
          type:
            - boolean
        - id: trimSpacing
          description: '<span data-ttu-id="93279-407">可选。</span><span class="sxs-lookup"><span data-stu-id="93279-407">Optional.</span></span> <span data-ttu-id="93279-408">指示是否裁切区域集合中返回的区域的开始和结束处的间距字符（空格、制表符、分栏符和段落结束标记）。</span><span class="sxs-lookup"><span data-stu-id="93279-408">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="93279-409">默认值为 false，表示区域集合中包含区域的开头和结尾处的间距字符。</span><span class="sxs-lookup"><span data-stu-id="93279-409">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: 'word!Word.Paragraph#startNewList:member(1)'
    summary: |-
      <span data-ttu-id="93279-410">生成包含此 paragraph 的新 list。</span><span class="sxs-lookup"><span data-stu-id="93279-410">Starts a new list with this paragraph.</span></span> <span data-ttu-id="93279-411">如果此 paragraph 已是 listItem，则无法执行此方法。</span><span class="sxs-lookup"><span data-stu-id="93279-411">Fails if the paragraph is already a list item.</span></span>

      <span data-ttu-id="93279-412">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-412">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: startNewList()
    fullName: startNewList()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'startNewList(): Word.List;'
      return:
        type:
          - 'word!Word.List:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-413">示例</span><span class="sxs-lookup"><span data-stu-id="93279-413">Examples</span></span>

          ```typescript
          // This example starts a new list stating with the second paragraph.
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("$none"); // No properties needed.

            await context.sync();

            var list = paragraphs.items[1].startNewList(); // Indicates new list to be started in the second paragraph.
            list.load("$none"); // No properties needed.

            await context.sync();

            // To add new items to the list use start/end on the insert location parameter.
            list.insertParagraph("New list item on top of the list", "Start");
            let paragraph = list.insertParagraph("New list item at the end of the list (4th level)", "End");
            paragraph.listItem.level = 4; // Sets up list level for the lsit item.
            // To add paragraphs outside the list use before/after:
            list.insertParagraph("New paragraph goes after (not part of the list)", "After");

            await context.sync();
          });
          ```
  - uid: 'word!Word.Paragraph#style:member'
    summary: |-
      <span data-ttu-id="93279-414">获取或设置段落的样式名称。</span><span class="sxs-lookup"><span data-stu-id="93279-414">Gets or sets the style name for the paragraph.</span></span> <span data-ttu-id="93279-415">请对自定义样式和本地化样式名称使用此属性。</span><span class="sxs-lookup"><span data-stu-id="93279-415">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="93279-416">若要使用可以在区域设置之间移植的嵌入样式，请参阅“styleBuiltIn”属性。</span><span class="sxs-lookup"><span data-stu-id="93279-416">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="93279-417">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-417">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'word!Word.Paragraph#styleBuiltIn:member'
    summary: |-
      <span data-ttu-id="93279-p185">获取或设置 paragraph 的嵌入样式名称。请对可以在区域设置之间移植的嵌入样式使用此属性。若要使用自定义样式或本地化样式名称，请参阅“style”属性。</span><span class="sxs-lookup"><span data-stu-id="93279-p185">Gets or sets the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="93279-421">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-421">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - 'word!Word.Paragraph#styleBuiltIn~0:complex'
  - uid: 'word!Word.Paragraph#tableNestingLevel:member'
    summary: |-
      <span data-ttu-id="93279-422">获取 paragraph 的表级别。</span><span class="sxs-lookup"><span data-stu-id="93279-422">Gets the level of the paragraph's table.</span></span> <span data-ttu-id="93279-423">如果 paragraph 未包含在 table 中，则此属性返回 0。</span><span class="sxs-lookup"><span data-stu-id="93279-423">It returns 0 if the paragraph is not in a table.</span></span> <span data-ttu-id="93279-424">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-424">Read-only.</span></span>

      <span data-ttu-id="93279-425">\[[API 集： WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-425">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tableNestingLevel
    fullName: tableNestingLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tableNestingLevel: number;'
      return:
        type:
          - number
  - uid: 'word!Word.Paragraph#text:member'
    summary: |-
      <span data-ttu-id="93279-426">获取段落的文本。</span><span class="sxs-lookup"><span data-stu-id="93279-426">Gets the text of the paragraph.</span></span> <span data-ttu-id="93279-427">只读。</span><span class="sxs-lookup"><span data-stu-id="93279-427">Read-only.</span></span>

      <span data-ttu-id="93279-428">\[[API 集： WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="93279-428">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="93279-429">示例</span><span class="sxs-lookup"><span data-stu-id="93279-429">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // The collection of paragraphs of the current selection returns the full paragraphs contained in it.
            let paragraph = context.document.getSelection().paragraphs.getFirst();
            paragraph.load("text");

            await context.sync();
            console.log(paragraph.text);
          });
          ```
  - uid: 'word!Word.Paragraph#toJSON:member(1)'
    summary: '<span data-ttu-id="93279-430">重写 JavaScript `toJSON()`方法，以便在将 API 对象传递到时提供更有用的输出`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="93279-430">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="93279-431">.</span><span class="sxs-lookup"><span data-stu-id="93279-431"></span></span> <span data-ttu-id="93279-432">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="93279-432"></span></span><!-- --><span data-ttu-id="93279-433">反过来，也会调用传递`toJSON`给它的对象的方法。尽管原始的 Word 段落对象是 API 对象，但`toJSON`方法返回一个无格式的 JavaScript 对象（类型为`Word.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="93279-433">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="93279-434">），其中包含原始对象中所有已加载的子属性的浅表副本。</span><span class="sxs-lookup"><span data-stu-id="93279-434">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphData;'
      return:
        type:
          - 'word!Word.Interfaces.ParagraphData:interface'
        description: ''
  - uid: 'word!Word.Paragraph#track:member(1)'
    summary: '<span data-ttu-id="93279-435">根据文档中的相应更改来跟踪对象，以便进行自动调整。</span><span class="sxs-lookup"><span data-stu-id="93279-435">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="93279-436">此调用是 context.trackedObjects.add(thisObject) 的缩写。</span><span class="sxs-lookup"><span data-stu-id="93279-436">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="93279-437">如果你在“.sync”调用之间和按顺序执行“.run”批处理之外使用此对象，并且在对象上设置属性或调用方法时出现“InvalidObjectPath”错误，则需要在首次创建对象时为跟踪的对象集合添加对象。</span><span class="sxs-lookup"><span data-stu-id="93279-437">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
  - uid: 'word!Word.Paragraph#untrack:member(1)'
    summary: '<span data-ttu-id="93279-438">释放与此对象关联的内存（如果先前已跟踪过）。</span><span class="sxs-lookup"><span data-stu-id="93279-438">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="93279-439">此调用是 context.trackedObjects.add(thisObject) 的缩写。</span><span class="sxs-lookup"><span data-stu-id="93279-439">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="93279-440">拥有许多跟踪对象会降低主机应用程序的速度，因此请在使用完毕后释放所添加的任何对象。</span><span class="sxs-lookup"><span data-stu-id="93279-440">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="93279-441">在内存释放生效之前，你需要调用“context.sync()”。</span><span class="sxs-lookup"><span data-stu-id="93279-441">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Paragraph;'
      return:
        type:
          - 'word!Word.Paragraph:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.Paragraph#alignment~0:complex'
    name: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    fullName: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
    spec.typeScript:
      - uid: 'word!Word.Alignment:enum'
        name: Word.Alignment
        fullName: Word.Alignment
      - name: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
        fullName: ' | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: 'word!Word.List:class'
    name: Word.List
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.Font:class'
    name: Word.Font
  - uid: 'word!Word.Paragraph#getHtml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Paragraph:class'
    name: Word.Paragraph
  - uid: 'word!Word.Paragraph#getOoxml~0:complex'
    name: OfficeExtension.ClientResult<string>
    fullName: OfficeExtension.ClientResult<string>
    spec.typeScript:
      - uid: 'word!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <string>
        fullName: <string>
  - uid: 'word!Word.Range:class'
    name: Word.Range
  - uid: 'word!Word.RangeLocation:enum'
    name: Word.RangeLocation
  - uid: 'word!Word.RangeCollection:class'
    name: Word.RangeCollection
  - uid: 'word!Word.InlinePictureCollection:class'
    name: Word.InlinePictureCollection
  - uid: 'word!Word.BreakType:enum'
    name: Word.BreakType
  - uid: 'word!Word.InsertLocation:enum'
    name: Word.InsertLocation
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.InlinePicture:class'
    name: Word.InlinePicture
  - uid: 'word!Word.Table:class'
    name: Word.Table
  - uid: 'word!Word.ListItem:class'
    name: Word.ListItem
  - uid: 'word!Word.Interfaces.ParagraphLoadOptions:interface'
    name: Word.Interfaces.ParagraphLoadOptions
  - uid: 'word!Word.Body:class'
    name: Word.Body
  - uid: 'word!Word.TableCell:class'
    name: Word.TableCell
  - uid: 'word!Word.Paragraph#search~0:complex'
    name: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    fullName: |-
      Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }
    spec.typeScript:
      - uid: 'word!Word.SearchOptions:class'
        name: Word.SearchOptions
        fullName: Word.SearchOptions
      - name: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
        fullName: |2-
           | {
                      ignorePunct?: boolean;
                      ignoreSpace?: boolean;
                      matchCase?: boolean;
                      matchPrefix?: boolean;
                      matchSuffix?: boolean;
                      matchWholeWord?: boolean;
                      matchWildcards?: boolean;
                  }
  - uid: 'word!Word.SelectionMode:enum'
    name: Word.SelectionMode
  - uid: 'word!Word.Interfaces.ParagraphUpdateData:interface'
    name: Interfaces.ParagraphUpdateData
  - uid: 'word!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'word!Word.Paragraph#styleBuiltIn~0:complex'
    name: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    fullName: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
    spec.typeScript:
      - uid: 'word!Word.Style:enum'
        name: Word.Style
        fullName: Word.Style
      - name: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
        fullName: ' | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"'
  - uid: 'word!Word.Interfaces.ParagraphData:interface'
    name: Word.Interfaces.ParagraphData